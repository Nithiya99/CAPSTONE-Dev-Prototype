[{"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\taskComponents\\TrelloTask.js":"1","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\index.js":"2","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\JoinProject.js":"3","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\posts.js":"4","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\YoutubePost.js":"5","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\Socket.js":"6","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\LeaveProject.js":"7","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Tagify\\Assigner.js":"8","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\YoutubeURLPost.js":"9","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Social.js":"10","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Notifications.js":"11","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\MyProjects.js":"12","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\layout\\LayoutComponent.js":"13","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\ProjectDashboard.js":"14","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Home.js":"15","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\TextPostView.js":"16","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\Post.js":"17","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\VideoPost.js":"18","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\showPost.js":"19","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\NavBar.js":"20","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Menu.js":"21","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\UserRecommendation.js":"22","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\DeleteProject.js":"23","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Form.js":"24","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\SearchProjectBar.js":"25","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\DragDropVideo.js":"26","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\notifications.js":"27","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\apiNotifications.js":"28","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\DeletePost.js":"29","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Landing.js":"30","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\apiUser.js":"31","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\auth\\index.js":"32","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\Requests.js":"33","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\SearchUserBar.js":"34","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\DragDropImages.js":"35"},{"size":12098,"mtime":1621953040626,"results":"36","hashOfConfig":"37"},{"size":427,"mtime":1618198716000,"results":"38","hashOfConfig":"37"},{"size":11268,"mtime":1621772740242,"results":"39","hashOfConfig":"37"},{"size":1999,"mtime":1622005122412,"results":"40","hashOfConfig":"37"},{"size":12884,"mtime":1622005703772,"results":"41","hashOfConfig":"37"},{"size":242,"mtime":1618272929988,"results":"42","hashOfConfig":"37"},{"size":2668,"mtime":1621913510177,"results":"43","hashOfConfig":"37"},{"size":1452,"mtime":1618198716000,"results":"44","hashOfConfig":"37"},{"size":4385,"mtime":1621613737789,"results":"45","hashOfConfig":"37"},{"size":4033,"mtime":1621611019914,"results":"46","hashOfConfig":"37"},{"size":13085,"mtime":1621912968800,"results":"47","hashOfConfig":"37"},{"size":36171,"mtime":1621913329500,"results":"48","hashOfConfig":"37"},{"size":23474,"mtime":1624178533962,"results":"49","hashOfConfig":"37"},{"size":24865,"mtime":1621931851542,"results":"50","hashOfConfig":"37"},{"size":11664,"mtime":1622005623262,"results":"51","hashOfConfig":"37"},{"size":10570,"mtime":1622005774677,"results":"52","hashOfConfig":"37"},{"size":13289,"mtime":1622005535510,"results":"53","hashOfConfig":"37"},{"size":11886,"mtime":1622005848367,"results":"54","hashOfConfig":"37"},{"size":12887,"mtime":1622006881218,"results":"55","hashOfConfig":"37"},{"size":346,"mtime":1618198716000,"results":"56","hashOfConfig":"37"},{"size":14978,"mtime":1621841865666,"results":"57","hashOfConfig":"37"},{"size":3574,"mtime":1621955275123,"results":"58","hashOfConfig":"37"},{"size":1412,"mtime":1618198716000,"results":"59","hashOfConfig":"37"},{"size":4451,"mtime":1618198716000,"results":"60","hashOfConfig":"37"},{"size":4178,"mtime":1621773052142,"results":"61","hashOfConfig":"37"},{"size":4346,"mtime":1621831134361,"results":"62","hashOfConfig":"37"},{"size":2266,"mtime":1621949774795,"results":"63","hashOfConfig":"37"},{"size":1038,"mtime":1622003199321,"results":"64","hashOfConfig":"37"},{"size":1276,"mtime":1621951154959,"results":"65","hashOfConfig":"37"},{"size":426,"mtime":1620823754791,"results":"66","hashOfConfig":"37"},{"size":7380,"mtime":1620823755400,"results":"67","hashOfConfig":"37"},{"size":1756,"mtime":1621256825346,"results":"68","hashOfConfig":"37"},{"size":3236,"mtime":1619794912667,"results":"69","hashOfConfig":"37"},{"size":2094,"mtime":1621831176393,"results":"70","hashOfConfig":"37"},{"size":6944,"mtime":1621908530835,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"13vq143",{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\taskComponents\\TrelloTask.js",["146"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\index.js",[],["147","148"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\JoinProject.js",["149","150"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\posts.js",["151"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\YoutubePost.js",["152","153","154","155","156","157","158"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\Socket.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\LeaveProject.js",["159"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Tagify\\Assigner.js",["160","161","162"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\YoutubeURLPost.js",["163","164","165"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Social.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Notifications.js",["166","167","168","169","170"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\MyProjects.js",["171","172","173","174","175","176"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\layout\\LayoutComponent.js",["177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208"],"import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport Pert from \"./Pert\";\r\nimport Task from \"./Task\";\r\nimport ReactFlow, {\r\n  addEdge,\r\n  Background,\r\n  Controls,\r\n  MiniMap,\r\n  removeElements,\r\n} from \"react-flow-renderer\";\r\nimport {\r\n  addTask,\r\n  getTasks,\r\n  putConnections,\r\n  deleteConnections,\r\n  getConnections,\r\n  putPredecessors,\r\n  putPosition,\r\n  putExpectedTime,\r\n} from \"../apiProject\";\r\nimport jsPERT from \"js-pert\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport {\r\n  nodeAdded,\r\n  connectionAdded,\r\n  replaceNodes,\r\n  replaceConnections,\r\n  replaceElements,\r\n  setPert,\r\n  setExpectedTime,\r\n  setSlacks,\r\n  setCriticalPath,\r\n} from \"../../store/cpm\";\r\nimport { updateTasks } from \"../../store/tasks\";\r\nimport { getCurrentUser } from \"./../../user/apiUser\";\r\nimport moment from \"moment\";\r\nconst styles = (theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 3, 3),\r\n  },\r\n});\r\nclass LayoutComponent extends Component {\r\n  state = {\r\n    elements: [],\r\n    tasks: [],\r\n    nodes: [],\r\n    pert: {},\r\n    task: {},\r\n    show: false,\r\n    checked: false,\r\n    bleh: 1,\r\n  };\r\n\r\n  onElementsRemove = (elementsToRemove) => {\r\n    if (this.props.project.leader.toString() === getCurrentUser()._id) {\r\n      let cons = this.props.connections;\r\n      const filteredConnections = cons.filter(\r\n        (con) => con.id !== elementsToRemove[0].id\r\n      );\r\n      this.props.replaceConnections({ connections: filteredConnections });\r\n      cons.map((con) => {\r\n        if (con.id === elementsToRemove[0].id) {\r\n          // console.log(con.id, elementsToRemove[0].id);\r\n          deleteConnections(this.props.project._id, con._id).then((data) => {\r\n            console.log(\"connection deleted\");\r\n            // this.pertCalc();\r\n          });\r\n          return;\r\n        }\r\n      });\r\n    }\r\n  };\r\n  onLoad = (reactFlowInstance) => {\r\n    reactFlowInstance.fitView();\r\n  };\r\n  onNodeDragStop = (e, node) => {\r\n    // console.log(node.position, node.data._id);\r\n    putPosition(this.props.project._id, node.data._id, node.position).then(\r\n      () => {\r\n        console.log(node.position + \" is saved\");\r\n      }\r\n    );\r\n  };\r\n  edgeInElements(elements, edge) {\r\n    let inside = false;\r\n    elements.map((elem) => {\r\n      if (elem.id.toString() === edge.id.toString()) {\r\n        inside = true;\r\n      }\r\n      return \"done\";\r\n    });\r\n    return inside;\r\n  }\r\n  onConnect = (params) => {\r\n    if (this.props.project.leader.toString() === getCurrentUser()._id) {\r\n      let source = params.source;\r\n      let target = params.target;\r\n      if (source !== undefined && target !== undefined) {\r\n        let edge = {\r\n          id:\r\n            \"reactflow__edge-\" +\r\n            source.toString() +\r\n            \"null-\" +\r\n            target.toString() +\r\n            \"null\",\r\n          source: source.toString(),\r\n          sourceHandle: null,\r\n          target: target.toString(),\r\n          targetHandle: null,\r\n        };\r\n        // console.log(this.state.elements);\r\n        let sourceId = \"\";\r\n        let targetId = \"\";\r\n        // console.log(this.props.nodes);\r\n        this.props.nodes.map((elem) => {\r\n          if (elem.id === source) {\r\n            sourceId = elem.key;\r\n          }\r\n          if (elem.id === target) {\r\n            targetId = elem.key;\r\n          }\r\n        });\r\n        putPredecessors(this.props.project._id, targetId, sourceId).then(() => {\r\n          console.log(sourceId + \" has new Predecessor \" + targetId);\r\n        });\r\n        // let ele = [...this.state.elements];\r\n        // if (!this.edgeInElements(ele, edge)) {\r\n        //   ele.push(edge);\r\n        putConnections(this.props.project._id, sourceId, targetId).then(() => {\r\n          console.log(\"connection \" + sourceId + \"to \" + targetId + \"added\");\r\n        });\r\n        // }\r\n        this.props.connectionAdded({ connection: edge });\r\n        // this.setState({ elements: ele });\r\n        // console.log(this.state.elements);\r\n        this.pertCalc();\r\n      }\r\n    }\r\n  };\r\n  getIdOfObjectId = (elemId) => {\r\n    let id = {};\r\n    const { nodes } = this.props;\r\n    id = nodes.map((elem) => {\r\n      if (elem.data !== undefined)\r\n        if (elem.data._id.toString() === elemId) {\r\n          id = elem.id;\r\n        }\r\n      return id;\r\n    });\r\n    return id[id.length - 1];\r\n  };\r\n  // handleClose = () => {\r\n  //   this.setState({ show: false });\r\n  // };\r\n  pertCalc = () => {\r\n    // this.setState({ show: true });\r\n    // console.log(\"inside pertCalc:\", tasksObject);\r\n    let nodes = this.props.nodes.map((elem) => ({\r\n      ...elem,\r\n    }));\r\n    // let connections = this.props.connections.map((elem) => ({\r\n    //   ...elem,\r\n    // }));\r\n    // console.log(connections);\r\n    // let { connections } = this.props;\r\n    // console.log(\"props:\", this.props.connections);\r\n    // console.log(\"connections:\");\r\n    let ids = [];\r\n    this.props.connections.map((connection) => {\r\n      // console.log(connection.source, connection.target);\r\n      if (!ids.includes(connection.source)) {\r\n        ids.push(connection.source.toString());\r\n      }\r\n      if (!ids.includes(connection.target)) {\r\n        ids.push(connection.target.toString());\r\n      }\r\n    });\r\n    // console.log(\"nodes:\");\r\n    let newNodes = [];\r\n    nodes.map((node) => {\r\n      if (ids.includes(node.id)) newNodes.push(node);\r\n    });\r\n\r\n    let tasksObject = ids.includes(\"1\")\r\n      ? {\r\n          1: {\r\n            id: \"1\",\r\n            mostLikelyTime: 0,\r\n            optimisticTime: 0,\r\n            pessimisticTime: 0,\r\n            predecessors: [],\r\n          },\r\n        }\r\n      : {};\r\n    // console.log(\"TasksObject before node addition:\", tasksObject);\r\n    // console.log(ids);\r\n    // console.log(\"nodes sent for pertcalc:\", newNodes);\r\n    newNodes.map((elem) => {\r\n      if (\r\n        elem.data.predecessors.length === 0 ||\r\n        elem.data.predecessors === undefined\r\n      )\r\n        return;\r\n      elem.data.predecessors.map((pre, index) => {\r\n        let id = this.getIdOfObjectId(pre.toString());\r\n        // console.log(id);\r\n        let predecessors = [...elem.data.predecessors];\r\n        predecessors[index] = id.toString();\r\n        elem.data = { ...elem.data, predecessors };\r\n      });\r\n    });\r\n    // console.log(nodes);\r\n    tasksObject = newNodes.map((elem) => {\r\n      // console.log(\"tasksObject node:\", elem);\r\n      tasksObject[elem.id.toString()] = {\r\n        id: elem.id.toString(),\r\n        optimisticTime: elem.data.optimistic,\r\n        mostLikelyTime: elem.data.time,\r\n        pessimisticTime: elem.data.pessimistic,\r\n        predecessors: elem.data.predecessors,\r\n      };\r\n      return tasksObject;\r\n    });\r\n    let tasksObjectFinal = tasksObject[tasksObject.length - 1];\r\n    console.log(\"TasksObject:\");\r\n    console.log(tasksObjectFinal);\r\n    console.log(\"Pert:\");\r\n    let pert = {};\r\n    // console.log(\"gonna set pert\");\r\n    try {\r\n      // if (tasksObject[1] !== undefined) {\r\n      // console.log(tasksObject[1]);\r\n      pert = jsPERT(tasksObjectFinal);\r\n      this.props.setPert({ pert });\r\n      console.log(this.props.pert);\r\n      // this.props.setSlacks({ slackObject: this.props.pert.slack });\r\n      // console.log(\"slacks:\");\r\n      let slackObject = {};\r\n      slackObject = newNodes.map((elem, index) => {\r\n        // console.log(elem.id, pert.slack[elem.id]);\r\n        if (index !== 0 && index !== 1) {\r\n          // console.log(\"Slack elem:\", elem);                           // Website design layout\r\n          console.log(\"index:\", index);\r\n          console.log(\"task:\", elem.data.label);\r\n          let created = elem.data.created;\r\n\r\n          // let earliestFinish = new Date(\r\n          //   pert.earliestFinishTimes[index] + created\r\n          // ); // 23/5 + 3\r\n          let createdDate = new Date(created);\r\n          let earliestFinish = moment(createdDate, \"DD-MM-YYYY\").add(\r\n            pert.earliestFinishTimes[index + 1],\r\n            \"days\"\r\n          );\r\n          earliestFinish = earliestFinish._d;\r\n          // let slack = new Date(pert.slack[elem.id]);\r\n          const diffTime = Math.abs(earliestFinish - createdDate);\r\n          const duration = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n          // console.log(duration);\r\n          let today = new Date();\r\n          let todayDate = new Date(today.toUTCString()); // 25/5\r\n          let earliestStart = moment(createdDate, \"DD-MM-YYYY\").add(\r\n            +pert.earliestStartTimes[index + 1],\r\n            \"days\"\r\n          );\r\n          earliestStart = earliestStart._d;\r\n          // console.log(todayDate, startTime._d);\r\n          const diffTime2 = Math.abs(todayDate - earliestStart);\r\n          let daysDone = Math.ceil(diffTime2 / (1000 * 60 * 60 * 24));\r\n          // console.log(daysDone);\r\n          let finaldiff = Math.abs(duration - daysDone);\r\n          let days = Math.round(\r\n            (earliestFinish - todayDate) / (1000 * 60 * 60 * 24)\r\n          );\r\n          console.log(earliestStart, todayDate, earliestFinish);\r\n          console.log(\r\n            \"no. of days done:\",\r\n            Math.round(todayDate - earliestStart) / (1000 * 60 * 60 * 24)\r\n          );\r\n          console.log(\r\n            \"no. of days left:\",\r\n            Math.round((earliestFinish - todayDate) / (1000 * 60 * 60 * 24))\r\n          );\r\n          days = pert.slack[elem.id] !== 0 ? days + pert.slack[elem.id] : days;\r\n          // 23/5 25/5 26/5\r\n          // console.log(\"slack:\", pert.slack[elem.id]);\r\n          // console.log(\"day1:\", duration);\r\n          // console.log(\"day2:\", daysDone);\r\n          // console.log(\"days left:\", days);\r\n          // console.log(\"Overdue\", days >= 0 ? false : true);\r\n          // console.log(elem.data.label + \" \" + days + \" \" + pert.slack[elem.id]);\r\n          slackObject[elem.data.label] = {\r\n            slack: pert.slack[elem.id],\r\n            days: days,\r\n            daysPassed: Math.round(\r\n              (todayDate - earliestStart) / (1000 * 60 * 60 * 24)\r\n            ),\r\n            earliestStartDate: earliestStart,\r\n            todayDate: todayDate,\r\n            earliestFinishDate: earliestFinish,\r\n            overdue: days >= 0 ? false : true,\r\n          };\r\n          return slackObject;\r\n        }\r\n      });\r\n      console.log(\"slacks Object:\", slackObject[slackObject.length - 1]);\r\n      let obj = slackObject[slackObject.length - 1];\r\n      this.props.setSlacks({ slackObject: obj });\r\n      let newNodesObject = {};\r\n      newNodesObject = newNodes.map((node) => {\r\n        newNodesObject[node.id] = node.data;\r\n        return newNodesObject;\r\n      });\r\n      newNodesObject = newNodesObject[newNodesObject.length - 1];\r\n      // console.log(\"newNodesObject:\", newNodesObject);\r\n      let criticalPathData = {};\r\n      criticalPathData = pert.criticalPath.map((id) => {\r\n        criticalPathData[id] = newNodesObject[id];\r\n        return criticalPathData;\r\n      });\r\n      criticalPathData = criticalPathData[criticalPathData.length - 1];\r\n      console.log(\"criticalPathDataObject:\", criticalPathData);\r\n      this.props.setCriticalPath({ criticalPath: criticalPathData });\r\n      \r\n      this.props.setExpectedTime({\r\n        expectedTime: Math.floor(this.props.pert.latestFinishTimes.__end),\r\n      });\r\n      putExpectedTime(\r\n        this.props.project._id,\r\n        Math.floor(this.props.pert.latestFinishTimes.__end)\r\n      );\r\n      // }\r\n    } catch (err) {\r\n      // console.log(err);\r\n      this.props.setPert({ pert: {} });\r\n      // console.log(this.props.pert);\r\n      this.props.setExpectedTime({\r\n        expectedTime: 0,\r\n      });\r\n      putExpectedTime(this.props.project._id, 0);\r\n    }\r\n    // this.setState({ pert });\r\n  };\r\n  onElementClick = (event, element) => {\r\n    console.log(element);\r\n  };\r\n  componentDidMount() {\r\n    let newNodes = [];\r\n\r\n    getTasks(this.props.project._id).then((data) => {\r\n      // console.log(data.tasks);\r\n      const tasks = data.tasks;\r\n      let newTasks = [];\r\n      tasks.map((task) => {\r\n        newTasks.push({ ...task });\r\n      });\r\n      newTasks.map((task) => {\r\n        task[\"label\"] = task.taskName;\r\n        task[\"description\"] = task.description;\r\n        task[\"time\"] = task.mostLikelyTime;\r\n        task[\"optimistic\"] = task.optimisticTime;\r\n        task[\"pessimistic\"] = task.pessimisticTime;\r\n        if (\r\n          task.taskName !== \"Completed!!\" &&\r\n          task.taskName !== \"Lets Start Working\"\r\n        ) {\r\n          let newNode = {\r\n            key: task._id,\r\n            id: (newNodes.length + 1).toString(),\r\n            data: task,\r\n            sourcePosition: \"right\",\r\n            targetPosition: \"left\",\r\n            position:\r\n              task.position !== undefined\r\n                ? task.position\r\n                : {\r\n                    x: (Math.random() * window.innerWidth) / 2,\r\n                    y: (Math.random() * window.innerHeight) / 2,\r\n                  },\r\n          };\r\n          newNodes.push(newNode);\r\n        }\r\n        if (task.taskName === \"Lets Start Working\") {\r\n          let ele = [...this.state.elements];\r\n          let newNode = {\r\n            key: task._id,\r\n            id: \"1\",\r\n            type: \"input\",\r\n            data: {\r\n              label: \"Lets Start Working\",\r\n              description: \"Start working on tasks to complete project on time\",\r\n              pessimistic: 0,\r\n              time: 0,\r\n              optimistic: 0,\r\n              predecessors: [],\r\n              _id: task._id,\r\n            },\r\n            sourcePosition: \"right\",\r\n            position:\r\n              task.position !== undefined ? task.position : { x: 0, y: 0 },\r\n          };\r\n          newNodes.push(newNode);\r\n        }\r\n        if (task.taskName === \"Completed!!\") {\r\n          let ele = [...this.state.elements];\r\n          let newNode = {\r\n            key: task._id,\r\n            id: \"2\",\r\n            type: \"output\",\r\n            data: {\r\n              label: \"Completed!!\",\r\n              description: \"Yaaayy you gus have completed the project\",\r\n              pessimistic: 0,\r\n              time: 0,\r\n              optimistic: 0,\r\n              predecessors: task.predecessors,\r\n              _id: task._id,\r\n            },\r\n            targetPosition: \"left\",\r\n            position:\r\n              task.position !== undefined ? task.position : { x: 500, y: 0 },\r\n          };\r\n          newNodes.push(newNode);\r\n        }\r\n      });\r\n      this.props.replaceNodes({ nodes: newNodes });\r\n      // console.log(\"Mount nodes:\", this.props.nodes);\r\n    });\r\n    getConnections(this.props.project._id)\r\n      .then((data) => {\r\n        let connections = [];\r\n        data.connections.map((link) => {\r\n          newNodes.map((elem) => {\r\n            if (elem.key !== undefined) {\r\n              if (link.from.toString() === elem.key.toString()) {\r\n                this.setState({ source: elem });\r\n              }\r\n              if (link.to.toString() === elem.key.toString()) {\r\n                this.setState({ target: elem });\r\n              }\r\n            }\r\n          });\r\n          let source = this.state.source;\r\n          let target = this.state.target;\r\n          if (source !== undefined && target !== undefined) {\r\n            let edge = {\r\n              id:\r\n                \"reactflow__edge-\" +\r\n                source.id.toString() +\r\n                \"null-\" +\r\n                target.id.toString() +\r\n                \"null\",\r\n              source: source.id.toString(),\r\n              sourceHandle: null,\r\n              target: target.id.toString(),\r\n              targetHandle: null,\r\n              _id: link._id,\r\n            };\r\n            connections.push(edge);\r\n          }\r\n          return \"done\";\r\n        });\r\n        // console.log(connections);\r\n        this.props.replaceConnections({ connections: connections });\r\n      })\r\n      .then(() => {\r\n        this.pertCalc();\r\n      });\r\n  }\r\n  componentDidUpdate(prevState, prevProps) {\r\n    if (this.props.connections.length !== prevState.connections.length) {\r\n      this.pertCalc();\r\n      // console.log(prevState.connections.length, this.props.connections.length);\r\n      // console.log(\"Pert from comp update:\", this.props.pert);\r\n      // console.log(\"Pert calculation nodes:\", this.props.nodes);\r\n    }\r\n    if (prevState.tasks.length !== this.props.tasks.length) {\r\n      const { tasks } = this.props;\r\n      let newTasks = [];\r\n      tasks.map((task) => {\r\n        newTasks.push({ ...task });\r\n      });\r\n      let newNodes = [];\r\n      newTasks.map((task) => {\r\n        task[\"label\"] = task.taskName;\r\n        task[\"description\"] = task.description;\r\n        task[\"time\"] = task.mostLikelyTime;\r\n        task[\"optimistic\"] = task.optimisticTime;\r\n        task[\"pessimistic\"] = task.pessimisticTime;\r\n        if (\r\n          task.taskName !== \"Completed!!\" &&\r\n          task.taskName !== \"Lets Start Working\"\r\n        ) {\r\n          let newNode = {\r\n            key: task._id,\r\n            id: (newNodes.length + 1).toString(),\r\n            data: task,\r\n            sourcePosition: \"right\",\r\n            targetPosition: \"left\",\r\n            position:\r\n              task.position !== undefined\r\n                ? task.position\r\n                : {\r\n                    x: (Math.random() * window.innerWidth) / 2,\r\n                    y: (Math.random() * window.innerHeight) / 2,\r\n                  },\r\n          };\r\n          newNodes.push(newNode);\r\n        }\r\n        if (task.taskName === \"Lets Start Working\") {\r\n          let ele = [...this.state.elements];\r\n          let newNode = {\r\n            key: task._id,\r\n            id: \"1\",\r\n            type: \"input\",\r\n            data: {\r\n              label: \"Lets Start Working\",\r\n              description: \"Start working on tasks to complete project on time\",\r\n              pessimistic: 0,\r\n              time: 0,\r\n              optimistic: 0,\r\n              predecessors: [],\r\n              _id: task._id,\r\n            },\r\n            sourcePosition: \"right\",\r\n            position:\r\n              task.position !== undefined ? task.position : { x: 0, y: 0 },\r\n          };\r\n          newNodes.push(newNode);\r\n        }\r\n        if (task.taskName === \"Completed!!\") {\r\n          let ele = [...this.state.elements];\r\n          let newNode = {\r\n            key: task._id,\r\n            id: \"2\",\r\n            type: \"output\",\r\n            data: {\r\n              label: \"Completed!!\",\r\n              description: \"Yaaayy you gus have completed the project\",\r\n              pessimistic: 0,\r\n              time: 0,\r\n              optimistic: 0,\r\n              predecessors: task.predecessors,\r\n              _id: task._id,\r\n            },\r\n            targetPosition: \"left\",\r\n            position:\r\n              task.position !== undefined ? task.position : { x: 500, y: 0 },\r\n          };\r\n          newNodes.push(newNode);\r\n        }\r\n      });\r\n      this.props.replaceNodes({ nodes: newNodes });\r\n      if (this.props.connections.length === 0) {\r\n        getConnections(this.props.project._id)\r\n          .then((data) => {\r\n            let connections = [];\r\n            data.connections.map((link) => {\r\n              newNodes.map((elem) => {\r\n                if (elem.key !== undefined) {\r\n                  if (link.from.toString() === elem.key.toString()) {\r\n                    this.setState({ source: elem });\r\n                  }\r\n                  if (link.to.toString() === elem.key.toString()) {\r\n                    this.setState({ target: elem });\r\n                  }\r\n                }\r\n              });\r\n              let source = this.state.source;\r\n              let target = this.state.target;\r\n              let edge = {\r\n                id:\r\n                  \"reactflow__edge-\" +\r\n                  source.id.toString() +\r\n                  \"null-\" +\r\n                  target.id.toString() +\r\n                  \"null\",\r\n                source: source.id.toString(),\r\n                sourceHandle: null,\r\n                target: target.id.toString(),\r\n                targetHandle: null,\r\n                _id: link._id,\r\n              };\r\n              connections.push(edge);\r\n\r\n              return \"done\";\r\n            });\r\n            // console.log(connections);\r\n            this.props.replaceConnections({ connections: connections });\r\n          })\r\n          .then(() => {\r\n            this.pertCalc();\r\n          });\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    if (this.props.tasks.length === 0) return <div>No tasks</div>;\r\n    const { nodes, connections, tasks } = this.props;\r\n    const { status } = this.props.project;\r\n    let connectCheck = status === \"Completed\" ? false : true;\r\n    const elements = [];\r\n    nodes.map((node) => {\r\n      elements.push({ ...node });\r\n    });\r\n    connections.map((connection) => {\r\n      elements.push({ ...connection });\r\n    });\r\n    // console.log(\"nodes:\", nodes);\r\n    return (\r\n      <div>\r\n        <div className=\"container-fluid\">\r\n          <ReactFlow\r\n            elements={elements}\r\n            onLoad={this.onLoad}\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"65vh\",\r\n              backgroundColor: \"#1A192B\",\r\n            }}\r\n            onNodeDragStop={this.onNodeDragStop}\r\n            onConnect={this.onConnect}\r\n            onElementClick={this.onElementClick}\r\n            onElementsRemove={this.onElementsRemove}\r\n            connectionLineStyle={{ stroke: \"#ddd\", strokeWidth: 2 }}\r\n            connectionLineType=\"bezier\"\r\n            snapToGrid={true}\r\n            snapGrid={[16, 16]}\r\n            nodesConnectable={connectCheck}\r\n            nodesDraggable={connectCheck}\r\n            defaultZoom={1}\r\n          >\r\n            <Background color=\"#888\" gap={16} />\r\n            <MiniMap\r\n              nodeColor={(n) => {\r\n                if (n.type === \"input\") return \"#DC143C\";\r\n                if (n.type === \"output\") return \"#90ee90\";\r\n                return \"cyan\";\r\n              }}\r\n            />\r\n            <Controls />\r\n          </ReactFlow>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  nodes: state.cpm.nodes,\r\n  connections: state.cpm.connections,\r\n  state: state,\r\n  notifications: state.notifications.notifications,\r\n  tasks: state.tasks.tasks,\r\n  elements: state.cpm.elements,\r\n  pert: state.cpm.pert,\r\n  slacks: state.cpm.slacks,\r\n  criticalPath: state.cpm.criticalPath,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  nodeAdded: (params) => dispatch(nodeAdded(params)),\r\n  connectionAdded: (params) => dispatch(connectionAdded(params)),\r\n  updateTasks: (params) => dispatch(updateTasks(params)),\r\n  replaceNodes: (params) => dispatch(replaceNodes(params)),\r\n  replaceConnections: (params) => dispatch(replaceConnections(params)),\r\n  replaceElements: (params) => dispatch(replaceElements(params)),\r\n  setPert: (params) => dispatch(setPert(params)),\r\n  setExpectedTime: (params) => dispatch(setExpectedTime(params)),\r\n  setSlacks: (params) => dispatch(setSlacks(params)),\r\n  setCriticalPath: (params) => dispatch(setCriticalPath(params)),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(styles)(LayoutComponent));\r\n","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\ProjectDashboard.js",["209","210","211","212","213"],"import React, { Component } from \"react\";\r\nimport { Accordion, Card, Button, Row, Tab, Col, Nav } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AddTask from \"./taskComponents/AddTask\";\r\nimport LayoutComponent from \"./layout/LayoutComponent\";\r\nimport TrelloTask from \"./taskComponents/TrelloTask\";\r\nimport GroupTwoToneIcon from \"@material-ui/icons/GroupTwoTone\";\r\nimport AccountTreeTwoToneIcon from \"@material-ui/icons/AccountTreeTwoTone\";\r\nimport TuneTwoToneIcon from \"@material-ui/icons/TuneTwoTone\";\r\nimport PlaylistAddTwoToneIcon from \"@material-ui/icons/PlaylistAddTwoTone\";\r\nimport ListAltTwoToneIcon from \"@material-ui/icons/ListAltTwoTone\";\r\nimport PhotoLibraryIcon from \"@material-ui/icons/PhotoLibrary\";\r\nimport PersonAddTwoToneIcon from \"@material-ui/icons/PersonAddTwoTone\";\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\nimport { getCurrentUser } from \"../user/apiUser\";\r\nimport { getAllPosts } from \"./../posts/apiPosts\";\r\nimport Post from \"../posts/Post\";\r\nimport VideoPost from \"./../posts/VideoPost\";\r\nimport Chat from \"./Chat\";\r\nimport { getTasks } from \"./apiProject\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateTasks } from \"../store/tasks\";\r\nimport { clearAll, setCriticalPath } from \"../store/cpm\";\r\nimport RoleReq from \"./RoleReq\";\r\nimport AssignedTo from \"./AssignedTo\";\r\nimport UserRecommendation from \"./UserRecommendation\";\r\nimport moment from \"moment\";\r\nclass ProjectDashboard extends Component {\r\n  state = {\r\n    expectedTime: {},\r\n  };\r\n  componentDidMount() {\r\n    this.props.clearAll();\r\n    const { project } = this.props.location.state;\r\n    getTasks(project._id).then((val) => {\r\n      this.props.updateTasks({\r\n        tasks: val.tasks,\r\n      });\r\n    });\r\n    getAllPosts()\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        this.setState({ posts: data.posts });\r\n      });\r\n  }\r\n  // componentDidUpdate(prevState) {\r\n  //   if (prevState.connections.length !== this.props.connections.length) {\r\n  //     // if (this.props.pert.latestFinishTimes !== undefined)\r\n  //     //   console.log(\"end time:\", this.props.pert.latestFinishTimes.__end);\r\n  //     const expectedTime =\r\n  //       this.props.pert.latestFinishTimes !== undefined\r\n  //         ? Math.floor(this.props.pert.latestFinishTimes.__end)\r\n  //         : \"Not set yet\";\r\n  //     this.setState({ expectedTime });\r\n  //     this.props.setExpectedTime({ expectedTime });\r\n  //   }\r\n  //   // console.log(prevState);\r\n  // }\r\n  renderSlacks(slacks) {\r\n    return Object.keys(slacks).map((key) => (\r\n      <div>\r\n        Label: {key} | slack: {slacks[key].slack} | days: {slacks[key].days} |\r\n        Overdue:\r\n        {slacks[key].overdue ? <>Overdue</> : <>On schedule</>}\r\n      </div>\r\n    ));\r\n  }\r\n  renderCriticalPath(criticalPathArr, criticalPathObject) {\r\n    // console.log(\"criticalPathArr:\", criticalPathArr);\r\n    // console.log(\"criticalPathObject:\", criticalPathObject);\r\n    return criticalPathArr.map((node, index) => (\r\n      <>\r\n        {/* {index !== 1 && index !== 2 ?*/}\r\n        {index !== criticalPathArr.length - 1\r\n          ? criticalPathObject[node].label.toString() + \" , \"\r\n          : criticalPathObject[node].label.toString() + \" .\"}\r\n        {/* : \"\"} */}\r\n      </>\r\n    ));\r\n  }\r\n  render() {\r\n    if (this.props.location.state.project === undefined) {\r\n      return null;\r\n    }\r\n    const { project } = this.props.location.state;\r\n    // console.log(this.props.location);\r\n    // 25/5 26/5     23/6\r\n    // estimated date : 23/6\r\n    // no of days left : 23/6 - 26/5\r\n    let today = new Date();\r\n    let day1 = new Date(today.toUTCString());\r\n    // let day2 = new Date(project.created);\r\n    // let difference = Math.abs(day2 - day1);\r\n    // let days = parseInt(difference / (1000 * 3600 * 24));\r\n    // console.log(days);\r\n    const { expectedTime, slacks, criticalPath, pert } = this.props;\r\n    const { posts } = this.state;\r\n    let createDate = new Date(project.created);\r\n    let expectedDate = moment(createDate, \"DD-MM-YYYY\").add(\r\n      expectedTime,\r\n      \"days\"\r\n    );\r\n    const diffTime = Math.abs(expectedDate._d - day1);\r\n    const duration = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n    console.log(\"no. of days left:\", duration);\r\n    console.log(\"expectedDate : \", expectedDate.format(\"DD-MM-YYYY\"));\r\n    // console.log(slacks);\r\n    // if (slacks === undefined) return ;\r\n    if (expectedTime === undefined) return null;\r\n    return (\r\n      <div className=\"pt-5\">\r\n        <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"projStats\">\r\n          <Row>\r\n            <Col sm={2}>\r\n              <div className=\"card card-custom card-stretch\">\r\n                <div className=\"card-body pt-4\">\r\n                  <h5 className=\"font-weight-bolder text-dark-75 text-hover-primary\">\r\n                    {project.title}\r\n                  </h5>\r\n                  <div className=\"text-muted\">{project.description}</div>\r\n                  <Nav variant=\"pills\" className=\"flex-column mt-3\">\r\n                    <Nav.Item>\r\n                      <Nav.Link eventKey=\"teamInfo\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"mr-3\">\r\n                            <GroupTwoToneIcon />\r\n                          </div>\r\n                          <div>Team Information</div>\r\n                        </div>\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                      <Nav.Link eventKey=\"projStats\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"mr-3\">\r\n                            <TuneTwoToneIcon />\r\n                          </div>\r\n                          <div>Project Stats</div>\r\n                        </div>\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                    {project.status !== \"Completed\" &&\r\n                    getCurrentUser()._id === project.leader ? (\r\n                      <Nav.Item>\r\n                        <Nav.Link eventKey=\"addTask\">\r\n                          <div className=\"d-flex align-items-center\">\r\n                            <div className=\"mr-3\">\r\n                              <PlaylistAddTwoToneIcon />\r\n                            </div>\r\n                            <div>Add Task</div>\r\n                          </div>\r\n                        </Nav.Link>\r\n                      </Nav.Item>\r\n                    ) : (\r\n                      <div> </div>\r\n                    )}\r\n                    <Nav.Item>\r\n                      <Nav.Link eventKey=\"netDiagram\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"mr-3\">\r\n                            <AccountTreeTwoToneIcon />\r\n                          </div>\r\n                          <div>Network Diagram</div>\r\n                        </div>\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                      <Nav.Link eventKey=\"allTasks\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"mr-3\">\r\n                            <ListAltTwoToneIcon />\r\n                          </div>\r\n                          <div>All Tasks</div>\r\n                        </div>\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                      <Nav.Link eventKey=\"Chat\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"mr-3\">\r\n                            <ChatIcon />\r\n                          </div>\r\n                          <div>Group Chat</div>\r\n                        </div>\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                      <Nav.Link eventKey=\"Posts\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"mr-3\">\r\n                            <PhotoLibraryIcon />\r\n                          </div>\r\n                          <div>Posts</div>\r\n                        </div>\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                  </Nav>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n            <Col sm={10}>\r\n              <Tab.Content>\r\n                <Tab.Pane eventKey=\"teamInfo\">\r\n                  <div className=\"card card-stretch\">\r\n                    <div className=\"card-header\">\r\n                      <div className=\"card-title align-items-start flex-column\">\r\n                        <h4 className=\"card-label font-weight-bolder text-dark\">\r\n                          Team Information\r\n                        </h4>\r\n                        <span className=\"text-muted font-weight-bold font-size-sm mt-1\">\r\n                          Analysis of the tasks and time required displayed\r\n                          here.\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <div className=\"col mb-4\">\r\n                        {/* {console.log(project.completion_percentage)} */}\r\n                        <div className=\"d-flex align-items-center justify-content-between flex-wrap\">\r\n                          <div className=\"mr-3\">\r\n                            <div className=\"d-flex align-items-center text-dark font-size-h5 font-weight-bold mr-3\">\r\n                              {project.title}\r\n                            </div>\r\n                            <div className=\"d-flex flex-wrap my-2\">\r\n                              <Link\r\n                                to=\"#\"\r\n                                className=\"text-muted text-hover-primary font-weight-bold mr-lg-8 mr-5 mb-lg-0 mb-2\"\r\n                              >\r\n                                {project.leader}\r\n                              </Link>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"my-lg-0 my-1\">\r\n                            <button className=\"btn btn-light-primary\">\r\n                              Test\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"flex-grow-1 font-weight-bold font-size-h6 py-5 py-lg-2 mr-5\">\r\n                          {project.description}\r\n                        </div>\r\n                        <div className=\"flex-grow-1 font-weight-bold font-size-h6 py-5 py-lg-2 mr-5\">\r\n                          {project.skills.map((skill) => (\r\n                            <span class=\"btn btn-light-info btn-sm font-weight-bold btn-upper btn-text m-1\">\r\n                              {skill}\r\n                            </span>\r\n                          ))}\r\n                        </div>\r\n                        <div className=\"d-flex flex-wrap align-items-center py-2\">\r\n                          <div className=\"mr-12 d-flex flex-column mb-7\">\r\n                            <span className=\"d-block font-weight-bold mb-4\">\r\n                              Start Date\r\n                            </span>\r\n                            <span className=\"btn btn-light-primary btn-sm font-weight-bold btn-upper btn-text\">\r\n                              {/* {projectCreatedDates[project._id]} */}\r\n                              LOAD\r\n                            </span>\r\n                          </div>\r\n                          <div className=\"mr-12 d-flex flex-column mb-7\">\r\n                            <span className=\"d-block font-weight-bold mb-4\">\r\n                              Due Date\r\n                            </span>\r\n                            <span className=\"btn btn-light-danger btn-sm font-weight-bold btn-upper btn-text\">\r\n                              {/* {projectEstimatedDates[project._id]} */}\r\n                              LOAD\r\n                            </span>\r\n                          </div>\r\n                          <div className=\"flex-row-fluid mb-7\">\r\n                            <span className=\"d-block font-weight-bold mb-4\">\r\n                              Progress\r\n                            </span>\r\n                            <div className=\"d-flex align-items-center pt-2\">\r\n                              <div className=\"progress progress-xs mt-2 mb-2 w-100\">\r\n                                <div\r\n                                  className=\"progress-bar bg-warning\"\r\n                                  role=\"progressbar\"\r\n                                  style={{\r\n                                    width: `${project.completion_percentage}%`,\r\n                                  }}\r\n                                  aria-valuenow=\"50\"\r\n                                  aria-valuemin=\"0\"\r\n                                  aria-valuemax=\"100\"\r\n                                ></div>\r\n                              </div>\r\n                              <span className=\"ml-3 font-weight-bolder\">\r\n                                {project.completion_percentage}%\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <table className=\"table table-light\">\r\n                          <thead>\r\n                            <tr>\r\n                              <th key={\"rolename\"}>Role Name</th>\r\n                              <th key={\"skills\"}>Skills Required</th>\r\n                              <th key={\"assigned\"}>Assigned To</th>\r\n                              <th key={\"invite\"}>Send Invite</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {project.roles.map((role) => (\r\n                              <tr key={role._id.toString()}>\r\n                                <td\r\n                                  key={\r\n                                    role._id.toString() +\r\n                                    role.roleName.toString()\r\n                                  }\r\n                                >\r\n                                  {role.roleName}\r\n                                </td>\r\n                                <td\r\n                                  key={\r\n                                    role._id.toString() +\r\n                                    role.roleSkills.toString()\r\n                                  }\r\n                                >\r\n                                  {role.roleSkills.join(\", \")}\r\n                                </td>\r\n                                <td>\r\n                                  {project.leader === getCurrentUser()._id &&\r\n                                  role.assignedTo === undefined ? (\r\n                                    <div>\r\n                                      <RoleReq\r\n                                        requestBy={role.requestBy}\r\n                                        projectId={project._id}\r\n                                        roleId={role._id}\r\n                                      />\r\n                                    </div>\r\n                                  ) : (\r\n                                    <div>\r\n                                      <AssignedTo id={role.assignedTo} />\r\n                                    </div>\r\n                                  )}\r\n                                </td>\r\n                                <td>\r\n                                  <button className=\"btn btn-info\">\r\n                                    <PersonAddTwoToneIcon />\r\n                                  </button>\r\n                                </td>\r\n                              </tr>\r\n                            ))}\r\n                          </tbody>\r\n                        </table>\r\n                        {getCurrentUser()._id === project.leader ? (\r\n                          <UserRecommendation project={project} />\r\n                        ) : (\r\n                          <div></div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Tab.Pane>\r\n                <Tab.Pane eventKey=\"projStats\">\r\n                  <div className=\"card card-stretch\">\r\n                    <div className=\"card-header\">\r\n                      <div className=\"card-title align-items-start flex-column\">\r\n                        <h4 className=\"card-label font-weight-bolder text-dark\">\r\n                          Project Stats\r\n                        </h4>\r\n                        <span className=\"text-muted font-weight-bold font-size-sm mt-1\">\r\n                          Analysis of the tasks and time required displayed\r\n                          here.\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <h4>No. of days:</h4>\r\n                      <span>{duration}</span>\r\n                      <h4>Estimated date:</h4>\r\n                      <span>{expectedDate.format(\"DD-MM-YYYY\")}</span>\r\n                      {slacks !== undefined ? (\r\n                        <>\r\n                          <h4>Tasks that can be slacked On:</h4>\r\n                          <div>{this.renderSlacks(slacks)}</div>\r\n                        </>\r\n                      ) : (\r\n                        <></>\r\n                      )}\r\n                      <div>\r\n                        <div>\r\n                          <h4>Critical Path:</h4>\r\n                        </div>\r\n                        <div>\r\n                          {pert.criticalPath !== undefined &&\r\n                          criticalPath !== undefined ? (\r\n                            this.renderCriticalPath(\r\n                              pert.criticalPath,\r\n                              criticalPath\r\n                            )\r\n                          ) : (\r\n                            <></>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Tab.Pane>\r\n                <Tab.Pane eventKey=\"netDiagram\">\r\n                  <div className=\"card card-stretch\">\r\n                    <div className=\"card-header\">\r\n                      <div className=\"card-title align-items-start flex-column\">\r\n                        <h4 className=\"card-label font-weight-bolder text-dark\">\r\n                          Network Diagram\r\n                        </h4>\r\n                        <span className=\"text-muted font-weight-bold font-size-sm mt-1\">\r\n                          Task dependency diagram.\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <LayoutComponent project={project} />\r\n                    </div>\r\n                  </div>\r\n                </Tab.Pane>\r\n                <Tab.Pane eventKey=\"allTasks\">\r\n                  <div className=\"card card-stretch\">\r\n                    <div className=\"card-header\">\r\n                      <div className=\"card-title align-items-start flex-column\">\r\n                        <h4 className=\"card-label font-weight-bolder text-dark\">\r\n                          Tasks Board\r\n                        </h4>\r\n                        <span className=\"text-muted font-weight-bold font-size-sm mt-1\">\r\n                          Complete allocated tasks.\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <TrelloTask\r\n                        projectId={project._id}\r\n                        status={project.status}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </Tab.Pane>\r\n                <Tab.Pane eventKey=\"addTask\">\r\n                  <div className=\"card card-stretch\">\r\n                    <div className=\"card-header\">\r\n                      <div className=\"card-title align-items-start flex-column\">\r\n                        <h4 className=\"card-label font-weight-bolder text-dark\">\r\n                          Create Task\r\n                        </h4>\r\n                        <span className=\"text-muted font-weight-bold font-size-sm mt-1\">\r\n                          Add Tasks and allocate to memebers.\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <AddTask projectId={project._id} />\r\n                    </div>\r\n                  </div>\r\n                </Tab.Pane>\r\n                <Tab.Pane eventKey=\"Chat\">\r\n                  <div className=\"card card-stretch\">\r\n                    <div className=\"card-header\">\r\n                      <div className=\"card-title align-items-start flex-column\">\r\n                        <h4 className=\"card-label font-weight-bolder text-dark\">\r\n                          Group Chat\r\n                        </h4>\r\n                        <span className=\"text-muted font-weight-bold font-size-sm mt-1\">\r\n                          Interact with your Project-mates.\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <Chat projectId={project._id} status={project.status} />\r\n                    </div>\r\n                  </div>\r\n                </Tab.Pane>\r\n                <Tab.Pane eventKey=\"Posts\">\r\n                  <div className=\"card card-stretch\">\r\n                    <div className=\"card-header\">\r\n                      <div className=\"card-title align-items-start flex-column\">\r\n                        <h4 className=\"card-label font-weight-bolder text-dark\">\r\n                          Posts\r\n                        </h4>\r\n                        <span className=\"text-muted font-weight-bold font-size-sm mt-1\">\r\n                          News Feed (Posts) will be here\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      {posts !== undefined &&\r\n                        posts.map((post) => {\r\n                          if (\r\n                            post.project !== undefined &&\r\n                            post.project.toString() === project._id.toString()\r\n                          ) {\r\n                            console.log(post.project, project._id);\r\n                            if (post.postType === \"video\")\r\n                              return (\r\n                                <VideoPost\r\n                                  headerText={post.title}\r\n                                  footerText={\"by \" + post.postedBy.name}\r\n                                  cardText={post.video}\r\n                                  videoUrl={post.video}\r\n                                  liked_by={post.liked_by}\r\n                                  _id={post._id}\r\n                                  comments={post.comments}\r\n                                  tags={post.tags}\r\n                                />\r\n                              );\r\n                            if (post.postType === \"image\")\r\n                              return (\r\n                                <Post\r\n                                  headerText={post.title}\r\n                                  footerText={\"by \" + post.postedBy.name}\r\n                                  cardText={post.photo}\r\n                                  imageUrl={post.photo}\r\n                                  liked_by={post.liked_by}\r\n                                  _id={post._id}\r\n                                  comments={post.comments}\r\n                                  tags={post.tags}\r\n                                />\r\n                              );\r\n                          }\r\n                        })}\r\n                    </div>\r\n                  </div>\r\n                </Tab.Pane>\r\n              </Tab.Content>\r\n            </Col>\r\n          </Row>\r\n        </Tab.Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  tasks: state.tasks.tasks,\r\n  pert: state.cpm.pert,\r\n  connections: state.cpm.connections,\r\n  expectedTime: state.cpm.expectedTime,\r\n  slacks: state.cpm.slacks,\r\n  criticalPath: state.cpm.criticalPath,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  updateTasks: (params) => dispatch(updateTasks(params)),\r\n  clearAll: () => dispatch(clearAll()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectDashboard);\r\n",["214","215"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Home.js",["216","217","218","219","220","221","222","223","224","225","226","227","228","229","230"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\TextPostView.js",["231","232","233","234","235","236"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\Post.js",["237","238","239","240","241","242","243"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\VideoPost.js",["244","245","246","247","248","249","250"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\showPost.js",["251","252","253","254","255","256"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\NavBar.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Menu.js",["257","258","259","260","261","262","263","264","265","266","267","268"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\UserRecommendation.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\DeleteProject.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Form.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\SearchProjectBar.js",["269","270","271","272","273","274","275"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\DragDropVideo.js",["276","277"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\notifications.js",["278"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\apiNotifications.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\DeletePost.js",["279","280","281","282"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Landing.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\apiUser.js",["283","284","285","286","287","288"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\auth\\index.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\Requests.js",["289"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\SearchUserBar.js",["290","291","292","293","294","295","296","297"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\DragDropImages.js",["298"],{"ruleId":"299","severity":1,"message":"300","line":11,"column":8,"nodeType":"301","messageId":"302","endLine":11,"endColumn":14},{"ruleId":"303","replacedBy":"304"},{"ruleId":"305","replacedBy":"306"},{"ruleId":"299","severity":1,"message":"307","line":10,"column":8,"nodeType":"301","messageId":"302","endLine":10,"endColumn":25},{"ruleId":"308","severity":1,"message":"309","line":30,"column":35,"nodeType":"310","messageId":"311","endLine":30,"endColumn":37},{"ruleId":"299","severity":1,"message":"312","line":2,"column":10,"nodeType":"301","messageId":"302","endLine":2,"endColumn":24},{"ruleId":"299","severity":1,"message":"313","line":23,"column":3,"nodeType":"301","messageId":"302","endLine":23,"endColumn":12},{"ruleId":"299","severity":1,"message":"314","line":25,"column":3,"nodeType":"301","messageId":"302","endLine":25,"endColumn":7},{"ruleId":"299","severity":1,"message":"315","line":31,"column":8,"nodeType":"301","messageId":"302","endLine":31,"endColumn":16},{"ruleId":"299","severity":1,"message":"316","line":36,"column":13,"nodeType":"301","messageId":"302","endLine":36,"endColumn":24},{"ruleId":"317","severity":1,"message":"318","line":132,"column":15,"nodeType":"319","endLine":132,"endColumn":75},{"ruleId":"299","severity":1,"message":"320","line":173,"column":7,"nodeType":"301","messageId":"302","endLine":173,"endColumn":11},{"ruleId":"317","severity":1,"message":"318","line":193,"column":19,"nodeType":"319","endLine":193,"endColumn":79},{"ruleId":"308","severity":1,"message":"309","line":38,"column":22,"nodeType":"310","messageId":"311","endLine":38,"endColumn":24},{"ruleId":"299","severity":1,"message":"321","line":1,"column":17,"nodeType":"301","messageId":"302","endLine":1,"endColumn":26},{"ruleId":"308","severity":1,"message":"309","line":27,"column":37,"nodeType":"310","messageId":"311","endLine":27,"endColumn":39},{"ruleId":"308","severity":1,"message":"309","line":29,"column":25,"nodeType":"310","messageId":"311","endLine":29,"endColumn":27},{"ruleId":"299","severity":1,"message":"322","line":4,"column":10,"nodeType":"301","messageId":"302","endLine":4,"endColumn":14},{"ruleId":"299","severity":1,"message":"323","line":7,"column":10,"nodeType":"301","messageId":"302","endLine":7,"endColumn":24},{"ruleId":"324","severity":1,"message":"325","line":33,"column":6,"nodeType":"326","endLine":33,"endColumn":18,"suggestions":"327"},{"ruleId":"299","severity":1,"message":"328","line":5,"column":10,"nodeType":"301","messageId":"302","endLine":5,"endColumn":16},{"ruleId":"299","severity":1,"message":"329","line":20,"column":7,"nodeType":"301","messageId":"302","endLine":20,"endColumn":15},{"ruleId":"308","severity":1,"message":"309","line":34,"column":35,"nodeType":"310","messageId":"311","endLine":34,"endColumn":37},{"ruleId":"299","severity":1,"message":"330","line":66,"column":11,"nodeType":"301","messageId":"302","endLine":66,"endColumn":24},{"ruleId":"299","severity":1,"message":"331","line":73,"column":11,"nodeType":"301","messageId":"302","endLine":73,"endColumn":19},{"ruleId":"299","severity":1,"message":"313","line":6,"column":3,"nodeType":"301","messageId":"302","endLine":6,"endColumn":12},{"ruleId":"299","severity":1,"message":"328","line":7,"column":3,"nodeType":"301","messageId":"302","endLine":7,"endColumn":9},{"ruleId":"299","severity":1,"message":"314","line":8,"column":3,"nodeType":"301","messageId":"302","endLine":8,"endColumn":7},{"ruleId":"299","severity":1,"message":"332","line":23,"column":10,"nodeType":"301","messageId":"302","endLine":23,"endColumn":24},{"ruleId":"299","severity":1,"message":"333","line":23,"column":26,"nodeType":"301","messageId":"302","endLine":23,"endColumn":31},{"ruleId":"308","severity":1,"message":"309","line":48,"column":46,"nodeType":"310","messageId":"311","endLine":48,"endColumn":48},{"ruleId":"299","severity":1,"message":"334","line":3,"column":10,"nodeType":"301","messageId":"302","endLine":3,"endColumn":15},{"ruleId":"299","severity":1,"message":"335","line":5,"column":8,"nodeType":"301","messageId":"302","endLine":5,"endColumn":12},{"ruleId":"299","severity":1,"message":"336","line":6,"column":8,"nodeType":"301","messageId":"302","endLine":6,"endColumn":12},{"ruleId":"299","severity":1,"message":"337","line":8,"column":3,"nodeType":"301","messageId":"302","endLine":8,"endColumn":10},{"ruleId":"299","severity":1,"message":"338","line":12,"column":3,"nodeType":"301","messageId":"302","endLine":12,"endColumn":17},{"ruleId":"299","severity":1,"message":"339","line":15,"column":3,"nodeType":"301","messageId":"302","endLine":15,"endColumn":10},{"ruleId":"299","severity":1,"message":"328","line":25,"column":10,"nodeType":"301","messageId":"302","endLine":25,"endColumn":16},{"ruleId":"308","severity":1,"message":"340","line":72,"column":22,"nodeType":"310","messageId":"341","endLine":72,"endColumn":24},{"ruleId":"308","severity":1,"message":"309","line":79,"column":11,"nodeType":"342","messageId":"343","endLine":79,"endColumn":18},{"ruleId":"308","severity":1,"message":"309","line":126,"column":37,"nodeType":"310","messageId":"311","endLine":126,"endColumn":39},{"ruleId":"308","severity":1,"message":"309","line":180,"column":45,"nodeType":"310","messageId":"311","endLine":180,"endColumn":47},{"ruleId":"308","severity":1,"message":"309","line":191,"column":22,"nodeType":"310","messageId":"311","endLine":191,"endColumn":24},{"ruleId":"308","severity":1,"message":"340","line":209,"column":25,"nodeType":"310","messageId":"341","endLine":209,"endColumn":27},{"ruleId":"308","severity":1,"message":"309","line":214,"column":9,"nodeType":"342","messageId":"343","endLine":214,"endColumn":16},{"ruleId":"308","severity":1,"message":"309","line":215,"column":47,"nodeType":"310","messageId":"311","endLine":215,"endColumn":49},{"ruleId":"308","severity":1,"message":"340","line":250,"column":48,"nodeType":"310","messageId":"341","endLine":250,"endColumn":50},{"ruleId":"299","severity":1,"message":"344","line":282,"column":15,"nodeType":"301","messageId":"302","endLine":282,"endColumn":24},{"ruleId":"308","severity":1,"message":"309","line":365,"column":24,"nodeType":"310","messageId":"311","endLine":365,"endColumn":26},{"ruleId":"308","severity":1,"message":"309","line":368,"column":27,"nodeType":"310","messageId":"311","endLine":368,"endColumn":29},{"ruleId":"345","severity":1,"message":"346","line":370,"column":31,"nodeType":"347","messageId":"348","endLine":370,"endColumn":47},{"ruleId":"299","severity":1,"message":"349","line":395,"column":15,"nodeType":"301","messageId":"302","endLine":395,"endColumn":18},{"ruleId":"299","severity":1,"message":"349","line":416,"column":15,"nodeType":"301","messageId":"302","endLine":416,"endColumn":18},{"ruleId":"308","severity":1,"message":"309","line":444,"column":31,"nodeType":"310","messageId":"311","endLine":444,"endColumn":33},{"ruleId":"308","severity":1,"message":"309","line":491,"column":24,"nodeType":"310","messageId":"311","endLine":491,"endColumn":26},{"ruleId":"308","severity":1,"message":"309","line":495,"column":27,"nodeType":"310","messageId":"311","endLine":495,"endColumn":29},{"ruleId":"345","severity":1,"message":"346","line":497,"column":31,"nodeType":"347","messageId":"348","endLine":497,"endColumn":47},{"ruleId":"299","severity":1,"message":"349","line":522,"column":15,"nodeType":"301","messageId":"302","endLine":522,"endColumn":18},{"ruleId":"299","severity":1,"message":"349","line":543,"column":15,"nodeType":"301","messageId":"302","endLine":543,"endColumn":18},{"ruleId":"308","severity":1,"message":"309","line":570,"column":35,"nodeType":"310","messageId":"311","endLine":570,"endColumn":37},{"ruleId":"299","severity":1,"message":"350","line":610,"column":33,"nodeType":"301","messageId":"302","endLine":610,"endColumn":38},{"ruleId":"308","severity":1,"message":"309","line":614,"column":22,"nodeType":"310","messageId":"311","endLine":614,"endColumn":24},{"ruleId":"308","severity":1,"message":"309","line":617,"column":34,"nodeType":"310","messageId":"311","endLine":617,"endColumn":36},{"ruleId":"299","severity":1,"message":"313","line":2,"column":10,"nodeType":"301","messageId":"302","endLine":2,"endColumn":19},{"ruleId":"299","severity":1,"message":"314","line":2,"column":21,"nodeType":"301","messageId":"302","endLine":2,"endColumn":25},{"ruleId":"299","severity":1,"message":"328","line":2,"column":27,"nodeType":"301","messageId":"302","endLine":2,"endColumn":33},{"ruleId":"299","severity":1,"message":"351","line":23,"column":20,"nodeType":"301","messageId":"302","endLine":23,"endColumn":35},{"ruleId":"308","severity":1,"message":"340","line":484,"column":42,"nodeType":"310","messageId":"341","endLine":484,"endColumn":44},{"ruleId":"303","replacedBy":"352"},{"ruleId":"305","replacedBy":"353"},{"ruleId":"299","severity":1,"message":"354","line":3,"column":10,"nodeType":"301","messageId":"302","endLine":3,"endColumn":26},{"ruleId":"299","severity":1,"message":"355","line":8,"column":3,"nodeType":"301","messageId":"302","endLine":8,"endColumn":14},{"ruleId":"299","severity":1,"message":"356","line":9,"column":3,"nodeType":"301","messageId":"302","endLine":9,"endColumn":21},{"ruleId":"299","severity":1,"message":"357","line":10,"column":3,"nodeType":"301","messageId":"302","endLine":10,"endColumn":29},{"ruleId":"299","severity":1,"message":"358","line":12,"column":13,"nodeType":"301","messageId":"302","endLine":12,"endColumn":14},{"ruleId":"299","severity":1,"message":"359","line":15,"column":10,"nodeType":"301","messageId":"302","endLine":15,"endColumn":20},{"ruleId":"299","severity":1,"message":"334","line":17,"column":10,"nodeType":"301","messageId":"302","endLine":17,"endColumn":15},{"ruleId":"299","severity":1,"message":"328","line":17,"column":17,"nodeType":"301","messageId":"302","endLine":17,"endColumn":23},{"ruleId":"299","severity":1,"message":"360","line":20,"column":10,"nodeType":"301","messageId":"302","endLine":20,"endColumn":21},{"ruleId":"299","severity":1,"message":"307","line":25,"column":8,"nodeType":"301","messageId":"302","endLine":25,"endColumn":25},{"ruleId":"308","severity":1,"message":"340","line":62,"column":46,"nodeType":"310","messageId":"341","endLine":62,"endColumn":48},{"ruleId":"299","severity":1,"message":"330","line":99,"column":13,"nodeType":"301","messageId":"302","endLine":99,"endColumn":26},{"ruleId":"299","severity":1,"message":"361","line":100,"column":50,"nodeType":"301","messageId":"302","endLine":100,"endColumn":60},{"ruleId":"317","severity":1,"message":"318","line":166,"column":27,"nodeType":"319","endLine":169,"endColumn":29},{"ruleId":"308","severity":1,"message":"340","line":213,"column":35,"nodeType":"310","messageId":"341","endLine":213,"endColumn":37},{"ruleId":"299","severity":1,"message":"362","line":14,"column":8,"nodeType":"301","messageId":"302","endLine":14,"endColumn":19},{"ruleId":"299","severity":1,"message":"313","line":21,"column":3,"nodeType":"301","messageId":"302","endLine":21,"endColumn":12},{"ruleId":"299","severity":1,"message":"314","line":23,"column":3,"nodeType":"301","messageId":"302","endLine":23,"endColumn":7},{"ruleId":"317","severity":1,"message":"318","line":106,"column":13,"nodeType":"319","endLine":106,"endColumn":73},{"ruleId":"299","severity":1,"message":"320","line":135,"column":7,"nodeType":"301","messageId":"302","endLine":135,"endColumn":11},{"ruleId":"317","severity":1,"message":"318","line":151,"column":19,"nodeType":"319","endLine":151,"endColumn":79},{"ruleId":"299","severity":1,"message":"362","line":16,"column":8,"nodeType":"301","messageId":"302","endLine":16,"endColumn":19},{"ruleId":"299","severity":1,"message":"313","line":24,"column":3,"nodeType":"301","messageId":"302","endLine":24,"endColumn":12},{"ruleId":"299","severity":1,"message":"363","line":40,"column":8,"nodeType":"301","messageId":"302","endLine":40,"endColumn":16},{"ruleId":"299","severity":1,"message":"315","line":41,"column":8,"nodeType":"301","messageId":"302","endLine":41,"endColumn":16},{"ruleId":"317","severity":1,"message":"318","line":143,"column":15,"nodeType":"319","endLine":143,"endColumn":75},{"ruleId":"299","severity":1,"message":"320","line":182,"column":7,"nodeType":"301","messageId":"302","endLine":182,"endColumn":11},{"ruleId":"317","severity":1,"message":"318","line":199,"column":19,"nodeType":"319","endLine":199,"endColumn":79},{"ruleId":"299","severity":1,"message":"362","line":16,"column":8,"nodeType":"301","messageId":"302","endLine":16,"endColumn":19},{"ruleId":"299","severity":1,"message":"313","line":24,"column":3,"nodeType":"301","messageId":"302","endLine":24,"endColumn":12},{"ruleId":"299","severity":1,"message":"314","line":26,"column":3,"nodeType":"301","messageId":"302","endLine":26,"endColumn":7},{"ruleId":"299","severity":1,"message":"315","line":39,"column":8,"nodeType":"301","messageId":"302","endLine":39,"endColumn":16},{"ruleId":"317","severity":1,"message":"318","line":121,"column":15,"nodeType":"319","endLine":121,"endColumn":75},{"ruleId":"299","severity":1,"message":"320","line":162,"column":7,"nodeType":"301","messageId":"302","endLine":162,"endColumn":11},{"ruleId":"317","severity":1,"message":"318","line":178,"column":19,"nodeType":"319","endLine":178,"endColumn":79},{"ruleId":"299","severity":1,"message":"362","line":17,"column":8,"nodeType":"301","messageId":"302","endLine":17,"endColumn":19},{"ruleId":"299","severity":1,"message":"313","line":19,"column":10,"nodeType":"301","messageId":"302","endLine":19,"endColumn":19},{"ruleId":"299","severity":1,"message":"315","line":28,"column":8,"nodeType":"301","messageId":"302","endLine":28,"endColumn":16},{"ruleId":"317","severity":1,"message":"318","line":149,"column":15,"nodeType":"319","endLine":149,"endColumn":75},{"ruleId":"308","severity":1,"message":"309","line":195,"column":36,"nodeType":"310","messageId":"311","endLine":195,"endColumn":38},{"ruleId":"317","severity":1,"message":"318","line":206,"column":19,"nodeType":"319","endLine":206,"endColumn":79},{"ruleId":"299","severity":1,"message":"356","line":4,"column":10,"nodeType":"301","messageId":"302","endLine":4,"endColumn":28},{"ruleId":"299","severity":1,"message":"364","line":6,"column":10,"nodeType":"301","messageId":"302","endLine":6,"endColumn":13},{"ruleId":"299","severity":1,"message":"365","line":12,"column":10,"nodeType":"301","messageId":"302","endLine":12,"endColumn":24},{"ruleId":"299","severity":1,"message":"366","line":13,"column":8,"nodeType":"301","messageId":"302","endLine":13,"endColumn":14},{"ruleId":"299","severity":1,"message":"367","line":22,"column":9,"nodeType":"301","messageId":"302","endLine":22,"endColumn":17},{"ruleId":"368","severity":1,"message":"369","line":71,"column":27,"nodeType":"319","endLine":71,"endColumn":74},{"ruleId":"368","severity":1,"message":"369","line":85,"column":27,"nodeType":"319","endLine":85,"endColumn":74},{"ruleId":"368","severity":1,"message":"369","line":99,"column":27,"nodeType":"319","endLine":99,"endColumn":75},{"ruleId":"368","severity":1,"message":"369","line":113,"column":27,"nodeType":"319","endLine":113,"endColumn":75},{"ruleId":"368","severity":1,"message":"369","line":127,"column":27,"nodeType":"319","endLine":127,"endColumn":75},{"ruleId":"368","severity":1,"message":"369","line":161,"column":27,"nodeType":"319","endLine":161,"endColumn":75},{"ruleId":"368","severity":1,"message":"369","line":181,"column":27,"nodeType":"319","endLine":181,"endColumn":75},{"ruleId":"299","severity":1,"message":"307","line":2,"column":8,"nodeType":"301","messageId":"302","endLine":2,"endColumn":25},{"ruleId":"299","severity":1,"message":"370","line":3,"column":10,"nodeType":"301","messageId":"302","endLine":3,"endColumn":14},{"ruleId":"299","severity":1,"message":"322","line":6,"column":20,"nodeType":"301","messageId":"302","endLine":6,"endColumn":24},{"ruleId":"299","severity":1,"message":"371","line":8,"column":10,"nodeType":"301","messageId":"302","endLine":8,"endColumn":15},{"ruleId":"299","severity":1,"message":"372","line":8,"column":17,"nodeType":"301","messageId":"302","endLine":8,"endColumn":25},{"ruleId":"299","severity":1,"message":"373","line":10,"column":10,"nodeType":"301","messageId":"302","endLine":10,"endColumn":18},{"ruleId":"308","severity":1,"message":"309","line":40,"column":28,"nodeType":"310","messageId":"311","endLine":40,"endColumn":30},{"ruleId":"299","severity":1,"message":"334","line":2,"column":18,"nodeType":"301","messageId":"302","endLine":2,"endColumn":23},{"ruleId":"299","severity":1,"message":"374","line":2,"column":25,"nodeType":"301","messageId":"302","endLine":2,"endColumn":34},{"ruleId":"299","severity":1,"message":"354","line":2,"column":27,"nodeType":"301","messageId":"302","endLine":2,"endColumn":43},{"ruleId":"299","severity":1,"message":"328","line":3,"column":10,"nodeType":"301","messageId":"302","endLine":3,"endColumn":16},{"ruleId":"299","severity":1,"message":"375","line":3,"column":18,"nodeType":"301","messageId":"302","endLine":3,"endColumn":32},{"ruleId":"299","severity":1,"message":"376","line":3,"column":34,"nodeType":"301","messageId":"302","endLine":3,"endColumn":41},{"ruleId":"299","severity":1,"message":"377","line":12,"column":21,"nodeType":"301","messageId":"302","endLine":12,"endColumn":25},{"ruleId":"378","severity":1,"message":"379","line":2,"column":46,"nodeType":"380","messageId":"381","endLine":2,"endColumn":47},{"ruleId":"378","severity":1,"message":"379","line":17,"column":46,"nodeType":"380","messageId":"381","endLine":17,"endColumn":47},{"ruleId":"378","severity":1,"message":"379","line":33,"column":46,"nodeType":"380","messageId":"381","endLine":33,"endColumn":47},{"ruleId":"378","severity":1,"message":"379","line":154,"column":51,"nodeType":"380","messageId":"381","endLine":154,"endColumn":52},{"ruleId":"378","severity":1,"message":"379","line":170,"column":51,"nodeType":"380","messageId":"381","endLine":170,"endColumn":52},{"ruleId":"378","severity":1,"message":"379","line":186,"column":49,"nodeType":"380","messageId":"381","endLine":186,"endColumn":50},{"ruleId":"299","severity":1,"message":"382","line":20,"column":11,"nodeType":"301","messageId":"302","endLine":20,"endColumn":14},{"ruleId":"299","severity":1,"message":"307","line":2,"column":8,"nodeType":"301","messageId":"302","endLine":2,"endColumn":25},{"ruleId":"299","severity":1,"message":"365","line":3,"column":16,"nodeType":"301","messageId":"302","endLine":3,"endColumn":30},{"ruleId":"299","severity":1,"message":"383","line":5,"column":10,"nodeType":"301","messageId":"302","endLine":5,"endColumn":22},{"ruleId":"299","severity":1,"message":"322","line":6,"column":20,"nodeType":"301","messageId":"302","endLine":6,"endColumn":24},{"ruleId":"299","severity":1,"message":"371","line":8,"column":10,"nodeType":"301","messageId":"302","endLine":8,"endColumn":15},{"ruleId":"299","severity":1,"message":"372","line":8,"column":17,"nodeType":"301","messageId":"302","endLine":8,"endColumn":25},{"ruleId":"299","severity":1,"message":"384","line":9,"column":10,"nodeType":"301","messageId":"302","endLine":9,"endColumn":15},{"ruleId":"308","severity":1,"message":"309","line":17,"column":25,"nodeType":"310","messageId":"311","endLine":17,"endColumn":27},{"ruleId":"299","severity":1,"message":"385","line":7,"column":10,"nodeType":"301","messageId":"302","endLine":7,"endColumn":19},"no-unused-vars","'moment' is defined but never used.","Identifier","unusedVar","no-native-reassign",["386"],"no-negated-in-lhs",["387"],"'SearchTwoToneIcon' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'getLikesOfPost' is defined but never used.","'Accordion' is defined but never used.","'Card' is defined but never used.","'Dropdown' is defined but never used.","'youtubeMeta' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'tags' is assigned a value but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'createTextPost' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'validateYouTubeUrl'. Either include it or remove the dependency array.","ArrayExpression",["388"],"'Button' is defined but never used.","'BASE_URL' is assigned a value but never used.","'notifications' is assigned a value but never used.","'selected' is assigned a value but never used.","'ToastContainer' is defined but never used.","'toast' is defined but never used.","'Modal' is defined but never used.","'Pert' is defined but never used.","'Task' is defined but never used.","'addEdge' is defined but never used.","'removeElements' is defined but never used.","'addTask' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","ReturnStatement","expectedReturnValue","'finaldiff' is assigned a value but never used.","no-self-assign","'task.description' is assigned to itself.","MemberExpression","selfAssignment","'ele' is assigned a value but never used.","'tasks' is assigned a value but never used.","'setCriticalPath' is defined but never used.",["386"],["387"],"'getNotifications' is defined but never used.","'getNotified' is defined but never used.","'clearNotifications' is defined but never used.","'setSegregatedNotifications' is defined but never used.","'_' is defined but never used.","'getProject' is defined but never used.","'getAllPosts' is defined but never used.","'youtubeUrl' is assigned a value but never used.","'CommentIcon' is defined but never used.","'EditPost' is defined but never used.","'Nav' is defined but never used.","'getCurrentUser' is defined but never used.","'socket' is defined but never used.","'dispatch' is assigned a value but never used.","jsx-a11y/role-supports-aria-props","The attribute aria-haspopup is not supported by the role listitem. This role is implicit on the element li.","'list' is defined but never used.","'query' is assigned a value but never used.","'setQuery' is assigned a value but never used.","'projects' is assigned a value but never used.","'ModalBody' is defined but never used.","'OverlayTrigger' is defined but never used.","'Tooltip' is defined but never used.","'type' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'url' is assigned a value but never used.","'listprojects' is defined but never used.","'users' is assigned a value but never used.","'TextField' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"389","fix":"390"},"Update the dependencies array to be: [props.text, validateYouTubeUrl]",{"range":"391","text":"392"},[1205,1217],"[props.text, validateYouTubeUrl]"]