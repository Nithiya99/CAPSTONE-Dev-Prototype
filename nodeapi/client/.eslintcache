[{"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\layout\\LayoutComponent.js":"1","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\FeedbackForm.js":"2","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\RatingComponentFeedbackForm.js":"3","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\App.js":"4","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Notifications.js":"5","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\apiUser.js":"6","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\SubmitProject.js":"7","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\LeaveProject.js":"8","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\RatingComponent.js":"9","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Tagify\\TagFinal.js":"10","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\SearchProjectBar.js":"11","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Tagify\\Assigner.js":"12","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\MyProjects.js":"13","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\ProjectDashboard.js":"14","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\RecommendedRolePeople.js":"15","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\store.js":"16","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\EditProject.js":"17","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\tasks.js":"18","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\apiNotifications.js":"19","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Social.js":"20","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\RoleEditView.js":"21","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\DragDropImages.js":"22","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\taskComponents\\TrelloTask.js":"23","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\User_Role.js":"24"},{"size":23477,"mtime":1622028590440,"results":"25","hashOfConfig":"26"},{"size":2241,"mtime":1622021641541,"results":"27","hashOfConfig":"26"},{"size":2185,"mtime":1622021980407,"results":"28","hashOfConfig":"26"},{"size":479,"mtime":1620823754762,"results":"29","hashOfConfig":"26"},{"size":13588,"mtime":1622018144601,"results":"30","hashOfConfig":"26"},{"size":7380,"mtime":1620823755400,"results":"31","hashOfConfig":"26"},{"size":4607,"mtime":1618892882908,"results":"32","hashOfConfig":"26"},{"size":2668,"mtime":1621913510177,"results":"33","hashOfConfig":"26"},{"size":1643,"mtime":1618321235394,"results":"34","hashOfConfig":"26"},{"size":1247,"mtime":1618198716000,"results":"35","hashOfConfig":"26"},{"size":4178,"mtime":1621773052142,"results":"36","hashOfConfig":"26"},{"size":1452,"mtime":1618198716000,"results":"37","hashOfConfig":"26"},{"size":37203,"mtime":1622030649983,"results":"38","hashOfConfig":"26"},{"size":25192,"mtime":1622028829348,"results":"39","hashOfConfig":"26"},{"size":835,"mtime":1622030693360,"results":"40","hashOfConfig":"26"},{"size":288,"mtime":1618198716000,"results":"41","hashOfConfig":"26"},{"size":5907,"mtime":1619336138172,"results":"42","hashOfConfig":"26"},{"size":533,"mtime":1619342435694,"results":"43","hashOfConfig":"26"},{"size":1038,"mtime":1622003199321,"results":"44","hashOfConfig":"26"},{"size":4033,"mtime":1621611019914,"results":"45","hashOfConfig":"26"},{"size":2630,"mtime":1619336085672,"results":"46","hashOfConfig":"26"},{"size":6944,"mtime":1621908530835,"results":"47","hashOfConfig":"26"},{"size":12116,"mtime":1622028508231,"results":"48","hashOfConfig":"26"},{"size":2969,"mtime":1622030425385,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"13vq143",{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\layout\\LayoutComponent.js",["101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\FeedbackForm.js",["133"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\RatingComponentFeedbackForm.js",["134"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\App.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Notifications.js",["135","136","137","138","139"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getProject } from \"../project/apiProject\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { getNotifications } from \"../apiNotifications\";\r\nimport ReqIcon from \"../images/request.png\";\r\nimport NewAddIcon from \"../images/working.png\";\r\nimport AcceptIcon from \"../images/accepted.png\";\r\nimport DeclineIcon from \"../images/remove.png\";\r\nimport LiveClock from \"react-live-clock\";\r\nimport dayjs from \"dayjs\";\r\nimport { Badge } from \"react-bootstrap\";\r\nimport * as _ from \"lodash\";\r\nimport {\r\n  getNotified,\r\n  clearNotifications,\r\n  setSegregatedNotifications,\r\n} from \"../store/notifications\";\r\nimport FeedbackForm from \"./../project/FeedbackForm\";\r\nconst BASE_URL = process.env.REACT_APP_API_URL;\r\nclass Notifications extends Component {\r\n  state = {\r\n    selected: \"home\",\r\n  };\r\n  componentDidMount() {\r\n    this.props.clearNotifications();\r\n    getNotifications()\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((val) => {\r\n        let notifications = val.notifications;\r\n        console.log(\"Notifications:\", notifications);\r\n        notifications.map((notif) => {\r\n          this.props.getNotified({\r\n            type: notif.notifType,\r\n            id: notif._id,\r\n            message: notif.message,\r\n            read: notif.read,\r\n            projectId: notif.projectId ? notif.projectId : \"none\",\r\n          });\r\n        });\r\n\r\n        let notificationGroupedObject = _.groupBy(notifications, \"notifType\");\r\n        console.log(\"Group Object:\", notificationGroupedObject);\r\n        this.setState({ notificationGroupedObject });\r\n        this.props.setSegregatedNotifications({\r\n          segregatedNotifications: notificationGroupedObject,\r\n        });\r\n        console.log(notifications);\r\n      });\r\n    // const { segregatedNotifications } = this.props;\r\n    // console.log(segregatedNotifications);\r\n  }\r\n  getTo(val) {\r\n    return getProject(val.projectId).then((data) => {\r\n      let obj = {\r\n        pathname: \"/myprojects/dashboard/\" + val.projectId,\r\n        state: { project: data.project },\r\n      };\r\n      // console.log(obj);\r\n      return obj;\r\n    });\r\n  }\r\n  render() {\r\n    let { notifications, segregatedNotifications } = this.props;\r\n    // if (this.props.notifications.length > 0)\r\n    // console.log(this.props.notifications);\r\n    // console.log(segregatedNotifications);\r\n    // if (notifications.length === 0) {\r\n    //   return <>No Notifsss</>;\r\n    // }\r\n    let { selected } = this.state;\r\n    console.log(segregatedNotifications);\r\n\r\n    return (\r\n      <>\r\n        <div\r\n          className=\"subheader py-2 py-lg-6  subheader-transparent \"\r\n          id=\"kt_subheader\"\r\n        >\r\n          <div className=\" container  d-flex align-items-center justify-content-between flex-wrap flex-sm-nowrap\">\r\n            <div className=\"d-flex align-items-center flex-wrap mr-2\">\r\n              <h5 className=\"text-dark font-weight-bold mt-2 mb-2 mr-5\">\r\n                Notifications\r\n              </h5>\r\n              <div className=\"subheader-separator subheader-separator-ver mt-2 mb-2 mr-4 bg-gray-200\"></div>\r\n            </div>\r\n            <div class=\"d-flex align-items-center flex-wrap\">\r\n              <Badge variant=\"primary\">\r\n                <div className=\"d-flex align-items-center flex-wrap mr-2\">\r\n                  <h6>{dayjs().format(\"DD MMMM, dddd\")}</h6>\r\n                  <div className=\"subheader-separator subheader-separator-ver mt-2 mb-2 mr-4 ml-4 bg-gray-200\"></div>\r\n                  <h6>\r\n                    <LiveClock format=\"hh:mm a\" ticking />\r\n                  </h6>\r\n                </div>\r\n              </Badge>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {Object.keys(segregatedNotifications).map((type) => (\r\n          <div className=\"container mt-5\">\r\n            {segregatedNotifications[type].map((val) => {\r\n              // console.log(newObj);\r\n              if (val.notifType === \"RequestForRole\") {\r\n                return (\r\n                  <>\r\n                    <div\r\n                      className=\"alert alert-custom alert-notice alert-light-dark\"\r\n                      role=\"alert\"\r\n                    >\r\n                      <div className=\"alert-icon\">\r\n                        <img\r\n                          src={ReqIcon}\r\n                          alt=\"Logo\"\r\n                          style={{ height: \"40px\" }}\r\n                        />\r\n                      </div>\r\n                      <div className=\"alert-text\">\r\n                        <Link\r\n                          className=\"text-dark-75 text-hover-primary mb-1 font-size-lg font-weight-bolder\"\r\n                          to={{\r\n                            pathname: \"/myprojects\",\r\n                          }}\r\n                          // {\r\n                          //   pathname: `/myprojects/dashboard/${project._id}`,\r\n                          //   state: { project: project },\r\n                          // }\r\n                        >\r\n                          {val.message}\r\n                        </Link>\r\n                      </div>\r\n                    </div>\r\n                    {/* <Link\r\n                      to={{\r\n                        pathname: \"/myprojects\",\r\n                      }}\r\n                      // {\r\n                      //   pathname: `/myprojects/dashboard/${project._id}`,\r\n                      //   state: { project: project },\r\n                      // }\r\n                    >\r\n                      <div\r\n                        className=\"card-text ml-3 mt-1 mb-2 p-1\"\r\n                        style={{ width: \"50rem\" }}\r\n                      >\r\n                        {val.message}\r\n                      </div>\r\n                    </Link> */}\r\n                  </>\r\n                );\r\n              }\r\n              if (val.notifType === \"RoleDeclined\") {\r\n                return (\r\n                  <>\r\n                    <div\r\n                      className=\"alert alert-custom alert-notice alert-light-danger\"\r\n                      role=\"alert\"\r\n                    >\r\n                      <div className=\"alert-icon\">\r\n                        <img\r\n                          src={DeclineIcon}\r\n                          alt=\"Icon\"\r\n                          style={{ height: \"40px\" }}\r\n                        />\r\n                      </div>\r\n                      <div className=\"alert-text\">\r\n                        <Link\r\n                          className=\"text-dark-75 text-hover-primary mb-1 font-size-lg font-weight-bolder\"\r\n                          to={{\r\n                            pathname: \"/joinproject\",\r\n                          }}\r\n                          // {\r\n                          //   pathname: `/myprojects/dashboard/${project._id}`,\r\n                          //   state: { project: project },\r\n                          // }\r\n                        >\r\n                          {val.message}\r\n                        </Link>\r\n                      </div>\r\n                    </div>\r\n                    {/* <Link\r\n                      to={{\r\n                        pathname: \"/joinproject\",\r\n                      }}\r\n                      // {\r\n                      //   pathname: `/myprojects/dashboard/${project._id}`,\r\n                      //   state: { project: project },\r\n                      // }\r\n                    > \r\n                      <div\r\n                        className=\"card-text ml-3 mt-1 mb-2 p-1\"\r\n                        style={{ width: \"50rem\" }}\r\n                      >\r\n                        {val.message}\r\n                      </div>\r\n                    </Link>*/}\r\n                  </>\r\n                );\r\n              }\r\n              if (val.notifType === \"RoleAccepted\") {\r\n                return (\r\n                  <>\r\n                    <div\r\n                      className=\"alert alert-custom alert-notice alert-light-success\"\r\n                      role=\"alert\"\r\n                    >\r\n                      <div className=\"alert-icon\">\r\n                        <img\r\n                          src={AcceptIcon}\r\n                          alt=\"Icon\"\r\n                          style={{ height: \"40px\" }}\r\n                        />\r\n                      </div>\r\n                      <div className=\"alert-text\">\r\n                        <Link\r\n                          className=\"text-dark-75 text-hover-primary mb-1 font-size-lg font-weight-bolder\"\r\n                          onClick={async () => {\r\n                            let obj = {};\r\n                            obj = await this.getTo(val);\r\n                            // console.log(obj);\r\n                            this.props.history.push(obj);\r\n                          }}\r\n                          // {\r\n                          //   pathname: `/myprojects/dashboard/${project._id}`,\r\n                          //   state: { project: project },\r\n                          // }\r\n                        >\r\n                          {val.message}\r\n                        </Link>\r\n                      </div>\r\n                    </div>\r\n                    {/* <Link\r\n                      onClick={async () => {\r\n                        let obj = {};\r\n                        obj = await this.getTo(val);\r\n                        // console.log(obj);\r\n                        this.props.history.push(obj);\r\n                      }}\r\n                      // {\r\n                      //   pathname: `/myprojects/dashboard/${project._id}`,\r\n                      //   state: { project: project },\r\n                      // }\r\n                    >\r\n                      <div\r\n                        className=\"card-text ml-3 mt-1 mb-2 p-1\"\r\n                        style={{ width: \"50rem\" }}\r\n                      >\r\n                        {val.message}\r\n                      </div>\r\n                    </Link> */}\r\n                  </>\r\n                );\r\n              }\r\n              if (val.notifType === \"NewMember\") {\r\n                return (\r\n                  <>\r\n                    <div\r\n                      className=\"alert alert-custom alert-notice alert-light-warning\"\r\n                      role=\"alert\"\r\n                    >\r\n                      <div className=\"alert-icon\">\r\n                        <img\r\n                          src={NewAddIcon}\r\n                          alt=\"Logo\"\r\n                          style={{ height: \"40px\" }}\r\n                        />\r\n                      </div>\r\n                      <div className=\"alert-text\">\r\n                        <Link\r\n                          className=\"text-dark-75 text-hover-primary mb-1 font-size-lg font-weight-bolder\"\r\n                          onClick={async () => {\r\n                            let obj = {};\r\n                            obj = await this.getTo(val);\r\n                            // console.log(obj);\r\n                            this.props.history.push(obj);\r\n                          }}\r\n                          // {\r\n                          //   pathname: `/myprojects/dashboard/${project._id}`,\r\n                          //   state: { project: project },\r\n                          // }\r\n                        >\r\n                          {val.message}\r\n                        </Link>\r\n                      </div>\r\n                    </div>\r\n                    {/* <Link\r\n                      onClick={async () => {\r\n                        let obj = {};\r\n                        obj = await this.getTo(val);\r\n                        // console.log(obj);\r\n                        this.props.history.push(obj);\r\n                      }}\r\n                      // {\r\n                      //   pathname: `/myprojects/dashboard/${project._id}`,\r\n                      //   state: { project: project },\r\n                      // }\r\n                    >\r\n                      <div\r\n                        className=\"card-text ml-3 mt-1 mb-2 p-1\"\r\n                        style={{ width: \"50rem\" }}\r\n                      >\r\n                        {val.message}\r\n                      </div>\r\n                    </Link> */}\r\n                  </>\r\n                );\r\n              }\r\n              if (val.notifType === \"FeedbackForm\") {\r\n                console.log(\"FeedbackForm:\", val);\r\n                return (\r\n                  <>\r\n                    <FeedbackForm\r\n                      type={val.notifType}\r\n                      id={val._id}\r\n                      message={val.message}\r\n                      projectId={val.projectId}\r\n                    />\r\n                  </>\r\n                );\r\n              }\r\n              return (\r\n                <div\r\n                  className=\"card-text ml-3 mt-1 mb-2 p-1\"\r\n                  style={{ width: \"50rem\" }}\r\n                >\r\n                  {val.message}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        ))}\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  notifications: state.notifications.notifications,\r\n  segregatedNotifications: state.notifications.segregatedNotifications,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getNotified: (params) => dispatch(getNotified(params)),\r\n  clearNotifications: () => dispatch(clearNotifications()),\r\n  setSegregatedNotifications: (params) =>\r\n    dispatch(setSegregatedNotifications(params)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Notifications);\r\n",["140","141"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\apiUser.js",["142","143","144","145","146","147"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\SubmitProject.js",["148","149","150"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\LeaveProject.js",["151"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\RatingComponent.js",["152","153"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Tagify\\TagFinal.js",["154","155"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\SearchProjectBar.js",["156","157","158","159","160","161","162"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Tagify\\Assigner.js",["163","164","165"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\MyProjects.js",["166","167","168","169","170","171","172"],"import React, { Component } from \"react\";\r\nimport { listmyprojects } from \"./apiProject\";\r\nimport {\r\n  OverlayTrigger,\r\n  Tooltip,\r\n  Accordion,\r\n  Button,\r\n  Card,\r\n  Tab,\r\n  Nav,\r\n} from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getCurrentUser, getUserById } from \"./../user/apiUser\";\r\nimport RoleReq from \"./RoleReq\";\r\nimport AssignedTo from \"./AssignedTo\";\r\nimport DeleteProject from \"./DeleteProject\";\r\nimport LeaveProject from \"./LeaveProject\";\r\nimport EditTwoToneIcon from \"@material-ui/icons/EditTwoTone\";\r\nimport DashboardTwoToneIcon from \"@material-ui/icons/DashboardTwoTone\";\r\nimport SubmitProject from \"./SubmitProject\";\r\nimport UserRecommendation from \"./UserRecommendation\";\r\nimport socket from \"./../utils/Socket\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { clearAll } from \"../store/cpm\";\r\nimport { connect } from \"react-redux\";\r\nimport LiveClock from \"react-live-clock\";\r\nimport dayjs from \"dayjs\";\r\nimport { Badge } from \"react-bootstrap\";\r\nimport QueryBuilderTwoToneIcon from \"@material-ui/icons/QueryBuilderTwoTone\";\r\nimport ErrorTwoToneIcon from \"@material-ui/icons/ErrorTwoTone\";\r\nimport CheckCircleTwoToneIcon from \"@material-ui/icons/CheckCircleTwoTone\";\r\nimport RecommendedRolePeople from \"./RecommendedRolePeople\";\r\nimport User_Role from \"./User_Role\";\r\nimport moment from \"moment\";\r\nclass MyProjects extends Component {\r\n  state = {\r\n    myProjects: [],\r\n    currentProject: {},\r\n    user: {},\r\n  };\r\n  componentDidMount() {\r\n    listmyprojects().then((data) => {\r\n      this.setState({ myProjects: data });\r\n      let projectLeaderNames = {};\r\n      let projectCreatedDates = {};\r\n      let projectEstimatedDates = {};\r\n      let overdueStatus = {};\r\n      data.userProjects.map((project, index) => {\r\n        //Leader name\r\n        // let number = index;\r\n        getUserById(project.leader).then((data) => {\r\n          projectLeaderNames[project._id] = data.user.name;\r\n          // console.log(projectLeaderNames);\r\n          this.setState({ projectLeaderNames });\r\n        });\r\n        // var date = moment(new Date(project.created.substr(0, 16)));\r\n        // console.log(date.format(\"DD-MMM-YYYY\"));\r\n\r\n        let date = moment(new Date(project.created.substr(0, 16)));\r\n        var new_date = moment(date, \"DD-MM-YYYY\").add(\r\n          project.estimatedTime,\r\n          \"days\"\r\n        );\r\n        projectEstimatedDates[project._id] = new_date.format(\"DD-MMM-YYYY\");\r\n        this.setState({ projectEstimatedDates });\r\n        projectCreatedDates[project._id] = date.format(\"DD-MMM-YYYY\");\r\n        this.setState({ projectCreatedDates });\r\n        // console.log(project.leadername);\r\n        console.log(\"today:\", date.format(\"DD-MMM-YYYY\"));\r\n        console.log(\"estimatedDate:\", new_date.format(\"DD-MMM-YYYY\"));\r\n        console.log(\r\n          new_date.format(\"DD-MMM-YYYY\") +\r\n            \" is After \" +\r\n            date.format(\"DD-MMM-YYYY\") +\r\n            \":\" +\r\n            new_date.isAfter(date)\r\n        );\r\n        overdueStatus[project._id] = {\r\n          today: date.format(\"DD-MMM-YYYY\"),\r\n          estimatedDate: new_date.format(\"DD-MMM-YYYY\"),\r\n          overdue: !new_date.isSameOrAfter(date),\r\n        };\r\n        console.log(overdueStatus);\r\n        this.setState({ overdueStatus });\r\n      });\r\n      // toast.dark(\"Loaded\");\r\n    });\r\n  }\r\n  renderProject(project) {\r\n    // return <h5>{project.title}</h5>;\r\n    console.log(project.title);\r\n  }\r\n  render() {\r\n    if (\r\n      this.state.myProjects === undefined ||\r\n      this.state.myProjects.length === 0\r\n    )\r\n      return <h1>No Projects</h1>;\r\n    const {\r\n      myProjects,\r\n      projectLeaderNames,\r\n      projectCreatedDates,\r\n      projectEstimatedDates,\r\n      overdueStatus,\r\n    } = this.state;\r\n    // console.log(projectLeaderNames);\r\n    if (\r\n      projectLeaderNames === undefined ||\r\n      projectCreatedDates === undefined ||\r\n      projectEstimatedDates === undefined\r\n    )\r\n      return null;\r\n    if (\r\n      Object.keys(projectLeaderNames).length !==\r\n        myProjects.userProjects.length ||\r\n      Object.keys(projectCreatedDates).length !==\r\n        myProjects.userProjects.length ||\r\n      Object.keys(projectEstimatedDates).length !==\r\n        myProjects.userProjects.length\r\n    )\r\n      return null;\r\n    console.log(projectCreatedDates);\r\n    let onGoingProjects = myProjects.userProjects.filter(\r\n      (x) => x.status.includes(\"In Progress\") && !overdueStatus[x._id].overdue\r\n    );\r\n    let overdueProjects = myProjects.userProjects.filter(\r\n      (x) => x.status.includes(\"In Progress\") && overdueStatus[x._id].overdue\r\n    );\r\n    let CompletedProjects = myProjects.userProjects.filter((x) =>\r\n      x.status.includes(\"Completed\")\r\n    );\r\n    console.log(\"overdueProjects:\", overdueProjects);\r\n    console.log(\"ongoingprojects:\", onGoingProjects);\r\n    console.log(\"completedprojects:\", CompletedProjects);\r\n    socket.emit(\"getOnlineUsers\");\r\n    socket.on(\"onlineUsers\", (data) => console.log(data));\r\n    // getUserById(project.leader).then((data) => console.log(data));\r\n\r\n    return (\r\n      <>\r\n        <div\r\n          className=\"subheader py-2 py-lg-6  subheader-transparent \"\r\n          id=\"kt_subheader\"\r\n        >\r\n          <div className=\" container  d-flex align-items-center justify-content-between flex-wrap flex-sm-nowrap\">\r\n            <div className=\"d-flex align-items-center flex-wrap mr-2\">\r\n              <h5 className=\"text-dark font-weight-bold mt-2 mb-2 mr-5\">\r\n                My Projects\r\n              </h5>\r\n              <div className=\"subheader-separator subheader-separator-ver mt-2 mb-2 mr-4 bg-gray-200\"></div>\r\n            </div>\r\n            <div class=\"d-flex align-items-center flex-wrap\">\r\n              <Badge variant=\"primary\">\r\n                <div className=\"d-flex align-items-center flex-wrap mr-2\">\r\n                  <h6>{dayjs().format(\"DD MMMM, dddd\")}</h6>\r\n                  <div className=\"subheader-separator subheader-separator-ver mt-2 mb-2 mr-4 ml-4 bg-gray-200\"></div>\r\n                  <h6>\r\n                    <LiveClock format=\"hh:mm a\" ticking />\r\n                  </h6>\r\n                </div>\r\n              </Badge>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"container\">\r\n          <div className=\"card\">\r\n            <Tab.Container id=\"projectStats\" defaultActiveKey=\"ongoingProj\">\r\n              <div className=\"card-header\">\r\n                <div className=\"card-title\">\r\n                  <Nav variant=\"pills\">\r\n                    <Nav.Item>\r\n                      <Nav.Link eventKey=\"ongoingProj\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"mr-3\">\r\n                            <QueryBuilderTwoToneIcon />\r\n                          </div>\r\n                          <div>Ongoing Projects</div>\r\n                        </div>\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                      <Nav.Link eventKey=\"overdueProj\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"mr-3\">\r\n                            <ErrorTwoToneIcon />\r\n                          </div>\r\n                          <div>Overdue Projects</div>\r\n                        </div>\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                      <Nav.Link eventKey=\"completedProj\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"mr-3\">\r\n                            <CheckCircleTwoToneIcon />\r\n                          </div>\r\n                          <div>Completed Projects</div>\r\n                        </div>\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                  </Nav>\r\n                </div>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <Tab.Content>\r\n                  <Tab.Pane eventKey=\"ongoingProj\">\r\n                    <div className=\"row row-cols-1 row-cols-md-2\">\r\n                      {onGoingProjects.map((project, index) => (\r\n                        <div className=\"col mb-4\">\r\n                          <div className=\"card card-custom gutter-b card-stretch\">\r\n                            {/* {console.log(project.completion_percentage)} */}\r\n                            <div className=\"card-body\">\r\n                              <div className=\"d-flex align-items-center\">\r\n                                <div className=\"d-flex-flex-column mr-auto\">\r\n                                  <p className=\"card-title font-weight-bolder font-size-h5 text-dark mb-1\">\r\n                                    {project.title}\r\n                                  </p>\r\n                                  <span className=\"text-muted font-weight-bold\">\r\n                                    {projectLeaderNames[project._id]}\r\n                                  </span>\r\n                                </div>\r\n                                <div className=\"card-toolbar mb-auto\">\r\n                                  <div className=\"d-flex align-items-center justify-content-between\">\r\n                                    <OverlayTrigger\r\n                                      key=\"top\"\r\n                                      placement=\"top\"\r\n                                      overlay={\r\n                                        <Tooltip id=\"top2\">\r\n                                          Project Dashboard\r\n                                        </Tooltip>\r\n                                      }\r\n                                    >\r\n                                      <Link\r\n                                        className=\"btn btn-info mr-2\"\r\n                                        to={{\r\n                                          pathname: `/myprojects/dashboard/${project._id}`,\r\n                                          state: { project: project },\r\n                                        }}\r\n                                      >\r\n                                        <DashboardTwoToneIcon />\r\n                                      </Link>\r\n                                    </OverlayTrigger>\r\n                                    {getCurrentUser()._id === project.leader ? (\r\n                                      <div className=\"d-flex align-items-center justify-content-between\">\r\n                                        <OverlayTrigger\r\n                                          key=\"top\"\r\n                                          placement=\"top\"\r\n                                          overlay={\r\n                                            <Tooltip id=\"tooltip-top\">\r\n                                              Edit Project\r\n                                            </Tooltip>\r\n                                          }\r\n                                        >\r\n                                          <Link\r\n                                            className=\"btn btn-warning mr-2\"\r\n                                            to={{\r\n                                              pathname: `/myprojects/edit/${project._id}`,\r\n                                              state: { project: project },\r\n                                            }}\r\n                                          >\r\n                                            <EditTwoToneIcon />\r\n                                          </Link>\r\n                                        </OverlayTrigger>\r\n\r\n                                        <DeleteProject\r\n                                          projectId={project._id}\r\n                                        />\r\n                                        {project.completion_percentage ===\r\n                                        100 ? (\r\n                                          <SubmitProject\r\n                                            projectId={project._id}\r\n                                            projectTeam={project.team}\r\n                                            projectLeader={project.leader}\r\n                                          />\r\n                                        ) : (\r\n                                          <div> </div>\r\n                                        )}\r\n                                      </div>\r\n                                    ) : (\r\n                                      <div>\r\n                                        <LeaveProject project={project} />\r\n                                      </div>\r\n                                    )}\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"d-flex flex-wrap mt-14\">\r\n                                <div className=\"mr-12 d-flex flex-column mb-7\">\r\n                                  <span className=\"d-block font-weight-bold mb-4\">\r\n                                    Start Date\r\n                                  </span>\r\n                                  <span className=\"btn btn-light-primary btn-sm font-weight-bold btn-upper btn-text\">\r\n                                    {projectCreatedDates[project._id]}\r\n                                  </span>\r\n                                </div>\r\n                                <div className=\"mr-12 d-flex flex-column mb-7\">\r\n                                  <span className=\"d-block font-weight-bold mb-4\">\r\n                                    Due Date\r\n                                  </span>\r\n                                  <span className=\"btn btn-light-primary btn-sm font-weight-bold btn-upper btn-text\">\r\n                                    {projectEstimatedDates[project._id]}\r\n                                  </span>\r\n                                </div>\r\n                                <div className=\"flex-row-fluid mb-7\">\r\n                                  <span className=\"d-block font-weight-bold mb-4\">\r\n                                    Progress\r\n                                  </span>\r\n                                  <div className=\"d-flex align-items-center pt-2\">\r\n                                    <div className=\"progress progress-xs mt-2 mb-2 w-100\">\r\n                                      <div\r\n                                        className=\"progress-bar bg-warning\"\r\n                                        role=\"progressbar\"\r\n                                        style={{\r\n                                          width: `${project.completion_percentage}%`,\r\n                                        }}\r\n                                        aria-valuenow=\"50\"\r\n                                        aria-valuemin=\"0\"\r\n                                        aria-valuemax=\"100\"\r\n                                      ></div>\r\n                                    </div>\r\n                                    <span className=\"ml-3 font-weight-bolder\">\r\n                                      {project.completion_percentage}%\r\n                                    </span>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div className=\"d-flex align-items-center justify-content-between mb-2\">\r\n                                <span className=\"font-weight-bold mr-2\">\r\n                                  Description:{\" \"}\r\n                                </span>\r\n                                <span>{project.description}</span>\r\n                              </div>\r\n                              {project.skills.map((skill) => (\r\n                                <span class=\"btn btn-light-info btn-sm font-weight-bold btn-upper btn-text m-1\">\r\n                                  {skill}\r\n                                </span>\r\n                              ))}\r\n                              <table className=\"table table-light\">\r\n                                <thead>\r\n                                  {/* <User_Role\r\n                                    role={role}\r\n                                    leader={project.leader}\r\n                                  /> */}\r\n                                  <tr>\r\n                                    <th key={\"rolename\"}>Role Name</th>\r\n                                    <th key={\"skills\"}>Skills Required</th>\r\n                                    <th key={\"assigned\"}>Assigned To</th>\r\n                                    <th key={\"invite\"}>Send Invite</th>\r\n                                  </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                  {project.roles.map((role) => (\r\n                                    <>\r\n                                      <tr key={role._id.toString()}>\r\n                                        <td\r\n                                          key={\r\n                                            role._id.toString() +\r\n                                            role.roleName.toString()\r\n                                          }\r\n                                        >\r\n                                          {role.roleName}\r\n                                        </td>\r\n                                        <td\r\n                                          key={\r\n                                            role._id.toString() +\r\n                                            role.roleSkills.toString()\r\n                                          }\r\n                                        >\r\n                                          {role.roleSkills.join(\", \")}\r\n                                        </td>\r\n                                        <td>\r\n                                          {project.leader ===\r\n                                            getCurrentUser()._id &&\r\n                                          role.assignedTo === undefined ? (\r\n                                            <div>\r\n                                              <RoleReq\r\n                                                requestBy={role.requestBy}\r\n                                                projectId={project._id}\r\n                                                roleId={role._id}\r\n                                              />\r\n                                            </div>\r\n                                          ) : (\r\n                                            <div>\r\n                                              <AssignedTo\r\n                                                id={role.assignedTo}\r\n                                              />\r\n                                            </div>\r\n                                          )}\r\n                                        </td>\r\n                                        <td>\r\n                                          <button className=\"btn btn-info\">\r\n                                            <RecommendedRolePeople\r\n                                              project={project}\r\n                                              role={role}\r\n                                            />\r\n                                          </button>\r\n                                        </td>\r\n                                      </tr>\r\n                                    </>\r\n                                  ))}\r\n                                </tbody>\r\n                              </table>\r\n                              {getCurrentUser()._id === project.leader ? (\r\n                                <UserRecommendation project={project} />\r\n                              ) : (\r\n                                <div></div>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </Tab.Pane>\r\n                  <Tab.Pane eventKey=\"overdueProj\">\r\n                    <div className=\"row row-cols-1 row-cols-md-2\">\r\n                      {overdueProjects.map((project, index) => (\r\n                        <div className=\"col mb-4\">\r\n                          <div className=\"card card-custom gutter-b card-stretch\">\r\n                            {/* {console.log(project.completion_percentage)} */}\r\n                            <div className=\"card-body\">\r\n                              <div className=\"d-flex align-items-center\">\r\n                                <div className=\"d-flex-flex-column mr-auto\">\r\n                                  <p className=\"card-title font-weight-bolder font-size-h5 text-dark mb-1\">\r\n                                    {project.title}\r\n                                  </p>\r\n                                  <span className=\"text-muted font-weight-bold\">\r\n                                    {projectLeaderNames[project._id]}\r\n                                  </span>\r\n                                </div>\r\n                                <div className=\"card-toolbar mb-auto\">\r\n                                  <div className=\"d-flex align-items-center justify-content-between\">\r\n                                    <OverlayTrigger\r\n                                      key=\"top\"\r\n                                      placement=\"top\"\r\n                                      overlay={\r\n                                        <Tooltip id=\"top2\">\r\n                                          Project Dashboard\r\n                                        </Tooltip>\r\n                                      }\r\n                                    >\r\n                                      <Link\r\n                                        className=\"btn btn-info mr-2\"\r\n                                        to={{\r\n                                          pathname: `/myprojects/dashboard/${project._id}`,\r\n                                          state: { project: project },\r\n                                        }}\r\n                                      >\r\n                                        <DashboardTwoToneIcon />\r\n                                      </Link>\r\n                                    </OverlayTrigger>\r\n                                    {getCurrentUser()._id === project.leader ? (\r\n                                      <div className=\"d-flex align-items-center justify-content-between\">\r\n                                        <OverlayTrigger\r\n                                          key=\"top\"\r\n                                          placement=\"top\"\r\n                                          overlay={\r\n                                            <Tooltip id=\"tooltip-top\">\r\n                                              Edit Project\r\n                                            </Tooltip>\r\n                                          }\r\n                                        >\r\n                                          <Link\r\n                                            className=\"btn btn-warning mr-2\"\r\n                                            to={{\r\n                                              pathname: `/myprojects/edit/${project._id}`,\r\n                                              state: { project: project },\r\n                                            }}\r\n                                          >\r\n                                            <EditTwoToneIcon />\r\n                                          </Link>\r\n                                        </OverlayTrigger>\r\n\r\n                                        <DeleteProject\r\n                                          projectId={project._id}\r\n                                        />\r\n                                        {project.completion_percentage ===\r\n                                        100 ? (\r\n                                          <SubmitProject\r\n                                            projectId={project._id}\r\n                                            projectTeam={project.team}\r\n                                            projectLeader={project.leader}\r\n                                          />\r\n                                        ) : (\r\n                                          <div> </div>\r\n                                        )}\r\n                                      </div>\r\n                                    ) : (\r\n                                      <div>\r\n                                        <LeaveProject project={project} />\r\n                                      </div>\r\n                                    )}\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"d-flex flex-wrap mt-14\">\r\n                                <div className=\"mr-12 d-flex flex-column mb-7\">\r\n                                  <span className=\"d-block font-weight-bold mb-4\">\r\n                                    Start Date\r\n                                  </span>\r\n                                  <span className=\"btn btn-light-primary btn-sm font-weight-bold btn-upper btn-text\">\r\n                                    {projectCreatedDates[project._id]}\r\n                                  </span>\r\n                                </div>\r\n                                <div className=\"mr-12 d-flex flex-column mb-7\">\r\n                                  <span className=\"d-block font-weight-bold mb-4\">\r\n                                    Due Date\r\n                                  </span>\r\n                                  <span className=\"btn btn-light-primary btn-sm font-weight-bold btn-upper btn-text\">\r\n                                    {projectEstimatedDates[project._id]}\r\n                                  </span>\r\n                                </div>\r\n                                <div className=\"flex-row-fluid mb-7\">\r\n                                  <span className=\"d-block font-weight-bold mb-4\">\r\n                                    Progress\r\n                                  </span>\r\n                                  <div className=\"d-flex align-items-center pt-2\">\r\n                                    <div className=\"progress progress-xs mt-2 mb-2 w-100\">\r\n                                      <div\r\n                                        className=\"progress-bar bg-warning\"\r\n                                        role=\"progressbar\"\r\n                                        style={{\r\n                                          width: `${project.completion_percentage}%`,\r\n                                        }}\r\n                                        aria-valuenow=\"50\"\r\n                                        aria-valuemin=\"0\"\r\n                                        aria-valuemax=\"100\"\r\n                                      ></div>\r\n                                    </div>\r\n                                    <span className=\"ml-3 font-weight-bolder\">\r\n                                      {project.completion_percentage}%\r\n                                    </span>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div className=\"d-flex align-items-center justify-content-between mb-2\">\r\n                                <span className=\"font-weight-bold mr-2\">\r\n                                  Description:{\" \"}\r\n                                </span>\r\n                                <span>{project.description}</span>\r\n                              </div>\r\n                              <div className=\"d-flex align-items-center justify-content-between mb-2\">\r\n                                <span className=\"font-weight-bold mr-2\">\r\n                                  Skills:{\" \"}\r\n                                </span>\r\n                                <span>{project.skills.join(\", \")}</span>\r\n                              </div>\r\n                              <table className=\"table table-light\">\r\n                                <thead>\r\n                                  <tr>\r\n                                    <th key={\"rolename\"}>Role Name</th>\r\n                                    <th key={\"skills\"}>Skills Required</th>\r\n\r\n                                    <th key={\"assigned\"}>Assigned To</th>\r\n                                  </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                  {project.roles.map((role) => (\r\n                                    <tr key={role._id.toString()}>\r\n                                      <td\r\n                                        key={\r\n                                          role._id.toString() +\r\n                                          role.roleName.toString()\r\n                                        }\r\n                                      >\r\n                                        {role.roleName}\r\n                                      </td>\r\n                                      <td\r\n                                        key={\r\n                                          role._id.toString() +\r\n                                          role.roleSkills.toString()\r\n                                        }\r\n                                      >\r\n                                        {role.roleSkills.join(\", \")}\r\n                                      </td>\r\n                                      <td>\r\n                                        {project.leader ===\r\n                                          getCurrentUser()._id &&\r\n                                        role.assignedTo === undefined ? (\r\n                                          <div>\r\n                                            <RoleReq\r\n                                              requestBy={role.requestBy}\r\n                                              projectId={project._id}\r\n                                              roleId={role._id}\r\n                                            />\r\n                                          </div>\r\n                                        ) : (\r\n                                          <div>\r\n                                            <AssignedTo id={role.assignedTo} />\r\n                                          </div>\r\n                                        )}\r\n                                      </td>\r\n                                      <td></td>\r\n                                    </tr>\r\n                                  ))}\r\n                                </tbody>\r\n                              </table>\r\n                              {getCurrentUser()._id === project.leader ? (\r\n                                <UserRecommendation project={project} />\r\n                              ) : (\r\n                                <div></div>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </Tab.Pane>\r\n                  <Tab.Pane eventKey=\"completedProj\">\r\n                    <div className=\"row row-cols-1 row-cols-md-2\">\r\n                      {CompletedProjects.map((project) => (\r\n                        <div className=\"col mb-4\">\r\n                          <div className=\"card card-custom gutter-b card-stretch\">\r\n                            <div className=\"card-body\">\r\n                              <div className=\"d-flex align-items-center\">\r\n                                <div className=\"d-flex-flex-column mr-auto\">\r\n                                  <p className=\"card-title font-weight-bolder font-size-h5 text-dark mb-1\">\r\n                                    {project.title}\r\n                                  </p>\r\n                                  <span className=\"text-muted font-weight-bold\">\r\n                                    {projectLeaderNames[project._id]}\r\n                                  </span>\r\n                                </div>\r\n                                <div className=\"card-toolbar mb-auto\">\r\n                                  <div className=\"d-flex align-items-center justify-content-between\">\r\n                                    <OverlayTrigger\r\n                                      key=\"top\"\r\n                                      placement=\"top\"\r\n                                      overlay={\r\n                                        <Tooltip id=\"top2\">\r\n                                          Project Dashboard\r\n                                        </Tooltip>\r\n                                      }\r\n                                    >\r\n                                      <Link\r\n                                        className=\"btn btn-info mr-2\"\r\n                                        to={{\r\n                                          pathname: `/myprojects/dashboard/${project._id}`,\r\n                                          state: { project: project },\r\n                                        }}\r\n                                      >\r\n                                        <DashboardTwoToneIcon />\r\n                                      </Link>\r\n                                    </OverlayTrigger>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"d-flex flex-wrap mt-14\">\r\n                                <div className=\"mr-12 d-flex flex-column mb-7\">\r\n                                  <span className=\"d-block font-weight-bold mb-4\">\r\n                                    Start Date\r\n                                  </span>\r\n                                  <span className=\"btn btn-light-primary btn-sm font-weight-bold btn-upper btn-text\">\r\n                                    {projectCreatedDates[project._id]}\r\n                                  </span>\r\n                                </div>\r\n                                <div className=\"mr-12 d-flex flex-column mb-7\">\r\n                                  <span className=\"d-block font-weight-bold mb-4\">\r\n                                    Due Date\r\n                                  </span>\r\n                                  <span className=\"btn btn-light-primary btn-sm font-weight-bold btn-upper btn-text\">\r\n                                    [Load]\r\n                                  </span>\r\n                                </div>\r\n                                <div className=\"flex-row-fluid mb-7\">\r\n                                  <span className=\"d-block font-weight-bold mb-4\">\r\n                                    Progress\r\n                                  </span>\r\n                                  <div className=\"d-flex align-items-center pt-2\">\r\n                                    <div className=\"progress progress-xs mt-2 mb-2 w-100\">\r\n                                      <div\r\n                                        className=\"progress-bar bg-warning\"\r\n                                        role=\"progressbar\"\r\n                                        style={{\r\n                                          width: `${project.completion_percentage}%`,\r\n                                        }}\r\n                                        aria-valuenow=\"50\"\r\n                                        aria-valuemin=\"0\"\r\n                                        aria-valuemax=\"100\"\r\n                                      ></div>\r\n                                    </div>\r\n                                    <span className=\"ml-3 font-weight-bolder\">\r\n                                      {project.completion_percentage}%\r\n                                    </span>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div className=\"d-flex align-items-center justify-content-between mb-2\">\r\n                                <span className=\"font-weight-bold mr-2\">\r\n                                  Description:{\" \"}\r\n                                </span>\r\n                                <span>{project.description}</span>\r\n                              </div>\r\n                              <div className=\"d-flex align-items-center justify-content-between mb-2\">\r\n                                <span className=\"font-weight-bold mr-2\">\r\n                                  Skills:{\" \"}\r\n                                </span>\r\n                                <span>{project.skills.join(\", \")}</span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </Tab.Pane>\r\n                </Tab.Content>\r\n              </div>\r\n            </Tab.Container>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  clearAll: (params) => dispatch(clearAll(params)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(MyProjects);\r\n","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\ProjectDashboard.js",["173","174","175","176"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\RecommendedRolePeople.js",["177"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\store.js",["178","179"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\EditProject.js",["180"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\tasks.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\apiNotifications.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Social.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\RoleEditView.js",["181","182"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\DragDropImages.js",["183"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\taskComponents\\TrelloTask.js",["184"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\User_Role.js",["185"],{"ruleId":"186","severity":1,"message":"187","line":3,"column":10,"nodeType":"188","messageId":"189","endLine":3,"endColumn":15},{"ruleId":"186","severity":1,"message":"190","line":5,"column":8,"nodeType":"188","messageId":"189","endLine":5,"endColumn":12},{"ruleId":"186","severity":1,"message":"191","line":6,"column":8,"nodeType":"188","messageId":"189","endLine":6,"endColumn":12},{"ruleId":"186","severity":1,"message":"192","line":8,"column":3,"nodeType":"188","messageId":"189","endLine":8,"endColumn":10},{"ruleId":"186","severity":1,"message":"193","line":12,"column":3,"nodeType":"188","messageId":"189","endLine":12,"endColumn":17},{"ruleId":"186","severity":1,"message":"194","line":15,"column":3,"nodeType":"188","messageId":"189","endLine":15,"endColumn":10},{"ruleId":"186","severity":1,"message":"195","line":25,"column":10,"nodeType":"188","messageId":"189","endLine":25,"endColumn":16},{"ruleId":"196","severity":1,"message":"197","line":72,"column":22,"nodeType":"198","messageId":"199","endLine":72,"endColumn":24},{"ruleId":"196","severity":1,"message":"200","line":79,"column":11,"nodeType":"201","messageId":"202","endLine":79,"endColumn":18},{"ruleId":"196","severity":1,"message":"200","line":126,"column":37,"nodeType":"198","messageId":"203","endLine":126,"endColumn":39},{"ruleId":"196","severity":1,"message":"200","line":180,"column":45,"nodeType":"198","messageId":"203","endLine":180,"endColumn":47},{"ruleId":"196","severity":1,"message":"200","line":191,"column":22,"nodeType":"198","messageId":"203","endLine":191,"endColumn":24},{"ruleId":"196","severity":1,"message":"197","line":209,"column":25,"nodeType":"198","messageId":"199","endLine":209,"endColumn":27},{"ruleId":"196","severity":1,"message":"200","line":214,"column":9,"nodeType":"201","messageId":"202","endLine":214,"endColumn":16},{"ruleId":"196","severity":1,"message":"200","line":215,"column":47,"nodeType":"198","messageId":"203","endLine":215,"endColumn":49},{"ruleId":"196","severity":1,"message":"197","line":250,"column":48,"nodeType":"198","messageId":"199","endLine":250,"endColumn":50},{"ruleId":"186","severity":1,"message":"204","line":282,"column":15,"nodeType":"188","messageId":"189","endLine":282,"endColumn":24},{"ruleId":"196","severity":1,"message":"200","line":365,"column":24,"nodeType":"198","messageId":"203","endLine":365,"endColumn":26},{"ruleId":"196","severity":1,"message":"200","line":368,"column":27,"nodeType":"198","messageId":"203","endLine":368,"endColumn":29},{"ruleId":"205","severity":1,"message":"206","line":370,"column":31,"nodeType":"207","messageId":"208","endLine":370,"endColumn":47},{"ruleId":"186","severity":1,"message":"209","line":395,"column":15,"nodeType":"188","messageId":"189","endLine":395,"endColumn":18},{"ruleId":"186","severity":1,"message":"209","line":416,"column":15,"nodeType":"188","messageId":"189","endLine":416,"endColumn":18},{"ruleId":"196","severity":1,"message":"200","line":444,"column":31,"nodeType":"198","messageId":"203","endLine":444,"endColumn":33},{"ruleId":"196","severity":1,"message":"200","line":491,"column":24,"nodeType":"198","messageId":"203","endLine":491,"endColumn":26},{"ruleId":"196","severity":1,"message":"200","line":495,"column":27,"nodeType":"198","messageId":"203","endLine":495,"endColumn":29},{"ruleId":"205","severity":1,"message":"206","line":497,"column":31,"nodeType":"207","messageId":"208","endLine":497,"endColumn":47},{"ruleId":"186","severity":1,"message":"209","line":522,"column":15,"nodeType":"188","messageId":"189","endLine":522,"endColumn":18},{"ruleId":"186","severity":1,"message":"209","line":543,"column":15,"nodeType":"188","messageId":"189","endLine":543,"endColumn":18},{"ruleId":"196","severity":1,"message":"200","line":570,"column":35,"nodeType":"198","messageId":"203","endLine":570,"endColumn":37},{"ruleId":"186","severity":1,"message":"210","line":610,"column":33,"nodeType":"188","messageId":"189","endLine":610,"endColumn":38},{"ruleId":"196","severity":1,"message":"200","line":614,"column":22,"nodeType":"198","messageId":"203","endLine":614,"endColumn":24},{"ruleId":"196","severity":1,"message":"200","line":617,"column":34,"nodeType":"198","messageId":"203","endLine":617,"endColumn":36},{"ruleId":"211","severity":1,"message":"212","line":33,"column":6,"nodeType":"213","endLine":33,"endColumn":8,"suggestions":"214"},{"ruleId":"196","severity":1,"message":"200","line":17,"column":23,"nodeType":"198","messageId":"203","endLine":17,"endColumn":25},{"ruleId":"186","severity":1,"message":"195","line":5,"column":10,"nodeType":"188","messageId":"189","endLine":5,"endColumn":16},{"ruleId":"186","severity":1,"message":"215","line":21,"column":7,"nodeType":"188","messageId":"189","endLine":21,"endColumn":15},{"ruleId":"196","severity":1,"message":"200","line":35,"column":35,"nodeType":"198","messageId":"203","endLine":35,"endColumn":37},{"ruleId":"186","severity":1,"message":"216","line":67,"column":11,"nodeType":"188","messageId":"189","endLine":67,"endColumn":24},{"ruleId":"186","severity":1,"message":"217","line":74,"column":11,"nodeType":"188","messageId":"189","endLine":74,"endColumn":19},{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","severity":1,"message":"223","line":2,"column":46,"nodeType":"224","messageId":"225","endLine":2,"endColumn":47},{"ruleId":"222","severity":1,"message":"223","line":17,"column":46,"nodeType":"224","messageId":"225","endLine":17,"endColumn":47},{"ruleId":"222","severity":1,"message":"223","line":33,"column":46,"nodeType":"224","messageId":"225","endLine":33,"endColumn":47},{"ruleId":"222","severity":1,"message":"223","line":154,"column":51,"nodeType":"224","messageId":"225","endLine":154,"endColumn":52},{"ruleId":"222","severity":1,"message":"223","line":170,"column":51,"nodeType":"224","messageId":"225","endLine":170,"endColumn":52},{"ruleId":"222","severity":1,"message":"223","line":186,"column":49,"nodeType":"224","messageId":"225","endLine":186,"endColumn":50},{"ruleId":"196","severity":1,"message":"200","line":18,"column":37,"nodeType":"198","messageId":"203","endLine":18,"endColumn":39},{"ruleId":"186","severity":1,"message":"226","line":37,"column":24,"nodeType":"188","messageId":"189","endLine":37,"endColumn":35},{"ruleId":"186","severity":1,"message":"227","line":117,"column":31,"nodeType":"188","messageId":"189","endLine":117,"endColumn":37},{"ruleId":"196","severity":1,"message":"200","line":38,"column":22,"nodeType":"198","messageId":"203","endLine":38,"endColumn":24},{"ruleId":"186","severity":1,"message":"195","line":2,"column":10,"nodeType":"188","messageId":"189","endLine":2,"endColumn":16},{"ruleId":"196","severity":1,"message":"200","line":15,"column":23,"nodeType":"198","messageId":"203","endLine":15,"endColumn":25},{"ruleId":"186","severity":1,"message":"228","line":1,"column":17,"nodeType":"188","messageId":"189","endLine":1,"endColumn":26},{"ruleId":"196","severity":1,"message":"200","line":18,"column":37,"nodeType":"198","messageId":"203","endLine":18,"endColumn":39},{"ruleId":"186","severity":1,"message":"229","line":2,"column":8,"nodeType":"188","messageId":"189","endLine":2,"endColumn":25},{"ruleId":"186","severity":1,"message":"230","line":3,"column":10,"nodeType":"188","messageId":"189","endLine":3,"endColumn":14},{"ruleId":"186","severity":1,"message":"231","line":6,"column":20,"nodeType":"188","messageId":"189","endLine":6,"endColumn":24},{"ruleId":"186","severity":1,"message":"232","line":8,"column":10,"nodeType":"188","messageId":"189","endLine":8,"endColumn":15},{"ruleId":"186","severity":1,"message":"233","line":8,"column":17,"nodeType":"188","messageId":"189","endLine":8,"endColumn":25},{"ruleId":"186","severity":1,"message":"234","line":10,"column":10,"nodeType":"188","messageId":"189","endLine":10,"endColumn":18},{"ruleId":"196","severity":1,"message":"200","line":40,"column":28,"nodeType":"198","messageId":"203","endLine":40,"endColumn":30},{"ruleId":"186","severity":1,"message":"228","line":1,"column":17,"nodeType":"188","messageId":"189","endLine":1,"endColumn":26},{"ruleId":"196","severity":1,"message":"200","line":27,"column":37,"nodeType":"198","messageId":"203","endLine":27,"endColumn":39},{"ruleId":"196","severity":1,"message":"200","line":29,"column":25,"nodeType":"198","messageId":"203","endLine":29,"endColumn":27},{"ruleId":"186","severity":1,"message":"235","line":6,"column":3,"nodeType":"188","messageId":"189","endLine":6,"endColumn":12},{"ruleId":"186","severity":1,"message":"195","line":7,"column":3,"nodeType":"188","messageId":"189","endLine":7,"endColumn":9},{"ruleId":"186","severity":1,"message":"236","line":8,"column":3,"nodeType":"188","messageId":"189","endLine":8,"endColumn":7},{"ruleId":"186","severity":1,"message":"237","line":23,"column":10,"nodeType":"188","messageId":"189","endLine":23,"endColumn":24},{"ruleId":"186","severity":1,"message":"238","line":23,"column":26,"nodeType":"188","messageId":"189","endLine":23,"endColumn":31},{"ruleId":"186","severity":1,"message":"239","line":34,"column":8,"nodeType":"188","messageId":"189","endLine":34,"endColumn":17},{"ruleId":"196","severity":1,"message":"200","line":49,"column":46,"nodeType":"198","messageId":"203","endLine":49,"endColumn":48},{"ruleId":"186","severity":1,"message":"235","line":2,"column":10,"nodeType":"188","messageId":"189","endLine":2,"endColumn":19},{"ruleId":"186","severity":1,"message":"236","line":2,"column":21,"nodeType":"188","messageId":"189","endLine":2,"endColumn":25},{"ruleId":"186","severity":1,"message":"195","line":2,"column":27,"nodeType":"188","messageId":"189","endLine":2,"endColumn":33},{"ruleId":"196","severity":1,"message":"197","line":491,"column":42,"nodeType":"198","messageId":"199","endLine":491,"endColumn":44},{"ruleId":"240","severity":1,"message":"241","line":15,"column":11,"nodeType":"242","endLine":15,"endColumn":60},{"ruleId":"186","severity":1,"message":"243","line":1,"column":10,"nodeType":"188","messageId":"189","endLine":1,"endColumn":26},{"ruleId":"244","severity":1,"message":"245","line":4,"column":1,"nodeType":"246","endLine":9,"endColumn":2},{"ruleId":"196","severity":1,"message":"200","line":34,"column":32,"nodeType":"198","messageId":"203","endLine":34,"endColumn":34},{"ruleId":"186","severity":1,"message":"247","line":76,"column":9,"nodeType":"188","messageId":"189","endLine":76,"endColumn":17},{"ruleId":"186","severity":1,"message":"248","line":77,"column":9,"nodeType":"188","messageId":"189","endLine":77,"endColumn":19},{"ruleId":"186","severity":1,"message":"249","line":7,"column":10,"nodeType":"188","messageId":"189","endLine":7,"endColumn":19},{"ruleId":"186","severity":1,"message":"250","line":11,"column":8,"nodeType":"188","messageId":"189","endLine":11,"endColumn":14},{"ruleId":"186","severity":1,"message":"251","line":2,"column":10,"nodeType":"188","messageId":"189","endLine":2,"endColumn":24},"no-unused-vars","'Modal' is defined but never used.","Identifier","unusedVar","'Pert' is defined but never used.","'Task' is defined but never used.","'addEdge' is defined but never used.","'removeElements' is defined but never used.","'addTask' is defined but never used.","'Button' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","expectedInside","'finaldiff' is assigned a value but never used.","no-self-assign","'task.description' is assigned to itself.","MemberExpression","selfAssignment","'ele' is assigned a value but never used.","'tasks' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'projectId'. Either include it or remove the dependency array.","ArrayExpression",["252"],"'BASE_URL' is assigned a value but never used.","'notifications' is assigned a value but never used.","'selected' is assigned a value but never used.","no-native-reassign",["253"],"no-negated-in-lhs",["254"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'projectTeam' is assigned a value but never used.","'rating' is assigned a value but never used.","'useEffect' is defined but never used.","'SearchTwoToneIcon' is defined but never used.","'list' is defined but never used.","'Link' is defined but never used.","'query' is assigned a value but never used.","'setQuery' is assigned a value but never used.","'projects' is assigned a value but never used.","'Accordion' is defined but never used.","'Card' is defined but never used.","'ToastContainer' is defined but never used.","'toast' is defined but never used.","'User_Role' is defined but never used.","react/jsx-pascal-case","Imported JSX component User_Role must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","'devToolsEnhancer' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'roleName' is assigned a value but never used.","'roleSkills' is assigned a value but never used.","'TextField' is defined but never used.","'moment' is defined but never used.","'getCurrentUser' is defined but never used.",{"desc":"255","fix":"256"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [projectId]",{"range":"257","text":"258"},[1239,1241],"[projectId]"]