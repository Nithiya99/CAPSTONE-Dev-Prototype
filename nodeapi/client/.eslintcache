[{"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\Post.js":"1","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\apiPosts.js":"2","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\App.js":"3","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Home.js":"4","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\NavBar.js":"5","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\EditProject.js":"6","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\reducer.js":"7","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\DeleteUser.js":"8","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\auth\\index.js":"9","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Tagify\\SkillsInput.js":"10","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\LeaveProject.js":"11","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\layout\\Pert.js":"12","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\User.js":"13","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\DragDropVideo.js":"14","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\showPost.js":"15","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\ProjectDashboard.js":"16"},{"size":5301,"mtime":1621443160373,"results":"17","hashOfConfig":"18"},{"size":8757,"mtime":1621439324889,"results":"19","hashOfConfig":"18"},{"size":479,"mtime":1621337772215,"results":"20","hashOfConfig":"18"},{"size":6690,"mtime":1621439077770,"results":"21","hashOfConfig":"18"},{"size":362,"mtime":1621337772217,"results":"22","hashOfConfig":"18"},{"size":6112,"mtime":1621337772224,"results":"23","hashOfConfig":"18"},{"size":345,"mtime":1621337772232,"results":"24","hashOfConfig":"18"},{"size":1207,"mtime":1621337772246,"results":"25","hashOfConfig":"18"},{"size":1831,"mtime":1621337772216,"results":"26","hashOfConfig":"18"},{"size":522,"mtime":1621337772251,"results":"27","hashOfConfig":"18"},{"size":2371,"mtime":1621337772225,"results":"28","hashOfConfig":"18"},{"size":5141,"mtime":1621337772229,"results":"29","hashOfConfig":"18"},{"size":2963,"mtime":1621337772252,"results":"30","hashOfConfig":"18"},{"size":3790,"mtime":1621439077782,"results":"31","hashOfConfig":"18"},{"size":5444,"mtime":1621440922931,"results":"32","hashOfConfig":"18"},{"size":16212,"mtime":1621442116255,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"6p3aao",{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\Post.js",["68"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\apiPosts.js",["69"],"import axios from \"axios\";\r\nexport const getAllPosts = () => {\r\n  let userId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let requestObj = {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n  return fetch(`http://localhost:3000/posts/`, requestObj);\r\n};\r\nexport const getPostsOfUser = (userId) => {\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let requestObj = {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n  return fetch(`http://localhost:3000/posts/by/${userId}`, requestObj);\r\n};\r\nexport const uploadPicture2 = (data) => {\r\n  axios.post(`http://localhost:3000/convertToWebp`, data);\r\n};\r\nexport const uploadVideo = (data) => {\r\n  console.log(data);\r\n};\r\nexport const uploadPicture = async (base64Data, fileName) => {\r\n  // var imageBuffer = new Buffer(base64Data, \"base64\"); //console = <Buffer 75 ab 5a 8a ...\r\n  // fs.writeFile(\"test.jpg\", imageBuffer, function (err) {\r\n  //   //...\r\n  //   console.log(imageBuffer);\r\n  // });\r\n  // base64Data = base64Data.split(\",\").pop();\r\n  // console.log(base64Data);\r\n  // const blob = b64toBlob(base64Data, contentType);\r\n  // const blobUrl = URL.createObjectURL(blob);\r\n  // // console.log(\"blob:\", blob);\r\n  // // console.log(\"blobURL:\", blobUrl);\r\n  // console.log(blobUrl);\r\n  let object = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ data: base64Data, fileName: fileName }),\r\n  };\r\n  console.log(\"Object:\", object);\r\n  return fetch(`http://localhost:3000/convertToWebp`, object)\r\n    .then((data) => {\r\n      console.log(data);\r\n      return data.json();\r\n    })\r\n    .then((response) => {\r\n      // console.log(\"url:\", response.result.url);\r\n      // return response.result.url;\r\n      const data = response.result;\r\n      let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n      let userId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n      if (data.url) {\r\n        let url = data.url;\r\n        return fetch(`http://localhost:3000/post/new/${userId}`, {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + token.toString(),\r\n          },\r\n          body: JSON.stringify({\r\n            pic: url,\r\n          }),\r\n        })\r\n          .then((res) => res.json())\r\n          .then((data) => {\r\n            console.log(data);\r\n            return data;\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }\r\n    });\r\n};\r\nexport const createVideoPost = async (video, title, tags, project) => {\r\n  const data = new FormData();\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let userId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  data.append(\"myVideo\", video);\r\n  let settings = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  let response = await axios.post(\r\n    `http://localhost:3000/postVideo`,\r\n    data,\r\n    settings\r\n  );\r\n  let result = response.data.result;\r\n  if (result.url) {\r\n    let url = result.url;\r\n    return fetch(`/post/new/video/${userId}`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token.toString(),\r\n      },\r\n      body: JSON.stringify({\r\n        video: url,\r\n        title: title,\r\n        tags: tags,\r\n        project: project,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        return data;\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n};\r\nconst functioncall = (final_url, title, tags, project, token, userId) => {\r\n  console.log(final_url);\r\n  let settings =\r\n    project !== \"Personal\"\r\n      ? {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + token.toString(),\r\n          },\r\n          body: JSON.stringify({\r\n            pic: final_url,\r\n            title: title,\r\n            tags: tags,\r\n            project,\r\n          }),\r\n        }\r\n      : {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + token.toString(),\r\n          },\r\n          body: JSON.stringify({\r\n            pic: final_url,\r\n            title: title,\r\n            tags: tags,\r\n          }),\r\n        };\r\n  return fetch(`/post/new/${userId}`, settings)\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      console.log(data);\r\n      return data;\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\nexport const createPost = async (images, title, tags, project) => {\r\n  console.log(images);\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let userId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n\r\n  let final_url = [];\r\n  await images.map(async (image) => {\r\n    const data = new FormData();\r\n    data.append(\"title\", title);\r\n    data.append(\"tags\", tags);\r\n    data.append(\"myImage\", image);\r\n    let settings = {\r\n      headers: {\r\n        \"content-type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n    let response = await axios.post(\r\n      `http://localhost:3000/convertToWebp`,\r\n      data,\r\n      settings\r\n    );\r\n    let result = await response.data.result;\r\n    if (result.url) {\r\n      let url = result.url;\r\n      final_url.push(url);\r\n    }\r\n    if (final_url.length === images.length)\r\n      return functioncall(final_url, title, tags, project, token, userId);\r\n  });\r\n\r\n  // data.append(\"file\", image);\r\n  // data.append(\"upload_preset\", \"workshaketrial\");\r\n  // data.append(\"cloud_name\", \"workshaketrial\");\r\n  // return fetch(\"https://api.cloudinary.com/v1_1/workshaketrial/image/upload\", {\r\n  //   method: \"post\",\r\n  //   body: data,\r\n  // })\r\n  //   .then((res) => res.json())\r\n  //   .then((data) => {\r\n  //     //   setUrl(data.url);\r\n  //     if (data.url) {\r\n  //       let url = data.url;\r\n\r\n  //   })\r\n  //   .catch((err) => {\r\n  //     console.log(err);\r\n  //   });\r\n};\r\n\r\nexport const likepost = (post_id) => {\r\n  let userId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let obj = {\r\n    userId: userId,\r\n    postId: post_id,\r\n  };\r\n  let settings = {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(obj),\r\n  };\r\n  // console.log(settings.body);\r\n  return fetch(`http://localhost:3000/post/like/${post_id}`, settings)\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const dislikepost = (post_id) => {\r\n  let userId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let obj = {\r\n    userId: userId,\r\n    postId: post_id,\r\n  };\r\n  let settings = {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(obj),\r\n  };\r\n  // console.log(settings.body);\r\n  return fetch(`http://localhost:3000/post/dislike/${post_id}`, settings)\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const addcomment = (post_id, comment) => {\r\n  let userId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  let userName = JSON.parse(localStorage.getItem(\"jwt\")).user.name;\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let obj = {\r\n    userId: userId,\r\n    userName: userName,\r\n    postId: post_id,\r\n    comment: comment,\r\n  };\r\n  let settings = {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(obj),\r\n  };\r\n  // console.log(settings.body);\r\n  return fetch(`http://localhost:3000/post/addcomment/${post_id}`, settings)\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const getpost = (post_id) => {\r\n  let settings = {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  // console.log(settings.body);\r\n  return fetch(`http://localhost:3000/post/${post_id}`, settings)\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n",["70","71"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\App.js",[],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Home.js",["72","73","74","75","76","77","78","79","80","81","82"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\NavBar.js",[],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\EditProject.js",["83"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\reducer.js",[],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\DeleteUser.js",[],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\auth\\index.js",[],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Tagify\\SkillsInput.js",[],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\LeaveProject.js",["84"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\layout\\Pert.js",["85","86","87","88","89","90"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\User.js",[],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\DragDropVideo.js",[],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\showPost.js",["91"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\ProjectDashboard.js",["92","93","94","95","96"],{"ruleId":"97","severity":1,"message":"98","line":70,"column":62,"nodeType":"99","messageId":"100","endLine":70,"endColumn":66},{"ruleId":"97","severity":1,"message":"101","line":3,"column":7,"nodeType":"99","messageId":"100","endLine":3,"endColumn":13},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"97","severity":1,"message":"106","line":3,"column":10,"nodeType":"99","messageId":"100","endLine":3,"endColumn":26},{"ruleId":"97","severity":1,"message":"107","line":6,"column":3,"nodeType":"99","messageId":"100","endLine":6,"endColumn":14},{"ruleId":"97","severity":1,"message":"108","line":7,"column":3,"nodeType":"99","messageId":"100","endLine":7,"endColumn":21},{"ruleId":"97","severity":1,"message":"109","line":8,"column":3,"nodeType":"99","messageId":"100","endLine":8,"endColumn":29},{"ruleId":"97","severity":1,"message":"110","line":10,"column":13,"nodeType":"99","messageId":"100","endLine":10,"endColumn":14},{"ruleId":"97","severity":1,"message":"111","line":13,"column":10,"nodeType":"99","messageId":"100","endLine":13,"endColumn":20},{"ruleId":"97","severity":1,"message":"112","line":15,"column":10,"nodeType":"99","messageId":"100","endLine":15,"endColumn":15},{"ruleId":"97","severity":1,"message":"113","line":15,"column":17,"nodeType":"99","messageId":"100","endLine":15,"endColumn":23},{"ruleId":"114","severity":1,"message":"115","line":43,"column":46,"nodeType":"116","messageId":"117","endLine":43,"endColumn":48},{"ruleId":"97","severity":1,"message":"118","line":53,"column":13,"nodeType":"99","messageId":"100","endLine":53,"endColumn":26},{"ruleId":"114","severity":1,"message":"115","line":137,"column":35,"nodeType":"116","messageId":"117","endLine":137,"endColumn":37},{"ruleId":"114","severity":1,"message":"119","line":34,"column":32,"nodeType":"116","messageId":"120","endLine":34,"endColumn":34},{"ruleId":"114","severity":1,"message":"119","line":37,"column":21,"nodeType":"116","messageId":"120","endLine":37,"endColumn":23},{"ruleId":"114","severity":1,"message":"115","line":77,"column":34,"nodeType":"116","messageId":"117","endLine":77,"endColumn":36},{"ruleId":"114","severity":1,"message":"115","line":93,"column":36,"nodeType":"116","messageId":"117","endLine":93,"endColumn":38},{"ruleId":"114","severity":1,"message":"119","line":122,"column":13,"nodeType":"121","messageId":"122","endLine":122,"endColumn":20},{"ruleId":"114","severity":1,"message":"115","line":125,"column":36,"nodeType":"116","messageId":"117","endLine":125,"endColumn":38},{"ruleId":"114","severity":1,"message":"115","line":139,"column":36,"nodeType":"116","messageId":"117","endLine":139,"endColumn":38},{"ruleId":"114","severity":1,"message":"115","line":153,"column":36,"nodeType":"116","messageId":"117","endLine":153,"endColumn":38},{"ruleId":"114","severity":1,"message":"119","line":83,"column":36,"nodeType":"116","messageId":"120","endLine":83,"endColumn":38},{"ruleId":"97","severity":1,"message":"123","line":2,"column":10,"nodeType":"99","messageId":"100","endLine":2,"endColumn":19},{"ruleId":"97","severity":1,"message":"124","line":2,"column":21,"nodeType":"99","messageId":"100","endLine":2,"endColumn":25},{"ruleId":"97","severity":1,"message":"113","line":2,"column":27,"nodeType":"99","messageId":"100","endLine":2,"endColumn":33},{"ruleId":"97","severity":1,"message":"125","line":21,"column":20,"nodeType":"99","messageId":"100","endLine":21,"endColumn":35},{"ruleId":"114","severity":1,"message":"115","line":317,"column":42,"nodeType":"116","messageId":"117","endLine":317,"endColumn":44},"no-unused-vars","'tags' is assigned a value but never used.","Identifier","unusedVar","'userId' is assigned a value but never used.","no-native-reassign",["126"],"no-negated-in-lhs",["127"],"'getNotifications' is defined but never used.","'getNotified' is defined but never used.","'clearNotifications' is defined but never used.","'setSegregatedNotifications' is defined but never used.","'_' is defined but never used.","'getProject' is defined but never used.","'Modal' is defined but never used.","'Button' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'notifications' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","ReturnStatement","expectedReturnValue","'Accordion' is defined but never used.","'Card' is defined but never used.","'setCriticalPath' is defined but never used.","no-global-assign","no-unsafe-negation"]