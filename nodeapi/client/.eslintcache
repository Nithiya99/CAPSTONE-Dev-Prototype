[{"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\MainRouter.js":"1","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\MyChats.js":"2","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Signin.js":"3","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\ProjectDashboard.js":"4","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\apiUser.js":"5","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\ProjectRecommendation.js":"6","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\Socket.js":"7","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\ModalButton.js":"8","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\Chat.js":"9","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\User_Role.js":"10","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\taskComponents\\AddTask.js":"11","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\layout\\Task.js":"12","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Tagify\\Assigner.js":"13","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\store.js":"14","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Users.js":"15","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\JoinProject.js":"16","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\VideoPost.js":"17","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\SearchBar.js":"18","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\SearchProjectBar.js":"19","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Following.js":"20","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\User.js":"21","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Menu.js":"22","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\NavBar.js":"23","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Notifications.js":"24","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\newProjectForm\\CreateProject.js":"25","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\taskComponents\\TrelloTask.js":"26","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Followers.js":"27","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Social.js":"28","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Recommendation.js":"29","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\EditProfile.js":"30","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\apiPosts.js":"31","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\index.js":"32","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\TextPostView.js":"33","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\LeaveProject.js":"34","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\auth\\index.js":"35","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\Emoji.js":"36","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\FeedbackForm.js":"37"},{"size":2879,"mtime":1622121874143,"results":"38","hashOfConfig":"39"},{"size":14616,"mtime":1621938995452,"results":"40","hashOfConfig":"39"},{"size":6689,"mtime":1621938995453,"results":"41","hashOfConfig":"39"},{"size":25562,"mtime":1622096852745,"results":"42","hashOfConfig":"39"},{"size":8023,"mtime":1622045875354,"results":"43","hashOfConfig":"39"},{"size":3598,"mtime":1621938995411,"results":"44","hashOfConfig":"39"},{"size":242,"mtime":1621938995454,"results":"45","hashOfConfig":"39"},{"size":992,"mtime":1621938995455,"results":"46","hashOfConfig":"39"},{"size":6958,"mtime":1621938995429,"results":"47","hashOfConfig":"39"},{"size":4388,"mtime":1622096852824,"results":"48","hashOfConfig":"39"},{"size":6078,"mtime":1621938995435,"results":"49","hashOfConfig":"39"},{"size":714,"mtime":1621938995434,"results":"50","hashOfConfig":"39"},{"size":1517,"mtime":1621938995456,"results":"51","hashOfConfig":"39"},{"size":297,"mtime":1621938995437,"results":"52","hashOfConfig":"39"},{"size":9836,"mtime":1622096852938,"results":"53","hashOfConfig":"39"},{"size":11940,"mtime":1622096852689,"results":"54","hashOfConfig":"39"},{"size":11886,"mtime":1622007571358,"results":"55","hashOfConfig":"39"},{"size":4089,"mtime":1621938995412,"results":"56","hashOfConfig":"39"},{"size":4178,"mtime":1621938995406,"results":"57","hashOfConfig":"39"},{"size":2157,"mtime":1622047641012,"results":"58","hashOfConfig":"39"},{"size":3029,"mtime":1621938995457,"results":"59","hashOfConfig":"39"},{"size":15665,"mtime":1622121909733,"results":"60","hashOfConfig":"39"},{"size":362,"mtime":1621938995410,"results":"61","hashOfConfig":"39"},{"size":23929,"mtime":1622096852664,"results":"62","hashOfConfig":"39"},{"size":7174,"mtime":1621938995434,"results":"63","hashOfConfig":"39"},{"size":12116,"mtime":1622032505881,"results":"64","hashOfConfig":"39"},{"size":2026,"mtime":1622047647147,"results":"65","hashOfConfig":"39"},{"size":4033,"mtime":1621938995456,"results":"66","hashOfConfig":"39"},{"size":7215,"mtime":1622123624605,"results":"67","hashOfConfig":"39"},{"size":10045,"mtime":1622181763359,"results":"68","hashOfConfig":"39"},{"size":13307,"mtime":1622131511579,"results":"69","hashOfConfig":"39"},{"size":438,"mtime":1621938995424,"results":"70","hashOfConfig":"39"},{"size":10570,"mtime":1622007571343,"results":"71","hashOfConfig":"39"},{"size":2668,"mtime":1621938995431,"results":"72","hashOfConfig":"39"},{"size":1831,"mtime":1621938995408,"results":"73","hashOfConfig":"39"},{"size":2120,"mtime":1621938995430,"results":"74","hashOfConfig":"39"},{"size":2241,"mtime":1622032505803,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"6p3aao",{"filePath":"78","messages":"79","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"87"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"87"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"87"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"87"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\MainRouter.js",["159","160","161","162","163","164","165"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\MyChats.js",["166","167","168","169","170"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  getCurrentUser,\r\n  getfriends,\r\n  getUserById,\r\n  updatePersonalChat,\r\n  clearChat,\r\n  blockUser,\r\n  unblockUser,\r\n} from \"./apiUser\";\r\nimport DefaultProfile from \"./../images/avatar.png\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Row, Tab, Col, Nav } from \"react-bootstrap\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { clearFriends, friendAdded } from \"../store/user\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport io from \"socket.io-client\";\r\nimport moment from \"moment\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport CheckCircleOutlineIcon from \"@material-ui/icons/CheckCircleOutline\";\r\nimport BlockIcon from \"@material-ui/icons/Block\";\r\nimport ClearAllIcon from \"@material-ui/icons/ClearAll\";\r\n\r\nvar options = {\r\n  rememberUpgrade: true,\r\n  transports: [\"websocket\"],\r\n  secure: true,\r\n  rejectUnauthorized: false,\r\n};\r\n\r\nconst MyChats = () => {\r\n  const dispatch = useDispatch();\r\n  const friends = useSelector((state) => state.user.friends);\r\n  const [user, setUser] = useState({});\r\n  const [touser_id, settouser_id] = useState(String);\r\n  const [toname, settoname] = useState(String);\r\n  const [state, setState] = useState({\r\n    message: \"\",\r\n    from_name: getCurrentUser().name,\r\n    created: new Date(),\r\n  });\r\n  const [blocked_users, set_blocked_user] = useState([]);\r\n  const [isblocked, set_isblocked] = useState(Boolean);\r\n  const [blocked_by, set_blocked_by] = useState([]);\r\n  const [isblocked_by, set_isblocked_by] = useState(Boolean);\r\n  const [chat, setChat] = useState([]);\r\n\r\n  const divRef = useRef(null);\r\n  const messagesEndRef = useRef(null);\r\n  const socketRef = useRef();\r\n\r\n  useEffect(async () => {\r\n    dispatch(clearFriends());\r\n    await getfriends(getCurrentUser()._id).then(async (data) => {\r\n      await data.map(async (userid) => {\r\n        await getUserById(userid).then((u) => {\r\n          if (u.user._id !== getCurrentUser()._id)\r\n            dispatch(friendAdded({ user: u.user }));\r\n        });\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  // console.log(friends);\r\n\r\n  function fun(user) {\r\n    let userid = getCurrentUser()._id;\r\n    socketRef.current = io.connect(\"http://localhost:8081\", options);\r\n    socketRef.current.emit(\"getPersonalChat\", {\r\n      userid,\r\n      touser: user._id,\r\n      client_chat_length: chat.length,\r\n    });\r\n    socketRef.current.on(\"personalchat\" + userid, (data) => {\r\n      setChat(data);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    let userid = getCurrentUser()._id;\r\n\r\n    getUserById(userid).then((data) => {\r\n      set_blocked_user(data.user.blocked_users);\r\n      set_blocked_by(data.user.blocked_by);\r\n    });\r\n\r\n    socketRef.current = io.connect(\"http://localhost:8081\", options);\r\n    socketRef.current.emit(\"getPersonalChat\", {\r\n      userid,\r\n      touser: user._id,\r\n      client_chat_length: chat.length,\r\n    });\r\n\r\n    socketRef.current.on(\r\n      \"personal_message\" + userid,\r\n      ({ from_name, toname, message, created, touser_id, fromuser }) => {\r\n        let chats = [...chat];\r\n        chats.push({\r\n          from_name,\r\n          toname,\r\n          message,\r\n          created,\r\n          touser_id,\r\n          fromuser,\r\n        });\r\n        setChat(chats);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let userid = getCurrentUser()._id;\r\n    socketRef.current = io.connect(\"http://localhost:8081\", options);\r\n    socketRef.current.emit(\"getPersonalChat\", {\r\n      userid,\r\n      touser: user._id,\r\n      client_chat_length: chat.length,\r\n    });\r\n    socketRef.current.on(\"personalchat\" + userid, (data) => {\r\n      setChat(data);\r\n    });\r\n    socketRef.current.on(\r\n      \"personal_message\" + userid,\r\n      ({ from_name, toname, message, created, touser_id, fromuser }) => {\r\n        let chats = [...chat];\r\n        chats.push({\r\n          from_name,\r\n          toname,\r\n          message,\r\n          created,\r\n          touser_id,\r\n          fromuser,\r\n        });\r\n        setChat(chats);\r\n      }\r\n    );\r\n    return () => socketRef.current.disconnect();\r\n  }, [chat]);\r\n\r\n  const onMessageSubmit = (e) => {\r\n    const { from_name, message, created } = state;\r\n    let fromuser = getCurrentUser()._id;\r\n    if (message.trim() !== \"\") {\r\n      socketRef.current.emit(\"personal_message\", {\r\n        from_name,\r\n        toname,\r\n        message,\r\n        created,\r\n        touser_id,\r\n        fromuser,\r\n      });\r\n      let chat_msg = {\r\n        from_name,\r\n        toname,\r\n        message,\r\n        created,\r\n        touser_id,\r\n        fromuser,\r\n      };\r\n      updatePersonalChat(chat_msg).then((data) => {\r\n        let chats = [...chat];\r\n        chats.push(chat_msg);\r\n        setChat(chats);\r\n      });\r\n    }\r\n    e.preventDefault();\r\n    setState({ message: \"\", from_name });\r\n  };\r\n\r\n  const onTextChange = (e) => {\r\n    setState({ ...state, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onClearChat = (e) => {\r\n    let current_user_id = getCurrentUser()._id;\r\n    let client_user_id = user._id;\r\n    clearChat(current_user_id, client_user_id).then((data) => {\r\n      let chats = [];\r\n      setChat(chats);\r\n      console.log(data);\r\n    });\r\n    e.preventDefault();\r\n  };\r\n\r\n  const onBlockUser = (e) => {\r\n    let current_user_id = getCurrentUser()._id;\r\n    let client_user_id = user._id;\r\n    blockUser(current_user_id, client_user_id).then((data) => {\r\n      console.log(data);\r\n    });\r\n    e.preventDefault();\r\n  };\r\n\r\n  const onUnBlockUser = (e) => {\r\n    let current_user_id = getCurrentUser()._id;\r\n    let client_user_id = user._id;\r\n    unblockUser(current_user_id, client_user_id).then((data) => {\r\n      console.log(data);\r\n    });\r\n    e.preventDefault();\r\n  };\r\n\r\n  var d = new Date();\r\n  var f = 0;\r\n  function setdate(dd) {\r\n    d = dd;\r\n    return moment(dd).format(\"DD-MM-YYYY\");\r\n  }\r\n  function settoday(dd) {\r\n    d = dd;\r\n    f = 1;\r\n  }\r\n  const renderChat = () => {\r\n    f = 0;\r\n    return chat.map(({ from_name, message, created }, index) => (\r\n      <div>\r\n        <div className=\"d-flex flex-column m-3 align-items-center\">\r\n          {moment(created).format(\"DD-MM-YYYY\") !==\r\n          moment(d).format(\"DD-MM-YYYY\") ? (\r\n            moment(created).format(\"DD-MM-YYYY\") ===\r\n            moment(new Date()).format(\"DD-MM-YYYY\") ? (\r\n              <span className=\"text-dark-75 font-weight-bold font-size-sm bubble-date\">\r\n                Today{settoday(created)}\r\n              </span>\r\n            ) : (\r\n              <span className=\"text-dark-75 font-weight-bold font-size-sm bubble-date\">\r\n                {setdate(created)}\r\n              </span>\r\n            )\r\n          ) : moment(created).format(\"DD-MM-YYYY\") ===\r\n              moment(new Date()).format(\"DD-MM-YYYY\") && f === 0 ? (\r\n            <span className=\"text-dark-75 font-weight-bold font-size-sm bubble-date\">\r\n              Today{settoday(created)}\r\n            </span>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n        </div>\r\n        {isAuthenticated().user.name === from_name ? (\r\n          <div className=\"d-flex flex-column m-3 align-items-end \" key={index}>\r\n            <div className=\"d-flex align-items-center\">\r\n              <div>\r\n                <span className=\"text-muted font-size-sm\">\r\n                  {moment(created).format(\"h:mm a\")}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-2 text-dark font-weight-bold font-size-lg  text-left bubble-alt\">\r\n              {message}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div\r\n            className=\"d-flex flex-column m-3 align-items-start \"\r\n            key={index}\r\n          >\r\n            <div className=\"d-flex align-items-center\">\r\n              <div>\r\n                <span className=\"text-muted font-size-sm\">\r\n                  {moment(created).format(\"h:mm a\")}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-2 text-dark font-weight-bold font-size-lg  text-left  bubble\">\r\n              {message}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div className=\"pt-5\">\r\n      <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"empty\">\r\n        <Row>\r\n          <Col sm={3}>\r\n            <div className=\"card card-custom card-stretch\">\r\n              <div className=\"card-body pt-4\">\r\n                <Nav variant=\"pills\" className=\"flex-column mt-3\">\r\n                  {friends.map((user, i) => (\r\n                    <Nav.Item>\r\n                      {/* {console.log(user)} */}\r\n\r\n                      <Nav.Link\r\n                        eventKey={i}\r\n                        onClick={() => {\r\n                          setUser(user);\r\n                          settouser_id(user._id);\r\n                          settoname(user.name);\r\n                          fun(user);\r\n                          set_isblocked(blocked_users.indexOf(user._id) > -1);\r\n                          set_isblocked_by(blocked_by.indexOf(user._id) > -1);\r\n                        }}\r\n                      >\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"mr-3\">\r\n                            <img\r\n                              src={DefaultProfile}\r\n                              style={{ width: \"40px\" }}\r\n                            />\r\n                          </div>\r\n                          <div>{user.name}</div>\r\n                        </div>\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                  ))}\r\n                </Nav>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n          <Col sm={9}>\r\n            <Tab.Content>\r\n              <Tab.Pane eventKey=\"empty\">\r\n                <div className=\"card card-stretch\">\r\n                  <div className=\"card-header\">\r\n                    <div className=\"card-title align-items-start flex-column\">\r\n                      <h4 className=\"card-label font-weight-bolder text-dark\">\r\n                        Click on a chat.\r\n                      </h4>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Tab.Pane>\r\n              {friends.map((user, i) => {\r\n                let comp = [];\r\n                comp.push(\r\n                  <Tab.Pane eventKey={i}>\r\n                    <div className=\"card card-stretch\">\r\n                      <div className=\"card-header\">\r\n                        <div className=\"card-title\">\r\n                          <div className=\"d-flex align-items-center justify-content-between flex-wrap\">\r\n                            <div className=\"d-flex align-items-center text-dark font-size-h5 font-weight-bold mr-3\">\r\n                              {user.name}\r\n                            </div>\r\n                            <div className=\"d-flex flex-wrap my-2\">\r\n                              <button\r\n                                className=\"btn btn-light-warning\"\r\n                                onClick={onClearChat}\r\n                              >\r\n                                Clear\r\n                                <ClearAllIcon />\r\n                              </button>\r\n\r\n                              {!isblocked ? (\r\n                                <button\r\n                                  className=\"btn btn-light-danger ml-5\"\r\n                                  onClick={onBlockUser}\r\n                                >\r\n                                  Block\r\n                                  <BlockIcon />\r\n                                </button>\r\n                              ) : (\r\n                                <button\r\n                                  className=\"btn btn-light-danger\"\r\n                                  onClick={onUnBlockUser}\r\n                                >\r\n                                  UnBlock\r\n                                  <CheckCircleOutlineIcon />\r\n                                </button>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"card-body\">\r\n                        <div>\r\n                          <div ref={divRef} className=\"render-chat\">\r\n                            {renderChat()}\r\n                            <div ref={messagesEndRef} />\r\n                          </div>\r\n\r\n                          {!isblocked ? (\r\n                            !isblocked_by ? (\r\n                              <form onSubmit={onMessageSubmit}>\r\n                                <div className=\"row pt-5\">\r\n                                  <Col sm={10}>\r\n                                    <TextField\r\n                                      name=\"message\"\r\n                                      onChange={(e) => {\r\n                                        onTextChange(e);\r\n                                      }}\r\n                                      value={state.message}\r\n                                      id=\"outlined-multiline-static\"\r\n                                      variant=\"outlined\"\r\n                                      label=\"Message\"\r\n                                      fullWidth\r\n                                    />\r\n                                  </Col>\r\n                                  <Col>\r\n                                    <button className=\"btn btn-primary\">\r\n                                      Send Message <SendIcon />\r\n                                    </button>\r\n                                  </Col>\r\n                                </div>\r\n                              </form>\r\n                            ) : (\r\n                              <h4 className=\"card-label font-weight-bolder text-dark\">\r\n                                You have been blocked by the user\r\n                              </h4>\r\n                            )\r\n                          ) : (\r\n                            <h4 className=\"card-label font-weight-bolder text-dark\">\r\n                              You won't recieve any messages unless you unblock\r\n                              the user\r\n                            </h4>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Tab.Pane>\r\n                );\r\n                return comp;\r\n              })}\r\n            </Tab.Content>\r\n          </Col>\r\n        </Row>\r\n      </Tab.Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyChats;\r\n",["171","172"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Signin.js",["173"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\ProjectDashboard.js",["174","175","176","177"],"import React, { Component } from \"react\";\r\nimport { Accordion, Card, Button, Row, Tab, Col, Nav } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AddTask from \"./taskComponents/AddTask\";\r\nimport LayoutComponent from \"./layout/LayoutComponent\";\r\nimport TrelloTask from \"./taskComponents/TrelloTask\";\r\nimport GroupTwoToneIcon from \"@material-ui/icons/GroupTwoTone\";\r\nimport AccountTreeTwoToneIcon from \"@material-ui/icons/AccountTreeTwoTone\";\r\nimport TuneTwoToneIcon from \"@material-ui/icons/TuneTwoTone\";\r\nimport PlaylistAddTwoToneIcon from \"@material-ui/icons/PlaylistAddTwoTone\";\r\nimport ListAltTwoToneIcon from \"@material-ui/icons/ListAltTwoTone\";\r\nimport PhotoLibraryIcon from \"@material-ui/icons/PhotoLibrary\";\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\nimport { getCurrentUser, getUserById } from \"../user/apiUser\";\r\nimport { getAllPosts } from \"./../posts/apiPosts\";\r\nimport Post from \"../posts/Post\";\r\nimport VideoPost from \"./../posts/VideoPost\";\r\nimport Chat from \"./Chat\";\r\nimport { getTasks } from \"./apiProject\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateTasks } from \"../store/tasks\";\r\nimport { clearAll } from \"../store/cpm\";\r\nimport RoleReq from \"./RoleReq\";\r\nimport AssignedTo from \"./AssignedTo\";\r\nimport UserRecommendation from \"./UserRecommendation\";\r\nimport moment from \"moment\";\r\nimport RecommendedRolePeople from \"./RecommendedRolePeople\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nclass ProjectDashboard extends Component {\r\n  state = {\r\n    expectedTime: {},\r\n    leaderName: \"\",\r\n  };\r\n  componentDidMount() {\r\n    this.props.clearAll();\r\n    const { project } = this.props.location.state;\r\n    getTasks(project._id).then((val) => {\r\n      this.props.updateTasks({\r\n        tasks: val.tasks,\r\n      });\r\n    });\r\n    getAllPosts()\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        // console.log(data);\r\n        this.setState({ posts: data.posts });\r\n      });\r\n    getUserById(project.leader).then((data) =>\r\n      this.setState({ leaderName: data.user.name })\r\n    );\r\n  }\r\n  // componentDidUpdate(prevState) {\r\n  //   if (prevState.connections.length !== this.props.connections.length) {\r\n  //     // if (this.props.pert.latestFinishTimes !== undefined)\r\n  //     //   console.log(\"end time:\", this.props.pert.latestFinishTimes.__end);\r\n  //     const expectedTime =\r\n  //       this.props.pert.latestFinishTimes !== undefined\r\n  //         ? Math.floor(this.props.pert.latestFinishTimes.__end)\r\n  //         : \"Not set yet\";\r\n  //     this.setState({ expectedTime });\r\n  //     this.props.setExpectedTime({ expectedTime });\r\n  //   }\r\n  //   // console.log(prevState);\r\n  // }\r\n  renderSlacks(slacks) {\r\n    return Object.keys(slacks).map((key) => (\r\n      <div>\r\n        Label: {key} | slack: {slacks[key].slack} | days: {slacks[key].days} |\r\n        Overdue:\r\n        {slacks[key].overdue ? <>Overdue</> : <>On schedule</>}\r\n      </div>\r\n    ));\r\n  }\r\n  renderCriticalPath(criticalPathArr, criticalPathObject) {\r\n    // console.log(\"criticalPathArr:\", criticalPathArr);\r\n    // console.log(\"criticalPathObject:\", criticalPathObject);\r\n    return criticalPathArr.map((node, index) => (\r\n      <>\r\n        {/* {index !== 1 && index !== 2 ?*/}\r\n        {index !== criticalPathArr.length - 1\r\n          ? criticalPathObject[node].label.toString() + \" , \"\r\n          : criticalPathObject[node].label.toString() + \" .\"}\r\n        {/* : \"\"} */}\r\n      </>\r\n    ));\r\n  }\r\n  render() {\r\n    if (this.props.location.state.project === undefined) {\r\n      return null;\r\n    }\r\n    if (this.state.leaderName === undefined) return null;\r\n\r\n    const { project } = this.props.location.state;\r\n    // console.log(this.props.location);\r\n    // 25/5 26/5     23/6\r\n    // estimated date : 23/6\r\n    // no of days left : 23/6 - 26/5\r\n\r\n    let today = new Date();\r\n    let day1 = new Date(today.toUTCString());\r\n    // let day2 = new Date(project.created);\r\n    // let difference = Math.abs(day2 - day1);\r\n    // let days = parseInt(difference / (1000 * 3600 * 24));\r\n    // console.log(days);\r\n    const { expectedTime, slacks, criticalPath, pert } = this.props;\r\n    const { posts, leaderName } = this.state;\r\n    let createDate = new Date(project.created);\r\n    let expectedDate = moment(createDate, \"DD-MM-YYYY\").add(\r\n      expectedTime,\r\n      \"days\"\r\n    );\r\n    const diffTime = Math.abs(expectedDate._d - day1);\r\n    const duration = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n    // console.log(\"no. of days left:\", duration);\r\n    // console.log(\"expectedDate : \", expectedDate.format(\"DD-MM-YYYY\"));\r\n    // console.log(slacks);\r\n    // if (slacks === undefined) return ;\r\n    if (expectedTime === undefined) return null;\r\n    return (\r\n      <div className=\"pt-5\">\r\n        <ToastContainer />\r\n        <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"projStats\">\r\n          <Row>\r\n            <Col sm={2}>\r\n              <div className=\"card card-custom card-stretch\">\r\n                <div className=\"card-body pt-4\">\r\n                  <h5 className=\"font-weight-bolder text-dark-75 text-hover-primary\">\r\n                    {project.title}\r\n                  </h5>\r\n                  <div className=\"text-muted\">{project.description}</div>\r\n                  <Nav variant=\"pills\" className=\"flex-column mt-3\">\r\n                    <Nav.Item>\r\n                      <Nav.Link eventKey=\"teamInfo\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"mr-3\">\r\n                            <GroupTwoToneIcon />\r\n                          </div>\r\n                          <div>Team Information </div>\r\n                        </div>\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                      <Nav.Link eventKey=\"projStats\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"mr-3\">\r\n                            <TuneTwoToneIcon />\r\n                          </div>\r\n                          <div>Project Stats</div>\r\n                        </div>\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                    {project.status !== \"Completed\" &&\r\n                    getCurrentUser()._id === project.leader ? (\r\n                      <Nav.Item>\r\n                        <Nav.Link eventKey=\"addTask\">\r\n                          <div className=\"d-flex align-items-center\">\r\n                            <div className=\"mr-3\">\r\n                              <PlaylistAddTwoToneIcon />\r\n                            </div>\r\n                            <div>Add Task</div>\r\n                          </div>\r\n                        </Nav.Link>\r\n                      </Nav.Item>\r\n                    ) : (\r\n                      <div> </div>\r\n                    )}\r\n                    <Nav.Item>\r\n                      <Nav.Link eventKey=\"netDiagram\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"mr-3\">\r\n                            <AccountTreeTwoToneIcon />\r\n                          </div>\r\n                          <div>Network Diagram</div>\r\n                        </div>\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                      <Nav.Link eventKey=\"allTasks\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"mr-3\">\r\n                            <ListAltTwoToneIcon />\r\n                          </div>\r\n                          <div>All Tasks</div>\r\n                        </div>\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                      <Nav.Link eventKey=\"Chat\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"mr-3\">\r\n                            <ChatIcon />\r\n                          </div>\r\n                          <div>Group Chat</div>\r\n                        </div>\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                      <Nav.Link eventKey=\"Posts\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"mr-3\">\r\n                            <PhotoLibraryIcon />\r\n                          </div>\r\n                          <div>Posts</div>\r\n                        </div>\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                  </Nav>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n            <Col sm={10}>\r\n              <Tab.Content>\r\n                <Tab.Pane eventKey=\"teamInfo\">\r\n                  <div className=\"card card-stretch\">\r\n                    <div className=\"card-header\">\r\n                      <div className=\"card-title align-items-start flex-column\">\r\n                        <h4 className=\"card-label font-weight-bolder text-dark\">\r\n                          Team Information\r\n                        </h4>\r\n                        <span className=\"text-muted font-weight-bold font-size-sm mt-1\">\r\n                          Analysis of the tasks and time required displayed\r\n                          here.\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <div className=\"col mb-4\">\r\n                        {/* {console.log(project.completion_percentage)} */}\r\n                        <div className=\"d-flex align-items-center justify-content-between flex-wrap\">\r\n                          <div className=\"mr-3\">\r\n                            <div className=\"d-flex align-items-center text-dark font-size-h5 font-weight-bold mr-3\">\r\n                              {project.title}\r\n                            </div>\r\n                            <div className=\"d-flex flex-wrap my-2\">\r\n                              <Link\r\n                                to=\"#\"\r\n                                className=\"text-muted text-hover-primary font-weight-bold mr-lg-8 mr-5 mb-lg-0 mb-2\"\r\n                              >\r\n                                {leaderName}\r\n                              </Link>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"flex-grow-1 font-weight-bold font-size-h6 py-5 py-lg-2 mr-5\">\r\n                          {project.description}\r\n                        </div>\r\n                        <div className=\"flex-grow-1 font-weight-bold font-size-h6 py-5 py-lg-2 mr-5\">\r\n                          {project.skills.map((skill) => (\r\n                            <span class=\"btn btn-light-info btn-sm font-weight-bold btn-upper btn-text m-1\">\r\n                              {skill}\r\n                            </span>\r\n                          ))}\r\n                        </div>\r\n                        <div className=\"d-flex flex-wrap align-items-center py-2\">\r\n                          <div className=\"mr-12 d-flex flex-column mb-7\">\r\n                            <span className=\"d-block font-weight-bold mb-4\">\r\n                              Start Date\r\n                            </span>\r\n                            <span className=\"btn btn-light-primary btn-sm font-weight-bold btn-upper btn-text\">\r\n                              {/* {projectCreatedDates[project._id]} */}\r\n                              {moment(createDate).format(\"DD-MM-YYYY\")}\r\n                            </span>\r\n                          </div>\r\n                          <div className=\"mr-12 d-flex flex-column mb-7\">\r\n                            <span className=\"d-block font-weight-bold mb-4\">\r\n                              Due Date\r\n                            </span>\r\n                            <span className=\"btn btn-light-danger btn-sm font-weight-bold btn-upper btn-text\">\r\n                              {/* {projectEstimatedDates[project._id]} */}\r\n                              {expectedDate.format(\"DD-MM-YYYY\")}\r\n                            </span>\r\n                          </div>\r\n                          <div className=\"flex-row-fluid mb-7\">\r\n                            <span className=\"d-block font-weight-bold mb-4\">\r\n                              Progress\r\n                            </span>\r\n                            <div className=\"d-flex align-items-center pt-2\">\r\n                              <div className=\"progress progress-xs mt-2 mb-2 w-100\">\r\n                                <div\r\n                                  className=\"progress-bar bg-warning\"\r\n                                  role=\"progressbar\"\r\n                                  style={{\r\n                                    width: `${project.completion_percentage}%`,\r\n                                  }}\r\n                                  aria-valuenow=\"50\"\r\n                                  aria-valuemin=\"0\"\r\n                                  aria-valuemax=\"100\"\r\n                                ></div>\r\n                              </div>\r\n                              <span className=\"ml-3 font-weight-bolder\">\r\n                                {project.completion_percentage}%\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <table className=\"table table-light\">\r\n                          <thead>\r\n                            <tr>\r\n                              <th key={\"rolename\"}>Role Name</th>\r\n                              <th key={\"skills\"}>Skills Required</th>\r\n                              <th key={\"assigned\"}>Assigned To</th>\r\n                              <th key={\"invite\"}>Send Invite</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {project.roles.map((role) => (\r\n                              <>\r\n                                <tr key={role._id.toString()}>\r\n                                  <td\r\n                                    key={\r\n                                      role._id.toString() +\r\n                                      role.roleName.toString()\r\n                                    }\r\n                                  >\r\n                                    {role.roleName}\r\n                                  </td>\r\n                                  <td\r\n                                    key={\r\n                                      role._id.toString() +\r\n                                      role.roleSkills.toString()\r\n                                    }\r\n                                  >\r\n                                    {role.roleSkills.join(\", \")}\r\n                                  </td>\r\n                                  <td>\r\n                                    {project.leader === getCurrentUser()._id &&\r\n                                    role.assignedTo === undefined ? (\r\n                                      <div>\r\n                                        <RoleReq\r\n                                          requestBy={role.requestBy}\r\n                                          projectId={project._id}\r\n                                          roleId={role._id}\r\n                                        />\r\n                                      </div>\r\n                                    ) : (\r\n                                      <div>\r\n                                        <AssignedTo id={role.assignedTo} />\r\n                                      </div>\r\n                                    )}\r\n                                  </td>\r\n                                  <td>\r\n                                    {getCurrentUser()._id === project.leader &&\r\n                                    role.assignedTo === undefined ? (\r\n                                      <button className=\"btn btn-info\">\r\n                                        <RecommendedRolePeople\r\n                                          project={project}\r\n                                          role={role}\r\n                                        />\r\n                                      </button>\r\n                                    ) : (\r\n                                      <></>\r\n                                    )}\r\n                                  </td>\r\n                                </tr>\r\n                              </>\r\n                            ))}\r\n                          </tbody>\r\n                        </table>\r\n                        {getCurrentUser()._id === project.leader ? (\r\n                          <UserRecommendation project={project} />\r\n                        ) : (\r\n                          <div></div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Tab.Pane>\r\n                <Tab.Pane eventKey=\"projStats\">\r\n                  <div className=\"card card-stretch\">\r\n                    <div className=\"card-header\">\r\n                      <div className=\"card-title align-items-start flex-column\">\r\n                        <h4 className=\"card-label font-weight-bolder text-dark\">\r\n                          Project Stats\r\n                        </h4>\r\n                        <span className=\"text-muted font-weight-bold font-size-sm mt-1\">\r\n                          Analysis of the tasks and time required displayed\r\n                          here.\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <h4>No. of days:</h4>\r\n                      <span>{duration}</span>\r\n                      <h4>Estimated date:</h4>\r\n                      <span>{expectedDate.format(\"DD-MM-YYYY\")}</span>\r\n                      {slacks !== undefined ? (\r\n                        <>\r\n                          <h4>Tasks that can be slacked On:</h4>\r\n                          <div>{this.renderSlacks(slacks)}</div>\r\n                        </>\r\n                      ) : (\r\n                        <></>\r\n                      )}\r\n                      <div>\r\n                        <div>\r\n                          <h4>Critical Path:</h4>\r\n                        </div>\r\n                        <div>\r\n                          {pert.criticalPath !== undefined &&\r\n                          criticalPath !== undefined ? (\r\n                            this.renderCriticalPath(\r\n                              pert.criticalPath,\r\n                              criticalPath\r\n                            )\r\n                          ) : (\r\n                            <></>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Tab.Pane>\r\n                <Tab.Pane eventKey=\"netDiagram\">\r\n                  <div className=\"card card-stretch\">\r\n                    <div className=\"card-header\">\r\n                      <div className=\"card-title align-items-start flex-column\">\r\n                        <h4 className=\"card-label font-weight-bolder text-dark\">\r\n                          Network Diagram\r\n                        </h4>\r\n                        <span className=\"text-muted font-weight-bold font-size-sm mt-1\">\r\n                          Task dependency diagram.\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <LayoutComponent project={project} />\r\n                    </div>\r\n                  </div>\r\n                </Tab.Pane>\r\n                <Tab.Pane eventKey=\"allTasks\">\r\n                  <div className=\"card card-stretch\">\r\n                    <div className=\"card-header\">\r\n                      <div className=\"card-title align-items-start flex-column\">\r\n                        <h4 className=\"card-label font-weight-bolder text-dark\">\r\n                          Tasks Board\r\n                        </h4>\r\n                        <span className=\"text-muted font-weight-bold font-size-sm mt-1\">\r\n                          Complete allocated tasks.\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <TrelloTask\r\n                        projectId={project._id}\r\n                        status={project.status}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </Tab.Pane>\r\n                <Tab.Pane eventKey=\"addTask\">\r\n                  <div className=\"card card-stretch\">\r\n                    <div className=\"card-header\">\r\n                      <div className=\"card-title align-items-start flex-column\">\r\n                        <h4 className=\"card-label font-weight-bolder text-dark\">\r\n                          Create Task\r\n                        </h4>\r\n                        <span className=\"text-muted font-weight-bold font-size-sm mt-1\">\r\n                          Add Tasks and allocate to memebers.\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <AddTask projectId={project._id} />\r\n                    </div>\r\n                  </div>\r\n                </Tab.Pane>\r\n                <Tab.Pane eventKey=\"Chat\">\r\n                  <div className=\"card card-stretch\">\r\n                    <div className=\"card-header\">\r\n                      <div className=\"card-title align-items-start flex-column\">\r\n                        <h4 className=\"card-label font-weight-bolder text-dark\">\r\n                          Group Chat\r\n                        </h4>\r\n                        <span className=\"text-muted font-weight-bold font-size-sm mt-1\">\r\n                          Interact with your Project-mates.\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <Chat projectId={project._id} status={project.status} />\r\n                    </div>\r\n                  </div>\r\n                </Tab.Pane>\r\n                <Tab.Pane eventKey=\"Posts\">\r\n                  <div className=\"card card-stretch\">\r\n                    <div className=\"card-header\">\r\n                      <div className=\"card-title align-items-start flex-column\">\r\n                        <h4 className=\"card-label font-weight-bolder text-dark\">\r\n                          Posts\r\n                        </h4>\r\n                        <span className=\"text-muted font-weight-bold font-size-sm mt-1\">\r\n                          News Feed (Posts) will be here\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      {posts !== undefined &&\r\n                        posts.map((post) => {\r\n                          if (\r\n                            post.project !== undefined &&\r\n                            post.project.toString() === project._id.toString()\r\n                          ) {\r\n                            // console.log(post.project, project._id);\r\n                            if (post.postType === \"video\")\r\n                              return (\r\n                                <VideoPost\r\n                                  headerText={post.title}\r\n                                  footerText={\"by \" + post.postedBy.name}\r\n                                  cardText={post.video}\r\n                                  videoUrl={post.video}\r\n                                  liked_by={post.liked_by}\r\n                                  _id={post._id}\r\n                                  comments={post.comments}\r\n                                  tags={post.tags}\r\n                                />\r\n                              );\r\n                            if (post.postType === \"image\")\r\n                              return (\r\n                                <Post\r\n                                  headerText={post.title}\r\n                                  footerText={\"by \" + post.postedBy.name}\r\n                                  cardText={post.photo}\r\n                                  imageUrl={post.photo}\r\n                                  liked_by={post.liked_by}\r\n                                  _id={post._id}\r\n                                  comments={post.comments}\r\n                                  tags={post.tags}\r\n                                />\r\n                              );\r\n                          }\r\n                        })}\r\n                    </div>\r\n                  </div>\r\n                </Tab.Pane>\r\n              </Tab.Content>\r\n            </Col>\r\n          </Row>\r\n        </Tab.Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  tasks: state.tasks.tasks,\r\n  pert: state.cpm.pert,\r\n  connections: state.cpm.connections,\r\n  expectedTime: state.cpm.expectedTime,\r\n  slacks: state.cpm.slacks,\r\n  criticalPath: state.cpm.criticalPath,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  updateTasks: (params) => dispatch(updateTasks(params)),\r\n  clearAll: () => dispatch(clearAll()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectDashboard);\r\n",["178","179"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\apiUser.js",["180","181","182","183","184","185"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\ProjectRecommendation.js",["186","187"],"import React, { Component } from \"react\";\r\nimport { getCurrentUser, getUserById } from \"./../user/apiUser\";\r\nimport { listprojects } from \"./../project/apiProject\";\r\nimport { Link } from \"react-router-dom\";\r\nimport JoinProject from \"./../project/JoinProject\";\r\n\r\nconst similarity = require(\"sentence-similarity\");\r\nconst similarityScore = require(\"similarity-score\");\r\n\r\nclass ProjectRecommendation extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      skills: [],\r\n      user_projects: [],\r\n      projects: [],\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    var userid = await getCurrentUser()._id;\r\n    // console.log(userid);\r\n\r\n    var user_obj = await getUserById(userid);\r\n    this.setState({\r\n      skills: user_obj.user.skills,\r\n      user_projects: user_obj.user.projects,\r\n    });\r\n\r\n    listprojects().then((data) => {\r\n      if (data.error) {\r\n        console.log(data.error);\r\n      } else {\r\n        this.setState({ projects: data });\r\n      }\r\n    });\r\n  }\r\n\r\n  renderUsers = (final_out) => (\r\n    <div className=\"row row-cols-1 row-cols-md-1\">\r\n      {final_out.map((project, i) => (\r\n        <div className=\"col\">\r\n          <div className=\"card card-custom gutter-b card-stretch\" key={i}>\r\n            <div className=\"card-body text-center pt-4\">\r\n              <div className=\"my-4\">\r\n                <h5 className=\"text-dark font-weight-bold font-size-h3\">\r\n                  {project.title}\r\n                </h5>\r\n              </div>\r\n              <div className=\"text-dark font-weight-bold font-size-h6\">\r\n                {project.description}\r\n              </div>\r\n              <div className=\"lead\">\r\n                {project.skills.map((skill) => (\r\n                  <span class=\"btn btn-light-info btn-sm font-weight-bold btn-upper btn-text m-2\">\r\n                    {skill}\r\n                  </span>\r\n                ))}\r\n              </div>\r\n              <div className=\"mt-9\">\r\n                <Link\r\n                  to={`/joinProject/`}\r\n                  className=\"btn btn-light-primary font-weight-bolder btn-sm py-3 px-6 text-uppercase\"\r\n                >\r\n                  view project\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n\r\n  render() {\r\n    const { skills, projects, user_projects } = this.state;\r\n\r\n    // console.log(skills);\r\n    // console.log(projects);\r\n\r\n    let final_out = [];\r\n    let winkOpts = {\r\n      f: similarityScore.winklerMetaphone,\r\n      options: { threshold: 0 },\r\n    };\r\n    projects.forEach((project) => {\r\n      var out = {};\r\n      var score = similarity(skills, project.skills, winkOpts);\r\n      // console.log(score)\r\n      // console.log(project.skills,skills);\r\n      out = project;\r\n      out[\"exact\"] = score.exact;\r\n      // console.log(out);\r\n      final_out.push(out);\r\n    });\r\n    final_out = final_out.filter((x) => !user_projects.includes(x._id));\r\n    final_out = final_out.filter((x) => x.completion_percentage != 100);\r\n    final_out.sort(function (a, b) {\r\n      return b.exact - a.exact;\r\n    });\r\n    // final_out = final_out.filter(x => x.exact !=0);\r\n    final_out = final_out.slice(0, 5);\r\n    // console.log(final_out);\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        {final_out.length === 0 ? (\r\n          <></>\r\n        ) : (\r\n          <>\r\n            <h4 className=\"mt-5 mb-5\"> Recommended Projects for You ...</h4>\r\n            {this.renderUsers(final_out)}\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProjectRecommendation;\r\n","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\Socket.js",[],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\ModalButton.js",[],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\Chat.js",["188","189","190","191"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\User_Role.js",[],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\taskComponents\\AddTask.js",["192"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\layout\\Task.js",["193"],"import React, { Component } from \"react\";\r\n\r\nexport class Task extends Component {\r\n  render() {\r\n    const tasks = this.props.tasks;\r\n    return (\r\n      <>\r\n        {Object.values(tasks).map((task) => {\r\n          if (task.id !== \"1\" && task.id !== \"2\") {\r\n            return (\r\n              <>\r\n                <div>\r\n                  <strong>ID: {task.id}</strong>\r\n                </div>\r\n                <div>\r\n                  {\" \"}\r\n                  {task.mostLikelyTime} {task.optimisticTime}{\" \"}\r\n                  {task.pessimisticTime}\r\n                </div>\r\n                <hr />\r\n              </>\r\n            );\r\n          }\r\n        })}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Task;\r\n","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Tagify\\Assigner.js",["194","195","196"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\store.js",["197","198"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Users.js",["199","200","201"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\JoinProject.js",["202","203"],"import React, { Component } from \"react\";\r\nimport { listprojects, request } from \"./apiProject\";\r\nimport { getCurrentUser, getUserById } from \"../user/apiUser\";\r\nimport { connect } from \"react-redux\";\r\nimport { notificationAdded } from \"../store/notifications\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport LiveClock from \"react-live-clock\";\r\nimport dayjs from \"dayjs\";\r\nimport { Badge } from \"react-bootstrap\";\r\nimport SearchTwoToneIcon from \"@material-ui/icons/SearchTwoTone\";\r\nimport moment from \"moment\";\r\nimport SearchProjectBar from \"./../SearchProjectBar\";\r\nclass JoinProject extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      projects: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    listprojects().then((data) => {\r\n      if (data.error) {\r\n        console.log(data.error);\r\n      } else {\r\n        this.setState({ projects: data });\r\n        let projectLeaderNames = {};\r\n        let projectCreatedDates = {};\r\n        let projectEstimatedDates = {};\r\n        data.map((project, index) => {\r\n          //Leader name\r\n          // let number = index;\r\n          getUserById(project.leader).then((data) => {\r\n            projectLeaderNames[project._id] = data.user.name;\r\n            // console.log(projectLeaderNames);\r\n            this.setState({ projectLeaderNames });\r\n          });\r\n          // var date = moment(new Date(project.created.substr(0, 16)));\r\n          // console.log(date.format(\"DD-MMM-YYYY\"));\r\n\r\n          let date = moment(new Date(project.created.substr(0, 16)));\r\n          var new_date = moment(date, \"DD-MM-YYYY\").add(\r\n            project.estimatedTime,\r\n            \"days\"\r\n          );\r\n          projectEstimatedDates[project._id] = new_date.format(\"DD-MMM-YYYY\");\r\n          this.setState({ projectEstimatedDates });\r\n          projectCreatedDates[project._id] = date.format(\"DD-MMM-YYYY\");\r\n          this.setState({ projectCreatedDates });\r\n          // console.log(project.leadername);\r\n        });\r\n        // toast.dark(\"Loaded\");\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      projects,\r\n      projectLeaderNames,\r\n      projectCreatedDates,\r\n      projectEstimatedDates,\r\n    } = this.state;\r\n    // console.log(projectLeaderNames);\r\n    if (\r\n      projectLeaderNames === undefined ||\r\n      projectCreatedDates === undefined ||\r\n      projectEstimatedDates === undefined\r\n    )\r\n      return null;\r\n    if (\r\n      Object.keys(projectLeaderNames).length !== projects.length ||\r\n      Object.keys(projectCreatedDates).length !== projects.length ||\r\n      Object.keys(projectEstimatedDates).length !== projects.length\r\n    )\r\n      return null;\r\n    return (\r\n      <>\r\n        <ToastContainer />\r\n        <div\r\n          className=\"subheader py-2 py-lg-6  subheader-transparent \"\r\n          id=\"kt_subheader\"\r\n        >\r\n          <div className=\" container  d-flex align-items-center justify-content-between flex-wrap flex-sm-nowrap\">\r\n            <div className=\"d-flex align-items-center flex-wrap mr-2\">\r\n              <h5 className=\"text-dark font-weight-bold mt-2 mb-2 mr-5\">\r\n                Join Project\r\n              </h5>\r\n              <span>\r\n                <SearchProjectBar />\r\n              </span>\r\n            </div>\r\n            <div class=\"d-flex align-items-center flex-wrap\">\r\n              <Badge variant=\"primary\">\r\n                <div className=\"d-flex align-items-center flex-wrap mr-2\">\r\n                  <h6>{dayjs().format(\"DD MMMM, dddd\")}</h6>\r\n                  <div className=\"subheader-separator subheader-separator-ver mt-2 mb-2 mr-4 ml-4 bg-gray-200\"></div>\r\n                  <h6>\r\n                    <LiveClock format=\"hh:mm a\" ticking />\r\n                  </h6>\r\n                </div>\r\n              </Badge>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"d-flex flex-column-fluid\">\r\n          <div className=\"container\">\r\n            {projects.map((project, i) => (\r\n              <div className=\"card card-custom gutter-b\">\r\n                <div className=\"card-body\">\r\n                  <div className=\"d-flex\">\r\n                    <div className=\"flex-grow-1\">\r\n                      <div className=\"d-flex align-items-center justify-content-between flex-wrap\">\r\n                        <div className=\"mr-3\">\r\n                          <p className=\"d-flex align-items-center text-dark font-size-h5 font-weight-bold mr-3\">\r\n                            {project.title}\r\n                          </p>\r\n                          <div className=\"d-flex flex-wrap my-2\">\r\n                            <p className=\"text-muted font-weight-bold mr-lg-8 mr-5 mb-lg-0 mb-2\">\r\n                              {projectLeaderNames[project._id]}\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"d-flex align-items-center flex-wrap justify-content-between\">\r\n                        <div className=\"flex-grow-1 font-weight-bold text-dark-100 py-5 py-lg-2 mr-5\">\r\n                          {project.description}\r\n                          <p className=\"card-text\">\r\n                            <strong>Skills required: </strong>\r\n                            {project.skills.map((skill) => (\r\n                              <span class=\"btn btn-light-info btn-sm font-weight-bold btn-upper btn-text m-1\">\r\n                                {skill}\r\n                              </span>\r\n                            ))}\r\n                          </p>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex flex-wrap align-items-center py-2\">\r\n                          <div className=\"d-flex align-items-center mr-10\">\r\n                            <div className=\"mr-12 d-flex flex-column mb-7\">\r\n                              <span className=\"d-block font-weight-bold mb-4\">\r\n                                Start Date\r\n                              </span>\r\n                              <span className=\"btn btn-sm btn-text btn-light-primary text-uppercase font-weight-bold\">\r\n                                {projectCreatedDates[project._id]}\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"mr-12 d-flex flex-column mb-7\">\r\n                              <span className=\"d-block font-weight-bold mb-4\">\r\n                                Due Date\r\n                              </span>\r\n                              <span className=\"btn btn-sm btn-text btn-light-danger text-uppercase font-weight-bold\">\r\n                                {projectEstimatedDates[project._id]}\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"flex-grow-1 flex-shrink-0 w-150px w-xl-300px mt-4 mt-sm-0\">\r\n                            <span className=\"d-block font-weight-bold mb-4\">\r\n                              Progress\r\n                            </span>\r\n                            <div className=\"d-flex align-items-center pt-2\">\r\n                              <div className=\"progress progress-xs mt-2 mb-2 w-100\">\r\n                                <div\r\n                                  className=\"progress-bar bg-warning\"\r\n                                  role=\"progressbar\"\r\n                                  style={{\r\n                                    width: `${project.completion_percentage}%`,\r\n                                  }}\r\n                                  aria-valuenow=\"50\"\r\n                                  aria-valuemin=\"0\"\r\n                                  aria-valuemax=\"100\"\r\n                                ></div>\r\n                              </div>\r\n                              <span className=\"ml-3 font-weight-bolder\">\r\n                                {`${project.completion_percentage}%`}\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"separator separator-solid my-7\"></div>\r\n                  <table className=\"table\">\r\n                    <thead>\r\n                      <tr key={\"title\"}>\r\n                        <th key={\"rolename\"}>Role Name</th>\r\n                        <th key={\"skills\"}>Skills Required</th>\r\n                        <th key={\"status\"}>Status</th>\r\n                      </tr>\r\n                      {project.roles.map((role) => (\r\n                        <tr key={role._id.toString()}>\r\n                          <td\r\n                            key={role._id.toString() + role.roleName.toString()}\r\n                          >\r\n                            {role.roleName}\r\n                          </td>\r\n                          <td\r\n                            key={\r\n                              role._id.toString() + role.roleSkills.toString()\r\n                            }\r\n                          >\r\n                            {/* {role.roleSkills + \",\"} */}\r\n                            {role.roleSkills.map((skill) => (\r\n                              <span class=\"btn btn-light-info btn-sm font-weight-bold btn-upper btn-text mr-1\">\r\n                                {skill}\r\n                              </span>\r\n                            ))}\r\n                          </td>\r\n                          <td>\r\n                            {role.assignedTo !== undefined ? (\r\n                              <Badge pill variant=\"warning\">\r\n                                Position Full\r\n                              </Badge>\r\n                            ) : (\r\n                              <button\r\n                                className=\"btn btn-outline-primary\"\r\n                                onClick={() => {\r\n                                  getCurrentUser()._id === project.leader\r\n                                    ? toast.warning(\r\n                                        \"Leaders cant Request, right???\"\r\n                                      )\r\n                                    : request(\r\n                                        getCurrentUser()._id,\r\n                                        project._id,\r\n                                        role._id\r\n                                      ).then((val) => {\r\n                                        if (!val.err) {\r\n                                          this.props.notificationAdded({\r\n                                            userId: project.leader,\r\n                                            message: `${\r\n                                              role.roleName\r\n                                            } requested by ${\r\n                                              getCurrentUser().name\r\n                                            }!`,\r\n                                            type: \"RequestForRole\",\r\n                                            projectId: project._id,\r\n                                          });\r\n                                        }\r\n                                      });\r\n                                }}\r\n                              >\r\n                                Request\r\n                              </button>\r\n                            )}\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </thead>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  notifications: state.notifications.notifications,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  notificationAdded: (params) => dispatch(notificationAdded(params)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(JoinProject);\r\n","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\VideoPost.js",["204","205","206","207","208","209","210"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\SearchBar.js",["211","212","213","214","215","216","217","218"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\SearchProjectBar.js",["219","220","221","222","223","224","225"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Following.js",["226","227","228"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\User.js",[],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Menu.js",["229","230","231","232","233","234","235","236","237","238","239","240","241"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\NavBar.js",[],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Notifications.js",["242","243","244","245","246"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\newProjectForm\\CreateProject.js",["247"],"import React, { Component } from \"react\";\r\nimport RoleList from \"./RoleCreate\";\r\nimport { newProject } from \"./../apiProject\";\r\nimport SkillsInput from \"./../../utils/signupbutton/Tagify/SkillsInput\";\r\nimport LiveClock from \"react-live-clock\";\r\nimport dayjs from \"dayjs\";\r\nimport { Badge } from \"react-bootstrap\";\r\n\r\nclass CreateProject extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      title: \"\",\r\n      description: \"\",\r\n      skills: [\"\"],\r\n      error: \"\",\r\n      roleDetails: [\r\n        {\r\n          index: Math.random(),\r\n          roleName: \"\",\r\n          roleSkills: [\"\"],\r\n        },\r\n      ],\r\n      open: false,\r\n    };\r\n  }\r\n\r\n  handleChange = (proj) => (event) => {\r\n    this.setState({ error: \"\" });\r\n    this.setState({ [proj]: event.target.value });\r\n  };\r\n  handleSkills = (newSkills) => {\r\n    this.setState({ skills: newSkills });\r\n  };\r\n  handleRoleChange = (name) => (e) => {\r\n    let id = parseInt(e.target.attributes.idx.value);\r\n    const roleDetails = this.state.roleDetails;\r\n    roleDetails[id][name] = e.target.value;\r\n    this.setState({ roleDetails });\r\n  };\r\n\r\n  addNewRow = (e) => {\r\n    this.setState((prevState) => ({\r\n      roleDetails: [\r\n        ...prevState.roleDetails,\r\n        {\r\n          index: Math.random(),\r\n          roleName: \"\",\r\n          roleSkills: \"\",\r\n        },\r\n      ],\r\n    }));\r\n  };\r\n\r\n  deteteRow = (index) => {\r\n    this.setState({\r\n      roleDetails: this.state.roleDetails.filter(\r\n        (s, sindex) => index !== sindex\r\n      ),\r\n    });\r\n  };\r\n\r\n  clickOnDelete(record) {\r\n    this.setState({\r\n      roleDetails: this.state.roleDetails.filter((r) => r !== record),\r\n    });\r\n  }\r\n\r\n  clickSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.setState({ loading: true });\r\n    let { title, description, skills, roleDetails } = this.state;\r\n    let project = {\r\n      title,\r\n      description,\r\n      skills,\r\n      roleDetails,\r\n    };\r\n    // newProject(project);\r\n    try {\r\n      newProject(project).then((data) => {\r\n        if (data === undefined) return;\r\n        if (data.error) {\r\n          if (data.similar) {\r\n            this.setState({ similar: data.similar });\r\n            console.log(this.state.similar);\r\n          }\r\n          this.setState({ error: data.error });\r\n        } else\r\n          this.setState({\r\n            title: \"\",\r\n            description: \"\",\r\n            skills: [\"\"],\r\n            roleDetails: [\r\n              {\r\n                index: Math.random(),\r\n                roleName: \"\",\r\n                roleSkills: [],\r\n              },\r\n            ],\r\n            error: \"\",\r\n            open: true,\r\n          });\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    // console.log(project);\r\n  };\r\n\r\n  render() {\r\n    let { error, title, description, skills, roleDetails, open } = this.state;\r\n    return (\r\n      <>\r\n        <div\r\n          className=\"subheader py-2 py-lg-6  subheader-transparent \"\r\n          id=\"kt_subheader\"\r\n        >\r\n          <div className=\" container  d-flex align-items-center justify-content-between flex-wrap flex-sm-nowrap\">\r\n            <div className=\"d-flex align-items-center flex-wrap mr-2\">\r\n              <h5 className=\"text-dark font-weight-bold mt-2 mb-2 mr-5\">\r\n                Create Project\r\n              </h5>\r\n              <div className=\"subheader-separator subheader-separator-ver mt-2 mb-2 mr-4 bg-gray-200\"></div>\r\n            </div>\r\n            <div class=\"d-flex align-items-center flex-wrap\">\r\n              <Badge variant=\"primary\">\r\n                <div className=\"d-flex align-items-center flex-wrap mr-2\">\r\n                  <h6>{dayjs().format(\"DD MMMM, dddd\")}</h6>\r\n                  <div className=\"subheader-separator subheader-separator-ver mt-2 mb-2 mr-4 ml-4 bg-gray-200\"></div>\r\n                  <h6>\r\n                    <LiveClock format=\"hh:mm a\" ticking />\r\n                  </h6>\r\n                </div>\r\n              </Badge>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"container\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              <div className=\"card-title\">\r\n                <h2>Let's Start a New Project</h2>\r\n                <p className=\"text-muted\">\r\n                  Fill in the form with all the necessary details to register\r\n                  the project.\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <div\r\n                className=\"alert alert-danger\"\r\n                style={{ display: error ? \"\" : \"none\" }}\r\n              >\r\n                {error}\r\n              </div>\r\n\r\n              <div\r\n                className=\"alert alert-success\"\r\n                style={{ display: open ? \"\" : \"none\" }}\r\n              >\r\n                Project Successfully Registered. Check \"My Projects\".\r\n              </div>\r\n              <form className=\"mt-5\">\r\n                <div className=\"form-group\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-10 offset-1\">\r\n                      <label>\r\n                        <big>Title of your Project</big>\r\n                      </label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        value={title}\r\n                        onChange={this.handleChange(\"title\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row mt-3\">\r\n                    <div className=\"col-sm-10 offset-1\">\r\n                      <label>\r\n                        <big>Description of the Project</big>\r\n                      </label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        value={description}\r\n                        onChange={this.handleChange(\"description\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row mt-3\">\r\n                    <div className=\"col-sm-10 offset-1\">\r\n                      <SkillsInput\r\n                        label={<big>Skills</big>}\r\n                        setSkills={this.handleSkills}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  {/*<RoleView />*/}\r\n                  <RoleList\r\n                    add={this.addNewRow}\r\n                    delete={this.clickOnDelete.bind(this)}\r\n                    roleDetails={roleDetails}\r\n                    onChange={this.handleRoleChange}\r\n                  />\r\n                  <div className=\"row\">\r\n                    <button\r\n                      onClick={this.clickSubmit}\r\n                      className=\"btn btn-raised btn-primary mx-auto mt-3 mb-2 col-sm-3\"\r\n                    >\r\n                      Create Project!\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateProject;\r\n","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\taskComponents\\TrelloTask.js",["248"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Followers.js",["249","250"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Social.js",[],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Recommendation.js",["251"],"import React, { Component } from \"react\";\r\nimport { Tab, Nav } from \"react-bootstrap\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport LiveClock from \"react-live-clock\";\r\nimport dayjs from \"dayjs\";\r\nimport { Badge } from \"react-bootstrap\";\r\nimport StorageRoundedIcon from \"@material-ui/icons/StorageRounded\";\r\nimport AssignmentIndRoundedIcon from \"@material-ui/icons/AssignmentIndRounded\";\r\nimport PeopleOutlineIcon from \"@material-ui/icons/PeopleOutline\";\r\nimport LibraryBooksIcon from \"@material-ui/icons/LibraryBooks\";\r\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\r\n\r\nclass Recommendation extends Component {\r\n  state = {\r\n    key: \"Database\",\r\n  };\r\n  componentDidMount() {}\r\n  render() {\r\n    return (\r\n      //   <Tabs\r\n      //     id=\"controlled-tab-example\"\r\n      //     activeKey={this.state.key}\r\n      //     onSelect={(k) => this.setState({ key: k })}\r\n      //   >\r\n      //     <Tab eventKey=\"Database\" title=\"Database\">\r\n      //       <h1>Database</h1>\r\n      //     </Tab>\r\n      //     <Tab eventKey=\"Resume\" title=\"Resume\">\r\n      //       <h1>Resume</h1>\r\n      //     </Tab>\r\n      //   </Tabs>\r\n\r\n      <>\r\n        <div\r\n          className=\"subheader py-2 py-lg-6  subheader-transparent \"\r\n          id=\"kt_subheader\"\r\n        >\r\n          <ToastContainer />\r\n          <div className=\" container  d-flex align-items-center justify-content-between flex-wrap flex-sm-nowrap\">\r\n            <div className=\"d-flex align-items-center flex-wrap mr-2\">\r\n              <h5 className=\"text-dark font-weight-bold mt-2 mb-2 mr-5\">\r\n                Recommendation\r\n              </h5>\r\n              <div className=\"subheader-separator subheader-separator-ver mt-2 mb-2 mr-4 bg-gray-200\"></div>\r\n            </div>\r\n            <div class=\"d-flex align-items-center flex-wrap\">\r\n              <Badge variant=\"primary\">\r\n                <div className=\"d-flex align-items-center flex-wrap mr-2\">\r\n                  <h6>{dayjs().format(\"DD MMMM, dddd\")}</h6>\r\n                  <div className=\"subheader-separator subheader-separator-ver mt-2 mb-2 mr-4 ml-4 bg-gray-200\"></div>\r\n                  <h6>\r\n                    <LiveClock format=\"hh:mm a\" ticking />\r\n                  </h6>\r\n                </div>\r\n              </Badge>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"container\">\r\n          <div className=\"card\">\r\n            <Tab.Container id=\"Database\" defaultActiveKey=\"Database\">\r\n              <div className=\"card-header\">\r\n                <div className=\"card-title\">\r\n                  <Nav variant=\"pills\">\r\n                    <Nav.Item>\r\n                      <Nav.Link eventKey=\"Database\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"mr-3\">\r\n                            <StorageRoundedIcon />\r\n                          </div>\r\n                          <div>Database</div>\r\n                        </div>\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                      <Nav.Link eventKey=\"Resume\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"mr-3\">\r\n                            <AssignmentIndRoundedIcon />\r\n                          </div>\r\n                          <div>Resume</div>\r\n                        </div>\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                  </Nav>\r\n                </div>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <Tab.Content>\r\n                  <Tab.Pane eventKey=\"Database\">\r\n                    <div>\r\n                      <Tab.Container\r\n                        id=\"DatabaseRecommender\"\r\n                        defaultActiveKey=\"ProjectRecommender\"\r\n                      >\r\n                        <div>\r\n                          <div className=\"card-title\">\r\n                            <Nav variant=\"pills\">\r\n                              <Nav.Item>\r\n                                <Nav.Link eventKey=\"ProjectRecommender\">\r\n                                  <div className=\"d-flex align-items-center\">\r\n                                    <div className=\"mr-3\">\r\n                                      <LibraryBooksIcon />\r\n                                    </div>\r\n                                    <div>Project Recommender</div>\r\n                                  </div>\r\n                                </Nav.Link>\r\n                              </Nav.Item>\r\n                              <Nav.Item>\r\n                                <Nav.Link eventKey=\"UserRecommender\">\r\n                                  <div className=\"d-flex align-items-center\">\r\n                                    <div className=\"mr-3\">\r\n                                      <PeopleOutlineIcon />\r\n                                    </div>\r\n                                    <div>User Recommender</div>\r\n                                  </div>\r\n                                </Nav.Link>\r\n                              </Nav.Item>\r\n                              <Nav.Item>\r\n                                <Nav.Link eventKey=\"ProjectChecker\">\r\n                                  <div className=\"d-flex align-items-center\">\r\n                                    <div className=\"mr-3\">\r\n                                      <FileCopyIcon />\r\n                                    </div>\r\n                                    <div>Project Checker</div>\r\n                                  </div>\r\n                                </Nav.Link>\r\n                              </Nav.Item>\r\n                            </Nav>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                          <Tab.Content>\r\n                            <Tab.Pane eventKey=\"ProjectRecommender\">\r\n                              <div className=\"row row-cols-1 \">\r\n                                Project Recommender\r\n                              </div>\r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"UserRecommender\">\r\n                              <div className=\"row row-cols-1 \">\r\n                                User Recommender\r\n                              </div>\r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"ProjectChecker\">\r\n                              <div className=\"row row-cols-1 \">\r\n                                Project Checker\r\n                              </div>\r\n                            </Tab.Pane>\r\n                          </Tab.Content>\r\n                        </div>\r\n                      </Tab.Container>\r\n                    </div>\r\n                  </Tab.Pane>\r\n                  <Tab.Pane eventKey=\"Resume\">\r\n                    <div className=\"row row-cols-1 row-cols-md-2\">Resumes</div>\r\n                  </Tab.Pane>\r\n                </Tab.Content>\r\n              </div>\r\n            </Tab.Container>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Recommendation;\r\n","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\EditProfile.js",["252","253"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\apiPosts.js",["254","255","256"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\index.js",[],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\TextPostView.js",["257","258","259","260","261","262"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\LeaveProject.js",["263"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\auth\\index.js",[],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\Emoji.js",[],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\FeedbackForm.js",["264"],{"ruleId":"265","severity":1,"message":"266","line":1,"column":17,"nodeType":"267","messageId":"268","endLine":1,"endColumn":26},{"ruleId":"265","severity":1,"message":"269","line":2,"column":25,"nodeType":"267","messageId":"268","endLine":2,"endColumn":29},{"ruleId":"265","severity":1,"message":"270","line":11,"column":8,"nodeType":"267","messageId":"268","endLine":11,"endColumn":14},{"ruleId":"265","severity":1,"message":"271","line":21,"column":8,"nodeType":"267","messageId":"268","endLine":21,"endColumn":17},{"ruleId":"265","severity":1,"message":"272","line":22,"column":8,"nodeType":"267","messageId":"268","endLine":22,"endColumn":13},{"ruleId":"265","severity":1,"message":"273","line":23,"column":10,"nodeType":"267","messageId":"268","endLine":23,"endColumn":15},{"ruleId":"265","severity":1,"message":"274","line":28,"column":9,"nodeType":"267","messageId":"268","endLine":28,"endColumn":17},{"ruleId":"275","severity":1,"message":"276","line":52,"column":13,"nodeType":"277","endLine":62,"endColumn":4},{"ruleId":"275","severity":1,"message":"278","line":62,"column":6,"nodeType":"279","endLine":62,"endColumn":8,"suggestions":"280"},{"ruleId":"275","severity":1,"message":"281","line":109,"column":6,"nodeType":"279","endLine":109,"endColumn":8,"suggestions":"282"},{"ruleId":"275","severity":1,"message":"283","line":138,"column":6,"nodeType":"279","endLine":138,"endColumn":12,"suggestions":"284"},{"ruleId":"285","severity":1,"message":"286","line":298,"column":29,"nodeType":"287","endLine":301,"endColumn":31},{"ruleId":"288","replacedBy":"289"},{"ruleId":"290","replacedBy":"291"},{"ruleId":"285","severity":1,"message":"286","line":102,"column":13,"nodeType":"287","endLine":102,"endColumn":35},{"ruleId":"265","severity":1,"message":"292","line":2,"column":10,"nodeType":"267","messageId":"268","endLine":2,"endColumn":19},{"ruleId":"265","severity":1,"message":"293","line":2,"column":21,"nodeType":"267","messageId":"268","endLine":2,"endColumn":25},{"ruleId":"265","severity":1,"message":"294","line":2,"column":27,"nodeType":"267","messageId":"268","endLine":2,"endColumn":33},{"ruleId":"295","severity":1,"message":"296","line":498,"column":42,"nodeType":"277","messageId":"297","endLine":498,"endColumn":44},{"ruleId":"288","replacedBy":"298"},{"ruleId":"290","replacedBy":"299"},{"ruleId":"300","severity":1,"message":"301","line":2,"column":46,"nodeType":"302","messageId":"303","endLine":2,"endColumn":47},{"ruleId":"300","severity":1,"message":"301","line":17,"column":46,"nodeType":"302","messageId":"303","endLine":17,"endColumn":47},{"ruleId":"300","severity":1,"message":"301","line":33,"column":46,"nodeType":"302","messageId":"303","endLine":33,"endColumn":47},{"ruleId":"300","severity":1,"message":"301","line":154,"column":51,"nodeType":"302","messageId":"303","endLine":154,"endColumn":52},{"ruleId":"300","severity":1,"message":"301","line":193,"column":51,"nodeType":"302","messageId":"303","endLine":193,"endColumn":52},{"ruleId":"300","severity":1,"message":"301","line":209,"column":49,"nodeType":"302","messageId":"303","endLine":209,"endColumn":50},{"ruleId":"265","severity":1,"message":"304","line":5,"column":8,"nodeType":"267","messageId":"268","endLine":5,"endColumn":19},{"ruleId":"305","severity":1,"message":"306","line":97,"column":65,"nodeType":"302","messageId":"307","endLine":97,"endColumn":67},{"ruleId":"265","severity":1,"message":"308","line":10,"column":10,"nodeType":"267","messageId":"268","endLine":10,"endColumn":14},{"ruleId":"275","severity":1,"message":"309","line":44,"column":6,"nodeType":"279","endLine":44,"endColumn":8,"suggestions":"310"},{"ruleId":"275","severity":1,"message":"311","line":64,"column":6,"nodeType":"279","endLine":64,"endColumn":12,"suggestions":"312"},{"ruleId":"275","severity":1,"message":"313","line":186,"column":6,"nodeType":"279","endLine":186,"endColumn":12,"suggestions":"314"},{"ruleId":"265","severity":1,"message":"315","line":3,"column":19,"nodeType":"267","messageId":"268","endLine":3,"endColumn":27},{"ruleId":"295","severity":1,"message":"296","line":8,"column":42,"nodeType":"277","messageId":"297","endLine":8,"endColumn":44},{"ruleId":"265","severity":1,"message":"266","line":1,"column":17,"nodeType":"267","messageId":"268","endLine":1,"endColumn":26},{"ruleId":"295","severity":1,"message":"316","line":27,"column":37,"nodeType":"277","messageId":"317","endLine":27,"endColumn":39},{"ruleId":"295","severity":1,"message":"316","line":29,"column":25,"nodeType":"277","messageId":"317","endLine":29,"endColumn":27},{"ruleId":"265","severity":1,"message":"318","line":1,"column":10,"nodeType":"267","messageId":"268","endLine":1,"endColumn":26},{"ruleId":"319","severity":1,"message":"320","line":4,"column":1,"nodeType":"321","endLine":9,"endColumn":2},{"ruleId":"265","severity":1,"message":"322","line":19,"column":8,"nodeType":"267","messageId":"268","endLine":19,"endColumn":25},{"ruleId":"265","severity":1,"message":"323","line":22,"column":10,"nodeType":"267","messageId":"268","endLine":22,"endColumn":33},{"ruleId":"295","severity":1,"message":"316","line":52,"column":25,"nodeType":"277","messageId":"317","endLine":52,"endColumn":27},{"ruleId":"265","severity":1,"message":"322","line":10,"column":8,"nodeType":"267","messageId":"268","endLine":10,"endColumn":25},{"ruleId":"295","severity":1,"message":"316","line":30,"column":35,"nodeType":"277","messageId":"317","endLine":30,"endColumn":37},{"ruleId":"265","severity":1,"message":"324","line":16,"column":8,"nodeType":"267","messageId":"268","endLine":16,"endColumn":19},{"ruleId":"265","severity":1,"message":"292","line":24,"column":3,"nodeType":"267","messageId":"268","endLine":24,"endColumn":12},{"ruleId":"265","severity":1,"message":"293","line":26,"column":3,"nodeType":"267","messageId":"268","endLine":26,"endColumn":7},{"ruleId":"265","severity":1,"message":"325","line":39,"column":8,"nodeType":"267","messageId":"268","endLine":39,"endColumn":16},{"ruleId":"285","severity":1,"message":"286","line":121,"column":15,"nodeType":"287","endLine":121,"endColumn":75},{"ruleId":"265","severity":1,"message":"326","line":162,"column":7,"nodeType":"267","messageId":"268","endLine":162,"endColumn":11},{"ruleId":"285","severity":1,"message":"286","line":178,"column":19,"nodeType":"287","endLine":178,"endColumn":79},{"ruleId":"265","severity":1,"message":"322","line":2,"column":8,"nodeType":"267","messageId":"268","endLine":2,"endColumn":25},{"ruleId":"265","severity":1,"message":"269","line":6,"column":20,"nodeType":"267","messageId":"268","endLine":6,"endColumn":24},{"ruleId":"265","severity":1,"message":"327","line":8,"column":10,"nodeType":"267","messageId":"268","endLine":8,"endColumn":15},{"ruleId":"265","severity":1,"message":"328","line":8,"column":17,"nodeType":"267","messageId":"268","endLine":8,"endColumn":25},{"ruleId":"265","severity":1,"message":"329","line":9,"column":10,"nodeType":"267","messageId":"268","endLine":9,"endColumn":15},{"ruleId":"265","severity":1,"message":"330","line":10,"column":10,"nodeType":"267","messageId":"268","endLine":10,"endColumn":18},{"ruleId":"295","severity":1,"message":"316","line":19,"column":25,"nodeType":"277","messageId":"317","endLine":19,"endColumn":27},{"ruleId":"295","severity":1,"message":"316","line":40,"column":32,"nodeType":"277","messageId":"317","endLine":40,"endColumn":34},{"ruleId":"265","severity":1,"message":"322","line":2,"column":8,"nodeType":"267","messageId":"268","endLine":2,"endColumn":25},{"ruleId":"265","severity":1,"message":"331","line":3,"column":10,"nodeType":"267","messageId":"268","endLine":3,"endColumn":14},{"ruleId":"265","severity":1,"message":"269","line":6,"column":20,"nodeType":"267","messageId":"268","endLine":6,"endColumn":24},{"ruleId":"265","severity":1,"message":"327","line":8,"column":10,"nodeType":"267","messageId":"268","endLine":8,"endColumn":15},{"ruleId":"265","severity":1,"message":"328","line":8,"column":17,"nodeType":"267","messageId":"268","endLine":8,"endColumn":25},{"ruleId":"265","severity":1,"message":"330","line":10,"column":10,"nodeType":"267","messageId":"268","endLine":10,"endColumn":18},{"ruleId":"295","severity":1,"message":"316","line":40,"column":28,"nodeType":"277","messageId":"317","endLine":40,"endColumn":30},{"ruleId":"295","severity":1,"message":"316","line":13,"column":32,"nodeType":"277","messageId":"317","endLine":13,"endColumn":34},{"ruleId":"275","severity":1,"message":"332","line":20,"column":6,"nodeType":"279","endLine":20,"endColumn":12,"suggestions":"333"},{"ruleId":"275","severity":1,"message":"334","line":20,"column":7,"nodeType":"335","endLine":20,"endColumn":11},{"ruleId":"265","severity":1,"message":"336","line":4,"column":10,"nodeType":"267","messageId":"268","endLine":4,"endColumn":28},{"ruleId":"265","severity":1,"message":"337","line":6,"column":10,"nodeType":"267","messageId":"268","endLine":6,"endColumn":13},{"ruleId":"265","severity":1,"message":"338","line":12,"column":10,"nodeType":"267","messageId":"268","endLine":12,"endColumn":24},{"ruleId":"265","severity":1,"message":"339","line":13,"column":8,"nodeType":"267","messageId":"268","endLine":13,"endColumn":14},{"ruleId":"265","severity":1,"message":"274","line":22,"column":9,"nodeType":"267","messageId":"268","endLine":22,"endColumn":17},{"ruleId":"340","severity":1,"message":"341","line":71,"column":27,"nodeType":"287","endLine":71,"endColumn":74},{"ruleId":"340","severity":1,"message":"341","line":85,"column":27,"nodeType":"287","endLine":85,"endColumn":74},{"ruleId":"340","severity":1,"message":"341","line":99,"column":27,"nodeType":"287","endLine":99,"endColumn":75},{"ruleId":"340","severity":1,"message":"341","line":113,"column":27,"nodeType":"287","endLine":113,"endColumn":75},{"ruleId":"340","severity":1,"message":"341","line":127,"column":27,"nodeType":"287","endLine":127,"endColumn":75},{"ruleId":"340","severity":1,"message":"341","line":161,"column":27,"nodeType":"287","endLine":161,"endColumn":75},{"ruleId":"340","severity":1,"message":"341","line":181,"column":27,"nodeType":"287","endLine":181,"endColumn":75},{"ruleId":"340","severity":1,"message":"341","line":201,"column":27,"nodeType":"287","endLine":201,"endColumn":75},{"ruleId":"265","severity":1,"message":"342","line":26,"column":10,"nodeType":"267","messageId":"268","endLine":26,"endColumn":38},{"ruleId":"265","severity":1,"message":"343","line":28,"column":7,"nodeType":"267","messageId":"268","endLine":28,"endColumn":15},{"ruleId":"295","severity":1,"message":"316","line":42,"column":35,"nodeType":"277","messageId":"317","endLine":42,"endColumn":37},{"ruleId":"265","severity":1,"message":"344","line":74,"column":11,"nodeType":"267","messageId":"268","endLine":74,"endColumn":24},{"ruleId":"265","severity":1,"message":"345","line":81,"column":11,"nodeType":"267","messageId":"268","endLine":81,"endColumn":19},{"ruleId":"265","severity":1,"message":"346","line":112,"column":38,"nodeType":"267","messageId":"268","endLine":112,"endColumn":44},{"ruleId":"265","severity":1,"message":"347","line":11,"column":8,"nodeType":"267","messageId":"268","endLine":11,"endColumn":14},{"ruleId":"295","severity":1,"message":"316","line":11,"column":32,"nodeType":"277","messageId":"317","endLine":11,"endColumn":34},{"ruleId":"275","severity":1,"message":"348","line":18,"column":6,"nodeType":"279","endLine":18,"endColumn":8,"suggestions":"349"},{"ruleId":"265","severity":1,"message":"350","line":3,"column":26,"nodeType":"267","messageId":"268","endLine":3,"endColumn":31},{"ruleId":"295","severity":1,"message":"316","line":47,"column":33,"nodeType":"277","messageId":"317","endLine":47,"endColumn":35},{"ruleId":"285","severity":1,"message":"286","line":155,"column":17,"nodeType":"287","endLine":155,"endColumn":73},{"ruleId":"265","severity":1,"message":"351","line":3,"column":7,"nodeType":"267","messageId":"268","endLine":3,"endColumn":13},{"ruleId":"300","severity":1,"message":"301","line":351,"column":53,"nodeType":"302","messageId":"303","endLine":351,"endColumn":54},{"ruleId":"295","severity":1,"message":"316","line":371,"column":30,"nodeType":"277","messageId":"317","endLine":371,"endColumn":32},{"ruleId":"265","severity":1,"message":"324","line":14,"column":8,"nodeType":"267","messageId":"268","endLine":14,"endColumn":19},{"ruleId":"265","severity":1,"message":"292","line":21,"column":3,"nodeType":"267","messageId":"268","endLine":21,"endColumn":12},{"ruleId":"265","severity":1,"message":"293","line":23,"column":3,"nodeType":"267","messageId":"268","endLine":23,"endColumn":7},{"ruleId":"285","severity":1,"message":"286","line":106,"column":13,"nodeType":"287","endLine":106,"endColumn":73},{"ruleId":"265","severity":1,"message":"326","line":135,"column":7,"nodeType":"267","messageId":"268","endLine":135,"endColumn":11},{"ruleId":"285","severity":1,"message":"286","line":151,"column":19,"nodeType":"287","endLine":151,"endColumn":79},{"ruleId":"295","severity":1,"message":"316","line":38,"column":22,"nodeType":"277","messageId":"317","endLine":38,"endColumn":24},{"ruleId":"275","severity":1,"message":"352","line":33,"column":6,"nodeType":"279","endLine":33,"endColumn":8,"suggestions":"353"},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'NavBar' is defined but never used.","'LiveClock' is defined but never used.","'dayjs' is defined but never used.","'Badge' is defined but never used.","'dispatch' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["354"],"React Hook useEffect has missing dependencies: 'chat' and 'user._id'. Either include them or remove the dependency array.",["355"],"React Hook useEffect has a missing dependency: 'user._id'. Either include it or remove the dependency array.",["356"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["357"],"no-negated-in-lhs",["358"],"'Accordion' is defined but never used.","'Card' is defined but never used.","'Button' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd",["357"],["358"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'JoinProject' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","unexpected","'read' is defined but never used.","React Hook useEffect has missing dependencies: 'chat.length' and 'project_id'. Either include them or remove the dependency array.",["359"],"React Hook useEffect has a missing dependency: 'project_id'. Either include it or remove the dependency array.",["360"],"React Hook useLayoutEffect has a missing dependency: 'stayScrolled'. Either include it or remove the dependency array.",["361"],"'getTasks' is defined but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","'devToolsEnhancer' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'SearchTwoToneIcon' is defined but never used.","'ReactSearchAutocomplete' is defined but never used.","'CommentIcon' is defined but never used.","'Dropdown' is defined but never used.","'tags' is assigned a value but never used.","'query' is assigned a value but never used.","'setQuery' is assigned a value but never used.","'users' is assigned a value but never used.","'projects' is assigned a value but never used.","'list' is defined but never used.","React Hook useEffect has a missing dependency: 'following_users'. Either include it or remove the dependency array.",["362"],"The null literal is not a valid dependency because it never changes. You can safely remove it.","Literal","'clearNotifications' is defined but never used.","'Nav' is defined but never used.","'getCurrentUser' is defined but never used.","'socket' is defined but never used.","jsx-a11y/role-supports-aria-props","The attribute aria-haspopup is not supported by the role listitem. This role is implicit on the element li.","'removeAndUpdateNotifications' is defined but never used.","'BASE_URL' is assigned a value but never used.","'notifications' is assigned a value but never used.","'selected' is assigned a value but never used.","'skills' is assigned a value but never used.","'moment' is defined but never used.","React Hook useEffect has a missing dependency: 'followers_users'. Either include it or remove the dependency array.",["363"],"'toast' is defined but never used.","'userId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'projectId'. Either include it or remove the dependency array.",["364"],{"desc":"365","fix":"366"},{"desc":"367","fix":"368"},{"desc":"367","fix":"369"},"no-global-assign","no-unsafe-negation",{"desc":"370","fix":"371"},{"desc":"372","fix":"373"},{"desc":"374","fix":"375"},{"desc":"376","fix":"377"},{"desc":"378","fix":"379"},{"desc":"380","fix":"381"},"Update the dependencies array to be: [dispatch]",{"range":"382","text":"383"},"Update the dependencies array to be: [chat, user._id]",{"range":"384","text":"385"},{"range":"386","text":"385"},"Update the dependencies array to be: [chat.length, project_id]",{"range":"387","text":"388"},"Update the dependencies array to be: [chat, project_id]",{"range":"389","text":"390"},"Update the dependencies array to be: [chat, stayScrolled]",{"range":"391","text":"392"},"Update the dependencies array to be: [following_users]",{"range":"393","text":"394"},"Update the dependencies array to be: [followers_users]",{"range":"395","text":"396"},"Update the dependencies array to be: [projectId]",{"range":"397","text":"398"},[2100,2102],"[dispatch]",[3310,3312],"[chat, user._id]",[4108,4114],[1365,1367],"[chat.length, project_id]",[1946,1952],"[chat, project_id]",[6018,6024],"[chat, stayScrolled]",[657,663],"[following_users]",[581,583],"[followers_users]",[1239,1241],"[projectId]"]