[{"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\EditProject.js":"1","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\MyProjects.js":"2","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Tagify\\SkillsInput.js":"3","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\PostVideo.js":"4","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Tagify\\TagFinal.js":"5","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\User.js":"6","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\NavBar.js":"7","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Menu.js":"8","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\DeleteUser.js":"9","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\Socket.js":"10","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\UserRecommendation.js":"11","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\layout\\Pert.js":"12","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Users.js":"13","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\apiProject.js":"14","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Profile.js":"15","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\SubmitProject.js":"16","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\apiNotifications.js":"17","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\RatingComponent.js":"18","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Social.js":"19","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\apiPosts.js":"20","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\DragDropImages.js":"21","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\MyChats.js":"22","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\taskComponents\\AddTask.js":"23","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Tagify\\Assigner.js":"24","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\JoinProject.js":"25","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\ModalButton.js":"26","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Form.js":"27","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Notifications.js":"28","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\LeaveProject.js":"29","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\Emoji.js":"30","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\store.js":"31","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\newProjectForm\\CreateProject.js":"32","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\layout\\LayoutComponent.js":"33","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Landing.js":"34","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\notifications.js":"35"},{"size":5907,"mtime":1619336138172,"results":"36","hashOfConfig":"37"},{"size":24334,"mtime":1620823754978,"results":"38","hashOfConfig":"37"},{"size":499,"mtime":1618198716000,"results":"39","hashOfConfig":"37"},{"size":2095,"mtime":1620823790106,"results":"40","hashOfConfig":"37"},{"size":1247,"mtime":1618198716000,"results":"41","hashOfConfig":"37"},{"size":2871,"mtime":1618198716000,"results":"42","hashOfConfig":"37"},{"size":346,"mtime":1618198716000,"results":"43","hashOfConfig":"37"},{"size":14986,"mtime":1620823754796,"results":"44","hashOfConfig":"37"},{"size":1156,"mtime":1618198716000,"results":"45","hashOfConfig":"37"},{"size":242,"mtime":1618272929988,"results":"46","hashOfConfig":"37"},{"size":3576,"mtime":1619598848257,"results":"47","hashOfConfig":"37"},{"size":4968,"mtime":1618198716000,"results":"48","hashOfConfig":"37"},{"size":8792,"mtime":1620823755394,"results":"49","hashOfConfig":"37"},{"size":15217,"mtime":1618826709693,"results":"50","hashOfConfig":"37"},{"size":16462,"mtime":1620255378770,"results":"51","hashOfConfig":"37"},{"size":4607,"mtime":1618892882908,"results":"52","hashOfConfig":"37"},{"size":903,"mtime":1619794611221,"results":"53","hashOfConfig":"37"},{"size":1643,"mtime":1618321235394,"results":"54","hashOfConfig":"37"},{"size":3226,"mtime":1618198716000,"results":"55","hashOfConfig":"37"},{"size":6645,"mtime":1620957283509,"results":"56","hashOfConfig":"37"},{"size":4933,"mtime":1620957351106,"results":"57","hashOfConfig":"37"},{"size":14301,"mtime":1620823755101,"results":"58","hashOfConfig":"37"},{"size":6078,"mtime":1619342415520,"results":"59","hashOfConfig":"37"},{"size":1452,"mtime":1618198716000,"results":"60","hashOfConfig":"37"},{"size":10158,"mtime":1620823754938,"results":"61","hashOfConfig":"37"},{"size":783,"mtime":1618198716000,"results":"62","hashOfConfig":"37"},{"size":4451,"mtime":1618198716000,"results":"63","hashOfConfig":"37"},{"size":6833,"mtime":1619973722713,"results":"64","hashOfConfig":"37"},{"size":2371,"mtime":1619353501608,"results":"65","hashOfConfig":"37"},{"size":2120,"mtime":1618319544804,"results":"66","hashOfConfig":"37"},{"size":288,"mtime":1618198716000,"results":"67","hashOfConfig":"37"},{"size":7174,"mtime":1620823755007,"results":"68","hashOfConfig":"37"},{"size":21050,"mtime":1619573672552,"results":"69","hashOfConfig":"37"},{"size":426,"mtime":1620823754791,"results":"70","hashOfConfig":"37"},{"size":1948,"mtime":1620180685570,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"13vq143",{"filePath":"74","messages":"75","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"77"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"77"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"96"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"96"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"96"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\EditProject.js",["157"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\MyProjects.js",["158","159","160","161","162"],"import React, { Component } from \"react\";\r\nimport { listmyprojects } from \"./apiProject\";\r\nimport {\r\n  OverlayTrigger,\r\n  Tooltip,\r\n  Accordion,\r\n  Button,\r\n  Card,\r\n  Tab,\r\n  Nav,\r\n} from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getCurrentUser } from \"./../user/apiUser\";\r\nimport RoleReq from \"./RoleReq\";\r\nimport AssignedTo from \"./AssignedTo\";\r\nimport DeleteProject from \"./DeleteProject\";\r\nimport LeaveProject from \"./LeaveProject\";\r\nimport EditTwoToneIcon from \"@material-ui/icons/EditTwoTone\";\r\nimport DashboardTwoToneIcon from \"@material-ui/icons/DashboardTwoTone\";\r\nimport SubmitProject from \"./SubmitProject\";\r\nimport UserRecommendation from \"./UserRecommendation\";\r\nimport socket from \"./../utils/Socket\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { clearAll } from \"../store/cpm\";\r\nimport { connect } from \"react-redux\";\r\nimport LiveClock from \"react-live-clock\";\r\nimport dayjs from \"dayjs\";\r\nimport { Badge } from \"react-bootstrap\";\r\nimport QueryBuilderTwoToneIcon from \"@material-ui/icons/QueryBuilderTwoTone\";\r\nimport ErrorTwoToneIcon from \"@material-ui/icons/ErrorTwoTone\";\r\nimport CheckCircleTwoToneIcon from \"@material-ui/icons/CheckCircleTwoTone\";\r\n\r\nclass MyProjects extends Component {\r\n  state = {\r\n    myProjects: [],\r\n    currentProject: {},\r\n    user: {},\r\n  };\r\n  componentDidMount() {\r\n    listmyprojects().then((data) => this.setState({ myProjects: data }));\r\n    // toast.dark(\"Loaded\");\r\n  }\r\n  renderProject(project) {\r\n    // return <h5>{project.title}</h5>;\r\n    console.log(project.title);\r\n  }\r\n  render() {\r\n    if (\r\n      this.state.myProjects === undefined ||\r\n      this.state.myProjects.length === 0\r\n    )\r\n      return <h1>No Projects</h1>;\r\n    const { myProjects } = this.state;\r\n    console.log(myProjects);\r\n    let onGoingProjects = myProjects.userProjects.filter((x) =>\r\n      x.status.includes(\"In Progress\")\r\n    );\r\n    let CompletedProjects = myProjects.userProjects.filter((x) =>\r\n      x.status.includes(\"Completed\")\r\n    );\r\n    socket.emit(\"getOnlineUsers\");\r\n    socket.on(\"onlineUsers\", (data) => console.log(data));\r\n    return (\r\n      <>\r\n        <div\r\n          className=\"subheader py-2 py-lg-6  subheader-transparent \"\r\n          id=\"kt_subheader\"\r\n        >\r\n          <div className=\" container  d-flex align-items-center justify-content-between flex-wrap flex-sm-nowrap\">\r\n            <div className=\"d-flex align-items-center flex-wrap mr-2\">\r\n              <h5 className=\"text-dark font-weight-bold mt-2 mb-2 mr-5\">\r\n                My Projects\r\n              </h5>\r\n              <div className=\"subheader-separator subheader-separator-ver mt-2 mb-2 mr-4 bg-gray-200\"></div>\r\n            </div>\r\n            <div class=\"d-flex align-items-center flex-wrap\">\r\n              <Badge variant=\"primary\">\r\n                <div className=\"d-flex align-items-center flex-wrap mr-2\">\r\n                  <h6>{dayjs().format(\"DD MMMM, dddd\")}</h6>\r\n                  <div className=\"subheader-separator subheader-separator-ver mt-2 mb-2 mr-4 ml-4 bg-gray-200\"></div>\r\n                  <h6>\r\n                    <LiveClock format=\"hh:mm a\" ticking />\r\n                  </h6>\r\n                </div>\r\n              </Badge>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"container\">\r\n          <div className=\"card\">\r\n            <Tab.Container id=\"projectStats\" defaultActiveKey=\"ongoingProj\">\r\n              <div className=\"card-header\">\r\n                <div className=\"card-title\">\r\n                  <Nav variant=\"pills\">\r\n                    <Nav.Item>\r\n                      <Nav.Link eventKey=\"ongoingProj\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"mr-3\">\r\n                            <QueryBuilderTwoToneIcon />\r\n                          </div>\r\n                          <div>Ongoing Projects</div>\r\n                        </div>\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                      <Nav.Link eventKey=\"overdueProj\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"mr-3\">\r\n                            <ErrorTwoToneIcon />\r\n                          </div>\r\n                          <div>Overdue Projects</div>\r\n                        </div>\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                      <Nav.Link eventKey=\"completedProj\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"mr-3\">\r\n                            <CheckCircleTwoToneIcon />\r\n                          </div>\r\n                          <div>Completed Projects</div>\r\n                        </div>\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                  </Nav>\r\n                </div>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <Tab.Content>\r\n                  <Tab.Pane eventKey=\"ongoingProj\">\r\n                    <div className=\"row row-cols-1 row-cols-md-2\">\r\n                      {onGoingProjects.map((project) => (\r\n                        <div className=\"col mb-4\">\r\n                          <div className=\"card card-custom gutter-b card-stretch\">\r\n                            <div className=\"card-body\">\r\n                              <div className=\"d-flex align-items-center\">\r\n                                <div className=\"d-flex-flex-column mr-auto\">\r\n                                  <p className=\"card-title font-weight-bolder font-size-h5 text-dark mb-1\">\r\n                                    {project.title}\r\n                                  </p>\r\n                                  <span className=\"text-muted font-weight-bold\">\r\n                                    {project.leader} [Load username]\r\n                                  </span>\r\n                                </div>\r\n                                <div className=\"card-toolbar mb-auto\">\r\n                                  <div className=\"d-flex align-items-center justify-content-between\">\r\n                                    <OverlayTrigger\r\n                                      key=\"top\"\r\n                                      placement=\"top\"\r\n                                      overlay={\r\n                                        <Tooltip id=\"top2\">\r\n                                          Project Dashboard\r\n                                        </Tooltip>\r\n                                      }\r\n                                    >\r\n                                      <Link\r\n                                        className=\"btn btn-info mr-2\"\r\n                                        to={{\r\n                                          pathname: `/myprojects/dashboard/${project._id}`,\r\n                                          state: { project: project },\r\n                                        }}\r\n                                      >\r\n                                        <DashboardTwoToneIcon />\r\n                                      </Link>\r\n                                    </OverlayTrigger>\r\n                                    {getCurrentUser()._id === project.leader ? (\r\n                                      <div className=\"d-flex align-items-center justify-content-between\">\r\n                                        <OverlayTrigger\r\n                                          key=\"top\"\r\n                                          placement=\"top\"\r\n                                          overlay={\r\n                                            <Tooltip id=\"tooltip-top\">\r\n                                              Edit Project\r\n                                            </Tooltip>\r\n                                          }\r\n                                        >\r\n                                          <Link\r\n                                            className=\"btn btn-warning mr-2\"\r\n                                            to={{\r\n                                              pathname: `/myprojects/edit/${project._id}`,\r\n                                              state: { project: project },\r\n                                            }}\r\n                                          >\r\n                                            <EditTwoToneIcon />\r\n                                          </Link>\r\n                                        </OverlayTrigger>\r\n\r\n                                        <DeleteProject\r\n                                          projectId={project._id}\r\n                                        />\r\n                                        {project.completion_percentage ===\r\n                                        100 ? (\r\n                                          <SubmitProject\r\n                                            projectId={project._id}\r\n                                            projectTeam={project.team}\r\n                                            projectLeader={project.leader}\r\n                                          />\r\n                                        ) : (\r\n                                          <div> </div>\r\n                                        )}\r\n                                      </div>\r\n                                    ) : (\r\n                                      <div>\r\n                                        <LeaveProject project={project} />\r\n                                      </div>\r\n                                    )}\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"d-flex flex-wrap mt-14\">\r\n                                <div className=\"mr-12 d-flex flex-column mb-7\">\r\n                                  <span className=\"d-block font-weight-bold mb-4\">\r\n                                    Start Date\r\n                                  </span>\r\n                                  <span className=\"btn btn-light-primary btn-sm font-weight-bold btn-upper btn-text\">\r\n                                    [Load]\r\n                                  </span>\r\n                                </div>\r\n                                <div className=\"mr-12 d-flex flex-column mb-7\">\r\n                                  <span className=\"d-block font-weight-bold mb-4\">\r\n                                    Due Date\r\n                                  </span>\r\n                                  <span className=\"btn btn-light-primary btn-sm font-weight-bold btn-upper btn-text\">\r\n                                    [Load]\r\n                                  </span>\r\n                                </div>\r\n                                <div className=\"flex-row-fluid mb-7\">\r\n                                  <span className=\"d-block font-weight-bold mb-4\">\r\n                                    Progress\r\n                                  </span>\r\n                                  <div className=\"d-flex align-items-center pt-2\">\r\n                                    <div className=\"progress progress-xs mt-2 mb-2 w-100\">\r\n                                      <div\r\n                                        className=\"progress-bar bg-warning\"\r\n                                        role=\"progressbar\"\r\n                                        style={{ width: \"78%\" }}\r\n                                        aria-valuenow=\"50\"\r\n                                        aria-valuemin=\"0\"\r\n                                        aria-valuemax=\"100\"\r\n                                      ></div>\r\n                                    </div>\r\n                                    <span className=\"ml-3 font-weight-bolder\">\r\n                                      78%[L]\r\n                                    </span>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div className=\"d-flex align-items-center justify-content-between mb-2\">\r\n                                <span className=\"font-weight-bold mr-2\">\r\n                                  Description:{\" \"}\r\n                                </span>\r\n                                <span>{project.description}</span>\r\n                              </div>\r\n                              <div className=\"d-flex align-items-center justify-content-between mb-2\">\r\n                                <span className=\"font-weight-bold mr-2\">\r\n                                  Skills:{\" \"}\r\n                                </span>\r\n                                <span>{project.skills.join(\", \")}</span>\r\n                              </div>\r\n                              <table className=\"table table-light\">\r\n                                <thead>\r\n                                  <tr>\r\n                                    <th key={\"rolename\"}>Role Name</th>\r\n                                    <th key={\"skills\"}>Skills Required</th>\r\n\r\n                                    <th key={\"assigned\"}>Assigned To</th>\r\n                                  </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                  {project.roles.map((role) => (\r\n                                    <tr key={role._id.toString()}>\r\n                                      <td\r\n                                        key={\r\n                                          role._id.toString() +\r\n                                          role.roleName.toString()\r\n                                        }\r\n                                      >\r\n                                        {role.roleName}\r\n                                      </td>\r\n                                      <td\r\n                                        key={\r\n                                          role._id.toString() +\r\n                                          role.roleSkills.toString()\r\n                                        }\r\n                                      >\r\n                                        {role.roleSkills.join(\", \")}\r\n                                      </td>\r\n                                      <td>\r\n                                        {project.leader ===\r\n                                          getCurrentUser()._id &&\r\n                                        role.assignedTo === undefined ? (\r\n                                          <div>\r\n                                            <RoleReq\r\n                                              requestBy={role.requestBy}\r\n                                              projectId={project._id}\r\n                                              roleId={role._id}\r\n                                            />\r\n                                          </div>\r\n                                        ) : (\r\n                                          <div>\r\n                                            <AssignedTo id={role.assignedTo} />\r\n                                          </div>\r\n                                        )}\r\n                                      </td>\r\n                                      <td></td>\r\n                                    </tr>\r\n                                  ))}\r\n                                </tbody>\r\n                              </table>\r\n                              {getCurrentUser()._id === project.leader ? (\r\n                                <UserRecommendation project={project} />\r\n                              ) : (\r\n                                <div></div>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </Tab.Pane>\r\n                  <Tab.Pane eventKey=\"completedProj\">\r\n                    <div className=\"row row-cols-1 row-cols-md-2\">\r\n                      {CompletedProjects.map((project) => (\r\n                        <div className=\"col mb-4\">\r\n                          <div className=\"card card-custom gutter-b card-stretch\">\r\n                            <div className=\"card-body\">\r\n                              <div className=\"d-flex align-items-center\">\r\n                                <div className=\"d-flex-flex-column mr-auto\">\r\n                                  <p className=\"card-title font-weight-bolder font-size-h5 text-dark mb-1\">\r\n                                    {project.title}\r\n                                  </p>\r\n                                  <span className=\"text-muted font-weight-bold\">\r\n                                    {project.leader} [Load username]\r\n                                  </span>\r\n                                </div>\r\n                                <div className=\"card-toolbar mb-auto\">\r\n                                  <div className=\"d-flex align-items-center justify-content-between\">\r\n                                    <OverlayTrigger\r\n                                      key=\"top\"\r\n                                      placement=\"top\"\r\n                                      overlay={\r\n                                        <Tooltip id=\"top2\">\r\n                                          Project Dashboard\r\n                                        </Tooltip>\r\n                                      }\r\n                                    >\r\n                                      <Link\r\n                                        className=\"btn btn-info mr-2\"\r\n                                        to={{\r\n                                          pathname: `/myprojects/dashboard/${project._id}`,\r\n                                          state: { project: project },\r\n                                        }}\r\n                                      >\r\n                                        <DashboardTwoToneIcon />\r\n                                      </Link>\r\n                                    </OverlayTrigger>\r\n                                    {getCurrentUser()._id === project.leader ? (\r\n                                      <div className=\"d-flex align-items-center justify-content-between\">\r\n                                        <OverlayTrigger\r\n                                          key=\"top\"\r\n                                          placement=\"top\"\r\n                                          overlay={\r\n                                            <Tooltip id=\"tooltip-top\">\r\n                                              Edit Project\r\n                                            </Tooltip>\r\n                                          }\r\n                                        >\r\n                                          <Link\r\n                                            className=\"btn btn-warning mr-2\"\r\n                                            to={{\r\n                                              pathname: `/myprojects/edit/${project._id}`,\r\n                                              state: { project: project },\r\n                                            }}\r\n                                          >\r\n                                            <EditTwoToneIcon />\r\n                                          </Link>\r\n                                        </OverlayTrigger>\r\n\r\n                                        <DeleteProject\r\n                                          projectId={project._id}\r\n                                        />\r\n                                        {project.completion_percentage ===\r\n                                        100 ? (\r\n                                          <SubmitProject\r\n                                            projectId={project._id}\r\n                                            projectTeam={project.team}\r\n                                            projectLeader={project.leader}\r\n                                          />\r\n                                        ) : (\r\n                                          <div> </div>\r\n                                        )}\r\n                                      </div>\r\n                                    ) : (\r\n                                      <div>\r\n                                        <LeaveProject project={project} />\r\n                                      </div>\r\n                                    )}\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"d-flex flex-wrap mt-14\">\r\n                                <div className=\"mr-12 d-flex flex-column mb-7\">\r\n                                  <span className=\"d-block font-weight-bold mb-4\">\r\n                                    Start Date\r\n                                  </span>\r\n                                  <span className=\"btn btn-light-primary btn-sm font-weight-bold btn-upper btn-text\">\r\n                                    [Load]\r\n                                  </span>\r\n                                </div>\r\n                                <div className=\"mr-12 d-flex flex-column mb-7\">\r\n                                  <span className=\"d-block font-weight-bold mb-4\">\r\n                                    Due Date\r\n                                  </span>\r\n                                  <span className=\"btn btn-light-primary btn-sm font-weight-bold btn-upper btn-text\">\r\n                                    [Load]\r\n                                  </span>\r\n                                </div>\r\n                                <div className=\"flex-row-fluid mb-7\">\r\n                                  <span className=\"d-block font-weight-bold mb-4\">\r\n                                    Progress\r\n                                  </span>\r\n                                  <div className=\"d-flex align-items-center pt-2\">\r\n                                    <div className=\"progress progress-xs mt-2 mb-2 w-100\">\r\n                                      <div\r\n                                        className=\"progress-bar bg-warning\"\r\n                                        role=\"progressbar\"\r\n                                        style={{ width: \"100%\" }}\r\n                                        aria-valuenow=\"50\"\r\n                                        aria-valuemin=\"0\"\r\n                                        aria-valuemax=\"100\"\r\n                                      ></div>\r\n                                    </div>\r\n                                    <span className=\"ml-3 font-weight-bolder\">\r\n                                      100%\r\n                                    </span>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div className=\"d-flex align-items-center justify-content-between mb-2\">\r\n                                <span className=\"font-weight-bold mr-2\">\r\n                                  Description:{\" \"}\r\n                                </span>\r\n                                <span>{project.description}</span>\r\n                              </div>\r\n                              <div className=\"d-flex align-items-center justify-content-between mb-2\">\r\n                                <span className=\"font-weight-bold mr-2\">\r\n                                  Skills:{\" \"}\r\n                                </span>\r\n                                <span>{project.skills.join(\", \")}</span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </Tab.Pane>\r\n                  <Tab.Pane eventKey=\"overdueProj\">\r\n                    <p>Check with group if Overdue has been added.</p>\r\n                  </Tab.Pane>\r\n                </Tab.Content>\r\n              </div>\r\n            </Tab.Container>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  clearAll: (params) => dispatch(clearAll(params)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(MyProjects);\r\n",["163","164"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Tagify\\SkillsInput.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\PostVideo.js",["165","166"],"import React from \"react\";\r\nimport { DropzoneDialogBase } from \"material-ui-dropzone\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { uploadVideo } from \"./apiPosts\";\r\nexport default function PostVideo() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [fileObjects, setFileObjects] = React.useState([]);\r\n\r\n  const dialogTitle = () => (\r\n    <>\r\n      <span>Upload file</span>\r\n      <IconButton\r\n        style={{ right: \"12px\", top: \"8px\", position: \"absolute\" }}\r\n        onClick={() => setOpen(false)}\r\n      >\r\n        <CloseIcon />\r\n      </IconButton>\r\n    </>\r\n  );\r\n  return (\r\n    <div>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={() => setOpen(true)}>\r\n        Add Video\r\n      </Button>\r\n\r\n      <DropzoneDialogBase\r\n        dialogTitle={dialogTitle()}\r\n        acceptedFiles={[\"video/*\"]}\r\n        fileObjects={fileObjects}\r\n        cancelButtonText={\"cancel\"}\r\n        submitButtonText={\"submit\"}\r\n        maxFileSize={52428800}\r\n        open={open}\r\n        onAdd={(newFileObjs) => {\r\n          console.log(\"onAdd\", newFileObjs);\r\n          setFileObjects([].concat(fileObjects, newFileObjs));\r\n        }}\r\n        onDelete={(deleteFileObj) => {\r\n          let arr = [];\r\n          fileObjects.map((file) => {\r\n            // console.log(file.file.name, deleteFileObj.file.name);\r\n            if (file.file.name !== deleteFileObj.file.name) {\r\n              arr.push(file);\r\n            }\r\n            setFileObjects(arr);\r\n          });\r\n          console.log(\"onDelete\", deleteFileObj);\r\n        }}\r\n        onClose={() => setOpen(false)}\r\n        onSave={() => {\r\n          console.log(\"onSave\", fileObjects);\r\n          fileObjects.map((file) => {\r\n            uploadVideo(file);\r\n            // .then((data) =>\r\n            //   console.log(\"data:\", data)\r\n            // );\r\n          });\r\n          setOpen(false);\r\n        }}\r\n        showPreviews={true}\r\n        showFileNamesInPreview={true}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Tagify\\TagFinal.js",["167","168"],"import React, { useEffect } from \"react\";\nimport Tags from \"@yaireo/tagify/dist/react.tagify\";\nimport \"@yaireo/tagify/dist/tagify.css\";\n// Tagify settings object\nconst baseTagifySettings = {\n  blacklist: [],\n  enforceWhitelist: true,\n  dropdown: {\n    enabled: 0,\n  },\n  callbacks: {},\n};\n\nfunction TagFinal({ label, name, value, suggestions, setSkills }) {\n  const handleChange = (e) => {\n    // console.log(e.detail.tagify.value);\n    let arr = [];\n    e.detail.tagify.value.map((val) => {\n      arr.push(val.value);\n    });\n    setSkills(arr);\n  };\n  const settings = {\n    ...baseTagifySettings,\n    whitelist: suggestions,\n    callbacks: {\n      add: handleChange,\n      remove: handleChange,\n      blur: handleChange,\n      edit: handleChange,\n      invalid: handleChange,\n      click: handleChange,\n      focus: handleChange,\n      \"edit:updated\": handleChange,\n      \"edit:start\": handleChange,\n    },\n  };\n  //   console.log(\"words:\");\n  //   console.log(suggestions);\n  if (suggestions.length === 0) return null;\n  // console.log(initialValue);\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={\"field-\" + name}>{label}</label>\n      <Tags settings={settings} value={value} />\n    </div>\n  );\n}\n\nexport default TagFinal;\n",["169","170"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\User.js",[],["171","172"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\NavBar.js",[],["173","174"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Menu.js",["175","176","177","178","179","180","181","182","183","184","185","186"],"import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { signout, isAuthenticated } from \"../auth\";\r\nimport { clearNotifications } from \"../store/notifications\";\r\nimport \"../styles.css\";\r\nimport { Nav, DropdownButton, Dropdown } from \"react-bootstrap\";\r\nimport Logo from \"../images/logo-letter-5.png\";\r\nimport PersonTwoToneIcon from \"@material-ui/icons/PersonTwoTone\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { getCurrentUser } from \"../user/apiUser\";\r\nimport socket from \"./../utils/Socket\";\r\n\r\nconst isActive = (history, path) => {\r\n  if (history.location.pathname === path)\r\n    return { backgroundColor: \"#3445E5\", color: \"#fff\" };\r\n  else return { color: \"#7E8299\" };\r\n};\r\n\r\nconst Menu = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        id=\"kt_header_mobile\"\r\n        className=\"header-mobile  header-mobile-fixed \"\r\n      >\r\n        <div className=\"d-flex align-items-center\">\r\n          <Link to=\"/home\" className=\"mr-7\">\r\n            <img src={Logo} alt=\"Logo\" style={{ height: \"30px\" }} />\r\n          </Link>\r\n        </div>\r\n        <div className=\"d-flex align-items-center\">\r\n          <button\r\n            className=\"btn p-0 burger-icon ml-4\"\r\n            id=\"kt_header_mobile_toggle\"\r\n          >\r\n            <span></span>\r\n          </button>\r\n          <button className=\"btn p-0 ml-2\">\r\n            <PersonTwoToneIcon />\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"d-flex flex-column flex-root\">\r\n        <div className=\"d-flex flex-row flex-column-fluid page\">\r\n          <div\r\n            className=\"d-flex flex-column flex-row-fluid wrapper\"\r\n            id=\"kt_wrapper\"\r\n          >\r\n            <div id=\"kt_header\" className=\"header flex-column  header-fixed \">\r\n              <div className=\"header-top\">\r\n                <div className=\"container\">\r\n                  <div className=\"d-none d-lg-flex align-items-center mr-3\">\r\n                    <Link to=\"/home\" className=\"mr-7\">\r\n                      <img src={Logo} alt=\"Logo\" style={{ height: \"50px\" }} />\r\n                    </Link>\r\n                  </div>\r\n                  <div\r\n                    className=\"header-menu-wrapper mr-auto header-menu-wrapper-left\"\r\n                    id=\"kt_header_menu_wrapper\"\r\n                  >\r\n                    <div\r\n                      id=\"kt_header_menu\"\r\n                      className=\"header-menu header-menu-left header-menu-mobile  header-menu-layout-default \"\r\n                    >\r\n                      {isAuthenticated() && (\r\n                        <ul className=\"menu-nav \">\r\n                          <li className=\"menu-item\" aria-haspopup=\"true\">\r\n                            <Link\r\n                              to=\"/home\"\r\n                              style={isActive(history, \"/home\")}\r\n                              className=\"menu-link \"\r\n                            >\r\n                              <span\r\n                                style={isActive(history, \"/home\")}\r\n                                className=\"menu-text\"\r\n                              >\r\n                                My Feed\r\n                              </span>\r\n                            </Link>\r\n                          </li>\r\n                          <li className=\"menu-item\" aria-haspopup=\"true\">\r\n                            <Link\r\n                              to=\"/users\"\r\n                              style={isActive(history, \"/users\")}\r\n                              className=\"menu-link \"\r\n                            >\r\n                              <span\r\n                                style={isActive(history, \"/users\")}\r\n                                className=\"menu-text\"\r\n                              >\r\n                                Users\r\n                              </span>\r\n                            </Link>\r\n                          </li>\r\n                          <li className=\"menu-item \" aria-haspopup=\"true\">\r\n                            <Link\r\n                              style={isActive(history, \"/myprojects\")}\r\n                              to={`/myprojects`}\r\n                              className=\"menu-link \"\r\n                            >\r\n                              <span\r\n                                style={isActive(history, \"/myprojects\")}\r\n                                className=\"menu-text\"\r\n                              >\r\n                                My Projects\r\n                              </span>\r\n                            </Link>\r\n                          </li>\r\n                          <li className=\"menu-item \" aria-haspopup=\"true\">\r\n                            <Link\r\n                              style={isActive(history, \"/createproject\")}\r\n                              to={`/createproject`}\r\n                              className=\"menu-link \"\r\n                            >\r\n                              <span\r\n                                style={isActive(history, \"/createproject\")}\r\n                                className=\"menu-text\"\r\n                              >\r\n                                Create Project\r\n                              </span>\r\n                            </Link>\r\n                          </li>\r\n                          <li className=\"menu-item \" aria-haspopup=\"true\">\r\n                            <Link\r\n                              style={isActive(history, \"/joinproject\")}\r\n                              to={`/joinproject`}\r\n                              className=\"menu-link \"\r\n                            >\r\n                              <span\r\n                                className=\"menu-text\"\r\n                                style={isActive(history, \"/joinproject\")}\r\n                              >\r\n                                Join Project\r\n                              </span>\r\n                            </Link>\r\n                          </li>\r\n                          {/*<li className=\"menu-item \" aria-haspopup=\"true\">\r\n                            <Link\r\n                              style={isActive(\r\n                                history,\r\n                                `/user/${isAuthenticated().user._id}`\r\n                              )}\r\n                              to={`/user/${isAuthenticated().user._id}`}\r\n                              className=\"menu-link \"\r\n                            >\r\n                              <span\r\n                                style={isActive(\r\n                                  history,\r\n                                  `/user/${isAuthenticated().user._id}`\r\n                                )}\r\n                                className=\"menu-text\"\r\n                              >\r\n                                My Profile\r\n                              </span>\r\n                            </Link>\r\n                                </li>*/}\r\n                          <li className=\"menu-item \" aria-haspopup=\"true\">\r\n                            <Link\r\n                              style={isActive(\r\n                                history,\r\n                                `/mychats/${isAuthenticated().user._id}`\r\n                              )}\r\n                              to={`/mychats/${isAuthenticated().user._id}`}\r\n                              className=\"menu-link \"\r\n                            >\r\n                              <span\r\n                                className=\"menu-text\"\r\n                                style={isActive(\r\n                                  history,\r\n                                  `/mychats/${isAuthenticated().user._id}`\r\n                                )}\r\n                              >\r\n                                Chats\r\n                              </span>\r\n                            </Link>\r\n                          </li>\r\n                          <li className=\"menu-item \" aria-haspopup=\"true\">\r\n                            <Link\r\n                              style={isActive(\r\n                                history,\r\n                                `/notifs/${isAuthenticated().user._id}`\r\n                              )}\r\n                              to={`/notifs/${isAuthenticated().user._id}`}\r\n                              className=\"menu-link \"\r\n                            >\r\n                              <span\r\n                                className=\"menu-text\"\r\n                                style={isActive(\r\n                                  history,\r\n                                  `/notifs/${isAuthenticated().user._id}`\r\n                                )}\r\n                              >\r\n                                Notifications\r\n                              </span>\r\n                            </Link>\r\n                          </li>\r\n                        </ul>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"topbar\">\r\n                    <div className=\"topbar-item\">\r\n                      <div\r\n                        className=\" w-auto d-flex align-items-center btn-lg px-2\"\r\n                        id=\"kt_quick_user_toggle\"\r\n                      >\r\n                        {isAuthenticated() && (\r\n                          <div className=\"d-flex text-right pr-3\">\r\n                            <DropdownButton\r\n                              id=\"dropdown-basic-button\"\r\n                              title={`Hi, ${isAuthenticated().user.name}`}\r\n                            >\r\n                              <span className=\"h4 text-white opacity-50 font-weight-bold font-size-sm d-none d-md-inline mr-1\">\r\n                                Hi,\r\n                              </span>\r\n                              <span className=\"h4 text-white font-weight-bolder font-size-sm d-none d-md-inline\">\r\n                                <Dropdown.Item>\r\n                                  <Link\r\n                                    style={{ color: \"#000\" }}\r\n                                    to={`/user/${isAuthenticated().user._id}`}\r\n                                  >\r\n                                    Manage Profile\r\n                                  </Link>\r\n                                </Dropdown.Item>\r\n                                <Dropdown.Item\r\n                                  onClick={() =>\r\n                                    signout(() => history.push(\"/\"))\r\n                                  }\r\n                                >\r\n                                  Log Out\r\n                                </Dropdown.Item>\r\n                              </span>\r\n                            </DropdownButton>\r\n                          </div>\r\n                        )}\r\n                        {/*<span className=\"symbol symbol-35\">\r\n                          <span className=\"symbol-label font-size-h3 font-weight-bold text-white bg-white-o-15\">\r\n                            S\r\n                          </span>\r\n                                </span>*/}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/*<div className=\"header-bottom\">\r\n                <div className=\"container\">\r\n                  <div\r\n                    className=\"header-menu-wrapper header-menu-wrapper-left\"\r\n                    id=\"kt_header_menu_wrapper\"\r\n                  >\r\n                    <div\r\n                      id=\"kt_header_menu\"\r\n                      className=\"header-menu header-menu-left header-menu-mobile  header-menu-layout-default \"\r\n                    >\r\n                      <ul className=\"menu-nav \">\r\n                        <li className=\"menu-item\" aria-haspopup=\"true\">\r\n                          <Link\r\n                            to=\"/home\"\r\n                            style={isActive(history, \"/home\")}\r\n                            className=\"menu-link \"\r\n                          >\r\n                            <span\r\n                              style={isActive(history, \"/home\")}\r\n                              className=\"menu-text\"\r\n                            >\r\n                              My Feed\r\n                            </span>\r\n                          </Link>\r\n                        </li>\r\n                        <li className=\"menu-item \" aria-haspopup=\"true\">\r\n                          <Link to=\"/home\" className=\"menu-link \">\r\n                            <span className=\"menu-text\">Project</span>\r\n                          </Link>\r\n                        </li>\r\n                        <li className=\"menu-item \" aria-haspopup=\"true\">\r\n                          <Link\r\n                            style={isActive(\r\n                              history,\r\n                              `/user/${isAuthenticated().user._id}`\r\n                            )}\r\n                            to={`/user/${isAuthenticated().user._id}`}\r\n                            className=\"menu-link \"\r\n                          >\r\n                            <span\r\n                              style={isActive(\r\n                                history,\r\n                                `/user/${isAuthenticated().user._id}`\r\n                              )}\r\n                              className=\"menu-text\"\r\n                            >\r\n                              My Profile\r\n                            </span>\r\n                          </Link>\r\n                        </li>\r\n                        <li className=\"menu-item \" aria-haspopup=\"true\">\r\n                          <Link\r\n                            style={isActive(\r\n                              history,\r\n                              `/mychats/${isAuthenticated().user._id}`\r\n                            )}\r\n                            to={`/mychats/${isAuthenticated().user._id}`}\r\n                            className=\"menu-link \"\r\n                          >\r\n                            <span\r\n                              className=\"menu-text\"\r\n                              style={isActive(\r\n                                history,\r\n                                `/mychats/${isAuthenticated().user._id}`\r\n                              )}\r\n                            >\r\n                              Chats\r\n                            </span>\r\n                          </Link>\r\n                        </li>\r\n                        <li className=\"menu-item \" aria-haspopup=\"true\">\r\n                          <Link to=\"/home\" className=\"menu-link \">\r\n                            <span className=\"menu-text\">Notifications</span>\r\n                          </Link>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                              </div>*/}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(Menu);\r\n",["187","188"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\DeleteUser.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\Socket.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\UserRecommendation.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\layout\\Pert.js",["189","190","191","192","193","194"],"import React, { Component } from \"react\";\n\nexport class Pert extends Component {\n  renderPert = (pert) => {\n    let object = {};\n    let object1 = {};\n    let object2 = {};\n    let object3 = {};\n    let object4 = {};\n    let object5 = {};\n    const arr = [];\n    const arr1 = [];\n    const arr2 = [];\n    const arr3 = [];\n    const arr4 = [];\n    const arr5 = [];\n    // activitiesParams\n    if (Object.values(pert.activitiesParams) === undefined)\n      return (pert.activitiesParams = 0);\n    for (let i = 1; i <= Object.keys(pert.activitiesParams).length; i++) {\n      object[\"activitiesParams\"] = pert.activitiesParams[i];\n      arr.push(object);\n      object = {};\n    }\n    console.log(arr);\n    // console.log(pert.activitiesParams);\n\n    //earliestFinishTimes\n    if (Object.values(pert.earliestFinishTimes) === undefined)\n      return (pert.earliestFinishTimes = 0);\n    for (let i = 1; i <= Object.keys(pert.earliestFinishTimes).length; i++) {\n      object1[\"earliestFinishTimes\"] = pert.earliestFinishTimes[i];\n      arr1.push(object1);\n      object1 = {};\n    }\n    console.log(arr1);\n\n    //earliestStartTimes\n    if (Object.values(pert.earliestStartTimes) === undefined)\n      return (pert.earliestStartTimes = 0);\n    for (let i = 1; i <= Object.keys(pert.earliestStartTimes).length; i++) {\n      object2[\"earliestStartTimes\"] = pert.earliestStartTimes[i];\n      arr2.push(object2);\n      object2 = {};\n    }\n    console.log(arr2);\n    //latestStartTimes\n    if (Object.values(pert.latestStartTimes) === undefined)\n      return (pert.latestStartTimes = 0);\n    for (let i = 1; i <= Object.keys(pert.latestStartTimes).length; i++) {\n      object3[\"latestStartTimes\"] = pert.latestStartTimes[i];\n      arr3.push(object3);\n      object3 = {};\n    }\n    console.log(arr3);\n    //latestFinishTimes\n    if (Object.values(pert.latestFinishTimes) === undefined)\n      return (pert.latestFinishTimes = 0);\n    for (let i = 1; i <= Object.keys(pert.latestFinishTimes).length; i++) {\n      object4[\"latestFinishTimes\"] = pert.latestFinishTimes[i];\n      arr4.push(object4);\n      object4 = {};\n    }\n    console.log(arr4);\n\n    //Slack\n    if (Object.values(pert.slack) === undefined) return (pert.slack = 0);\n    for (let i = 1; i <= Object.keys(pert.slack).length; i++) {\n      object5[\"slack\"] = pert.slack[i];\n      arr5.push(object5);\n      object5 = {};\n    }\n    console.log(arr4);\n\n    return (\n      <>\n        {arr.map((object, index) => {\n          if (index !== 0 && index !== 1) {\n            return (\n              <>\n                <div>\n                  <div>\n                    ET: {object[\"activitiesParams\"].expectedTime} Variance:{\" \"}\n                    {object[\"activitiesParams\"].variance}\n                  </div>\n                </div>\n              </>\n            );\n          }\n        })}\n\n        {/* earliestFinishTimes */}\n        {arr1.map((object1, index) => {\n          if (\n            object1[\"earliestFinishTimes\"] !== undefined &&\n            object1[\"earliestFinishTimes\"] !== 0\n          ) {\n            return (\n              <>\n                <div>\n                  <div>\n                    EarliestFinishTimes: {object1[\"earliestFinishTimes\"]}\n                  </div>\n                </div>\n              </>\n            );\n          }\n        })}\n        {arr2.map((object2, index) => {\n          if (\n            object2[\"earliestStartTimes\"] !== undefined &&\n            object2[\"earliestStartTimes\"] !== 0\n          ) {\n            return (\n              <>\n                <div>\n                  <div>earliestStartTimes: {object2[\"earliestStartTimes\"]}</div>\n                </div>\n              </>\n            );\n          } else {\n            return;\n          }\n        })}\n        {arr3.map((object3, index) => {\n          if (\n            object3[\"latestStartTimes\"] !== undefined &&\n            object3[\"latestStartTimes\"] !== 0\n          ) {\n            return (\n              <>\n                <div>\n                  <div>latestStartTimes: {object3[\"latestStartTimes\"]}</div>\n                </div>\n              </>\n            );\n          }\n        })}\n        {arr4.map((object4, index) => {\n          if (\n            object4[\"latestFinishTimes\"] !== undefined &&\n            object4[\"latestFinishTimes\"] !== 0\n          ) {\n            return (\n              <>\n                <div>\n                  <div>latestFinishTimes: {object4[\"latestFinishTimes\"]}</div>\n                </div>\n              </>\n            );\n          }\n        })}\n        {arr5.map((object5, index) => {\n          if (object5[\"slack\"] !== undefined && object5[\"slack\"] !== 0) {\n            return (\n              <>\n                <div>\n                  <div>slack: {object5[\"slack\"]}</div>\n                </div>\n              </>\n            );\n          }\n        })}\n      </>\n    );\n  };\n  render() {\n    const pert = this.props.pert;\n    return <>{this.renderPert(pert)}</>;\n  }\n}\n\nexport default Pert;\n","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Users.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\apiProject.js",["195","196"],"export const newProject = (project) => {\r\n  let userId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let obj = {\r\n    title: project.title,\r\n    description: project.description,\r\n    skills: project.skills,\r\n    roles: project.roleDetails,\r\n  };\r\n  let checkSettings = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n  return fetch(\r\n    `http://localhost:8081/project/check/?X=${obj.title}&X1=${obj.description}`,\r\n    checkSettings\r\n  )\r\n    .then((response) => {\r\n      // let val = response.json();\r\n      // console.log(val);\r\n      return response.json();\r\n    })\r\n    .then((val) => {\r\n      // console.log(val);\r\n      if (val.message === \"Can be added!\") {\r\n        let settings = {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n          body: JSON.stringify(obj),\r\n        };\r\n        // console.log(settings.body);\r\n        return fetch(`http://localhost:8081/project/new/${userId}`, settings)\r\n          .then((response) => {\r\n            // console.log(Promise.resolve(response));\r\n            return response.json();\r\n          })\r\n          .then((val) => {\r\n            console.log(val);\r\n            return val;\r\n          })\r\n          .catch((err) => console.log(err));\r\n      } else {\r\n        return { error: val.message, similar: val.data };\r\n      }\r\n    });\r\n  // console.log(response.json());\r\n  // return response.json();\r\n};\r\nexport const updateProject = (project, projectId) => {\r\n  let userId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let obj = {\r\n    title: project.title,\r\n    description: project.description,\r\n    skills: project.skills,\r\n    roles: project.roleDetails,\r\n    team: project.team,\r\n    tasks: project.tasks,\r\n  };\r\n  let settings = {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(obj),\r\n  };\r\n  // console.log(settings.body);\r\n  return fetch(\r\n    `http://localhost:8081/project/edit/${userId}/${projectId}`,\r\n    settings\r\n  )\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const leaveProject = (userId, projectId, token) => {\r\n  return fetch(`http://localhost:8081/project/leave/${userId}/${projectId}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n    .then((response) => {\r\n      console.log(\"Done\");\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const request = (user, project, role) => {\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let obj = {\r\n    roleId: role,\r\n  };\r\n  let requestObj = {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(obj),\r\n  };\r\n  return fetch(\r\n    `http://localhost:8081/project/request/${user}/${project}`,\r\n    requestObj\r\n  )\r\n    .then((response) => {\r\n      if (response.status === 400) {\r\n        alert(\"Already requested\");\r\n      }\r\n      if (response.status === 200) {\r\n        alert(\" Requested\");\r\n      }\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\nexport const acceptRequest = (userId, projectId, acceptUserId, roleId) => {\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let acceptObj = {\r\n    acceptUserId: acceptUserId,\r\n    roleId: roleId,\r\n  };\r\n  let settings = {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(acceptObj),\r\n  };\r\n  return fetch(\r\n    `http://localhost:8081/requests/accept/${userId}/${projectId}`,\r\n    settings\r\n  )\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\nexport const declineRequest = (userId, projectId, declineUserId, roleId) => {\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let declineObj = {\r\n    rejectUserId: declineUserId,\r\n    roleId: roleId,\r\n  };\r\n  let settings = {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(declineObj),\r\n  };\r\n  return fetch(\r\n    `http://localhost:8081/requests/decline/${userId}/${projectId}`,\r\n    settings\r\n  )\r\n    .then((response) => {\r\n      window.location.reload();\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\nexport const listmyprojects = () => {\r\n  let userId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let requestObj = {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n  return fetch(`http://localhost:8081/projects/user/${userId}`, requestObj)\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\nexport const listprojects = () => {\r\n  return fetch(\"http://localhost:8081/projects\", {\r\n    method: \"GET\",\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const abandon = (projectId, token) => {\r\n  return fetch(\"http://localhost:8081/project/delete/\" + `${projectId}`, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n    .then((response) => {\r\n      console.log(\"done\");\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\nexport const finish = (projectId, token) => {\r\n  return fetch(\"http://localhost:8081/project/finish/\" + `${projectId}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n    .then((response) => {\r\n      console.log(\"Project has been marked as completed\");\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const getTeam = (projectId) => {\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  return fetch(\"http://localhost:8081/project/team/\" + projectId.toString(), {\r\n    method: \"GET\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\nexport const addTask = (projectId, task) => {\r\n  let userId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  // task_title: \"\",\r\n  //     task_description: \"\",\r\n  //     task_responsible: \"\",\r\n  //     task_completed: false,\r\n  //     task_optimistic: \"\",\r\n  //     task_pessimistic: \"\",\r\n  //     task_mostLikely: \"\",\r\n  let Obj = {\r\n    taskName: task.task_title,\r\n    taskDescription: task.task_description,\r\n    assignedTo: task.task_responsible_ids,\r\n    status: task.task_completed,\r\n    optimisticTime: task.task_optimistic,\r\n    mostLikelyTime: task.task_mostLikely,\r\n    pessimisticTime: task.task_pessimistic,\r\n  };\r\n  let settings = {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(Obj),\r\n  };\r\n  // console.log(settings.body);\r\n  return fetch(\r\n    `http://localhost:8081/project/tasks/${userId}/${projectId}`,\r\n    settings\r\n  )\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const listmytasks = () => {\r\n  let userId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let requestObj = {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n  return fetch(`http://localhost:8081/projects/user/${userId}/`, requestObj)\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const getTasks = (projectId) => {\r\n  let userId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  return fetch(\r\n    \"http://localhost:8081/project/tasks/\" +\r\n      userId.toString() +\r\n      \"/\" +\r\n      projectId.toString(),\r\n    {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    }\r\n  )\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const putPredecessors = (projectId, taskId, connectId) => {\r\n  let userId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let Obj = {\r\n    taskId: taskId,\r\n    connectId: connectId,\r\n  };\r\n  return fetch(\r\n    \"http://localhost:8081/project/tasks/predecessors/\" +\r\n      userId.toString() +\r\n      \"/\" +\r\n      projectId.toString(),\r\n    {\r\n      method: \"PUT\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(Obj),\r\n    }\r\n  )\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const putConnections = (projectId, source, target) => {\r\n  let userId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let Obj = {\r\n    from: source,\r\n    to: target,\r\n  };\r\n  console.log(Obj);\r\n  return fetch(\r\n    \"http://localhost:8081/project/connections/\" +\r\n      userId.toString() +\r\n      \"/\" +\r\n      projectId.toString(),\r\n    {\r\n      method: \"PUT\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(Obj),\r\n    }\r\n  )\r\n    .then((response) => {\r\n      // console.log(response.json());\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\nexport const getConnections = (projectId) => {\r\n  let userId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n\r\n  return fetch(\r\n    \"http://localhost:8081/project/connections/\" +\r\n      userId.toString() +\r\n      \"/\" +\r\n      projectId.toString(),\r\n    {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    }\r\n  )\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const putPosition = (projectId, taskId, position) => {\r\n  let userId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let Obj = {\r\n    taskId: taskId,\r\n    position: position,\r\n  };\r\n  return fetch(\r\n    \"http://localhost:8081/project/position/\" +\r\n      userId.toString() +\r\n      \"/\" +\r\n      projectId.toString(),\r\n    {\r\n      method: \"PUT\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(Obj),\r\n    }\r\n  )\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\n//new functions\r\nexport const updateTask = (task, projectId) => {\r\n  let userId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  // console.log(task.id);\r\n  let Obj = {\r\n    id: task.id,\r\n    taskName: task.title,\r\n    taskDescription: task.description,\r\n    pessimisticTime: parseInt(task.pessimisticTime),\r\n    optimisticTime: parseInt(task.optimisticTime),\r\n    mostLikelyTime: parseInt(task.mostLikelyTime),\r\n    status: task.laneId,\r\n    assignedTo: task.assigned,\r\n  };\r\n  // console.log(task);\r\n  return fetch(\r\n    \"http://localhost:8081/project/task/\" +\r\n      userId.toString() +\r\n      \"/\" +\r\n      projectId.toString(),\r\n    {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(Obj),\r\n    }\r\n  )\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const deleteTask = (taskId, projectId) => {\r\n  let userId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let Obj = {\r\n    id: taskId,\r\n  };\r\n  // console.log(task);\r\n  return fetch(\r\n    \"http://localhost:8081/project/task/\" +\r\n      userId.toString() +\r\n      \"/\" +\r\n      projectId.toString(),\r\n    {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(Obj),\r\n    }\r\n  )\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const updateChat = (chat, projectId) => {\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let Obj = {\r\n    chat: chat,\r\n  };\r\n  return fetch(\"http://localhost:8081/project/chat/\" + projectId.toString(), {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(Obj),\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const getProject = (id) => {\r\n  return fetch(`http://localhost:8081/project/${id}`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n    },\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const deleteConnections = (projectId, Id) => {\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let Obj = {\r\n    Id: Id,\r\n  };\r\n  return fetch(\r\n    \"http://localhost:8081/project/connections/\" + projectId.toString(),\r\n    {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(Obj),\r\n    }\r\n  )\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Profile.js",["197","198","199","200","201","202"],"import React, { Component } from \"react\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport {\r\n  read,\r\n  getCurrentUser,\r\n  followUser,\r\n  unfollowUser,\r\n  getUserById,\r\n} from \"./apiUser\";\r\nimport DefaultProfile from \"../images/avatar.png\";\r\nimport DeleteUser from \"./DeleteUser\";\r\nimport {\r\n  Row,\r\n  Tab,\r\n  Col,\r\n  Nav,\r\n  Card,\r\n  ListGroup,\r\n  ListGroupItem,\r\n} from \"react-bootstrap\";\r\nimport PersonTwoToneIcon from \"@material-ui/icons/PersonTwoTone\";\r\nimport ChatTwoToneIcon from \"@material-ui/icons/ChatTwoTone\";\r\nimport AccountTreeTwoToneIcon from \"@material-ui/icons/AccountTreeTwoTone\";\r\nimport PhotoTwoToneIcon from \"@material-ui/icons/PhotoTwoTone\";\r\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\r\nimport PersonAddDisabledIcon from \"@material-ui/icons/PersonAddDisabled\";\r\nimport DonutChart from \"react-donut-chart\";\r\nimport { listmyprojects } from \"./../project/apiProject\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateFollowing } from \"../store/user\";\r\nimport Post from \"./../posts/Post\";\r\nimport { getPostsOfUser } from \"../posts/apiPosts\";\r\nclass Profile extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      user: \"\",\r\n      redirectToSignin: false,\r\n      posts: [],\r\n    };\r\n  }\r\n\r\n  init = (userId) => {\r\n    const token = isAuthenticated().token;\r\n    read(userId, token).then((data) => {\r\n      if (data.error) {\r\n        this.setState({ redirectToSignin: true });\r\n      } else {\r\n        this.setState({ user: data });\r\n      }\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const userId = this.props.match.params.userId;\r\n    this.init(userId);\r\n    listmyprojects().then((projects) => {\r\n      this.setState({ projects: projects.userProjects });\r\n    });\r\n    // const { following } = this.props;\r\n    // console.log(1);\r\n    getUserById(getCurrentUser()._id).then((data) => {\r\n      this.props.updateFollowing({\r\n        following: data.user.following,\r\n      });\r\n    });\r\n    getPostsOfUser(userId)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        this.setState({ posts: data });\r\n      });\r\n  }\r\n  // this.setState({ projects });\r\n\r\n  componentWillReceiveProps(props) {\r\n    const userId = props.match.params.userId;\r\n    this.init(userId);\r\n  }\r\n  render() {\r\n    const { redirectToSignin, user } = this.state;\r\n    if (user.skills === undefined) return null;\r\n    if (redirectToSignin) return <Redirect to=\"/signin\" />;\r\n    let projects = this.state.projects;\r\n    let ongoing = 0;\r\n    let completed = 0;\r\n    let overdue = 0;\r\n    const { following } = this.props;\r\n    // console.log(following);\r\n    if (projects !== undefined) {\r\n      projects.map((project) => {\r\n        if (project.status === \"Completed\") completed++;\r\n        if (project.status === \"In Progress\") ongoing++;\r\n      });\r\n    }\r\n    const { posts } = this.state;\r\n    if (posts === undefined) return null;\r\n    return (\r\n      <div className=\"container mt-5\">\r\n        <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"personalInfo\">\r\n          <Row>\r\n            <Col sm={3}>\r\n              <div className=\"card card-custom card-stretch\">\r\n                <div className=\"card-body pt-4\">\r\n                  <div className=\"d-flex align-items-center\">\r\n                    <img\r\n                      src={DefaultProfile}\r\n                      alt={user.name}\r\n                      className=\"symbol symbol-60 symbol-xxl-100 mr-3 align-self-start align-self-xxl-center\"\r\n                      style={{ width: \"55px\" }}\r\n                    />\r\n                    <div>\r\n                      <h5 className=\"font-weight-bolder text-dark-75 text-hover-primary\">\r\n                        {user.name}\r\n                      </h5>\r\n                      <div className=\"text-muted\">@{user.username}</div>\r\n                      {isAuthenticated().user &&\r\n                      isAuthenticated().user._id === user._id ? (\r\n                        <div className=\"mt-2\">\r\n                          <Link\r\n                            className=\"btn btn-sm btn-primary mr-2 py-2 px-3 px-xxl-5 my-1\"\r\n                            to={`/user/edit/${user._id}`}\r\n                          >\r\n                            Edit Profile\r\n                          </Link>\r\n                          <DeleteUser userId={user._id} />\r\n                        </div>\r\n                      ) : (\r\n                        <div className=\"mt-2\">\r\n                          {user._id !== getCurrentUser()._id ? (\r\n                            user.followers.indexOf(getCurrentUser()._id) >\r\n                            -1 ? (\r\n                              <button\r\n                                className=\"btn btn-raised btn-primary\"\r\n                                onClick={(e) =>\r\n                                  unfollowUser(e, user._id).then((data) =>\r\n                                    this.props.updateFollowing({\r\n                                      following: data.user.following,\r\n                                    })\r\n                                  )\r\n                                }\r\n                              >\r\n                                UnFollow <PersonAddDisabledIcon />\r\n                              </button>\r\n                            ) : (\r\n                              <button\r\n                                className=\"btn btn-raised btn-primary\"\r\n                                onClick={(e) =>\r\n                                  followUser(e, user._id).then((data) =>\r\n                                    this.props.updateFollowing({\r\n                                      following: data.user.following,\r\n                                    })\r\n                                  )\r\n                                }\r\n                              >\r\n                                Follow <PersonAddIcon />\r\n                              </button>\r\n                            )\r\n                          ) : (\r\n                            <div></div>\r\n                          )}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\" pt-3\">\r\n                    <div className=\"d-flex align-items-center justify-content-between mb-2\">\r\n                      <span className=\"font-weight-bold mr-2\">Email: </span>\r\n                      <span className=\"text-muted email-wrap text-hover-primary\">\r\n                        {user.email}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"d-flex align-items-center justify-content-between mb-2\">\r\n                      <span className=\"font-weight-bold mr-2\">Location: </span>\r\n                      <span className=\"text-muted text-hover-primary\">\r\n                        {user.location}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"d-flex align-items-center justify-content-between mb-2\">\r\n                      <span className=\"font-weight-bold mr-2\">Joined: </span>\r\n                      <span className=\"text-muted text-hover-primary\">\r\n                        {` ${new Date(user.created).toDateString()}`}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <Nav variant=\"pills\" className=\"flex-column mt-3\">\r\n                    <Nav.Item>\r\n                      <Nav.Link eventKey=\"personalInfo\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"mr-3\">\r\n                            <PersonTwoToneIcon />\r\n                          </div>\r\n                          <div>Personal Information</div>\r\n                        </div>\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                      <Nav.Link eventKey=\"socialInfo\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"mr-3\">\r\n                            <ChatTwoToneIcon />\r\n                          </div>\r\n                          <div>Social Information</div>\r\n                        </div>\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                      <Nav.Link eventKey=\"projInfo\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"mr-3\">\r\n                            <AccountTreeTwoToneIcon />\r\n                          </div>\r\n                          <div>Project Stats</div>\r\n                        </div>\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                      <Nav.Link eventKey=\"posts\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"mr-3\">\r\n                            <PhotoTwoToneIcon />\r\n                          </div>\r\n                          <div>Posts</div>\r\n                        </div>\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                  </Nav>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n            <Col sm={9}>\r\n              <Tab.Content>\r\n                <Tab.Pane eventKey=\"personalInfo\">\r\n                  <div className=\"card card-stretch\">\r\n                    <div className=\"card-header\">\r\n                      <div className=\"card-title align-items-start flex-column\">\r\n                        <h4 className=\"card-label font-weight-bolder text-dark\">\r\n                          Personal Information\r\n                        </h4>\r\n                        <span className=\"text-muted font-weight-bold font-size-sm mt-1\">\r\n                          Update your personal information.\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <table className=\"table table-borderless\">\r\n                        <tbody>\r\n                          <tr>\r\n                            <th>Name</th>\r\n                            <td>{user.name}</td>\r\n                          </tr>\r\n                          <tr>\r\n                            <th>Email</th>\r\n                            <td>{user.email}</td>\r\n                          </tr>\r\n                          <tr>\r\n                            <th>Bio</th>\r\n                            <td>{user.bio}</td>\r\n                          </tr>\r\n                          <tr>\r\n                            <th>Skills</th>\r\n                            <td>{user.skills.join(\" \")}</td>\r\n                          </tr>\r\n                          <tr>\r\n                            <th>Date of Birth</th>\r\n                            <td>{` ${new Date(user.dob).toDateString()}`}</td>\r\n                          </tr>\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                </Tab.Pane>\r\n                <Tab.Pane eventKey=\"socialInfo\">\r\n                  <div className=\"card card-stretch\">\r\n                    <div className=\"card-header\">\r\n                      <div className=\"card-title align-items-start flex-column\">\r\n                        <h4 className=\"card-label font-weight-bolder text-dark\">\r\n                          Social Information\r\n                        </h4>\r\n                        <span className=\"text-muted font-weight-bold font-size-sm mt-1\">\r\n                          Update your personal information.\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <table className=\"table table-borderless\">\r\n                        <tbody>\r\n                          <tr>\r\n                            <th>Website</th>\r\n                            <td>\r\n                              {user.social.website\r\n                                ? user.social.website\r\n                                : \"Not available\"}\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <th>Instagram</th>\r\n                            <td>\r\n                              {user.social.instagram\r\n                                ? user.social.instagram\r\n                                : \"Not available\"}\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <th>Facebook</th>\r\n                            <td>\r\n                              {user.social.facebook\r\n                                ? user.social.facebook\r\n                                : \"Not available\"}\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <th>Linkedin</th>\r\n                            <td>\r\n                              {user.social.linkedin\r\n                                ? user.social.linkedin\r\n                                : \"Not available\"}\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <th>Twitter</th>\r\n                            <td>\r\n                              {user.social.twitter\r\n                                ? user.social.twitter\r\n                                : \"Not available\"}\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <th>Youtube</th>\r\n                            <td>\r\n                              {user.social.youtube\r\n                                ? user.social.youtube\r\n                                : \"Not available\"}\r\n                            </td>\r\n                          </tr>\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                </Tab.Pane>\r\n                <Tab.Pane eventKey=\"projInfo\">\r\n                  <div className=\"card card-stretch\">\r\n                    <div className=\"card-header\">\r\n                      <div className=\"card-title align-items-start flex-column\">\r\n                        <h4 className=\"card-label font-weight-bolder text-dark\">\r\n                          Project Stats\r\n                        </h4>\r\n                        <span className=\"text-muted font-weight-bold font-size-sm mt-1\">\r\n                          Statistics of your projects\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <table className=\"table table-borderless\">\r\n                        <DonutChart\r\n                          data={[\r\n                            {\r\n                              label: \"Ongoing Projects\",\r\n                              value: ongoing,\r\n                            },\r\n                            {\r\n                              label: \"Overdue Projects\",\r\n                              value: 1,\r\n                            },\r\n                            {\r\n                              label: \"Completed Projects\",\r\n                              value: completed,\r\n                            },\r\n                          ]}\r\n                          innerRadius=\"0.6\"\r\n                        />\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                </Tab.Pane>\r\n                <Tab.Pane eventKey=\"posts\">\r\n                  <div>\r\n                    {posts.map((post) => (\r\n                      <Post\r\n                        headerText={\" Blehhhhh \"}\r\n                        footerText={\"by \" + post.postedBy.name}\r\n                        cardText={post.photo}\r\n                        imageUrl={post.photo}\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                </Tab.Pane>\r\n              </Tab.Content>\r\n            </Col>\r\n          </Row>\r\n        </Tab.Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  following: state.user.following,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  updateFollowing: (params) => dispatch(updateFollowing(params)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\r\n","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\SubmitProject.js",["203","204","205"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\apiNotifications.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\RatingComponent.js",["206","207"],"import React, { Component } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { getCurrentUser } from \"../user/apiUser\";\r\nimport Emoji from \"./Emoji\";\r\nclass RatingComponent extends Component {\r\n  state = {\r\n    rating: {},\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleValueChange = this.handleValueChange.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    const { team } = this.props;\r\n    team.map((member) => {\r\n      if (member._id.toString() !== getCurrentUser()._id.toString()) {\r\n        let { rating } = this.props;\r\n        rating[member._id] = 5 * (10 / 7);\r\n        this.setState({ rating });\r\n      }\r\n    });\r\n  }\r\n  handleValueChange(rat, memberId) {\r\n    let { rating } = this.props;\r\n    rating[memberId] = rat;\r\n    this.setState({ rating });\r\n    // console.log(rating);\r\n  }\r\n  render() {\r\n    const { team } = this.props;\r\n    return (\r\n      <>\r\n        <table>\r\n          {team.map((member) => (\r\n            <>\r\n              {member._id.toString() !== getCurrentUser()._id.toString() ? (\r\n                <tr key={member._id}>\r\n                  <td>\r\n                    <div key={\"name \" + member._id}>{member.name}</div>\r\n                  </td>\r\n                  <td key={\"slider \" + member._id}>\r\n                    <Emoji\r\n                      memberId={member._id}\r\n                      handleValueChange={this.handleValueChange}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </>\r\n          ))}\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RatingComponent;\r\n","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Social.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\apiPosts.js",["208","209","210"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\DragDropImages.js",["211","212","213"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\MyChats.js",["214","215","216","217","218"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\taskComponents\\AddTask.js",["219"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Tagify\\Assigner.js",["220","221","222"],"import React, { useEffect } from \"react\";\nimport Tags from \"@yaireo/tagify/dist/react.tagify\";\nimport \"@yaireo/tagify/dist/tagify.css\";\n// Tagify settings object\nconst baseTagifySettings = {\n  blacklist: [],\n  enforceWhitelist: true,\n  dropdown: {\n    enabled: 0,\n  },\n  callbacks: {},\n};\n\nfunction Assigner({\n  label,\n  name,\n  value,\n  suggestions,\n  assignTo,\n  assignIds,\n  team,\n}) {\n  const handleChange = (e) => {\n    // console.log(e.detail.tagify.value);\n    let arr = [];\n    let ids = [];\n    e.detail.tagify.value.map((val) => {\n      arr.push(val.value);\n      team.map((member) => {\n        // console.log(member.name, val.value);\n        if (member.name === val.value) {\n          ids.push(member._id);\n        }\n      });\n    });\n    assignTo(arr);\n    assignIds(ids);\n  };\n  const settings = {\n    ...baseTagifySettings,\n    whitelist: suggestions,\n    callbacks: {\n      add: handleChange,\n      remove: handleChange,\n      blur: handleChange,\n      edit: handleChange,\n      invalid: handleChange,\n      click: handleChange,\n      focus: handleChange,\n      \"edit:updated\": handleChange,\n      \"edit:start\": handleChange,\n    },\n  };\n  //   console.log(\"words:\");\n  if (suggestions.length === 0) return null;\n  // console.log(initialValue);\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={\"field-\" + name}>{label}</label>\n      <Tags settings={settings} value={value} />\n    </div>\n  );\n}\n\nexport default Assigner;\n","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\JoinProject.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\ModalButton.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Form.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Notifications.js",["223","224","225","226","227"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\LeaveProject.js",["228"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\Emoji.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\store.js",["229","230"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\newProjectForm\\CreateProject.js",["231"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\layout\\LayoutComponent.js",["232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262"],"import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport Pert from \"./Pert\";\r\nimport Task from \"./Task\";\r\nimport ReactFlow, {\r\n  addEdge,\r\n  Background,\r\n  Controls,\r\n  MiniMap,\r\n  removeElements,\r\n} from \"react-flow-renderer\";\r\nimport {\r\n  addTask,\r\n  getTasks,\r\n  putConnections,\r\n  deleteConnections,\r\n  getConnections,\r\n  putPredecessors,\r\n  putPosition,\r\n} from \"../apiProject\";\r\nimport jsPERT from \"js-pert\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport {\r\n  nodeAdded,\r\n  connectionAdded,\r\n  replaceNodes,\r\n  replaceConnections,\r\n  replaceElements,\r\n  setPert,\r\n  setExpectedTime,\r\n  setSlacks,\r\n  setCriticalPath,\r\n} from \"../../store/cpm\";\r\nimport { updateTasks } from \"../../store/tasks\";\r\nimport { getCurrentUser } from \"./../../user/apiUser\";\r\nconst styles = (theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 3, 3),\r\n  },\r\n});\r\nclass LayoutComponent extends Component {\r\n  state = {\r\n    elements: [],\r\n    tasks: [],\r\n    nodes: [],\r\n    pert: {},\r\n    task: {},\r\n    show: false,\r\n    checked: false,\r\n    bleh: 1,\r\n  };\r\n\r\n  onElementsRemove = (elementsToRemove) => {\r\n    if (this.props.project.leader.toString() === getCurrentUser()._id) {\r\n      let cons = this.props.connections;\r\n      const filteredConnections = cons.filter(\r\n        (con) => con.id !== elementsToRemove[0].id\r\n      );\r\n      this.props.replaceConnections({ connections: filteredConnections });\r\n      cons.map((con) => {\r\n        if (con.id === elementsToRemove[0].id) {\r\n          // console.log(con.id, elementsToRemove[0].id);\r\n          deleteConnections(this.props.project._id, con._id).then((data) => {\r\n            console.log(\"connection deleted\");\r\n            // this.pertCalc();\r\n          });\r\n          return;\r\n        }\r\n      });\r\n    }\r\n  };\r\n  onLoad = (reactFlowInstance) => {\r\n    reactFlowInstance.fitView();\r\n  };\r\n  onNodeDragStop = (e, node) => {\r\n    // console.log(node.position, node.data._id);\r\n    putPosition(this.props.project._id, node.data._id, node.position).then(\r\n      () => {\r\n        console.log(node.position + \" is saved\");\r\n      }\r\n    );\r\n  };\r\n  edgeInElements(elements, edge) {\r\n    let inside = false;\r\n    elements.map((elem) => {\r\n      if (elem.id.toString() === edge.id.toString()) {\r\n        inside = true;\r\n      }\r\n      return \"done\";\r\n    });\r\n    return inside;\r\n  }\r\n  onConnect = (params) => {\r\n    if (this.props.project.leader.toString() === getCurrentUser()._id) {\r\n      let source = params.source;\r\n      let target = params.target;\r\n      if (source !== undefined && target !== undefined) {\r\n        let edge = {\r\n          id:\r\n            \"reactflow__edge-\" +\r\n            source.toString() +\r\n            \"null-\" +\r\n            target.toString() +\r\n            \"null\",\r\n          source: source.toString(),\r\n          sourceHandle: null,\r\n          target: target.toString(),\r\n          targetHandle: null,\r\n        };\r\n        // console.log(this.state.elements);\r\n        let sourceId = \"\";\r\n        let targetId = \"\";\r\n        // console.log(this.props.nodes);\r\n        this.props.nodes.map((elem) => {\r\n          if (elem.id === source) {\r\n            sourceId = elem.key;\r\n          }\r\n          if (elem.id === target) {\r\n            targetId = elem.key;\r\n          }\r\n        });\r\n        putPredecessors(this.props.project._id, targetId, sourceId).then(() => {\r\n          console.log(sourceId + \" has new Predecessor \" + targetId);\r\n        });\r\n        // let ele = [...this.state.elements];\r\n        // if (!this.edgeInElements(ele, edge)) {\r\n        //   ele.push(edge);\r\n        putConnections(this.props.project._id, sourceId, targetId).then(() => {\r\n          console.log(\"connection \" + sourceId + \"to \" + targetId + \"added\");\r\n        });\r\n        // }\r\n        this.props.connectionAdded({ connection: edge });\r\n        // this.setState({ elements: ele });\r\n        // console.log(this.state.elements);\r\n        this.pertCalc();\r\n      }\r\n    }\r\n  };\r\n  getIdOfObjectId = (elemId) => {\r\n    let id = {};\r\n    const { nodes } = this.props;\r\n    id = nodes.map((elem) => {\r\n      if (elem.data !== undefined)\r\n        if (elem.data._id.toString() === elemId) {\r\n          id = elem.id;\r\n        }\r\n      return id;\r\n    });\r\n    return id[id.length - 1];\r\n  };\r\n  // handleClose = () => {\r\n  //   this.setState({ show: false });\r\n  // };\r\n  pertCalc = () => {\r\n    // this.setState({ show: true });\r\n    // console.log(\"inside pertCalc:\", tasksObject);\r\n    let nodes = this.props.nodes.map((elem) => ({\r\n      ...elem,\r\n    }));\r\n    // let connections = this.props.connections.map((elem) => ({\r\n    //   ...elem,\r\n    // }));\r\n    // console.log(connections);\r\n    // let { connections } = this.props;\r\n    // console.log(\"props:\", this.props.connections);\r\n    // console.log(\"connections:\");\r\n    let ids = [];\r\n    this.props.connections.map((connection) => {\r\n      // console.log(connection.source, connection.target);\r\n      if (!ids.includes(connection.source)) {\r\n        ids.push(connection.source.toString());\r\n      }\r\n      if (!ids.includes(connection.target)) {\r\n        ids.push(connection.target.toString());\r\n      }\r\n    });\r\n    // console.log(\"nodes:\");\r\n    let newNodes = [];\r\n    nodes.map((node) => {\r\n      if (ids.includes(node.id)) newNodes.push(node);\r\n    });\r\n\r\n    let tasksObject = ids.includes(\"1\")\r\n      ? {\r\n          1: {\r\n            id: \"1\",\r\n            mostLikelyTime: 0,\r\n            optimisticTime: 0,\r\n            pessimisticTime: 0,\r\n            predecessors: [],\r\n          },\r\n        }\r\n      : {};\r\n    // console.log(\"TasksObject before node addition:\", tasksObject);\r\n    // console.log(ids);\r\n    // console.log(\"nodes sent for pertcalc:\", newNodes);\r\n    newNodes.map((elem) => {\r\n      if (\r\n        elem.data.predecessors.length === 0 ||\r\n        elem.data.predecessors === undefined\r\n      )\r\n        return;\r\n      elem.data.predecessors.map((pre, index) => {\r\n        let id = this.getIdOfObjectId(pre.toString());\r\n        // console.log(id);\r\n        let predecessors = [...elem.data.predecessors];\r\n        predecessors[index] = id.toString();\r\n        elem.data = { ...elem.data, predecessors };\r\n      });\r\n    });\r\n    // console.log(nodes);\r\n    tasksObject = newNodes.map((elem) => {\r\n      // console.log(\"tasksObject node:\", elem);\r\n      tasksObject[elem.id.toString()] = {\r\n        id: elem.id.toString(),\r\n        optimisticTime: elem.data.optimistic,\r\n        mostLikelyTime: elem.data.time,\r\n        pessimisticTime: elem.data.pessimistic,\r\n        predecessors: elem.data.predecessors,\r\n      };\r\n      return tasksObject;\r\n    });\r\n    let tasksObjectFinal = tasksObject[tasksObject.length - 1];\r\n    console.log(\"TasksObject:\");\r\n    console.log(tasksObjectFinal);\r\n    console.log(\"Pert:\");\r\n    let pert = {};\r\n    // console.log(\"gonna set pert\");\r\n    try {\r\n      // if (tasksObject[1] !== undefined) {\r\n      // console.log(tasksObject[1]);\r\n      pert = jsPERT(tasksObjectFinal);\r\n      this.props.setPert({ pert });\r\n      console.log(this.props.pert);\r\n      // this.props.setSlacks({ slackObject: this.props.pert.slack });\r\n      // console.log(\"slacks:\");\r\n      let slackObject = {};\r\n      slackObject = newNodes.map((elem, index) => {\r\n        // console.log(elem.id, pert.slack[elem.id]);\r\n        if (index !== 0 && index !== 1) {\r\n          // console.log(\"Slack elem:\", elem);\r\n          let created = elem.data.created;\r\n          let today = new Date();\r\n          let day1 = new Date(today.toUTCString());\r\n          let day2 = new Date(created);\r\n          let difference = Math.abs(day2 - day1);\r\n          let days = parseInt(difference / (1000 * 3600 * 24));\r\n          // console.log(elem.data.label + \" \" + days + \" \" + pert.slack[elem.id]);\r\n          slackObject[elem.data.label] = {\r\n            slack: pert.slack[elem.id],\r\n            days,\r\n            overdue: pert.slack[elem.id] < days ? true : false,\r\n          };\r\n          return slackObject;\r\n        }\r\n      });\r\n      console.log(\"slacks Object:\", slackObject[slackObject.length - 1]);\r\n      let obj = slackObject[slackObject.length - 1];\r\n      this.props.setSlacks({ slackObject: obj });\r\n      let newNodesObject = {};\r\n      newNodesObject = newNodes.map((node) => {\r\n        newNodesObject[node.id] = node.data;\r\n        return newNodesObject;\r\n      });\r\n      newNodesObject = newNodesObject[newNodesObject.length - 1];\r\n      // console.log(\"newNodesObject:\", newNodesObject);\r\n      let criticalPathData = {};\r\n      criticalPathData = pert.criticalPath.map((id) => {\r\n        criticalPathData[id] = newNodesObject[id];\r\n        return criticalPathData;\r\n      });\r\n      criticalPathData = criticalPathData[criticalPathData.length - 1];\r\n      console.log(\"criticalPathDataObject:\", criticalPathData);\r\n      this.props.setCriticalPath({ criticalPath: criticalPathData });\r\n\r\n      this.props.setExpectedTime({\r\n        expectedTime: Math.floor(this.props.pert.latestFinishTimes.__end),\r\n      });\r\n      // }\r\n    } catch (err) {\r\n      // console.log(err);\r\n      this.props.setPert({ pert: {} });\r\n      // console.log(this.props.pert);\r\n      this.props.setExpectedTime({\r\n        expectedTime: 0,\r\n      });\r\n    }\r\n    // this.setState({ pert });\r\n  };\r\n  onElementClick = (event, element) => {\r\n    console.log(element);\r\n  };\r\n  componentDidMount() {\r\n    let newNodes = [];\r\n\r\n    getTasks(this.props.project._id).then((data) => {\r\n      // console.log(data.tasks);\r\n      const tasks = data.tasks;\r\n      let newTasks = [];\r\n      tasks.map((task) => {\r\n        newTasks.push({ ...task });\r\n      });\r\n      newTasks.map((task) => {\r\n        task[\"label\"] = task.taskName;\r\n        task[\"description\"] = task.description;\r\n        task[\"time\"] = task.mostLikelyTime;\r\n        task[\"optimistic\"] = task.optimisticTime;\r\n        task[\"pessimistic\"] = task.pessimisticTime;\r\n        if (\r\n          task.taskName !== \"Completed!!\" &&\r\n          task.taskName !== \"Lets Start Working\"\r\n        ) {\r\n          let newNode = {\r\n            key: task._id,\r\n            id: (newNodes.length + 1).toString(),\r\n            data: task,\r\n            sourcePosition: \"right\",\r\n            targetPosition: \"left\",\r\n            position:\r\n              task.position !== undefined\r\n                ? task.position\r\n                : {\r\n                    x: (Math.random() * window.innerWidth) / 2,\r\n                    y: (Math.random() * window.innerHeight) / 2,\r\n                  },\r\n          };\r\n          newNodes.push(newNode);\r\n        }\r\n        if (task.taskName === \"Lets Start Working\") {\r\n          let ele = [...this.state.elements];\r\n          let newNode = {\r\n            key: task._id,\r\n            id: \"1\",\r\n            type: \"input\",\r\n            data: {\r\n              label: \"Lets Start Working\",\r\n              description: \"Start working on tasks to complete project on time\",\r\n              pessimistic: 0,\r\n              time: 0,\r\n              optimistic: 0,\r\n              predecessors: [],\r\n              _id: task._id,\r\n            },\r\n            sourcePosition: \"right\",\r\n            position:\r\n              task.position !== undefined ? task.position : { x: 0, y: 0 },\r\n          };\r\n          newNodes.push(newNode);\r\n        }\r\n        if (task.taskName === \"Completed!!\") {\r\n          let ele = [...this.state.elements];\r\n          let newNode = {\r\n            key: task._id,\r\n            id: \"2\",\r\n            type: \"output\",\r\n            data: {\r\n              label: \"Completed!!\",\r\n              description: \"Yaaayy you gus have completed the project\",\r\n              pessimistic: 0,\r\n              time: 0,\r\n              optimistic: 0,\r\n              predecessors: task.predecessors,\r\n              _id: task._id,\r\n            },\r\n            targetPosition: \"left\",\r\n            position:\r\n              task.position !== undefined ? task.position : { x: 500, y: 0 },\r\n          };\r\n          newNodes.push(newNode);\r\n        }\r\n      });\r\n      this.props.replaceNodes({ nodes: newNodes });\r\n      // console.log(\"Mount nodes:\", this.props.nodes);\r\n    });\r\n    getConnections(this.props.project._id)\r\n      .then((data) => {\r\n        let connections = [];\r\n        data.connections.map((link) => {\r\n          newNodes.map((elem) => {\r\n            if (elem.key !== undefined) {\r\n              if (link.from.toString() === elem.key.toString()) {\r\n                this.setState({ source: elem });\r\n              }\r\n              if (link.to.toString() === elem.key.toString()) {\r\n                this.setState({ target: elem });\r\n              }\r\n            }\r\n          });\r\n          let source = this.state.source;\r\n          let target = this.state.target;\r\n          if (source !== undefined && target !== undefined) {\r\n            let edge = {\r\n              id:\r\n                \"reactflow__edge-\" +\r\n                source.id.toString() +\r\n                \"null-\" +\r\n                target.id.toString() +\r\n                \"null\",\r\n              source: source.id.toString(),\r\n              sourceHandle: null,\r\n              target: target.id.toString(),\r\n              targetHandle: null,\r\n              _id: link._id,\r\n            };\r\n            connections.push(edge);\r\n          }\r\n          return \"done\";\r\n        });\r\n        // console.log(connections);\r\n        this.props.replaceConnections({ connections: connections });\r\n      })\r\n      .then(() => {\r\n        this.pertCalc();\r\n      });\r\n  }\r\n  componentDidUpdate(prevState, prevProps) {\r\n    if (this.props.connections.length !== prevState.connections.length) {\r\n      this.pertCalc();\r\n      // console.log(prevState.connections.length, this.props.connections.length);\r\n      // console.log(\"Pert from comp update:\", this.props.pert);\r\n      // console.log(\"Pert calculation nodes:\", this.props.nodes);\r\n    }\r\n    if (prevState.tasks.length !== this.props.tasks.length) {\r\n      const { tasks } = this.props;\r\n      let newTasks = [];\r\n      tasks.map((task) => {\r\n        newTasks.push({ ...task });\r\n      });\r\n      let newNodes = [];\r\n      newTasks.map((task) => {\r\n        task[\"label\"] = task.taskName;\r\n        task[\"description\"] = task.description;\r\n        task[\"time\"] = task.mostLikelyTime;\r\n        task[\"optimistic\"] = task.optimisticTime;\r\n        task[\"pessimistic\"] = task.pessimisticTime;\r\n        if (\r\n          task.taskName !== \"Completed!!\" &&\r\n          task.taskName !== \"Lets Start Working\"\r\n        ) {\r\n          let newNode = {\r\n            key: task._id,\r\n            id: (newNodes.length + 1).toString(),\r\n            data: task,\r\n            sourcePosition: \"right\",\r\n            targetPosition: \"left\",\r\n            position:\r\n              task.position !== undefined\r\n                ? task.position\r\n                : {\r\n                    x: (Math.random() * window.innerWidth) / 2,\r\n                    y: (Math.random() * window.innerHeight) / 2,\r\n                  },\r\n          };\r\n          newNodes.push(newNode);\r\n        }\r\n        if (task.taskName === \"Lets Start Working\") {\r\n          let ele = [...this.state.elements];\r\n          let newNode = {\r\n            key: task._id,\r\n            id: \"1\",\r\n            type: \"input\",\r\n            data: {\r\n              label: \"Lets Start Working\",\r\n              description: \"Start working on tasks to complete project on time\",\r\n              pessimistic: 0,\r\n              time: 0,\r\n              optimistic: 0,\r\n              predecessors: [],\r\n              _id: task._id,\r\n            },\r\n            sourcePosition: \"right\",\r\n            position:\r\n              task.position !== undefined ? task.position : { x: 0, y: 0 },\r\n          };\r\n          newNodes.push(newNode);\r\n        }\r\n        if (task.taskName === \"Completed!!\") {\r\n          let ele = [...this.state.elements];\r\n          let newNode = {\r\n            key: task._id,\r\n            id: \"2\",\r\n            type: \"output\",\r\n            data: {\r\n              label: \"Completed!!\",\r\n              description: \"Yaaayy you gus have completed the project\",\r\n              pessimistic: 0,\r\n              time: 0,\r\n              optimistic: 0,\r\n              predecessors: task.predecessors,\r\n              _id: task._id,\r\n            },\r\n            targetPosition: \"left\",\r\n            position:\r\n              task.position !== undefined ? task.position : { x: 500, y: 0 },\r\n          };\r\n          newNodes.push(newNode);\r\n        }\r\n      });\r\n      this.props.replaceNodes({ nodes: newNodes });\r\n      if (this.props.connections.length === 0) {\r\n        getConnections(this.props.project._id)\r\n          .then((data) => {\r\n            let connections = [];\r\n            data.connections.map((link) => {\r\n              newNodes.map((elem) => {\r\n                if (elem.key !== undefined) {\r\n                  if (link.from.toString() === elem.key.toString()) {\r\n                    this.setState({ source: elem });\r\n                  }\r\n                  if (link.to.toString() === elem.key.toString()) {\r\n                    this.setState({ target: elem });\r\n                  }\r\n                }\r\n              });\r\n              let source = this.state.source;\r\n              let target = this.state.target;\r\n              let edge = {\r\n                id:\r\n                  \"reactflow__edge-\" +\r\n                  source.id.toString() +\r\n                  \"null-\" +\r\n                  target.id.toString() +\r\n                  \"null\",\r\n                source: source.id.toString(),\r\n                sourceHandle: null,\r\n                target: target.id.toString(),\r\n                targetHandle: null,\r\n                _id: link._id,\r\n              };\r\n              connections.push(edge);\r\n\r\n              return \"done\";\r\n            });\r\n            // console.log(connections);\r\n            this.props.replaceConnections({ connections: connections });\r\n          })\r\n          .then(() => {\r\n            this.pertCalc();\r\n          });\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    if (this.props.tasks.length === 0) return <div>No tasks</div>;\r\n    const { nodes, connections, tasks } = this.props;\r\n    const { status } = this.props.project;\r\n    let connectCheck = status === \"Completed\" ? false : true;\r\n    const elements = [];\r\n    nodes.map((node) => {\r\n      elements.push({ ...node });\r\n    });\r\n    connections.map((connection) => {\r\n      elements.push({ ...connection });\r\n    });\r\n    // console.log(\"nodes:\", nodes);\r\n    return (\r\n      <div>\r\n        <div className=\"container-fluid\">\r\n          <ReactFlow\r\n            elements={elements}\r\n            onLoad={this.onLoad}\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"65vh\",\r\n              backgroundColor: \"#1A192B\",\r\n            }}\r\n            onNodeDragStop={this.onNodeDragStop}\r\n            onConnect={this.onConnect}\r\n            onElementClick={this.onElementClick}\r\n            onElementsRemove={this.onElementsRemove}\r\n            connectionLineStyle={{ stroke: \"#ddd\", strokeWidth: 2 }}\r\n            connectionLineType=\"bezier\"\r\n            snapToGrid={true}\r\n            snapGrid={[16, 16]}\r\n            nodesConnectable={connectCheck}\r\n            nodesDraggable={connectCheck}\r\n            defaultZoom={1}\r\n          >\r\n            <Background color=\"#888\" gap={16} />\r\n            <MiniMap\r\n              nodeColor={(n) => {\r\n                if (n.type === \"input\") return \"#DC143C\";\r\n                if (n.type === \"output\") return \"#90ee90\";\r\n                return \"cyan\";\r\n              }}\r\n            />\r\n            <Controls />\r\n          </ReactFlow>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  nodes: state.cpm.nodes,\r\n  connections: state.cpm.connections,\r\n  state: state,\r\n  notifications: state.notifications.notifications,\r\n  tasks: state.tasks.tasks,\r\n  elements: state.cpm.elements,\r\n  pert: state.cpm.pert,\r\n  slacks: state.cpm.slacks,\r\n  criticalPath: state.cpm.criticalPath,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  nodeAdded: (params) => dispatch(nodeAdded(params)),\r\n  connectionAdded: (params) => dispatch(connectionAdded(params)),\r\n  updateTasks: (params) => dispatch(updateTasks(params)),\r\n  replaceNodes: (params) => dispatch(replaceNodes(params)),\r\n  replaceConnections: (params) => dispatch(replaceConnections(params)),\r\n  replaceElements: (params) => dispatch(replaceElements(params)),\r\n  setPert: (params) => dispatch(setPert(params)),\r\n  setExpectedTime: (params) => dispatch(setExpectedTime(params)),\r\n  setSlacks: (params) => dispatch(setSlacks(params)),\r\n  setCriticalPath: (params) => dispatch(setCriticalPath(params)),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(styles)(LayoutComponent));\r\n","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Landing.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\notifications.js",["263"],{"ruleId":"264","severity":1,"message":"265","line":34,"column":32,"nodeType":"266","messageId":"267","endLine":34,"endColumn":34},{"ruleId":"268","severity":1,"message":"269","line":6,"column":3,"nodeType":"270","messageId":"271","endLine":6,"endColumn":12},{"ruleId":"268","severity":1,"message":"272","line":7,"column":3,"nodeType":"270","messageId":"271","endLine":7,"endColumn":9},{"ruleId":"268","severity":1,"message":"273","line":8,"column":3,"nodeType":"270","messageId":"271","endLine":8,"endColumn":7},{"ruleId":"268","severity":1,"message":"274","line":23,"column":10,"nodeType":"270","messageId":"271","endLine":23,"endColumn":24},{"ruleId":"268","severity":1,"message":"275","line":23,"column":26,"nodeType":"270","messageId":"271","endLine":23,"endColumn":31},{"ruleId":"276","replacedBy":"277"},{"ruleId":"278","replacedBy":"279"},{"ruleId":"264","severity":1,"message":"265","line":42,"column":34,"nodeType":"266","messageId":"267","endLine":42,"endColumn":36},{"ruleId":"264","severity":1,"message":"265","line":54,"column":34,"nodeType":"266","messageId":"267","endLine":54,"endColumn":36},{"ruleId":"268","severity":1,"message":"280","line":1,"column":17,"nodeType":"270","messageId":"271","endLine":1,"endColumn":26},{"ruleId":"264","severity":1,"message":"265","line":18,"column":37,"nodeType":"266","messageId":"267","endLine":18,"endColumn":39},{"ruleId":"276","replacedBy":"281"},{"ruleId":"278","replacedBy":"282"},{"ruleId":"276","replacedBy":"283"},{"ruleId":"278","replacedBy":"284"},{"ruleId":"276","replacedBy":"285"},{"ruleId":"278","replacedBy":"286"},{"ruleId":"268","severity":1,"message":"287","line":4,"column":10,"nodeType":"270","messageId":"271","endLine":4,"endColumn":28},{"ruleId":"268","severity":1,"message":"288","line":6,"column":10,"nodeType":"270","messageId":"271","endLine":6,"endColumn":13},{"ruleId":"268","severity":1,"message":"289","line":12,"column":10,"nodeType":"270","messageId":"271","endLine":12,"endColumn":24},{"ruleId":"268","severity":1,"message":"290","line":13,"column":8,"nodeType":"270","messageId":"271","endLine":13,"endColumn":14},{"ruleId":"268","severity":1,"message":"291","line":22,"column":9,"nodeType":"270","messageId":"271","endLine":22,"endColumn":17},{"ruleId":"292","severity":1,"message":"293","line":71,"column":27,"nodeType":"294","endLine":71,"endColumn":74},{"ruleId":"292","severity":1,"message":"293","line":85,"column":27,"nodeType":"294","endLine":85,"endColumn":74},{"ruleId":"292","severity":1,"message":"293","line":99,"column":27,"nodeType":"294","endLine":99,"endColumn":75},{"ruleId":"292","severity":1,"message":"293","line":113,"column":27,"nodeType":"294","endLine":113,"endColumn":75},{"ruleId":"292","severity":1,"message":"293","line":127,"column":27,"nodeType":"294","endLine":127,"endColumn":75},{"ruleId":"292","severity":1,"message":"293","line":161,"column":27,"nodeType":"294","endLine":161,"endColumn":75},{"ruleId":"292","severity":1,"message":"293","line":181,"column":27,"nodeType":"294","endLine":181,"endColumn":75},{"ruleId":"276","replacedBy":"295"},{"ruleId":"278","replacedBy":"296"},{"ruleId":"264","severity":1,"message":"297","line":77,"column":34,"nodeType":"266","messageId":"298","endLine":77,"endColumn":36},{"ruleId":"264","severity":1,"message":"297","line":93,"column":36,"nodeType":"266","messageId":"298","endLine":93,"endColumn":38},{"ruleId":"264","severity":1,"message":"265","line":122,"column":13,"nodeType":"299","messageId":"300","endLine":122,"endColumn":20},{"ruleId":"264","severity":1,"message":"297","line":125,"column":36,"nodeType":"266","messageId":"298","endLine":125,"endColumn":38},{"ruleId":"264","severity":1,"message":"297","line":139,"column":36,"nodeType":"266","messageId":"298","endLine":139,"endColumn":38},{"ruleId":"264","severity":1,"message":"297","line":153,"column":36,"nodeType":"266","messageId":"298","endLine":153,"endColumn":38},{"ruleId":"301","severity":1,"message":"302","line":203,"column":56,"nodeType":"303","messageId":"304","endLine":203,"endColumn":57},{"ruleId":"301","severity":1,"message":"302","line":218,"column":56,"nodeType":"303","messageId":"304","endLine":218,"endColumn":57},{"ruleId":"268","severity":1,"message":"273","line":18,"column":3,"nodeType":"270","messageId":"271","endLine":18,"endColumn":7},{"ruleId":"268","severity":1,"message":"305","line":19,"column":3,"nodeType":"270","messageId":"271","endLine":19,"endColumn":12},{"ruleId":"268","severity":1,"message":"306","line":20,"column":3,"nodeType":"270","messageId":"271","endLine":20,"endColumn":16},{"ruleId":"268","severity":1,"message":"307","line":87,"column":9,"nodeType":"270","messageId":"271","endLine":87,"endColumn":16},{"ruleId":"268","severity":1,"message":"308","line":88,"column":13,"nodeType":"270","messageId":"271","endLine":88,"endColumn":22},{"ruleId":"264","severity":1,"message":"265","line":91,"column":30,"nodeType":"266","messageId":"267","endLine":91,"endColumn":32},{"ruleId":"264","severity":1,"message":"265","line":18,"column":37,"nodeType":"266","messageId":"267","endLine":18,"endColumn":39},{"ruleId":"268","severity":1,"message":"309","line":37,"column":24,"nodeType":"270","messageId":"271","endLine":37,"endColumn":35},{"ruleId":"268","severity":1,"message":"310","line":117,"column":31,"nodeType":"270","messageId":"271","endLine":117,"endColumn":37},{"ruleId":"268","severity":1,"message":"272","line":2,"column":10,"nodeType":"270","messageId":"271","endLine":2,"endColumn":16},{"ruleId":"264","severity":1,"message":"265","line":15,"column":23,"nodeType":"266","messageId":"267","endLine":15,"endColumn":25},{"ruleId":"268","severity":1,"message":"311","line":3,"column":7,"nodeType":"270","messageId":"271","endLine":3,"endColumn":13},{"ruleId":"268","severity":1,"message":"312","line":89,"column":7,"nodeType":"270","messageId":"271","endLine":89,"endColumn":12},{"ruleId":"268","severity":1,"message":"311","line":90,"column":7,"nodeType":"270","messageId":"271","endLine":90,"endColumn":13},{"ruleId":"264","severity":1,"message":"265","line":50,"column":32,"nodeType":"266","messageId":"267","endLine":50,"endColumn":34},{"ruleId":"268","severity":1,"message":"313","line":56,"column":17,"nodeType":"270","messageId":"271","endLine":56,"endColumn":21},{"ruleId":"314","severity":1,"message":"315","line":103,"column":9,"nodeType":"294","endLine":103,"endColumn":47},{"ruleId":"316","severity":1,"message":"317","line":52,"column":13,"nodeType":"266","endLine":62,"endColumn":4},{"ruleId":"316","severity":1,"message":"318","line":62,"column":6,"nodeType":"319","endLine":62,"endColumn":8,"suggestions":"320"},{"ruleId":"316","severity":1,"message":"321","line":109,"column":6,"nodeType":"319","endLine":109,"endColumn":8,"suggestions":"322"},{"ruleId":"316","severity":1,"message":"323","line":138,"column":6,"nodeType":"319","endLine":138,"endColumn":12,"suggestions":"324"},{"ruleId":"314","severity":1,"message":"315","line":298,"column":29,"nodeType":"294","endLine":301,"endColumn":31},{"ruleId":"268","severity":1,"message":"325","line":3,"column":19,"nodeType":"270","messageId":"271","endLine":3,"endColumn":27},{"ruleId":"268","severity":1,"message":"280","line":1,"column":17,"nodeType":"270","messageId":"271","endLine":1,"endColumn":26},{"ruleId":"264","severity":1,"message":"265","line":27,"column":37,"nodeType":"266","messageId":"267","endLine":27,"endColumn":39},{"ruleId":"264","severity":1,"message":"265","line":29,"column":25,"nodeType":"266","messageId":"267","endLine":29,"endColumn":27},{"ruleId":"268","severity":1,"message":"272","line":5,"column":10,"nodeType":"270","messageId":"271","endLine":5,"endColumn":16},{"ruleId":"268","severity":1,"message":"326","line":13,"column":7,"nodeType":"270","messageId":"271","endLine":13,"endColumn":15},{"ruleId":"264","severity":1,"message":"265","line":27,"column":35,"nodeType":"266","messageId":"267","endLine":27,"endColumn":37},{"ruleId":"268","severity":1,"message":"327","line":59,"column":11,"nodeType":"270","messageId":"271","endLine":59,"endColumn":24},{"ruleId":"268","severity":1,"message":"328","line":66,"column":11,"nodeType":"270","messageId":"271","endLine":66,"endColumn":19},{"ruleId":"264","severity":1,"message":"265","line":37,"column":21,"nodeType":"266","messageId":"267","endLine":37,"endColumn":23},{"ruleId":"268","severity":1,"message":"329","line":1,"column":10,"nodeType":"270","messageId":"271","endLine":1,"endColumn":26},{"ruleId":"330","severity":1,"message":"331","line":4,"column":1,"nodeType":"332","endLine":9,"endColumn":2},{"ruleId":"268","severity":1,"message":"333","line":112,"column":38,"nodeType":"270","messageId":"271","endLine":112,"endColumn":44},{"ruleId":"268","severity":1,"message":"334","line":3,"column":10,"nodeType":"270","messageId":"271","endLine":3,"endColumn":15},{"ruleId":"268","severity":1,"message":"335","line":5,"column":8,"nodeType":"270","messageId":"271","endLine":5,"endColumn":12},{"ruleId":"268","severity":1,"message":"336","line":6,"column":8,"nodeType":"270","messageId":"271","endLine":6,"endColumn":12},{"ruleId":"268","severity":1,"message":"337","line":8,"column":3,"nodeType":"270","messageId":"271","endLine":8,"endColumn":10},{"ruleId":"268","severity":1,"message":"338","line":12,"column":3,"nodeType":"270","messageId":"271","endLine":12,"endColumn":17},{"ruleId":"268","severity":1,"message":"339","line":15,"column":3,"nodeType":"270","messageId":"271","endLine":15,"endColumn":10},{"ruleId":"268","severity":1,"message":"272","line":24,"column":10,"nodeType":"270","messageId":"271","endLine":24,"endColumn":16},{"ruleId":"264","severity":1,"message":"297","line":70,"column":22,"nodeType":"266","messageId":"298","endLine":70,"endColumn":24},{"ruleId":"264","severity":1,"message":"265","line":77,"column":11,"nodeType":"299","messageId":"300","endLine":77,"endColumn":18},{"ruleId":"264","severity":1,"message":"265","line":124,"column":37,"nodeType":"266","messageId":"267","endLine":124,"endColumn":39},{"ruleId":"264","severity":1,"message":"265","line":178,"column":45,"nodeType":"266","messageId":"267","endLine":178,"endColumn":47},{"ruleId":"264","severity":1,"message":"265","line":189,"column":22,"nodeType":"266","messageId":"267","endLine":189,"endColumn":24},{"ruleId":"264","severity":1,"message":"297","line":207,"column":25,"nodeType":"266","messageId":"298","endLine":207,"endColumn":27},{"ruleId":"264","severity":1,"message":"265","line":212,"column":9,"nodeType":"299","messageId":"300","endLine":212,"endColumn":16},{"ruleId":"264","severity":1,"message":"265","line":213,"column":47,"nodeType":"266","messageId":"267","endLine":213,"endColumn":49},{"ruleId":"264","severity":1,"message":"297","line":248,"column":48,"nodeType":"266","messageId":"298","endLine":248,"endColumn":50},{"ruleId":"264","severity":1,"message":"265","line":310,"column":24,"nodeType":"266","messageId":"267","endLine":310,"endColumn":26},{"ruleId":"264","severity":1,"message":"265","line":313,"column":27,"nodeType":"266","messageId":"267","endLine":313,"endColumn":29},{"ruleId":"340","severity":1,"message":"341","line":315,"column":31,"nodeType":"342","messageId":"343","endLine":315,"endColumn":47},{"ruleId":"268","severity":1,"message":"344","line":340,"column":15,"nodeType":"270","messageId":"271","endLine":340,"endColumn":18},{"ruleId":"268","severity":1,"message":"344","line":361,"column":15,"nodeType":"270","messageId":"271","endLine":361,"endColumn":18},{"ruleId":"264","severity":1,"message":"265","line":389,"column":31,"nodeType":"266","messageId":"267","endLine":389,"endColumn":33},{"ruleId":"264","severity":1,"message":"265","line":436,"column":24,"nodeType":"266","messageId":"267","endLine":436,"endColumn":26},{"ruleId":"264","severity":1,"message":"265","line":440,"column":27,"nodeType":"266","messageId":"267","endLine":440,"endColumn":29},{"ruleId":"340","severity":1,"message":"341","line":442,"column":31,"nodeType":"342","messageId":"343","endLine":442,"endColumn":47},{"ruleId":"268","severity":1,"message":"344","line":467,"column":15,"nodeType":"270","messageId":"271","endLine":467,"endColumn":18},{"ruleId":"268","severity":1,"message":"344","line":488,"column":15,"nodeType":"270","messageId":"271","endLine":488,"endColumn":18},{"ruleId":"264","severity":1,"message":"265","line":515,"column":35,"nodeType":"266","messageId":"267","endLine":515,"endColumn":37},{"ruleId":"268","severity":1,"message":"345","line":555,"column":33,"nodeType":"270","messageId":"271","endLine":555,"endColumn":38},{"ruleId":"264","severity":1,"message":"265","line":559,"column":22,"nodeType":"266","messageId":"267","endLine":559,"endColumn":24},{"ruleId":"264","severity":1,"message":"265","line":562,"column":34,"nodeType":"266","messageId":"267","endLine":562,"endColumn":36},{"ruleId":"268","severity":1,"message":"346","line":2,"column":27,"nodeType":"270","messageId":"271","endLine":2,"endColumn":43},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'Accordion' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Card' is defined but never used.","'ToastContainer' is defined but never used.","'toast' is defined but never used.","no-native-reassign",["347"],"no-negated-in-lhs",["348"],"'useEffect' is defined but never used.",["347"],["348"],["347"],["348"],["347"],["348"],"'clearNotifications' is defined but never used.","'Nav' is defined but never used.","'getCurrentUser' is defined but never used.","'socket' is defined but never used.","'dispatch' is assigned a value but never used.","jsx-a11y/role-supports-aria-props","The attribute aria-haspopup is not supported by the role listitem. This role is implicit on the element li.","JSXOpeningElement",["347"],["348"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","ReturnStatement","expectedReturnValue","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'ListGroup' is defined but never used.","'ListGroupItem' is defined but never used.","'overdue' is assigned a value but never used.","'following' is assigned a value but never used.","'projectTeam' is assigned a value but never used.","'rating' is assigned a value but never used.","'userId' is assigned a value but never used.","'token' is assigned a value but never used.","'data' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["349"],"React Hook useEffect has missing dependencies: 'chat' and 'user._id'. Either include them or remove the dependency array.",["350"],"React Hook useEffect has a missing dependency: 'user._id'. Either include it or remove the dependency array.",["351"],"'getTasks' is defined but never used.","'BASE_URL' is assigned a value but never used.","'notifications' is assigned a value but never used.","'selected' is assigned a value but never used.","'devToolsEnhancer' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'skills' is assigned a value but never used.","'Modal' is defined but never used.","'Pert' is defined but never used.","'Task' is defined but never used.","'addEdge' is defined but never used.","'removeElements' is defined but never used.","'addTask' is defined but never used.","no-self-assign","'task.description' is assigned to itself.","MemberExpression","selfAssignment","'ele' is assigned a value but never used.","'tasks' is assigned a value but never used.","'getNotifications' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},{"desc":"354","fix":"356"},"Update the dependencies array to be: [dispatch]",{"range":"357","text":"358"},"Update the dependencies array to be: [chat, user._id]",{"range":"359","text":"360"},{"range":"361","text":"360"},[2100,2102],"[dispatch]",[3310,3312],"[chat, user._id]",[4108,4114]]