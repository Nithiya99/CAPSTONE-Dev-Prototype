[{"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\EditProfile.js":"1","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\TextPostView.js":"2","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\apiPosts.js":"3"},{"size":9875,"mtime":1621706916025,"results":"4","hashOfConfig":"5"},{"size":6278,"mtime":1621706895294,"results":"6","hashOfConfig":"5"},{"size":13512,"mtime":1621707011154,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10","usedDeprecatedRules":"11"},"13vq143",{"filePath":"12","messages":"13","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"14","messages":"15","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\EditProfile.js",["16","17"],"import React, { Component } from \"react\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { read, update } from \"./apiUser\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport SkillsInput from \"../utils/signupbutton/Tagify/SkillsInput\";\r\nimport DefaultProfile from \"../images/avatar.png\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport DragDropProfilePic from \"./../posts/DragDropProfilePic\";\r\nimport { postProfilePic } from \"../posts/apiPosts\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { setProfilePic } from \"../store/user\";\r\nimport { connect } from \"react-redux\";\r\nclass EditProfile extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      id: \"\",\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      redirectToProfile: false,\r\n      error: \"\",\r\n      initialName: \"\",\r\n      open: false,\r\n    };\r\n  }\r\n\r\n  init = (userId) => {\r\n    const token = isAuthenticated().token;\r\n    read(userId, token).then((data) => {\r\n      if (data.error) {\r\n        this.setState({ redirectToProfile: true });\r\n      } else {\r\n        this.setState({\r\n          id: data._id,\r\n          name: data.name,\r\n          email: data.email,\r\n          username: data.username,\r\n          location: data.location,\r\n          bio: data.bio,\r\n          dob: data.dob,\r\n          skills: data.skills,\r\n          social: data.social,\r\n          error: \"\",\r\n        });\r\n        let str = \"\";\r\n        data.skills.map((skill) => {\r\n          str += skill;\r\n          str += \",\";\r\n        });\r\n        str = str.slice(0, -1);\r\n        this.setState({ skillstr: str });\r\n        this.setState({ initialName: data.name });\r\n      }\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const userId = this.props.match.params.userId;\r\n    this.init(userId);\r\n  }\r\n  handleChange = (name) => (event) => {\r\n    this.setState({ [name]: event.target.value });\r\n  };\r\n  handleSkills = (newSkills) => {\r\n    this.setState({ skills: newSkills });\r\n  };\r\n  handleSocialChange = (name) => (event) => {\r\n    const social = Object.assign({}, this.state.social, {\r\n      [name]: event.target.value,\r\n    });\r\n    this.setState({ social });\r\n  };\r\n  clickSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { name, username, email, password, location, bio, social, skills } =\r\n      this.state;\r\n    const user = {\r\n      name,\r\n      username,\r\n      email,\r\n      location,\r\n      bio,\r\n      social,\r\n      skills,\r\n      password: password || undefined,\r\n    };\r\n    // console.log(user);\r\n    const userId = this.props.match.params.userId;\r\n    const token = isAuthenticated().token;\r\n    update(userId, token, user).then((data) => {\r\n      if (data.error) this.setState({ error: data.error });\r\n      else\r\n        this.setState({\r\n          redirectToProfile: true,\r\n        });\r\n    });\r\n    // console.log(user);\r\n  };\r\n  handleOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n  setImage = (image) => {\r\n    console.log(image);\r\n    this.setState({ image });\r\n  };\r\n  render() {\r\n    const {\r\n      id,\r\n      name,\r\n      email,\r\n      password,\r\n      username,\r\n      location,\r\n      bio,\r\n      social,\r\n      redirectToProfile,\r\n      error,\r\n      skillstr,\r\n      initialName,\r\n      open,\r\n      image,\r\n    } = this.state;\r\n    if (redirectToProfile) {\r\n      return <Redirect to={`/user/${id}`} />;\r\n    }\r\n    if (social === undefined) return null;\r\n    const { profilePic } = this.props;\r\n    let dp =\r\n      profilePic === \"\" || profilePic === undefined\r\n        ? DefaultProfile\r\n        : profilePic;\r\n    console.log(\"dp:\", dp);\r\n    return (\r\n      <div className=\"container\">\r\n        <ToastContainer />\r\n        <h2 className=\"mt-5 mb-5\">Edit Profile</h2>\r\n        <div\r\n          className=\"alert alert-danger\"\r\n          style={{ display: error ? \"\" : \"none\" }}\r\n        >\r\n          {error}\r\n        </div>\r\n        <div>\r\n          <Modal show={open} onHide={this.handleChange}>\r\n            <Modal.Header>\r\n              <Modal.Title>Let's change your Display Picture</Modal.Title>\r\n            </Modal.Header>\r\n\r\n            <Modal.Body>\r\n              {image !== undefined ? (\r\n                <img src={URL.createObjectURL(image)} width={\"450px\"} />\r\n              ) : (\r\n                <DragDropProfilePic setImage={this.setImage} />\r\n              )}\r\n            </Modal.Body>\r\n\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={() => this.handleClose}>\r\n                Close\r\n              </Button>\r\n              <Button\r\n                variant=\"primary\"\r\n                onClick={() => {\r\n                  if (image !== undefined) {\r\n                    postProfilePic(image).then((url) => {\r\n                      if (url) {\r\n                        toast.success(\"profile picture updated\");\r\n                        this.props.setProfilePic({ profilePic: url });\r\n                        this.handleClose();\r\n                      }\r\n                    });\r\n                  }\r\n                }}\r\n              >\r\n                Save changes\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n          <img\r\n            src={dp}\r\n            alt={initialName}\r\n            className=\"symbol symbol-60 symbol-xxl-100 mr-3 align-self-start align-self-xxl-center\"\r\n            style={{ width: \"55px\" }}\r\n          />\r\n          <Button\r\n            onClick={() => {\r\n              this.handleOpen();\r\n            }}\r\n          >\r\n            Edit DP\r\n          </Button>\r\n          <Button onClick={() => console.log(\"Delete DP\")}>Delete DP</Button>\r\n        </div>\r\n        <form>\r\n          <div className=\"form-group\">\r\n            <label>Username</label>\r\n            <input\r\n              onChange={this.handleChange(\"username\")}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={username}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Name</label>\r\n            <input\r\n              onChange={this.handleChange(\"name\")}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={name}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Email</label>\r\n            <input\r\n              onChange={this.handleChange(\"email\")}\r\n              type=\"email\"\r\n              className=\"form-control\"\r\n              value={email}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Password</label>\r\n            <input\r\n              onChange={this.handleChange(\"password\")}\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              value={password}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Bio</label>\r\n            <input\r\n              onChange={this.handleChange(\"bio\")}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={bio}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Location</label>\r\n            <input\r\n              onChange={this.handleChange(\"location\")}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={location}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <SkillsInput\r\n              label={\"Skills\"}\r\n              setSkills={this.handleSkills}\r\n              value={skillstr}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Instagram</label>\r\n            <input\r\n              onChange={this.handleSocialChange(\"instagram\")}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={social.instagram}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Facebook</label>\r\n            <input\r\n              onChange={this.handleSocialChange(\"facebook\")}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={social.instagram}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Your Website</label>\r\n            <input\r\n              onChange={this.handleSocialChange(\"website\")}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={social.website}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Linkedin</label>\r\n            <input\r\n              onChange={this.handleSocialChange(\"linkedin\")}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={social.linkedin}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Youtube</label>\r\n            <input\r\n              onChange={this.handleSocialChange(\"youtube\")}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={social.youtube}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Twitter</label>\r\n            <input\r\n              onChange={this.handleSocialChange(\"twitter\")}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={social.twitter}\r\n            />\r\n          </div>\r\n          <button\r\n            onClick={this.clickSubmit}\r\n            className=\"btn btn-raised btn-primary\"\r\n          >\r\n            Update\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  profilePic: state.user.profilePic,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setProfilePic: (params) => dispatch(setProfilePic(params)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditProfile);\r\n",["18","19"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\TextPostView.js",["20","21","22","23","24","25","26"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\apiPosts.js",["27","28","29"],{"ruleId":"30","severity":1,"message":"31","line":47,"column":33,"nodeType":"32","messageId":"33","endLine":47,"endColumn":35},{"ruleId":"34","severity":1,"message":"35","line":155,"column":17,"nodeType":"36","endLine":155,"endColumn":73},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":8,"column":8,"nodeType":"43","messageId":"44","endLine":8,"endColumn":19},{"ruleId":"41","severity":1,"message":"45","line":10,"column":10,"nodeType":"43","messageId":"44","endLine":10,"endColumn":19},{"ruleId":"41","severity":1,"message":"46","line":10,"column":21,"nodeType":"43","messageId":"44","endLine":10,"endColumn":27},{"ruleId":"41","severity":1,"message":"47","line":10,"column":29,"nodeType":"43","messageId":"44","endLine":10,"endColumn":33},{"ruleId":"34","severity":1,"message":"35","line":72,"column":13,"nodeType":"36","endLine":72,"endColumn":73},{"ruleId":"41","severity":1,"message":"48","line":96,"column":46,"nodeType":"43","messageId":"44","endLine":96,"endColumn":50},{"ruleId":"34","severity":1,"message":"35","line":107,"column":19,"nodeType":"36","endLine":107,"endColumn":79},{"ruleId":"41","severity":1,"message":"49","line":3,"column":7,"nodeType":"43","messageId":"44","endLine":3,"endColumn":13},{"ruleId":"50","severity":1,"message":"51","line":376,"column":53,"nodeType":"52","messageId":"53","endLine":376,"endColumn":54},{"ruleId":"30","severity":1,"message":"31","line":396,"column":30,"nodeType":"32","messageId":"33","endLine":396,"endColumn":32},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'CommentIcon' is defined but never used.","Identifier","unusedVar","'Accordion' is defined but never used.","'Button' is defined but never used.","'Card' is defined but never used.","'tags' is assigned a value but never used.","'userId' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-global-assign","no-unsafe-negation"]