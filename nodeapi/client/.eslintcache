[{"C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\App.js":"1","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\store.js":"2","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Signin.js":"3","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\MyChats.js":"4","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\reducer.js":"5","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\JoinProject.js":"6","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Recommendation.js":"7","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\MyProjects.js":"8","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\user.js":"9","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\apiProject.js":"10","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\YoutubePost.js":"11","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Followers.js":"12","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\DragDropProfilePic.js":"13","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\UserRecommendation.js":"14","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\auth\\index.js":"15","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\Socket.js":"16","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Tagify\\SkillsInput.js":"17","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\layout\\LayoutComponent.js":"18","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Tagify\\TagFinal.js":"19","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Social.js":"20","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\taskComponents\\EditModel.js":"21","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\SubmitProject.js":"22","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\LeaveProject.js":"23","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\PdfDropZone.js":"24","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\SearchProjectBar.js":"25","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\SearchUserBar.js":"26","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\YoutubeURLPost.js":"27","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\RatingComponent.js":"28","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\DragDropImages.js":"29","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\Emoji.js":"30","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\ProjectRecommendation.js":"31","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\viewProject.js":"32","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\EditProfile.js":"33","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\Post.js":"34","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\ProjectDashboard.js":"35","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\reportWebVitals.js":"36","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Users.js":"37","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\NavBar.js":"38","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Menu.js":"39","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\DeleteUser.js":"40","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\apiUser.js":"41","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\apiPosts.js":"42","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Following.js":"43","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\RecommendedRolePeople.js":"44","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\RoleReq.js":"45","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\taskComponents\\TrelloTask.js":"46","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\apiNotifications.js":"47","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\layout\\Task.js":"48","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Personal.js":"49","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\SearchBar.js":"50","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\UserRecommender.js":"51","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\RatingComponentFeedbackForm.js":"52","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\MainRouter.js":"53","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Notifications.js":"54","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\EditProject.js":"55","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\notifications.js":"56","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\TextPostView.js":"57","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\DeletePost.js":"58","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Form.js":"59","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\User.js":"60","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\KickUser.js":"61","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\FeedbackForm.js":"62","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\PostImage.js":"63","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\TextPost.js":"64","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\layout\\Pert.js":"65","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Tagify\\Assigner.js":"66","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\Chat.js":"67","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Home.js":"68","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\newProjectForm\\CreateProject.js":"69","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\cpm.js":"70","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\posts.js":"71","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\newProjectForm\\RoleCreate.js":"72","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\DeleteProject.js":"73","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\User_Role.js":"74","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\PostVideo.js":"75"},{"size":479,"mtime":1621732872782,"results":"76","hashOfConfig":"77"},{"size":297,"mtime":1621732872839,"results":"78","hashOfConfig":"77"},{"size":6689,"mtime":1621732872870,"results":"79","hashOfConfig":"77"},{"size":14616,"mtime":1621867882141,"results":"80","hashOfConfig":"77"},{"size":406,"mtime":1621732872838,"results":"81","hashOfConfig":"77"},{"size":12238,"mtime":1622515447896,"results":"82","hashOfConfig":"77"},{"size":13889,"mtime":1622509101858,"results":"83","hashOfConfig":"77"},{"size":38660,"mtime":1622509101850,"results":"84","hashOfConfig":"77"},{"size":1348,"mtime":1622426033123,"results":"85","hashOfConfig":"77"},{"size":16850,"mtime":1622451159356,"results":"86","hashOfConfig":"77"},{"size":14618,"mtime":1622426033106,"results":"87","hashOfConfig":"77"},{"size":3514,"mtime":1622426033125,"results":"88","hashOfConfig":"77"},{"size":1507,"mtime":1621732872801,"results":"89","hashOfConfig":"77"},{"size":5168,"mtime":1622085698055,"results":"90","hashOfConfig":"77"},{"size":1831,"mtime":1621732872785,"results":"91","hashOfConfig":"77"},{"size":242,"mtime":1621732872873,"results":"92","hashOfConfig":"77"},{"size":522,"mtime":1621732872879,"results":"93","hashOfConfig":"77"},{"size":23477,"mtime":1622085698067,"results":"94","hashOfConfig":"77"},{"size":1297,"mtime":1621732872880,"results":"95","hashOfConfig":"77"},{"size":4033,"mtime":1621732872876,"results":"96","hashOfConfig":"77"},{"size":4130,"mtime":1621732872832,"results":"97","hashOfConfig":"77"},{"size":4607,"mtime":1621732872822,"results":"98","hashOfConfig":"77"},{"size":2752,"mtime":1622509101850,"results":"99","hashOfConfig":"77"},{"size":2330,"mtime":1622255051419,"results":"100","hashOfConfig":"77"},{"size":4178,"mtime":1621779173915,"results":"101","hashOfConfig":"77"},{"size":2094,"mtime":1621831756201,"results":"102","hashOfConfig":"77"},{"size":4385,"mtime":1621732872809,"results":"103","hashOfConfig":"77"},{"size":1643,"mtime":1621732872820,"results":"104","hashOfConfig":"77"},{"size":6944,"mtime":1621867932483,"results":"105","hashOfConfig":"77"},{"size":2120,"mtime":1621732872815,"results":"106","hashOfConfig":"77"},{"size":3713,"mtime":1622510558018,"results":"107","hashOfConfig":"77"},{"size":10093,"mtime":1622515554328,"results":"108","hashOfConfig":"77"},{"size":14410,"mtime":1622517050189,"results":"109","hashOfConfig":"77"},{"size":15278,"mtime":1622518899151,"results":"110","hashOfConfig":"77"},{"size":36136,"mtime":1622623710793,"results":"111","hashOfConfig":"77"},{"size":375,"mtime":1621732872835,"results":"112","hashOfConfig":"77"},{"size":9944,"mtime":1622426033132,"results":"113","hashOfConfig":"77"},{"size":362,"mtime":1621732872788,"results":"114","hashOfConfig":"77"},{"size":15665,"mtime":1622255051415,"results":"115","hashOfConfig":"77"},{"size":1207,"mtime":1621732872867,"results":"116","hashOfConfig":"77"},{"size":8836,"mtime":1622426033133,"results":"117","hashOfConfig":"77"},{"size":13307,"mtime":1622255051415,"results":"118","hashOfConfig":"77"},{"size":3208,"mtime":1622426033126,"results":"119","hashOfConfig":"77"},{"size":853,"mtime":1622085698055,"results":"120","hashOfConfig":"77"},{"size":902,"mtime":1622426033116,"results":"121","hashOfConfig":"77"},{"size":13586,"mtime":1622509101858,"results":"122","hashOfConfig":"77"},{"size":2027,"mtime":1622085698044,"results":"123","hashOfConfig":"77"},{"size":714,"mtime":1621732872827,"results":"124","hashOfConfig":"77"},{"size":2382,"mtime":1621732872876,"results":"125","hashOfConfig":"77"},{"size":4095,"mtime":1622426033083,"results":"126","hashOfConfig":"77"},{"size":6363,"mtime":1622426033130,"results":"127","hashOfConfig":"77"},{"size":2185,"mtime":1622029620771,"results":"128","hashOfConfig":"77"},{"size":3011,"mtime":1622510352770,"results":"129","hashOfConfig":"77"},{"size":26114,"mtime":1622509101850,"results":"130","hashOfConfig":"77"},{"size":6112,"mtime":1621732872815,"results":"131","hashOfConfig":"77"},{"size":2825,"mtime":1622085698070,"results":"132","hashOfConfig":"77"},{"size":13460,"mtime":1622426033089,"results":"133","hashOfConfig":"77"},{"size":1276,"mtime":1621947861484,"results":"134","hashOfConfig":"77"},{"size":4647,"mtime":1621732872874,"results":"135","hashOfConfig":"77"},{"size":3029,"mtime":1621732872881,"results":"136","hashOfConfig":"77"},{"size":2695,"mtime":1622509101850,"results":"137","hashOfConfig":"77"},{"size":2241,"mtime":1622029620713,"results":"138","hashOfConfig":"77"},{"size":2022,"mtime":1621850279561,"results":"139","hashOfConfig":"77"},{"size":4031,"mtime":1621732872806,"results":"140","hashOfConfig":"77"},{"size":5141,"mtime":1621732872826,"results":"141","hashOfConfig":"77"},{"size":1517,"mtime":1621732872879,"results":"142","hashOfConfig":"77"},{"size":6960,"mtime":1622608255355,"results":"143","hashOfConfig":"77"},{"size":11670,"mtime":1622433090174,"results":"144","hashOfConfig":"77"},{"size":7621,"mtime":1622426033121,"results":"145","hashOfConfig":"77"},{"size":2239,"mtime":1621732872836,"results":"146","hashOfConfig":"77"},{"size":1999,"mtime":1622008519087,"results":"147","hashOfConfig":"77"},{"size":1886,"mtime":1621732872829,"results":"148","hashOfConfig":"77"},{"size":1467,"mtime":1621732872813,"results":"149","hashOfConfig":"77"},{"size":4388,"mtime":1622085698055,"results":"150","hashOfConfig":"77"},{"size":622,"mtime":1621732872805,"results":"151","hashOfConfig":"77"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},"ctnmui",{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"160"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"154"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"169"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"154"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"169"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"169"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"169"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"160"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"169"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"160"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"169"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"169"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"160"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"169"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"169"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"239","messages":"240","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"169"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"169"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"169"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"260","messages":"261","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"169"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"265","messages":"266","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"169"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"154"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"281","messages":"282","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"169"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"286","messages":"287","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"288","messages":"289","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"290","messages":"291","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"169"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"299","messages":"300","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"301","messages":"302","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"305","messages":"306","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"307","messages":"308","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"169"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"318","messages":"319","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"320","messages":"321","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"322","messages":"323","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"324","messages":"325","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\App.js",[],["332","333"],"C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\store.js",["334","335"],"C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Signin.js",["336"],"import React, { Component } from \"react\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport { signin, authenticate, isAuthenticated } from \"../auth/index\";\r\nimport \"../styles.css\";\r\nimport ModalButton from \"./../utils/signupbutton/ModalButton\";\r\nimport { GoogleLogin } from \"react-google-login\";\r\nimport socket from \"./../utils/Socket\";\r\nimport LoginImg from \"../images/login.png\";\r\n\r\nclass Signin extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      error: \"\",\r\n      redirectToReferer: false,\r\n      loading: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    localStorage.removeItem(\"jwt\");\r\n    // browser.cookies.remove({\r\n    //   name: \"t\",\r\n    // });\r\n    // window.location.reload();\r\n  }\r\n  loginGoogle = (e) => {\r\n    const user = {\r\n      email: e.profileObj.email.toString(),\r\n      password: e.profileObj.googleId.toString(),\r\n    };\r\n    signin(user)\r\n      .then((data) => {\r\n        console.log(\"HI FROM MAIN ROUTE\");\r\n        if (data.error) {\r\n          this.setState({ error: data.error, loading: false });\r\n        } else {\r\n          authenticate(data, () => {\r\n            this.setState({ redirectToReferer: true });\r\n          });\r\n        }\r\n      })\r\n      .then(() => {\r\n        const userId = isAuthenticated().user._id;\r\n        socket.emit(\"login\", {\r\n          userId,\r\n        });\r\n      });\r\n  };\r\n  loginGoogleFailed = (e) => {\r\n    console.log(\"Failed event\");\r\n  };\r\n  handleChange = (name) => (event) => {\r\n    this.setState({ error: \"\" });\r\n    this.setState({ [name]: event.target.value });\r\n  };\r\n\r\n  clickSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.setState({ loading: true });\r\n    const { email, password } = this.state;\r\n    const user = {\r\n      email,\r\n      password,\r\n    };\r\n    // console.log(user);\r\n    signin(user)\r\n      .then((data) => {\r\n        console.log(\"HI FROM MAIN ROUTE\");\r\n        console.log(data);\r\n        if (data.error) {\r\n          this.setState({ error: data.error, loading: false });\r\n        } else {\r\n          // authenticate\r\n          authenticate(data, () => {\r\n            this.setState({ redirectToReferer: true });\r\n          });\r\n        }\r\n      })\r\n      .then(() => {\r\n        if (isAuthenticated()) {\r\n          const userId = isAuthenticated().user._id;\r\n          socket.emit(\"login\", {\r\n            userId,\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { email, password, error, redirectToReferer, loading } = this.state;\r\n\r\n    if (redirectToReferer) {\r\n      return <Redirect to=\"/home\" />;\r\n    }\r\n\r\n    return (\r\n      <div className=\" h-100 signin-wrapper\">\r\n        <div className=\"row signin-content justify-content-center align-items-center\">\r\n          <div className=\"login-aside d-flex flex-column flex-row-auto\">\r\n            <img src={LoginImg} />\r\n          </div>\r\n          <div className=\"login-content flex-row-fluid d-flex flex-column justify-content-center position-relative overflow-hidden p-17 mx-auto\">\r\n            <div className=\"d-flex flex-column-fluid flex-center\">\r\n              <div className=\"login-form login-signin\">\r\n                <form\r\n                  className=\"form fv-plugins-bootstrap fv-plugins-framework\"\r\n                  id=\"kt_login_signin_form\"\r\n                >\r\n                  <div className=\"pb-13 pt-lg-0 pt-5\">\r\n                    <h3 className=\"font-weight-bolder text-dark font-size-h4 font-size-h1-lg\">\r\n                      Welcome to Workshake\r\n                    </h3>\r\n                    <span className=\"text-muted font-weight-bold font-size-h4\">\r\n                      New Here? <ModalButton />\r\n                    </span>\r\n                  </div>\r\n                  <div\r\n                    className=\"alert alert-danger mb-5 col-sm-8 offset-2\"\r\n                    style={{ display: error ? \"\" : \"none\" }}\r\n                  >\r\n                    {error}\r\n                  </div>\r\n\r\n                  {loading ? (\r\n                    <div className=\"jumbotron text-center\">\r\n                      <h2>Loading...</h2>\r\n                    </div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  <div className=\"form-group fv-plugins-icon-container\">\r\n                    <label className=\"font-size-h6 font-weight-bolder text-dark\">\r\n                      Email\r\n                    </label>\r\n                    <input\r\n                      className=\"login-control form-control form-control-solid h-auto py-6 px-6 rounded-lg\"\r\n                      onChange={this.handleChange(\"email\")}\r\n                      value={email}\r\n                      type=\"email\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group fv-plugins-icon-container pt-5\">\r\n                    <div className=\"d-flex justify-content-between mt-n5\">\r\n                      <label className=\"font-size-h6 font-weight-bolder text-dark\">\r\n                        Password\r\n                      </label>\r\n                      <Link\r\n                        to=\"#\"\r\n                        className=\"text-primary font-size-h6 font-weight-bolder text-hover-primary\"\r\n                        id=\"kt_login_forgot\"\r\n                      >\r\n                        Forgot Password\r\n                      </Link>\r\n                    </div>\r\n                    <input\r\n                      className=\"login-control form-control form-control-solid h-auto py-6 px-6 rounded-lg\"\r\n                      onChange={this.handleChange(\"password\")}\r\n                      value={password}\r\n                      type=\"password\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"pb-lg-0 pb-5\">\r\n                    <button\r\n                      type=\"button\"\r\n                      id=\"kt_login_signin_submit\"\r\n                      onClick={this.clickSubmit}\r\n                      className=\"btn btn-primary font-weight-bolder font-size-h6 px-8 py-4 my-3 mr-3\"\r\n                    >\r\n                      Sign In\r\n                    </button>\r\n                    <GoogleLogin\r\n                      clientId=\"11029788971-15i4cq1rn9lijdh2k685to3ri1vtb682.apps.googleusercontent.com\"\r\n                      buttonText=\"Sign in with Google\"\r\n                      onSuccess={this.loginGoogle}\r\n                      onFailure={this.loginGoogleFailed}\r\n                      cookiePolicy={\"single_host_origin\"}\r\n                    />\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Signin;\r\n",["337","338"],"C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\MyChats.js",["339","340","341","342","343"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  getCurrentUser,\r\n  getfriends,\r\n  getUserById,\r\n  updatePersonalChat,\r\n  clearChat,\r\n  blockUser,\r\n  unblockUser,\r\n} from \"./apiUser\";\r\nimport DefaultProfile from \"./../images/avatar.png\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Row, Tab, Col, Nav } from \"react-bootstrap\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { clearFriends, friendAdded } from \"../store/user\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport io from \"socket.io-client\";\r\nimport moment from \"moment\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport CheckCircleOutlineIcon from \"@material-ui/icons/CheckCircleOutline\";\r\nimport BlockIcon from \"@material-ui/icons/Block\";\r\nimport ClearAllIcon from \"@material-ui/icons/ClearAll\";\r\n\r\nvar options = {\r\n  rememberUpgrade: true,\r\n  transports: [\"websocket\"],\r\n  secure: true,\r\n  rejectUnauthorized: false,\r\n};\r\n\r\nconst MyChats = () => {\r\n  const dispatch = useDispatch();\r\n  const friends = useSelector((state) => state.user.friends);\r\n  const [user, setUser] = useState({});\r\n  const [touser_id, settouser_id] = useState(String);\r\n  const [toname, settoname] = useState(String);\r\n  const [state, setState] = useState({\r\n    message: \"\",\r\n    from_name: getCurrentUser().name,\r\n    created: new Date(),\r\n  });\r\n  const [blocked_users, set_blocked_user] = useState([]);\r\n  const [isblocked, set_isblocked] = useState(Boolean);\r\n  const [blocked_by, set_blocked_by] = useState([]);\r\n  const [isblocked_by, set_isblocked_by] = useState(Boolean);\r\n  const [chat, setChat] = useState([]);\r\n\r\n  const divRef = useRef(null);\r\n  const messagesEndRef = useRef(null);\r\n  const socketRef = useRef();\r\n\r\n  useEffect(async () => {\r\n    dispatch(clearFriends());\r\n    await getfriends(getCurrentUser()._id).then(async (data) => {\r\n      await data.map(async (userid) => {\r\n        await getUserById(userid).then((u) => {\r\n          if (u.user._id !== getCurrentUser()._id)\r\n            dispatch(friendAdded({ user: u.user }));\r\n        });\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  // console.log(friends);\r\n\r\n  function fun(user) {\r\n    let userid = getCurrentUser()._id;\r\n    socketRef.current = io.connect(\"http://localhost:8081\", options);\r\n    socketRef.current.emit(\"getPersonalChat\", {\r\n      userid,\r\n      touser: user._id,\r\n      client_chat_length: chat.length,\r\n    });\r\n    socketRef.current.on(\"personalchat\" + userid, (data) => {\r\n      setChat(data);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    let userid = getCurrentUser()._id;\r\n\r\n    getUserById(userid).then((data) => {\r\n      set_blocked_user(data.user.blocked_users);\r\n      set_blocked_by(data.user.blocked_by);\r\n    });\r\n\r\n    socketRef.current = io.connect(\"http://localhost:8081\", options);\r\n    socketRef.current.emit(\"getPersonalChat\", {\r\n      userid,\r\n      touser: user._id,\r\n      client_chat_length: chat.length,\r\n    });\r\n\r\n    socketRef.current.on(\r\n      \"personal_message\" + userid,\r\n      ({ from_name, toname, message, created, touser_id, fromuser }) => {\r\n        let chats = [...chat];\r\n        chats.push({\r\n          from_name,\r\n          toname,\r\n          message,\r\n          created,\r\n          touser_id,\r\n          fromuser,\r\n        });\r\n        setChat(chats);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let userid = getCurrentUser()._id;\r\n    socketRef.current = io.connect(\"http://localhost:8081\", options);\r\n    socketRef.current.emit(\"getPersonalChat\", {\r\n      userid,\r\n      touser: user._id,\r\n      client_chat_length: chat.length,\r\n    });\r\n    socketRef.current.on(\"personalchat\" + userid, (data) => {\r\n      setChat(data);\r\n    });\r\n    socketRef.current.on(\r\n      \"personal_message\" + userid,\r\n      ({ from_name, toname, message, created, touser_id, fromuser }) => {\r\n        let chats = [...chat];\r\n        chats.push({\r\n          from_name,\r\n          toname,\r\n          message,\r\n          created,\r\n          touser_id,\r\n          fromuser,\r\n        });\r\n        setChat(chats);\r\n      }\r\n    );\r\n    return () => socketRef.current.disconnect();\r\n  }, [chat]);\r\n\r\n  const onMessageSubmit = (e) => {\r\n    const { from_name, message, created } = state;\r\n    let fromuser = getCurrentUser()._id;\r\n    if (message.trim() !== \"\") {\r\n      socketRef.current.emit(\"personal_message\", {\r\n        from_name,\r\n        toname,\r\n        message,\r\n        created,\r\n        touser_id,\r\n        fromuser,\r\n      });\r\n      let chat_msg = {\r\n        from_name,\r\n        toname,\r\n        message,\r\n        created,\r\n        touser_id,\r\n        fromuser,\r\n      };\r\n      updatePersonalChat(chat_msg).then((data) => {\r\n        let chats = [...chat];\r\n        chats.push(chat_msg);\r\n        setChat(chats);\r\n      });\r\n    }\r\n    e.preventDefault();\r\n    setState({ message: \"\", from_name });\r\n  };\r\n\r\n  const onTextChange = (e) => {\r\n    setState({ ...state, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onClearChat = (e) => {\r\n    let current_user_id = getCurrentUser()._id;\r\n    let client_user_id = user._id;\r\n    clearChat(current_user_id, client_user_id).then((data) => {\r\n      let chats = [];\r\n      setChat(chats);\r\n      console.log(data);\r\n    });\r\n    e.preventDefault();\r\n  };\r\n\r\n  const onBlockUser = (e) => {\r\n    let current_user_id = getCurrentUser()._id;\r\n    let client_user_id = user._id;\r\n    blockUser(current_user_id, client_user_id).then((data) => {\r\n      console.log(data);\r\n    });\r\n    e.preventDefault();\r\n  };\r\n\r\n  const onUnBlockUser = (e) => {\r\n    let current_user_id = getCurrentUser()._id;\r\n    let client_user_id = user._id;\r\n    unblockUser(current_user_id, client_user_id).then((data) => {\r\n      console.log(data);\r\n    });\r\n    e.preventDefault();\r\n  };\r\n\r\n  var d = new Date();\r\n  var f = 0;\r\n  function setdate(dd) {\r\n    d = dd;\r\n    return moment(dd).format(\"DD-MM-YYYY\");\r\n  }\r\n  function settoday(dd) {\r\n    d = dd;\r\n    f = 1;\r\n  }\r\n  const renderChat = () => {\r\n    f = 0;\r\n    return chat.map(({ from_name, message, created }, index) => (\r\n      <div>\r\n        <div className=\"d-flex flex-column m-3 align-items-center\">\r\n          {moment(created).format(\"DD-MM-YYYY\") !==\r\n          moment(d).format(\"DD-MM-YYYY\") ? (\r\n            moment(created).format(\"DD-MM-YYYY\") ===\r\n            moment(new Date()).format(\"DD-MM-YYYY\") ? (\r\n              <span className=\"text-dark-75 font-weight-bold font-size-sm bubble-date\">\r\n                Today{settoday(created)}\r\n              </span>\r\n            ) : (\r\n              <span className=\"text-dark-75 font-weight-bold font-size-sm bubble-date\">\r\n                {setdate(created)}\r\n              </span>\r\n            )\r\n          ) : moment(created).format(\"DD-MM-YYYY\") ===\r\n              moment(new Date()).format(\"DD-MM-YYYY\") && f === 0 ? (\r\n            <span className=\"text-dark-75 font-weight-bold font-size-sm bubble-date\">\r\n              Today{settoday(created)}\r\n            </span>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n        </div>\r\n        {isAuthenticated().user.name === from_name ? (\r\n          <div className=\"d-flex flex-column m-3 align-items-end \" key={index}>\r\n            <div className=\"d-flex align-items-center\">\r\n              <div>\r\n                <span className=\"text-muted font-size-sm\">\r\n                  {moment(created).format(\"h:mm a\")}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-2 text-dark font-weight-bold font-size-lg  text-left bubble-alt\">\r\n              {message}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div\r\n            className=\"d-flex flex-column m-3 align-items-start \"\r\n            key={index}\r\n          >\r\n            <div className=\"d-flex align-items-center\">\r\n              <div>\r\n                <span className=\"text-muted font-size-sm\">\r\n                  {moment(created).format(\"h:mm a\")}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-2 text-dark font-weight-bold font-size-lg  text-left  bubble\">\r\n              {message}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div className=\"pt-5\">\r\n      <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"empty\">\r\n        <Row>\r\n          <Col sm={3}>\r\n            <div className=\"card card-custom card-stretch\">\r\n              <div className=\"card-body pt-4\">\r\n                <Nav variant=\"pills\" className=\"flex-column mt-3\">\r\n                  {friends.map((user, i) => (\r\n                    <Nav.Item>\r\n                      {/* {console.log(user)} */}\r\n\r\n                      <Nav.Link\r\n                        eventKey={i}\r\n                        onClick={() => {\r\n                          setUser(user);\r\n                          settouser_id(user._id);\r\n                          settoname(user.name);\r\n                          fun(user);\r\n                          set_isblocked(blocked_users.indexOf(user._id) > -1);\r\n                          set_isblocked_by(blocked_by.indexOf(user._id) > -1);\r\n                        }}\r\n                      >\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"mr-3\">\r\n                            <img\r\n                              src={DefaultProfile}\r\n                              style={{ width: \"40px\" }}\r\n                            />\r\n                          </div>\r\n                          <div>{user.name}</div>\r\n                        </div>\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                  ))}\r\n                </Nav>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n          <Col sm={9}>\r\n            <Tab.Content>\r\n              <Tab.Pane eventKey=\"empty\">\r\n                <div className=\"card card-stretch\">\r\n                  <div className=\"card-header\">\r\n                    <div className=\"card-title align-items-start flex-column\">\r\n                      <h4 className=\"card-label font-weight-bolder text-dark\">\r\n                        Click on a chat.\r\n                      </h4>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Tab.Pane>\r\n              {friends.map((user, i) => {\r\n                let comp = [];\r\n                comp.push(\r\n                  <Tab.Pane eventKey={i}>\r\n                    <div className=\"card card-stretch\">\r\n                      <div className=\"card-header\">\r\n                        <div className=\"card-title\">\r\n                          <div className=\"d-flex align-items-center justify-content-between flex-wrap\">\r\n                            <div className=\"d-flex align-items-center text-dark font-size-h5 font-weight-bold mr-3\">\r\n                              {user.name}\r\n                            </div>\r\n                            <div className=\"d-flex flex-wrap my-2\">\r\n                              <button\r\n                                className=\"btn btn-light-warning\"\r\n                                onClick={onClearChat}\r\n                              >\r\n                                Clear\r\n                                <ClearAllIcon />\r\n                              </button>\r\n\r\n                              {!isblocked ? (\r\n                                <button\r\n                                  className=\"btn btn-light-danger ml-5\"\r\n                                  onClick={onBlockUser}\r\n                                >\r\n                                  Block\r\n                                  <BlockIcon />\r\n                                </button>\r\n                              ) : (\r\n                                <button\r\n                                  className=\"btn btn-light-danger\"\r\n                                  onClick={onUnBlockUser}\r\n                                >\r\n                                  UnBlock\r\n                                  <CheckCircleOutlineIcon />\r\n                                </button>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"card-body\">\r\n                        <div>\r\n                          <div ref={divRef} className=\"render-chat\">\r\n                            {renderChat()}\r\n                            <div ref={messagesEndRef} />\r\n                          </div>\r\n\r\n                          {!isblocked ? (\r\n                            !isblocked_by ? (\r\n                              <form onSubmit={onMessageSubmit}>\r\n                                <div className=\"row pt-5\">\r\n                                  <Col sm={10}>\r\n                                    <TextField\r\n                                      name=\"message\"\r\n                                      onChange={(e) => {\r\n                                        onTextChange(e);\r\n                                      }}\r\n                                      value={state.message}\r\n                                      id=\"outlined-multiline-static\"\r\n                                      variant=\"outlined\"\r\n                                      label=\"Message\"\r\n                                      fullWidth\r\n                                    />\r\n                                  </Col>\r\n                                  <Col>\r\n                                    <button className=\"btn btn-primary\">\r\n                                      Send Message <SendIcon />\r\n                                    </button>\r\n                                  </Col>\r\n                                </div>\r\n                              </form>\r\n                            ) : (\r\n                              <h4 className=\"card-label font-weight-bolder text-dark\">\r\n                                You have been blocked by the user\r\n                              </h4>\r\n                            )\r\n                          ) : (\r\n                            <h4 className=\"card-label font-weight-bolder text-dark\">\r\n                              You won't recieve any messages unless you unblock\r\n                              the user\r\n                            </h4>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Tab.Pane>\r\n                );\r\n                return comp;\r\n              })}\r\n            </Tab.Content>\r\n          </Col>\r\n        </Row>\r\n      </Tab.Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyChats;\r\n","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\reducer.js",[],"C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\JoinProject.js",["344","345"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { listprojects, request } from \"./apiProject\";\r\nimport { getCurrentUser, getUserById } from \"../user/apiUser\";\r\nimport { connect } from \"react-redux\";\r\nimport { notificationAdded } from \"../store/notifications\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport LiveClock from \"react-live-clock\";\r\nimport dayjs from \"dayjs\";\r\nimport { Badge } from \"react-bootstrap\";\r\nimport SearchTwoToneIcon from \"@material-ui/icons/SearchTwoTone\";\r\nimport moment from \"moment\";\r\nimport SearchProjectBar from \"./../SearchProjectBar\";\r\nclass JoinProject extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      projects: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    listprojects().then((data) => {\r\n      if (data.error) {\r\n        console.log(data.error);\r\n      } else {\r\n        this.setState({ projects: data });\r\n        let projectLeaderNames = {};\r\n        let projectCreatedDates = {};\r\n        let projectEstimatedDates = {};\r\n        data.map((project, index) => {\r\n          //Leader name\r\n          // let number = index;\r\n          getUserById(project.leader).then((data) => {\r\n            projectLeaderNames[project._id] = data.user.name;\r\n            // console.log(projectLeaderNames);\r\n            this.setState({ projectLeaderNames });\r\n          });\r\n          // var date = moment(new Date(project.created.substr(0, 16)));\r\n          // console.log(date.format(\"DD-MMM-YYYY\"));\r\n\r\n          let date = moment(new Date(project.created.substr(0, 16)));\r\n          var new_date = moment(date, \"DD-MM-YYYY\").add(\r\n            project.estimatedTime,\r\n            \"days\"\r\n          );\r\n          projectEstimatedDates[project._id] = new_date.format(\"DD-MMM-YYYY\");\r\n          this.setState({ projectEstimatedDates });\r\n          projectCreatedDates[project._id] = date.format(\"DD-MMM-YYYY\");\r\n          this.setState({ projectCreatedDates });\r\n          // console.log(project.leadername);\r\n        });\r\n        // toast.dark(\"Loaded\");\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      projects,\r\n      projectLeaderNames,\r\n      projectCreatedDates,\r\n      projectEstimatedDates,\r\n    } = this.state;\r\n    // console.log(projectLeaderNames);\r\n    if (\r\n      projectLeaderNames === undefined ||\r\n      projectCreatedDates === undefined ||\r\n      projectEstimatedDates === undefined\r\n    )\r\n      return null;\r\n    if (\r\n      Object.keys(projectLeaderNames).length !== projects.length ||\r\n      Object.keys(projectCreatedDates).length !== projects.length ||\r\n      Object.keys(projectEstimatedDates).length !== projects.length\r\n    )\r\n      return null;\r\n    return (\r\n      <>\r\n        <ToastContainer />\r\n        <div\r\n          className=\"subheader py-2 py-lg-6  subheader-transparent \"\r\n          id=\"kt_subheader\"\r\n        >\r\n          <div className=\" container  d-flex align-items-center justify-content-between flex-wrap flex-sm-nowrap\">\r\n            <div className=\"d-flex align-items-center flex-wrap mr-2\">\r\n              <h5 className=\"text-dark font-weight-bold mt-2 mb-2 mr-5\">\r\n                Join Project\r\n              </h5>\r\n              <span>\r\n                <SearchProjectBar />\r\n              </span>\r\n            </div>\r\n            <div class=\"d-flex align-items-center flex-wrap\">\r\n              <Badge variant=\"primary\">\r\n                <div className=\"d-flex align-items-center flex-wrap mr-2\">\r\n                  <h6>{dayjs().format(\"DD MMMM, dddd\")}</h6>\r\n                  <div className=\"subheader-separator subheader-separator-ver mt-2 mb-2 mr-4 ml-4 bg-gray-200\"></div>\r\n                  <h6>\r\n                    <LiveClock format=\"hh:mm a\" ticking />\r\n                  </h6>\r\n                </div>\r\n              </Badge>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"d-flex flex-column-fluid\">\r\n          <div className=\"container\">\r\n            {projects.map((project, i) => (\r\n              <div className=\"card card-custom gutter-b\">\r\n                <div className=\"card-body\">\r\n                  <div className=\"d-flex\">\r\n                    <div className=\"flex-grow-1\">\r\n                      <div className=\"d-flex align-items-center justify-content-between flex-wrap\">\r\n                        <div className=\"mr-3\">\r\n                          <Link\r\n                            to={{\r\n                              pathname: `/project/${project._id}`,\r\n                              state: { project: project },\r\n                            }}\r\n                            className=\"text-dark-75 text-hover-primary mb-1 font-size-lg font-weight-bolder\"\r\n                          >\r\n                            {project.title}\r\n                          </Link>\r\n                          <div className=\"d-flex flex-wrap my-2\">\r\n                            <p className=\"text-muted font-weight-bold mr-lg-8 mr-5 mb-lg-0 mb-2\">\r\n                              {projectLeaderNames[project._id]}\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"d-flex align-items-center flex-wrap justify-content-between\">\r\n                        <div className=\"flex-grow-1 font-weight-bold text-dark-100 py-5 py-lg-2 mr-5\">\r\n                          {project.description}\r\n                          <p className=\"card-text\">\r\n                            <strong>Skills required: </strong>\r\n                            {project.skills.map((skill) => (\r\n                              <span class=\"btn btn-light-info btn-sm font-weight-bold btn-upper btn-text m-1\">\r\n                                {skill}\r\n                              </span>\r\n                            ))}\r\n                          </p>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex flex-wrap align-items-center py-2\">\r\n                          <div className=\"d-flex align-items-center mr-10\">\r\n                            <div className=\"mr-12 d-flex flex-column mb-7\">\r\n                              <span className=\"d-block font-weight-bold mb-4\">\r\n                                Start Date\r\n                              </span>\r\n                              <span className=\"btn btn-sm btn-text btn-light-primary text-uppercase font-weight-bold\">\r\n                                {projectCreatedDates[project._id]}\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"mr-12 d-flex flex-column mb-7\">\r\n                              <span className=\"d-block font-weight-bold mb-4\">\r\n                                Due Date\r\n                              </span>\r\n                              <span className=\"btn btn-sm btn-text btn-light-danger text-uppercase font-weight-bold\">\r\n                                {projectEstimatedDates[project._id]}\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"flex-grow-1 flex-shrink-0 w-150px w-xl-300px mt-4 mt-sm-0\">\r\n                            <span className=\"d-block font-weight-bold mb-4\">\r\n                              Progress\r\n                            </span>\r\n                            <div className=\"d-flex align-items-center pt-2\">\r\n                              <div className=\"progress progress-xs mt-2 mb-2 w-100\">\r\n                                <div\r\n                                  className=\"progress-bar bg-warning\"\r\n                                  role=\"progressbar\"\r\n                                  style={{\r\n                                    width: `${project.completion_percentage}%`,\r\n                                  }}\r\n                                  aria-valuenow=\"50\"\r\n                                  aria-valuemin=\"0\"\r\n                                  aria-valuemax=\"100\"\r\n                                ></div>\r\n                              </div>\r\n                              <span className=\"ml-3 font-weight-bolder\">\r\n                                {`${project.completion_percentage}%`}\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"separator separator-solid my-7\"></div>\r\n                  <table className=\"table\">\r\n                    <thead>\r\n                      <tr key={\"title\"}>\r\n                        <th key={\"rolename\"}>Role Name</th>\r\n                        <th key={\"skills\"}>Skills Required</th>\r\n                        <th key={\"status\"}>Status</th>\r\n                      </tr>\r\n                      {project.roles.map((role) => (\r\n                        <tr key={role._id.toString()}>\r\n                          <td\r\n                            key={role._id.toString() + role.roleName.toString()}\r\n                          >\r\n                            {role.roleName}\r\n                          </td>\r\n                          <td\r\n                            key={\r\n                              role._id.toString() + role.roleSkills.toString()\r\n                            }\r\n                          >\r\n                            {/* {role.roleSkills + \",\"} */}\r\n                            {role.roleSkills.map((skill) => (\r\n                              <span class=\"btn btn-light-info btn-sm font-weight-bold btn-upper btn-text mr-1\">\r\n                                {skill}\r\n                              </span>\r\n                            ))}\r\n                          </td>\r\n                          <td>\r\n                            {role.assignedTo !== undefined ? (\r\n                              <Badge pill variant=\"warning\">\r\n                                Position Full\r\n                              </Badge>\r\n                            ) : (\r\n                              <button\r\n                                className=\"btn btn-outline-primary\"\r\n                                onClick={() => {\r\n                                  getCurrentUser()._id === project.leader\r\n                                    ? toast.warning(\r\n                                        \"Leaders cant Request, right???\"\r\n                                      )\r\n                                    : request(\r\n                                        getCurrentUser()._id,\r\n                                        project._id,\r\n                                        role._id\r\n                                      ).then((val) => {\r\n                                        if (!val.err) {\r\n                                          this.props.notificationAdded({\r\n                                            userId: project.leader,\r\n                                            message: `${\r\n                                              role.roleName\r\n                                            } requested by ${\r\n                                              getCurrentUser().name\r\n                                            }!`,\r\n                                            type: \"RequestForRole\",\r\n                                            projectId: project._id,\r\n                                          });\r\n                                        }\r\n                                      });\r\n                                }}\r\n                              >\r\n                                Request\r\n                              </button>\r\n                            )}\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </thead>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  notifications: state.notifications.notifications,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  notificationAdded: (params) => dispatch(notificationAdded(params)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(JoinProject);\r\n",["346","347"],"C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Recommendation.js",["348","349","350","351","352"],"import React, { Component } from \"react\";\r\nimport { Tab, Nav, Modal, Button, ModalBody, Card } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport LiveClock from \"react-live-clock\";\r\nimport dayjs from \"dayjs\";\r\nimport { Badge } from \"react-bootstrap\";\r\nimport StorageRoundedIcon from \"@material-ui/icons/StorageRounded\";\r\nimport AssignmentIndRoundedIcon from \"@material-ui/icons/AssignmentIndRounded\";\r\nimport PeopleOutlineIcon from \"@material-ui/icons/PeopleOutline\";\r\nimport LibraryBooksIcon from \"@material-ui/icons/LibraryBooks\";\r\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\r\nimport { DropzoneArea } from \"material-ui-dropzone\";\r\nimport { PdfDropZone } from \"./PdfDropZone\";\r\nimport { checkProject } from \"./../project/apiProject\";\r\nimport UserRecommender from \"./UserRecommender\";\r\nimport RecommendationProject2 from \"./RecommendationProject2\";\r\nimport SkillsInput from \"./../utils/signupbutton/Tagify/SkillsInput\";\r\nclass Recommendation extends Component {\r\n  state = {\r\n    key: \"Database\",\r\n    projectSkills: [],\r\n    show: false,\r\n    title: \"\",\r\n    description: \"\",\r\n    skills: [\"\"],\r\n    error: \"\",\r\n    roleDetails: [\r\n      {\r\n        index: Math.random(),\r\n        roleName: \"\",\r\n        roleSkills: [\"\"],\r\n      },\r\n    ],\r\n    open: false,\r\n    similar: [],\r\n  };\r\n\r\n  handleShow() {\r\n    this.setState({ show: true });\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({ show: false });\r\n  }\r\n\r\n  handleChange = (proj) => (event) => {\r\n    this.setState({ error: \"\" });\r\n    this.setState({ [proj]: event.target.value });\r\n  };\r\n\r\n  clickSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.setState({ loading: true });\r\n    let { title, description, skills, roleDetails } = this.state;\r\n    let project = {\r\n      title,\r\n      description,\r\n      skills,\r\n      roleDetails,\r\n    };\r\n    try {\r\n      checkProject(project).then((data) => {\r\n        console.log(data);\r\n        if (data === undefined) return;\r\n        if (data.error) {\r\n          if (data.similar) {\r\n            this.setState({ similar: data.similar });\r\n            console.log(data.similar);\r\n          } else if (data.similar === undefined)\r\n            this.setState({ similar: undefined });\r\n          this.setState({ error: data.error });\r\n        } else\r\n          this.setState({\r\n            title: \"\",\r\n            description: \"\",\r\n            skills: [\"\"],\r\n            roleDetails: [\r\n              {\r\n                index: Math.random(),\r\n                roleName: \"\",\r\n                roleSkills: [],\r\n              },\r\n            ],\r\n            error: \"\",\r\n            open: true,\r\n          });\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    // console.log(project);\r\n    this.setState({ show: true });\r\n  };\r\n  componentDidMount() {}\r\n  render() {\r\n    let { error, title, description, open } = this.state;\r\n    const { similar } = this.state;\r\n    return (\r\n      <>\r\n        <div\r\n          className=\"subheader py-2 py-lg-6  subheader-transparent \"\r\n          id=\"kt_subheader\"\r\n        >\r\n          <ToastContainer />\r\n          <div className=\" container  d-flex align-items-center justify-content-between flex-wrap flex-sm-nowrap\">\r\n            <div className=\"d-flex align-items-center flex-wrap mr-2\">\r\n              <h5 className=\"text-dark font-weight-bold mt-2 mb-2 mr-5\">\r\n                Recommendation\r\n              </h5>\r\n              <div className=\"subheader-separator subheader-separator-ver mt-2 mb-2 mr-4 bg-gray-200\"></div>\r\n            </div>\r\n            <div class=\"d-flex align-items-center flex-wrap\">\r\n              <Badge variant=\"primary\">\r\n                <div className=\"d-flex align-items-center flex-wrap mr-2\">\r\n                  <h6>{dayjs().format(\"DD MMMM, dddd\")}</h6>\r\n                  <div className=\"subheader-separator subheader-separator-ver mt-2 mb-2 mr-4 ml-4 bg-gray-200\"></div>\r\n                  <h6>\r\n                    <LiveClock format=\"hh:mm a\" ticking />\r\n                  </h6>\r\n                </div>\r\n              </Badge>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"container\">\r\n          <div className=\"card\">\r\n            <Tab.Container id=\"Database\" defaultActiveKey=\"Database\">\r\n              <div className=\"card-header\">\r\n                <div className=\"card-title\">\r\n                  <Nav variant=\"pills\">\r\n                    <Nav.Item>\r\n                      <Nav.Link eventKey=\"Database\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"mr-3\">\r\n                            <StorageRoundedIcon />\r\n                          </div>\r\n                          <div>Database</div>\r\n                        </div>\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                      <Nav.Link eventKey=\"Resume\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"mr-3\">\r\n                            <AssignmentIndRoundedIcon />\r\n                          </div>\r\n                          <div>Resume</div>\r\n                        </div>\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                  </Nav>\r\n                </div>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <Tab.Content>\r\n                  <Tab.Pane eventKey=\"Database\">\r\n                    <div>\r\n                      <Tab.Container\r\n                        id=\"DatabaseRecommender\"\r\n                        defaultActiveKey=\"ProjectRecommender\"\r\n                      >\r\n                        <div>\r\n                          <div className=\"card-title\">\r\n                            <Nav variant=\"pills\">\r\n                              <Nav.Item>\r\n                                <Nav.Link eventKey=\"ProjectRecommender\">\r\n                                  <div className=\"d-flex align-items-center\">\r\n                                    <div className=\"mr-3\">\r\n                                      <LibraryBooksIcon />\r\n                                    </div>\r\n                                    <div>Project Recommender</div>\r\n                                  </div>\r\n                                </Nav.Link>\r\n                              </Nav.Item>\r\n                              <Nav.Item>\r\n                                <Nav.Link eventKey=\"UserRecommender\">\r\n                                  <div className=\"d-flex align-items-center\">\r\n                                    <div className=\"mr-3\">\r\n                                      <PeopleOutlineIcon />\r\n                                    </div>\r\n                                    <div>User Recommender</div>\r\n                                  </div>\r\n                                </Nav.Link>\r\n                              </Nav.Item>\r\n                              <Nav.Item>\r\n                                <Nav.Link eventKey=\"ProjectChecker\">\r\n                                  <div className=\"d-flex align-items-center\">\r\n                                    <div className=\"mr-3\">\r\n                                      <FileCopyIcon />\r\n                                    </div>\r\n                                    <div>Project Checker</div>\r\n                                  </div>\r\n                                </Nav.Link>\r\n                              </Nav.Item>\r\n                            </Nav>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                          <Tab.Content>\r\n                            <Tab.Pane eventKey=\"ProjectRecommender\">\r\n                              <SkillsInput\r\n                                label={\"Skills\"}\r\n                                name={\"skillsInput\"}\r\n                                value={\"\"}\r\n                                setSkills={(arr) => {\r\n                                  console.log(arr);\r\n                                  this.setState({\r\n                                    projectSkills: arr,\r\n                                  });\r\n                                }}\r\n                              />\r\n                              <RecommendationProject2\r\n                                skills={this.state.projectSkills}\r\n                              />\r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"UserRecommender\">\r\n                              <div className=\"row row-cols-1 \">\r\n                                <UserRecommender />\r\n                              </div>\r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"ProjectChecker\">\r\n                              <div className=\"row row-cols-1 \">\r\n                                Similar Projects\r\n                              </div>\r\n                              <form className=\"mt-5\">\r\n                                <div className=\"form-group\">\r\n                                  <div className=\"row\">\r\n                                    <div className=\"col-sm-10 offset-1\">\r\n                                      <label>\r\n                                        <big>Title of your Project</big>\r\n                                      </label>\r\n                                      <input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        value={title}\r\n                                        onChange={this.handleChange(\"title\")}\r\n                                      />\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"row mt-3\">\r\n                                    <div className=\"col-sm-10 offset-1\">\r\n                                      <label>\r\n                                        <big>Description of the Project</big>\r\n                                      </label>\r\n                                      <input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        value={description}\r\n                                        onChange={this.handleChange(\r\n                                          \"description\"\r\n                                        )}\r\n                                      />\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"row\">\r\n                                    <button\r\n                                      onClick={this.clickSubmit}\r\n                                      className=\"btn btn-raised btn-primary mx-auto mt-3 mb-2 col-sm-3\"\r\n                                    >\r\n                                      Check for Projects\r\n                                    </button>\r\n                                    <Modal show={this.state.show}>\r\n                                      <Modal.Header>\r\n                                        <Modal.Title>\r\n                                          Similar projects\r\n                                        </Modal.Title>\r\n                                        <Button\r\n                                          onClick={this.handleClose.bind(this)}\r\n                                        >\r\n                                          x\r\n                                        </Button>\r\n                                      </Modal.Header>\r\n                                      <ModalBody>\r\n                                        {similar === undefined ? (\r\n                                          <h1>No similar projects found</h1>\r\n                                        ) : (\r\n                                          similar.map((project) => (\r\n                                            <p>\r\n                                              <h3>{project.title}</h3>\r\n                                              <h4>{project.description}</h4>\r\n                                              {/* <p>{_id}</p> */}\r\n                                              <Link\r\n                                                className=\"btn btn-info mr-2\"\r\n                                                to={{\r\n                                                  pathname: `/joinproject`,\r\n                                                  state: { project: project },\r\n                                                }}\r\n                                              >\r\n                                                Go to project\r\n                                              </Link>\r\n                                            </p>\r\n                                          ))\r\n                                        )}\r\n                                      </ModalBody>\r\n                                    </Modal>\r\n                                  </div>\r\n                                </div>\r\n                              </form>\r\n                            </Tab.Pane>\r\n                          </Tab.Content>\r\n                        </div>\r\n                      </Tab.Container>\r\n                    </div>\r\n                  </Tab.Pane>\r\n                  <Tab.Pane eventKey=\"Resume\">\r\n                    <div className=\"text-center\">\r\n                      <div>Drop in the resumes here</div>\r\n                      <PdfDropZone />\r\n                    </div>\r\n                  </Tab.Pane>\r\n                </Tab.Content>\r\n              </div>\r\n            </Tab.Container>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Recommendation;\r\n","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\MyProjects.js",["353","354","355","356","357"],"C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\user.js",["358","359","360"],"C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\apiProject.js",["361","362","363"],"C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\YoutubePost.js",["364","365","366","367","368","369","370","371"],"C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Followers.js",["372","373","374"],"import React, { useState, useEffect } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getUserById, blockFollower, getCurrentUser } from \"./apiUser\";\r\nimport PersonAddDisabledIcon from \"@material-ui/icons/PersonAddDisabled\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateFollowers, updateFollowing } from \"../store/user\";\r\n\r\nconst Followers = () => {\r\n  const dispatch = useDispatch();\r\n  const [show, setShow] = useState(false);\r\n  const [users, setusers] = useState({});\r\n  const followers = useSelector((state) => state.user.followers);\r\n  const [followersUsers, setFollowersUsers] = useState([]);\r\n  useEffect(() => {\r\n    getUserById(getCurrentUser()._id).then((data) =>\r\n      dispatch(updateFollowers({ followers: data.user.followers }))\r\n    );\r\n    let profiles = {};\r\n    followers.map((user) => {\r\n      getUserById(user).then((data) => {\r\n        console.log(data.user);\r\n        profiles[data.user._id] = data.user;\r\n        setusers(profiles);\r\n      });\r\n    });\r\n    setFollowersUsers(followers);\r\n  }, []);\r\n  useEffect(() => {\r\n    setFollowersUsers(followers);\r\n  }, [followers]);\r\n  return (\r\n    <>\r\n      <div\r\n        onClick={() => setShow(true)}\r\n      >{` ${followersUsers.length} Followers`}</div>\r\n      <Modal show={show} onHide={() => setShow(false)}>\r\n        <Modal.Header>Followers</Modal.Header>\r\n        <Modal.Body>\r\n          <div>\r\n            {Object.keys(users).map((user, i) => (\r\n              <div className=\"col\">\r\n                <div className=\"card mb-3\" key={i}>\r\n                  <div className=\"card-body\">\r\n                    <p className=\"card-text\">{users[user].name}</p>\r\n                    <button\r\n                      className=\"btn btn-raised btn-primary ml-3\"\r\n                      onClick={(e) => {\r\n                        blockFollower(e, user)\r\n                          .then((val) => {\r\n                            // if (data === \"User Blocked\") {\r\n                            //   console.log(\"users\");\r\n                            //   delete users[user];\r\n                            // }\r\n                            console.log(val);\r\n                            getUserById(getCurrentUser()._id).then((data) => {\r\n                              dispatch(\r\n                                updateFollowers({\r\n                                  followers: data.user.followers,\r\n                                })\r\n                              );\r\n                              dispatch(\r\n                                updateFollowing({\r\n                                  following: data.user.following,\r\n                                })\r\n                              );\r\n                            });\r\n                          })\r\n                          .then(() => delete users[user]);\r\n                      }}\r\n                    >\r\n                      Block\r\n                    </button>\r\n                    <Link\r\n                      to={`/user/${user}`}\r\n                      className=\"btn btn-raised btn-small btn-primary\"\r\n                    >\r\n                      View Profile\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={() => setShow(false)}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Followers;\r\n","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\DragDropProfilePic.js",["375","376","377","378","379","380","381","382","383","384","385"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { DropzoneArea } from \"material-ui-dropzone\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { createPost } from \"./apiPosts\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport SkillsInput from \"./../utils/signupbutton/Tagify/SkillsInput\";\r\nimport { listmyprojects } from \"./../project/apiProject\";\r\nimport Sentiment from \"sentiment\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getPosts } from \"./../store/posts\";\r\nfunction DragDropProfilePic(props) {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [files, setFiles] = useState([]);\r\n  const [projects, setProjects] = useState([]);\r\n  useEffect(() => {\r\n    listmyprojects().then((data) => setProjects(data.userProjects));\r\n  }, []);\r\n  useEffect(\r\n    () => () => {\r\n      // Make sure to revoke the data uris to avoid memory leaks\r\n      files.forEach((file) => URL.revokeObjectURL(file.preview));\r\n    },\r\n    [files]\r\n  );\r\n  const postDetails = (image) => {\r\n    props.setImage(image);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer />\r\n      <DropzoneArea\r\n        acceptedFiles={[\"image/*\"]}\r\n        dropzoneText={\"Drag and drop an image here or click\"}\r\n        onChange={(files) => {\r\n          postDetails(files[0]);\r\n        }}\r\n        maxFileSize={10485760}\r\n      />\r\n    </>\r\n  );\r\n}\r\nexport default DragDropProfilePic;\r\n","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\UserRecommendation.js",[],"C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\auth\\index.js",[],"C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\Socket.js",[],"C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Tagify\\SkillsInput.js",[],"C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\layout\\LayoutComponent.js",["386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417"],"import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport Pert from \"./Pert\";\r\nimport Task from \"./Task\";\r\nimport ReactFlow, {\r\n  addEdge,\r\n  Background,\r\n  Controls,\r\n  MiniMap,\r\n  removeElements,\r\n} from \"react-flow-renderer\";\r\nimport {\r\n  addTask,\r\n  getTasks,\r\n  putConnections,\r\n  deleteConnections,\r\n  getConnections,\r\n  putPredecessors,\r\n  putPosition,\r\n  putExpectedTime,\r\n} from \"../apiProject\";\r\nimport jsPERT from \"js-pert\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport {\r\n  nodeAdded,\r\n  connectionAdded,\r\n  replaceNodes,\r\n  replaceConnections,\r\n  replaceElements,\r\n  setPert,\r\n  setExpectedTime,\r\n  setSlacks,\r\n  setCriticalPath,\r\n} from \"../../store/cpm\";\r\nimport { updateTasks } from \"../../store/tasks\";\r\nimport { getCurrentUser } from \"./../../user/apiUser\";\r\nimport moment from \"moment\";\r\nconst styles = (theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 3, 3),\r\n  },\r\n});\r\nclass LayoutComponent extends Component {\r\n  state = {\r\n    elements: [],\r\n    tasks: [],\r\n    nodes: [],\r\n    pert: {},\r\n    task: {},\r\n    show: false,\r\n    checked: false,\r\n    bleh: 1,\r\n  };\r\n\r\n  onElementsRemove = (elementsToRemove) => {\r\n    if (this.props.project.leader.toString() === getCurrentUser()._id) {\r\n      let cons = this.props.connections;\r\n      const filteredConnections = cons.filter(\r\n        (con) => con.id !== elementsToRemove[0].id\r\n      );\r\n      this.props.replaceConnections({ connections: filteredConnections });\r\n      cons.map((con) => {\r\n        if (con.id === elementsToRemove[0].id) {\r\n          // console.log(con.id, elementsToRemove[0].id);\r\n          deleteConnections(this.props.project._id, con._id).then((data) => {\r\n            console.log(\"connection deleted\");\r\n            // this.pertCalc();\r\n          });\r\n          return;\r\n        }\r\n      });\r\n    }\r\n  };\r\n  onLoad = (reactFlowInstance) => {\r\n    reactFlowInstance.fitView();\r\n  };\r\n  onNodeDragStop = (e, node) => {\r\n    // console.log(node.position, node.data._id);\r\n    putPosition(this.props.project._id, node.data._id, node.position).then(\r\n      () => {\r\n        console.log(node.position + \" is saved\");\r\n      }\r\n    );\r\n  };\r\n  edgeInElements(elements, edge) {\r\n    let inside = false;\r\n    elements.map((elem) => {\r\n      if (elem.id.toString() === edge.id.toString()) {\r\n        inside = true;\r\n      }\r\n      return \"done\";\r\n    });\r\n    return inside;\r\n  }\r\n  onConnect = (params) => {\r\n    if (this.props.project.leader.toString() === getCurrentUser()._id) {\r\n      let source = params.source;\r\n      let target = params.target;\r\n      if (source !== undefined && target !== undefined) {\r\n        let edge = {\r\n          id:\r\n            \"reactflow__edge-\" +\r\n            source.toString() +\r\n            \"null-\" +\r\n            target.toString() +\r\n            \"null\",\r\n          source: source.toString(),\r\n          sourceHandle: null,\r\n          target: target.toString(),\r\n          targetHandle: null,\r\n        };\r\n        // console.log(this.state.elements);\r\n        let sourceId = \"\";\r\n        let targetId = \"\";\r\n        // console.log(this.props.nodes);\r\n        this.props.nodes.map((elem) => {\r\n          if (elem.id === source) {\r\n            sourceId = elem.key;\r\n          }\r\n          if (elem.id === target) {\r\n            targetId = elem.key;\r\n          }\r\n        });\r\n        putPredecessors(this.props.project._id, targetId, sourceId).then(() => {\r\n          console.log(sourceId + \" has new Predecessor \" + targetId);\r\n        });\r\n        // let ele = [...this.state.elements];\r\n        // if (!this.edgeInElements(ele, edge)) {\r\n        //   ele.push(edge);\r\n        putConnections(this.props.project._id, sourceId, targetId).then(() => {\r\n          console.log(\"connection \" + sourceId + \"to \" + targetId + \"added\");\r\n        });\r\n        // }\r\n        this.props.connectionAdded({ connection: edge });\r\n        // this.setState({ elements: ele });\r\n        // console.log(this.state.elements);\r\n        this.pertCalc();\r\n      }\r\n    }\r\n  };\r\n  getIdOfObjectId = (elemId) => {\r\n    let id = {};\r\n    const { nodes } = this.props;\r\n    id = nodes.map((elem) => {\r\n      if (elem.data !== undefined)\r\n        if (elem.data._id.toString() === elemId) {\r\n          id = elem.id;\r\n        }\r\n      return id;\r\n    });\r\n    return id[id.length - 1];\r\n  };\r\n  // handleClose = () => {\r\n  //   this.setState({ show: false });\r\n  // };\r\n  pertCalc = () => {\r\n    // this.setState({ show: true });\r\n    // console.log(\"inside pertCalc:\", tasksObject);\r\n    let nodes = this.props.nodes.map((elem) => ({\r\n      ...elem,\r\n    }));\r\n    // let connections = this.props.connections.map((elem) => ({\r\n    //   ...elem,\r\n    // }));\r\n    // console.log(connections);\r\n    // let { connections } = this.props;\r\n    // console.log(\"props:\", this.props.connections);\r\n    // console.log(\"connections:\");\r\n    let ids = [];\r\n    this.props.connections.map((connection) => {\r\n      // console.log(connection.source, connection.target);\r\n      if (!ids.includes(connection.source)) {\r\n        ids.push(connection.source.toString());\r\n      }\r\n      if (!ids.includes(connection.target)) {\r\n        ids.push(connection.target.toString());\r\n      }\r\n    });\r\n    // console.log(\"nodes:\");\r\n    let newNodes = [];\r\n    nodes.map((node) => {\r\n      if (ids.includes(node.id)) newNodes.push(node);\r\n    });\r\n\r\n    let tasksObject = ids.includes(\"1\")\r\n      ? {\r\n          1: {\r\n            id: \"1\",\r\n            mostLikelyTime: 0,\r\n            optimisticTime: 0,\r\n            pessimisticTime: 0,\r\n            predecessors: [],\r\n          },\r\n        }\r\n      : {};\r\n    // console.log(\"TasksObject before node addition:\", tasksObject);\r\n    // console.log(ids);\r\n    // console.log(\"nodes sent for pertcalc:\", newNodes);\r\n    newNodes.map((elem) => {\r\n      if (\r\n        elem.data.predecessors.length === 0 ||\r\n        elem.data.predecessors === undefined\r\n      )\r\n        return;\r\n      elem.data.predecessors.map((pre, index) => {\r\n        let id = this.getIdOfObjectId(pre.toString());\r\n        // console.log(id);\r\n        let predecessors = [...elem.data.predecessors];\r\n        predecessors[index] = id.toString();\r\n        elem.data = { ...elem.data, predecessors };\r\n      });\r\n    });\r\n    // console.log(nodes);\r\n    tasksObject = newNodes.map((elem) => {\r\n      // console.log(\"tasksObject node:\", elem);\r\n      tasksObject[elem.id.toString()] = {\r\n        id: elem.id.toString(),\r\n        optimisticTime: elem.data.optimistic,\r\n        mostLikelyTime: elem.data.time,\r\n        pessimisticTime: elem.data.pessimistic,\r\n        predecessors: elem.data.predecessors,\r\n      };\r\n      return tasksObject;\r\n    });\r\n    let tasksObjectFinal = tasksObject[tasksObject.length - 1];\r\n    // console.log(\"TasksObject:\");\r\n    // console.log(tasksObjectFinal);\r\n    // console.log(\"Pert:\");\r\n    let pert = {};\r\n    // console.log(\"gonna set pert\");\r\n    try {\r\n      // if (tasksObject[1] !== undefined) {\r\n      // console.log(tasksObject[1]);\r\n      pert = jsPERT(tasksObjectFinal);\r\n      this.props.setPert({ pert });\r\n      console.log(this.props.pert);\r\n      // this.props.setSlacks({ slackObject: this.props.pert.slack });\r\n      // console.log(\"slacks:\");\r\n      let slackObject = {};\r\n      slackObject = newNodes.map((elem, index) => {\r\n        // console.log(elem.id, pert.slack[elem.id]);\r\n        if (index !== 0 && index !== 1) {\r\n          // console.log(\"Slack elem:\", elem);                           // Website design layout\r\n          console.log(\"index:\", index);\r\n          console.log(\"task:\", elem.data.label);\r\n          let created = elem.data.created;\r\n\r\n          // let earliestFinish = new Date(\r\n          //   pert.earliestFinishTimes[index] + created\r\n          // ); // 23/5 + 3\r\n          let createdDate = new Date(created);\r\n          let earliestFinish = moment(createdDate, \"DD-MM-YYYY\").add(\r\n            pert.earliestFinishTimes[index + 1],\r\n            \"days\"\r\n          );\r\n          earliestFinish = earliestFinish._d;\r\n          // let slack = new Date(pert.slack[elem.id]);\r\n          const diffTime = Math.abs(earliestFinish - createdDate);\r\n          const duration = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n          // console.log(duration);\r\n          let today = new Date();\r\n          let todayDate = new Date(today.toUTCString()); // 25/5\r\n          let earliestStart = moment(createdDate, \"DD-MM-YYYY\").add(\r\n            +pert.earliestStartTimes[index + 1],\r\n            \"days\"\r\n          );\r\n          earliestStart = earliestStart._d;\r\n          // console.log(todayDate, startTime._d);\r\n          const diffTime2 = Math.abs(todayDate - earliestStart);\r\n          let daysDone = Math.ceil(diffTime2 / (1000 * 60 * 60 * 24));\r\n          // console.log(daysDone);\r\n          let finaldiff = Math.abs(duration - daysDone);\r\n          let days = Math.round(\r\n            (earliestFinish - todayDate) / (1000 * 60 * 60 * 24)\r\n          );\r\n          console.log(earliestStart, todayDate, earliestFinish);\r\n          console.log(\r\n            \"no. of days done:\",\r\n            Math.round(todayDate - earliestStart) / (1000 * 60 * 60 * 24)\r\n          );\r\n          console.log(\r\n            \"no. of days left:\",\r\n            Math.round((earliestFinish - todayDate) / (1000 * 60 * 60 * 24))\r\n          );\r\n          days = pert.slack[elem.id] !== 0 ? days + pert.slack[elem.id] : days;\r\n          // 23/5 25/5 26/5\r\n          // console.log(\"slack:\", pert.slack[elem.id]);\r\n          // console.log(\"day1:\", duration);\r\n          // console.log(\"day2:\", daysDone);\r\n          // console.log(\"days left:\", days);\r\n          // console.log(\"Overdue\", days >= 0 ? false : true);\r\n          // console.log(elem.data.label + \" \" + days + \" \" + pert.slack[elem.id]);\r\n          slackObject[elem.data.label] = {\r\n            slack: pert.slack[elem.id],\r\n            days: days,\r\n            daysPassed: Math.round(\r\n              (todayDate - earliestStart) / (1000 * 60 * 60 * 24)\r\n            ),\r\n            earliestStartDate: earliestStart,\r\n            todayDate: todayDate,\r\n            earliestFinishDate: earliestFinish,\r\n            overdue: days >= 0 ? false : true,\r\n          };\r\n          return slackObject;\r\n        }\r\n      });\r\n      console.log(\"slacks Object:\", slackObject[slackObject.length - 1]);\r\n      let obj = slackObject[slackObject.length - 1];\r\n      this.props.setSlacks({ slackObject: obj });\r\n      let newNodesObject = {};\r\n      newNodesObject = newNodes.map((node) => {\r\n        newNodesObject[node.id] = node.data;\r\n        return newNodesObject;\r\n      });\r\n      newNodesObject = newNodesObject[newNodesObject.length - 1];\r\n      // console.log(\"newNodesObject:\", newNodesObject);\r\n      let criticalPathData = {};\r\n      criticalPathData = pert.criticalPath.map((id) => {\r\n        criticalPathData[id] = newNodesObject[id];\r\n        return criticalPathData;\r\n      });\r\n      criticalPathData = criticalPathData[criticalPathData.length - 1];\r\n      console.log(\"criticalPathDataObject:\", criticalPathData);\r\n      this.props.setCriticalPath({ criticalPath: criticalPathData });\r\n\r\n      this.props.setExpectedTime({\r\n        expectedTime: Math.floor(this.props.pert.latestFinishTimes.__end),\r\n      });\r\n      putExpectedTime(\r\n        this.props.project._id,\r\n        Math.floor(this.props.pert.latestFinishTimes.__end)\r\n      );\r\n      // }\r\n    } catch (err) {\r\n      // console.log(err);\r\n      this.props.setPert({ pert: {} });\r\n      // console.log(this.props.pert);\r\n      this.props.setExpectedTime({\r\n        expectedTime: 0,\r\n      });\r\n      putExpectedTime(this.props.project._id, 0);\r\n    }\r\n    // this.setState({ pert });\r\n  };\r\n  onElementClick = (event, element) => {\r\n    console.log(element);\r\n  };\r\n  componentDidMount() {\r\n    let newNodes = [];\r\n\r\n    getTasks(this.props.project._id).then((data) => {\r\n      // console.log(data.tasks);\r\n      const tasks = data.tasks;\r\n      let newTasks = [];\r\n      tasks.map((task) => {\r\n        newTasks.push({ ...task });\r\n      });\r\n      newTasks.map((task) => {\r\n        task[\"label\"] = task.taskName;\r\n        task[\"description\"] = task.description;\r\n        task[\"time\"] = task.mostLikelyTime;\r\n        task[\"optimistic\"] = task.optimisticTime;\r\n        task[\"pessimistic\"] = task.pessimisticTime;\r\n        if (\r\n          task.taskName !== \"Completed!!\" &&\r\n          task.taskName !== \"Lets Start Working\"\r\n        ) {\r\n          let newNode = {\r\n            key: task._id,\r\n            id: (newNodes.length + 1).toString(),\r\n            data: task,\r\n            sourcePosition: \"right\",\r\n            targetPosition: \"left\",\r\n            position:\r\n              task.position !== undefined\r\n                ? task.position\r\n                : {\r\n                    x: (Math.random() * window.innerWidth) / 2,\r\n                    y: (Math.random() * window.innerHeight) / 2,\r\n                  },\r\n          };\r\n          newNodes.push(newNode);\r\n        }\r\n        if (task.taskName === \"Lets Start Working\") {\r\n          let ele = [...this.state.elements];\r\n          let newNode = {\r\n            key: task._id,\r\n            id: \"1\",\r\n            type: \"input\",\r\n            data: {\r\n              label: \"Lets Start Working\",\r\n              description: \"Start working on tasks to complete project on time\",\r\n              pessimistic: 0,\r\n              time: 0,\r\n              optimistic: 0,\r\n              predecessors: [],\r\n              _id: task._id,\r\n            },\r\n            sourcePosition: \"right\",\r\n            position:\r\n              task.position !== undefined ? task.position : { x: 0, y: 0 },\r\n          };\r\n          newNodes.push(newNode);\r\n        }\r\n        if (task.taskName === \"Completed!!\") {\r\n          let ele = [...this.state.elements];\r\n          let newNode = {\r\n            key: task._id,\r\n            id: \"2\",\r\n            type: \"output\",\r\n            data: {\r\n              label: \"Completed!!\",\r\n              description: \"Yaaayy you gus have completed the project\",\r\n              pessimistic: 0,\r\n              time: 0,\r\n              optimistic: 0,\r\n              predecessors: task.predecessors,\r\n              _id: task._id,\r\n            },\r\n            targetPosition: \"left\",\r\n            position:\r\n              task.position !== undefined ? task.position : { x: 500, y: 0 },\r\n          };\r\n          newNodes.push(newNode);\r\n        }\r\n      });\r\n      this.props.replaceNodes({ nodes: newNodes });\r\n      // console.log(\"Mount nodes:\", this.props.nodes);\r\n    });\r\n    getConnections(this.props.project._id)\r\n      .then((data) => {\r\n        let connections = [];\r\n        data.connections.map((link) => {\r\n          newNodes.map((elem) => {\r\n            if (elem.key !== undefined) {\r\n              if (link.from.toString() === elem.key.toString()) {\r\n                this.setState({ source: elem });\r\n              }\r\n              if (link.to.toString() === elem.key.toString()) {\r\n                this.setState({ target: elem });\r\n              }\r\n            }\r\n          });\r\n          let source = this.state.source;\r\n          let target = this.state.target;\r\n          if (source !== undefined && target !== undefined) {\r\n            let edge = {\r\n              id:\r\n                \"reactflow__edge-\" +\r\n                source.id.toString() +\r\n                \"null-\" +\r\n                target.id.toString() +\r\n                \"null\",\r\n              source: source.id.toString(),\r\n              sourceHandle: null,\r\n              target: target.id.toString(),\r\n              targetHandle: null,\r\n              _id: link._id,\r\n            };\r\n            connections.push(edge);\r\n          }\r\n          return \"done\";\r\n        });\r\n        // console.log(connections);\r\n        this.props.replaceConnections({ connections: connections });\r\n      })\r\n      .then(() => {\r\n        this.pertCalc();\r\n      });\r\n  }\r\n  componentDidUpdate(prevState, prevProps) {\r\n    if (this.props.connections.length !== prevState.connections.length) {\r\n      this.pertCalc();\r\n      // console.log(prevState.connections.length, this.props.connections.length);\r\n      // console.log(\"Pert from comp update:\", this.props.pert);\r\n      // console.log(\"Pert calculation nodes:\", this.props.nodes);\r\n    }\r\n    if (prevState.tasks.length !== this.props.tasks.length) {\r\n      const { tasks } = this.props;\r\n      let newTasks = [];\r\n      tasks.map((task) => {\r\n        newTasks.push({ ...task });\r\n      });\r\n      let newNodes = [];\r\n      newTasks.map((task) => {\r\n        task[\"label\"] = task.taskName;\r\n        task[\"description\"] = task.description;\r\n        task[\"time\"] = task.mostLikelyTime;\r\n        task[\"optimistic\"] = task.optimisticTime;\r\n        task[\"pessimistic\"] = task.pessimisticTime;\r\n        if (\r\n          task.taskName !== \"Completed!!\" &&\r\n          task.taskName !== \"Lets Start Working\"\r\n        ) {\r\n          let newNode = {\r\n            key: task._id,\r\n            id: (newNodes.length + 1).toString(),\r\n            data: task,\r\n            sourcePosition: \"right\",\r\n            targetPosition: \"left\",\r\n            position:\r\n              task.position !== undefined\r\n                ? task.position\r\n                : {\r\n                    x: (Math.random() * window.innerWidth) / 2,\r\n                    y: (Math.random() * window.innerHeight) / 2,\r\n                  },\r\n          };\r\n          newNodes.push(newNode);\r\n        }\r\n        if (task.taskName === \"Lets Start Working\") {\r\n          let ele = [...this.state.elements];\r\n          let newNode = {\r\n            key: task._id,\r\n            id: \"1\",\r\n            type: \"input\",\r\n            data: {\r\n              label: \"Lets Start Working\",\r\n              description: \"Start working on tasks to complete project on time\",\r\n              pessimistic: 0,\r\n              time: 0,\r\n              optimistic: 0,\r\n              predecessors: [],\r\n              _id: task._id,\r\n            },\r\n            sourcePosition: \"right\",\r\n            position:\r\n              task.position !== undefined ? task.position : { x: 0, y: 0 },\r\n          };\r\n          newNodes.push(newNode);\r\n        }\r\n        if (task.taskName === \"Completed!!\") {\r\n          let ele = [...this.state.elements];\r\n          let newNode = {\r\n            key: task._id,\r\n            id: \"2\",\r\n            type: \"output\",\r\n            data: {\r\n              label: \"Completed!!\",\r\n              description: \"Yaaayy you gus have completed the project\",\r\n              pessimistic: 0,\r\n              time: 0,\r\n              optimistic: 0,\r\n              predecessors: task.predecessors,\r\n              _id: task._id,\r\n            },\r\n            targetPosition: \"left\",\r\n            position:\r\n              task.position !== undefined ? task.position : { x: 500, y: 0 },\r\n          };\r\n          newNodes.push(newNode);\r\n        }\r\n      });\r\n      this.props.replaceNodes({ nodes: newNodes });\r\n      if (this.props.connections.length === 0) {\r\n        getConnections(this.props.project._id)\r\n          .then((data) => {\r\n            let connections = [];\r\n            data.connections.map((link) => {\r\n              newNodes.map((elem) => {\r\n                if (elem.key !== undefined) {\r\n                  if (link.from.toString() === elem.key.toString()) {\r\n                    this.setState({ source: elem });\r\n                  }\r\n                  if (link.to.toString() === elem.key.toString()) {\r\n                    this.setState({ target: elem });\r\n                  }\r\n                }\r\n              });\r\n              let source = this.state.source;\r\n              let target = this.state.target;\r\n              let edge = {\r\n                id:\r\n                  \"reactflow__edge-\" +\r\n                  source.id.toString() +\r\n                  \"null-\" +\r\n                  target.id.toString() +\r\n                  \"null\",\r\n                source: source.id.toString(),\r\n                sourceHandle: null,\r\n                target: target.id.toString(),\r\n                targetHandle: null,\r\n                _id: link._id,\r\n              };\r\n              connections.push(edge);\r\n\r\n              return \"done\";\r\n            });\r\n            // console.log(connections);\r\n            this.props.replaceConnections({ connections: connections });\r\n          })\r\n          .then(() => {\r\n            this.pertCalc();\r\n          });\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    if (this.props.tasks.length === 0) return <div>No tasks</div>;\r\n    const { nodes, connections, tasks } = this.props;\r\n    const { status } = this.props.project;\r\n    let connectCheck = status === \"Completed\" ? false : true;\r\n    const elements = [];\r\n    nodes.map((node) => {\r\n      elements.push({ ...node });\r\n    });\r\n    connections.map((connection) => {\r\n      elements.push({ ...connection });\r\n    });\r\n    // console.log(\"nodes:\", nodes);\r\n    return (\r\n      <div>\r\n        <div className=\"container-fluid\">\r\n          <ReactFlow\r\n            elements={elements}\r\n            onLoad={this.onLoad}\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"65vh\",\r\n              backgroundColor: \"#1A192B\",\r\n            }}\r\n            onNodeDragStop={this.onNodeDragStop}\r\n            onConnect={this.onConnect}\r\n            onElementClick={this.onElementClick}\r\n            onElementsRemove={this.onElementsRemove}\r\n            connectionLineStyle={{ stroke: \"#ddd\", strokeWidth: 2 }}\r\n            connectionLineType=\"bezier\"\r\n            snapToGrid={true}\r\n            snapGrid={[16, 16]}\r\n            nodesConnectable={connectCheck}\r\n            nodesDraggable={connectCheck}\r\n            defaultZoom={1}\r\n          >\r\n            <Background color=\"#888\" gap={16} />\r\n            <MiniMap\r\n              nodeColor={(n) => {\r\n                if (n.type === \"input\") return \"#DC143C\";\r\n                if (n.type === \"output\") return \"#90ee90\";\r\n                return \"cyan\";\r\n              }}\r\n            />\r\n            <Controls />\r\n          </ReactFlow>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  nodes: state.cpm.nodes,\r\n  connections: state.cpm.connections,\r\n  state: state,\r\n  notifications: state.notifications.notifications,\r\n  tasks: state.tasks.tasks,\r\n  elements: state.cpm.elements,\r\n  pert: state.cpm.pert,\r\n  slacks: state.cpm.slacks,\r\n  criticalPath: state.cpm.criticalPath,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  nodeAdded: (params) => dispatch(nodeAdded(params)),\r\n  connectionAdded: (params) => dispatch(connectionAdded(params)),\r\n  updateTasks: (params) => dispatch(updateTasks(params)),\r\n  replaceNodes: (params) => dispatch(replaceNodes(params)),\r\n  replaceConnections: (params) => dispatch(replaceConnections(params)),\r\n  replaceElements: (params) => dispatch(replaceElements(params)),\r\n  setPert: (params) => dispatch(setPert(params)),\r\n  setExpectedTime: (params) => dispatch(setExpectedTime(params)),\r\n  setSlacks: (params) => dispatch(setSlacks(params)),\r\n  setCriticalPath: (params) => dispatch(setCriticalPath(params)),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(styles)(LayoutComponent));\r\n","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Tagify\\TagFinal.js",["418","419"],"import React, { useEffect } from \"react\";\r\nimport Tags from \"@yaireo/tagify/dist/react.tagify\";\r\nimport \"@yaireo/tagify/dist/tagify.css\";\r\n// Tagify settings object\r\nconst baseTagifySettings = {\r\n  blacklist: [],\r\n  enforceWhitelist: true,\r\n  dropdown: {\r\n    enabled: 0,\r\n  },\r\n  callbacks: {},\r\n};\r\n\r\nfunction TagFinal({ label, name, value, suggestions, setSkills }) {\r\n  const handleChange = (e) => {\r\n    // console.log(e.detail.tagify.value);\r\n    let arr = [];\r\n    e.detail.tagify.value.map((val) => {\r\n      arr.push(val.value);\r\n    });\r\n    setSkills(arr);\r\n  };\r\n  const settings = {\r\n    ...baseTagifySettings,\r\n    whitelist: suggestions,\r\n    callbacks: {\r\n      add: handleChange,\r\n      remove: handleChange,\r\n      blur: handleChange,\r\n      edit: handleChange,\r\n      invalid: handleChange,\r\n      click: handleChange,\r\n      focus: handleChange,\r\n      \"edit:updated\": handleChange,\r\n      \"edit:start\": handleChange,\r\n    },\r\n  };\r\n  //   console.log(\"words:\");\r\n  //   console.log(suggestions);\r\n  if (suggestions.length === 0) return null;\r\n  // console.log(initialValue);\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={\"field-\" + name}>{label}</label>\r\n      <Tags settings={settings} value={value} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TagFinal;\r\n","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Social.js",[],"C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\taskComponents\\EditModel.js",["420"],"import { Modal, Button } from \"react-bootstrap\";\r\nimport React, { Component } from \"react\";\r\nimport { updateTask } from \"./../apiProject\";\r\nimport AssignPerson from \"./../../utils/signupbutton/Tagify/AssignPerson\";\r\nimport { getUserById } from \"./../../user/apiUser\";\r\nclass EditModel extends Component {\r\n  state = {\r\n    title: \"\",\r\n    description: \"\",\r\n    laneId: \"\",\r\n    pessimisticTime: 0,\r\n    optimisticTime: 0,\r\n    mostLikelyTime: 0,\r\n    task_responsible: [],\r\n    task_responsible_string: \"\",\r\n    assigned: [],\r\n  };\r\n  componentDidMount() {\r\n    this.setState({\r\n      title: this.props.task.taskName,\r\n      description: this.props.task.taskDescription,\r\n      pessimisticTime: this.props.task.pessimisticTime,\r\n      optimisticTime: this.props.task.optimisticTime,\r\n      mostLikelyTime: this.props.task.mostLikelyTime,\r\n      id: this.props.task._id,\r\n      laneId: this.props.task.status,\r\n      assigned: this.props.task.assignedTo,\r\n    });\r\n    const assignedToMembs = this.props.task.assignedTo;\r\n    let string = \"\";\r\n    assignedToMembs.map((memb) => {\r\n      getUserById(memb).then((user) => {\r\n        let { task_responsible } = this.state;\r\n        task_responsible.push(user.user.name);\r\n        string += user.user.name + \",\";\r\n        this.setState({\r\n          task_responsible: task_responsible,\r\n          task_responsible_string: string,\r\n        });\r\n      });\r\n    });\r\n  }\r\n  assignTo = (members) => {\r\n    this.setState({ task_responsible: members });\r\n  };\r\n  assignIds = (ids) => {\r\n    this.setState({ assigned: ids });\r\n  };\r\n  render() {\r\n    let task = this.props.task;\r\n    if (task === {}) return;\r\n    let show = this.props.show;\r\n    console.log(this.props.task);\r\n\r\n    // if (tasks === undefined) return;\r\n    // tasks.map((task) => {\r\n    //   if (this.props.id.toString() === task._id) console.log(task);\r\n    // });\r\n    // console.log(this.props.id);\r\n    return (\r\n      <Modal show={show} onHide={() => this.props.hideMe()}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Edit Task</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <label>Name:</label>\r\n          <input\r\n            type={\"text\"}\r\n            defaultValue={task.taskName}\r\n            onChange={(e) => this.setState({ title: e.target.value })}\r\n          ></input>\r\n          <br></br>\r\n          <label>Description:</label>\r\n          <input\r\n            type={\"text\"}\r\n            defaultValue={task.taskDescription}\r\n            onChange={(e) => this.setState({ description: e.target.value })}\r\n          ></input>\r\n          <br></br>\r\n          <label>Optimistic Time:</label>\r\n          <input\r\n            type={\"number\"}\r\n            defaultValue={task.optimisticTime}\r\n            onChange={(e) => this.setState({ optimisticTime: e.target.value })}\r\n          ></input>\r\n          <br></br>\r\n          <label>Most Likely Time:</label>\r\n          <input\r\n            type={\"number\"}\r\n            defaultValue={task.mostLikelyTime}\r\n            onChange={(e) => this.setState({ mostLikelyTime: e.target.value })}\r\n          ></input>\r\n          <br></br>\r\n\r\n          <label>Pessimistic Time:</label>\r\n          <input\r\n            type={\"number\"}\r\n            defaultValue={task.pessimisticTime}\r\n            onChange={(e) => this.setState({ pessimisticTime: e.target.value })}\r\n          ></input>\r\n          <br></br>\r\n          <AssignPerson\r\n            projectId={this.props.projectId}\r\n            assignTo={this.assignTo}\r\n            assignIds={this.assignIds}\r\n            label={\"Assigned to\"}\r\n            value={this.state.task_responsible_string}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={() =>\r\n              updateTask(this.state, this.props.projectId)\r\n                .then((data) => console.log(data))\r\n                .then(() => window.location.reload())\r\n            }\r\n          >\r\n            Submit\r\n          </Button>\r\n          <Button onClick={() => this.props.hideMe()}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditModel;\r\n","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\SubmitProject.js",["421","422","423"],"C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\LeaveProject.js",["424"],"import React, { Component } from \"react\";\r\nimport { updateProject, leaveProject } from \"./apiProject\";\r\nimport { Button, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport { isAuthenticated } from \"./../auth/index\";\r\nimport { getCurrentUser } from \"./../user/apiUser\";\r\nimport ExitToAppTwoToneIcon from \"@material-ui/icons/ExitToAppTwoTone\";\r\nclass LeaveProject extends Component {\r\n  state = {};\r\n  leaveproject = () => {\r\n    const project = this.props.project;\r\n    console.log(project);\r\n    let final_team = [],\r\n      final_tasks = [],\r\n      final_roles = [];\r\n    let tasks = project.tasks;\r\n    tasks.forEach((task) => {\r\n      let final_task = task;\r\n      let taskmembs = task.assignedTo;\r\n      let f_taskmembs = [];\r\n      taskmembs.forEach((memb) => {\r\n        if (memb === getCurrentUser()._id) f_taskmembs.push(project.leader);\r\n        else f_taskmembs.push(memb);\r\n      });\r\n      f_taskmembs = [...new Set(f_taskmembs)];\r\n      final_task.assignedTo = f_taskmembs;\r\n      console.log(final_task);\r\n      final_tasks.push(final_task);\r\n    });\r\n    console.log(final_tasks);\r\n\r\n    let membs = project.team;\r\n    membs.forEach((user) => {\r\n      if (user !== getCurrentUser()._id) final_team.push(user);\r\n      console.log(final_team);\r\n    });\r\n\r\n    let roles = project.roles;\r\n    roles.map((role) => {\r\n      let r = role;\r\n      if (r.assignedTo === getCurrentUser()._id) r.assignedTo = undefined;\r\n      final_roles.push(r);\r\n    });\r\n\r\n    let proj = {\r\n      title: project.title,\r\n      description: project.description,\r\n      skills: project.skills,\r\n      roleDetails: final_roles,\r\n      team: final_team,\r\n      tasks: final_tasks,\r\n    };\r\n    console.log(proj.roleDetails);\r\n    updateProject(proj, project._id).then((data) => {\r\n      if (data.error) {\r\n        console.log(data.error);\r\n      } else {\r\n        const token = isAuthenticated().token;\r\n        leaveProject(getCurrentUser()._id, project._id, token).then((data) => {\r\n          if (data.error) {\r\n            console.log(data.error);\r\n          }\r\n        });\r\n        alert(\"You left this project\");\r\n        window.location.reload(false);\r\n      }\r\n    });\r\n  };\r\n\r\n  leaveConfirmed = () => {\r\n    let answer = window.confirm(\"Are you sure you want to leave this project?\");\r\n    if (answer) {\r\n      this.leaveproject();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <OverlayTrigger\r\n          key=\"top\"\r\n          placement=\"top\"\r\n          overlay={<Tooltip id=\"top2\">Leave Project</Tooltip>}\r\n        >\r\n          <Button onClick={this.leaveConfirmed} variant=\"danger\">\r\n            <ExitToAppTwoToneIcon />\r\n          </Button>\r\n        </OverlayTrigger>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LeaveProject;\r\n","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\PdfDropZone.js",["425","426","427","428","429","430","431"],"import React, { useState } from \"react\";\r\nimport { AttachFile, Description, PictureAsPdf } from \"@material-ui/icons\";\r\nimport { DropzoneAreaBase } from \"material-ui-dropzone\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { processResumes } from \"./apiUser\";\r\nlet array = require(\"./ranking.json\");\r\n\r\nconst handlePreviewIcon = (fileObject, classes) => {\r\n  const { type } = fileObject.file;\r\n  const iconProps = {\r\n    className: classes.image,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <PictureAsPdf {...iconProps} />\r\n      </div>\r\n      <div>{fileObject.file.name}</div>\r\n    </>\r\n  );\r\n};\r\nexport const PdfDropZone = () => {\r\n  const [fileObjects, setFileObjects] = useState([]);\r\n  const [finalObj, setFinalObj] = useState({});\r\n  const findscore = (data) => {\r\n    console.log(data);\r\n    array.map((obj) => {\r\n      if (obj.Name === data.college) data[\"score\"] = obj.Score;\r\n    });\r\n    let obj = finalObj;\r\n    let nameObj = { [data.name]: { ...data } };\r\n    Object.assign(obj, nameObj);\r\n    setFinalObj(obj);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DropzoneAreaBase\r\n        fileObjects={fileObjects}\r\n        acceptedFiles={[\".pdf\"]}\r\n        onAdd={(newFileObjs) => {\r\n          console.log(\"onAdd\", newFileObjs);\r\n          //   newFileObjs.map((file) => {\r\n          //     let files = [...fileObjects];\r\n          //     files.push(file);\r\n          //     setFileObjects(files);\r\n          //   });\r\n          setFileObjects([].concat(fileObjects, newFileObjs));\r\n        }}\r\n        onDelete={(deleteFileObj) => {\r\n          setFileObjects((newFileObjs) =>\r\n            newFileObjs.filter((file) => file !== deleteFileObj)\r\n          );\r\n          console.log(\"NewOnes:\", fileObjects);\r\n        }}\r\n        getPreviewIcon={handlePreviewIcon}\r\n      />\r\n      <Button\r\n        onClick={() => {\r\n          //   const data = new FormData();\r\n          //   data.append(\"files\", fileObjects);\r\n          //   console.log(fileObjects);\r\n          let finalObj = {};\r\n          let files = [];\r\n          fileObjects.map((file) => {\r\n            files.push(file.file);\r\n          });\r\n          files.map((file) => {\r\n            processResumes(file).then((data) => {\r\n              findscore(data);\r\n            });\r\n          });\r\n        }}\r\n      >\r\n        Process\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\SearchProjectBar.js",["432","433","434","435","436","437","438"],"import React, { useState, useEffect } from \"react\";\r\nimport SearchTwoToneIcon from \"@material-ui/icons/SearchTwoTone\";\r\nimport { list, getCurrentUser } from \"./user/apiUser\";\r\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\r\nimport { listprojects } from \"./project/apiProject\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nconst SearchProjectBar = () => {\r\n  const [query, setQuery] = useState([]);\r\n  //   const [users, setUsers] = useState([]);\r\n  const [projects, setProjects] = useState([]);\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const [myProjectState, setMyProjectState] = useState({});\r\n  const [url, setUrl] = useState(\"\");\r\n  useEffect(() => {\r\n    let suggestions = [];\r\n    // list()\r\n    //   .then((data) => {\r\n    //     setUsers(data);\r\n    //     data.map((user) => {\r\n    //       suggestions.push({\r\n    //         id: user._id,\r\n    //         name: user.name,\r\n    //         url: `/user/${user._id}`,\r\n    //         type: user,\r\n    //       });\r\n    //     });\r\n    //   })\r\n    //   .then(() => {\r\n    listprojects()\r\n      .then((data) => {\r\n        //   setMyProjects(data.userProjects);\r\n        //   data.userProjects.map((project) => {\r\n        //   suggestions.push({\r\n        //     id: project._id,\r\n        //     name: project.title,\r\n        //     url: `/`,\r\n        //   });\r\n        //   });\r\n        setProjects(data);\r\n        data.map((project) => {\r\n          if (project.team.includes(getCurrentUser()._id)) {\r\n            suggestions.push({\r\n              id: project._id,\r\n              name: project.title,\r\n              url: `/myprojects/dashboard/${project._id}`,\r\n              type: \"myproject\",\r\n              data: project,\r\n            });\r\n          } else {\r\n            suggestions.push({\r\n              id: project._id,\r\n              name: project.title,\r\n              url: `/joinproject`,\r\n              type: \"project\",\r\n            });\r\n          }\r\n        });\r\n      })\r\n      .then(() => {\r\n        setSuggestions(suggestions);\r\n      });\r\n    //   });\r\n  }, []);\r\n\r\n  const handleOnSearch = (string, results) => {\r\n    // onSearch will have as the first callback parameter\r\n    // the string searched and for the second the results.\r\n    // console.log(string, results);\r\n  };\r\n  const handleOnHover = (result) => {\r\n    // the item hovered\r\n    // console.log(result);\r\n  };\r\n\r\n  const handleOnSelect = (item) => {\r\n    // the item selected\r\n    if (item.type === \"myproject\") {\r\n      console.log(item);\r\n      setUrl(item.url);\r\n      setMyProjectState(item.data);\r\n    }\r\n    if (item.type === \"project\") {\r\n      window.location.reload();\r\n    }\r\n  };\r\n\r\n  const handleOnFocus = () => {\r\n    // console.log(\"Focused\");\r\n  };\r\n  //   const suggestions = [...users];\r\n  console.log(suggestions);\r\n  console.log(\"myProjectState\", myProjectState);\r\n  //   if (url !== \"\" && myProjectState !== {})\r\n  //     return <Redirect to={{ url: url, state: { project: myProjectState } }} />;\r\n  if (url !== \"\") {\r\n    if (myProjectState !== {}) {\r\n      return (\r\n        <Redirect to={{ pathname: url, state: { project: myProjectState } }} />\r\n      );\r\n    }\r\n    // window.location.reload();\r\n    // return <Redirect to={url} />;\r\n    // if not his project redirected to join project, so nothing done\r\n  }\r\n  return (\r\n    // <Redirect>\r\n    <span>\r\n      <div\r\n        className=\"quick-search quick-search-inline ml-4 w-250px\"\r\n        id=\"kt_quick_search_inline\"\r\n      >\r\n        <ReactSearchAutocomplete\r\n          items={suggestions}\r\n          onSearch={handleOnSearch}\r\n          onHover={handleOnHover}\r\n          onSelect={handleOnSelect}\r\n          onFocus={handleOnFocus}\r\n          autoFocus\r\n          styling={{ zIndex: 100 }}\r\n        />\r\n        {/* <form className=\"quick-search-form\">\r\n          <div className=\"input-group rounded\">\r\n            <div className=\"input-group-prepend\">\r\n              <span className=\"input-group-text\">\r\n                <SearchTwoToneIcon />\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </form> */}\r\n      </div>\r\n    </span>\r\n    // </Redirect>\r\n  );\r\n};\r\n\r\nexport default SearchProjectBar;\r\n","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\SearchUserBar.js",["439","440","441","442","443","444","445","446"],"C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\YoutubeURLPost.js",["447","448","449"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport ReactPlayer from \"react-player/youtube\";\r\nimport { Link } from \"react-router-dom\";\r\nimport YouTubeIcon from \"@material-ui/icons/YouTube\";\r\nimport * as youtubeMeta from \"youtube-metadata-from-url\";\r\nimport { createTextPost, createYoutubePost } from \"./apiPosts\";\r\nimport { toast } from \"react-toastify\";\r\nimport Sentiment from \"sentiment\";\r\nimport { getPosts } from \"./../store/posts\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst sentiment = new Sentiment();\r\nconst YoutubeURLPost = (props) => {\r\n  const dispatch = useDispatch();\r\n  const [open, setOpen] = useState(false);\r\n  const [metadata, setMetadata] = useState({});\r\n  const [title, setTitle] = useState(\"\");\r\n  const [type, setType] = useState(\"text\");\r\n  let [sentimentScore, setsentimentScore] = useState([]);\r\n  useEffect(() => {\r\n    if (validateYouTubeUrl(props.text)) {\r\n      youtubeMeta.metadata(props.text).then(\r\n        function (json) {\r\n          //   console.log(\"Response:\", json);\r\n          setMetadata(json);\r\n        },\r\n        function (err) {\r\n          console.log(err);\r\n        }\r\n      );\r\n    }\r\n  }, [props.text]);\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n  function handleShow() {\r\n    setOpen(true);\r\n  }\r\n  function validateYouTubeUrl(urlToParse) {\r\n    if (urlToParse) {\r\n      var regExp =\r\n        /^(?:https?:\\/\\/)?(?:m\\.|www\\.)?(?:youtu\\.be\\/|youtube\\.com\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&v=))((\\w|-){11})(?:\\S+)?$/;\r\n      if (urlToParse.match(regExp)) {\r\n        if (type !== \"youtube\") setType(\"youtube\");\r\n        return true;\r\n      }\r\n    }\r\n    if (type !== \"text\") setType(\"text\");\r\n    return false;\r\n  }\r\n  function titleChange(e) {\r\n    setTitle(e.target.value);\r\n    findSentiment(e.target.value);\r\n    console.log(title);\r\n  }\r\n  const findSentiment = (title) => {\r\n    const result = sentiment.analyze(title);\r\n    sentimentScore = setsentimentScore(result.score);\r\n  };\r\n  const { text, disabled } = props;\r\n  if (disabled === undefined) return null;\r\n  //   console.log(text);\r\n  return (\r\n    <>\r\n      <Button\r\n        onClick={() => {\r\n          if (text !== \"\") handleShow();\r\n        }}\r\n        disabled={disabled}\r\n      >\r\n        Youtube Link\r\n      </Button>\r\n      <Modal show={open} onHide={handleClose}>\r\n        <Modal.Header>\r\n          <Modal.Title>Your thoughts here...</Modal.Title>\r\n          <Button onClick={handleClose}>x</Button>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {validateYouTubeUrl(text) ? (\r\n            <>\r\n              <YouTubeIcon />\r\n              {/* <a href={text} target={\"_blank\"}>\r\n                {text.toString()} {console.log(metadata)}\r\n              </a> */}\r\n              <div>{metadata.title}</div>\r\n              <ReactPlayer\r\n                url={text}\r\n                controls={true}\r\n                width={window.width / 4}\r\n              />\r\n              <div>By {metadata.author_name}</div>\r\n              <input\r\n                type=\"text\"\r\n                id=\"youtubeText\"\r\n                className=\"form-control\"\r\n                onChange={(e) => titleChange(e)}\r\n              />\r\n            </>\r\n          ) : (\r\n            <h4>{text}</h4>\r\n          )}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          {sentimentScore >= -3 && (\r\n            <Button\r\n              onClick={() => {\r\n                if (type === \"youtube\") {\r\n                  if (title !== \"\")\r\n                    createYoutubePost(text, title, metadata).then((data) => {\r\n                      // console.log(data);\r\n                      if (data.error) {\r\n                        toast.warning(data.error);\r\n                      } else {\r\n                        toast.success(\"Created post Successfully\");\r\n                        dispatch(getPosts());\r\n                        // history.push(\"/home\");\r\n                      }\r\n                    });\r\n                  else {\r\n                    toast.warning(\"Enter caption for the post!\");\r\n                  }\r\n                } else {\r\n                  toast.warning(\"Please enter a valid Youtube URL\");\r\n                }\r\n              }}\r\n            >\r\n              Sure?\r\n            </Button>\r\n          )}\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default YoutubeURLPost;\r\n","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\RatingComponent.js",["450","451"],"C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\DragDropImages.js",["452"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { DropzoneArea } from \"material-ui-dropzone\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { createPost } from \"./apiPosts\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport SkillsInput from \"./../utils/signupbutton/Tagify/SkillsInput\";\r\nimport { listmyprojects } from \"./../project/apiProject\";\r\nimport Sentiment from \"sentiment\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getPosts } from \"./../store/posts\";\r\nimport axios from \"axios\";\r\n\r\nconst sentiment = new Sentiment();\r\nfunction DragDropImages(props) {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [files, setFiles] = useState([]);\r\n  const [title, set_title] = useState(String);\r\n  const [tags, setTags] = useState([]);\r\n  const [project, setProject] = useState(\"Personal\");\r\n  const [projects, setProjects] = useState([]);\r\n  let [sentimentScore, setsentimentScore] = useState([]);\r\n  // const { getRootProps, getInputProps } = useDropzone({\r\n  //   accept: \"image/*\",\r\n  //   onDrop: (acceptedFiles) => {\r\n  //     acceptedFiles.map((file) => {\r\n  //       const reader = new FileReader();\r\n  //       reader.onabort = () => console.log(\"file reading was aborted\");\r\n  //       reader.onerror = () => console.log(\"file reading has failed\");\r\n  //       reader.onload = () => {\r\n  //         const binaryStr = reader.result;\r\n  //         const data = new Uint8Array(binaryStr);\r\n  //         // let result = webp.buffer2webpbuffer(reader.result, \"jpg\", \"-q 80\");\r\n  //         // console.log(result);\r\n  //         // result.then(function (result) {\r\n  //         //   // you access the value from the promise here\r\n  //         //   console.log(result);\r\n  //         // });\r\n\r\n  //         // console.log(reader.readAsArrayBuffer(file));\r\n  //         // compress_images(\r\n  //         //   file.path,\r\n  //         //   file.path + \"compressed\",\r\n  //         //   { compress_force: false, statistic: true, autoupdate: true },\r\n  //         //   false,\r\n  //         //   { jpg: { engine: \"webp\", command: false } },\r\n  //         //   { png: { engine: \"webp\", command: false } },\r\n  //         //   { svg: { engine: \"svgo\", command: false } },\r\n  //         //   { gif: { engine: \"gifwebp\", command: false } },\r\n  //         //   function (err, completed) {\r\n  //         //     if (completed === true) console.log(\"done\");\r\n  //         // }\r\n  //         // );\r\n  //         // const buffer = binaryStr;\r\n  //         // var binary = \"\";\r\n  //         // var bytes = new Uint8Array(buffer);\r\n  //         // var len = bytes.byteLength;\r\n  //         // for (var i = 0; i < len; i++) {\r\n  //         //   binary += String.fromCharCode(bytes[i]);\r\n  //         // }\r\n  //         // const base64 = btoa(binary);\r\n  //         // console.log(base64);\r\n  //       };\r\n  //     });\r\n\r\n  //     setFiles(\r\n  //       acceptedFiles.map((file) =>\r\n  //         Object.assign(file, {\r\n  //           preview: URL.createObjectURL(file),\r\n  //         })\r\n  //       )\r\n  //     );\r\n  //   },\r\n  // });\r\n\r\n  // const thumbs = files.map((file) => (\r\n  //   <div style={thumb} key={file.name}>\r\n  //     <div style={thumbInner}>\r\n  //       <img src={file.preview} style={img} />\r\n  //     </div>\r\n  //   </div>\r\n  // ));\r\n  useEffect(() => {\r\n    listmyprojects().then((data) => setProjects(data.userProjects));\r\n  }, []);\r\n  useEffect(\r\n    () => () => {\r\n      // Make sure to revoke the data uris to avoid memory leaks\r\n      files.forEach((file) => URL.revokeObjectURL(file.preview));\r\n    },\r\n    [files]\r\n  );\r\n  const postDetails = (images) => {\r\n    if (title === \"\") toast.warning(\"Please enter the Title\");\r\n    else {\r\n      let final_url = [];\r\n      images.map(async (image, i) => {\r\n        const data = new FormData();\r\n        data.append(\"title\", title);\r\n        data.append(\"tags\", tags);\r\n        data.append(\"myImage\", image);\r\n        let settings = {\r\n          headers: {\r\n            \"content-type\": \"multipart/form-data\",\r\n          },\r\n        };\r\n        let response = await axios.post(\r\n          `http://localhost:3000/convertToWebp`,\r\n          data,\r\n          settings\r\n        );\r\n        try {\r\n          let result = await response.data.result;\r\n          final_url.push(result.url);\r\n          if (final_url.length === images.length)\r\n            createPost(final_url, title, tags, project).then((data) => {\r\n              console.log(data);\r\n              if (data.error) {\r\n                toast.warning(data.error);\r\n              } else {\r\n                toast.success(\"Created post Successfully\");\r\n                dispatch(getPosts());\r\n                history.push(\"/home\");\r\n              }\r\n            });\r\n        } catch (e) {\r\n          console.log(e);\r\n          toast.warning(\"Please Try again\");\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const onTextChange = (e) => {\r\n    set_title(e.target.value);\r\n    findSentiment(e.target.value);\r\n  };\r\n\r\n  const findSentiment = (title) => {\r\n    const result = sentiment.analyze(title);\r\n    sentimentScore = setsentimentScore(result.score);\r\n  };\r\n\r\n  const handleTags = (newSkills) => {\r\n    let new_tags = [...newSkills];\r\n    setTags(new_tags);\r\n  };\r\n  const onChangeProject = (event) => {\r\n    setProject(event.target.value);\r\n  };\r\n  return (\r\n    <>\r\n      <ToastContainer />\r\n      {/* <TextField\r\n        name=\"Title\"\r\n        onChange={(e) => onTextChange(e)}\r\n        variant=\"outlined\"\r\n        label=\"Title\"\r\n        fullWidth\r\n      /> */}\r\n      <Form.Control\r\n        type=\"text\"\r\n        placeholder=\"Title\"\r\n        name=\"Title\"\r\n        onChange={(e) => onTextChange(e)}\r\n        as=\"textarea\"\r\n        rows={3}\r\n      />\r\n      <label>Project</label>\r\n      <select class=\"custom-select\" onChange={(e) => onChangeProject(e)}>\r\n        <option selected>Personal</option>\r\n        {/* <option value=\"1\">One</option>\r\n        <option value=\"2\">Two</option>\r\n        <option value=\"3\">Three</option> */}\r\n        {projects.map((project) => (\r\n          <option value={project._id}>{project.title}</option>\r\n        ))}\r\n      </select>\r\n      <SkillsInput label={<big>Tags</big>} setSkills={handleTags} />\r\n      <DropzoneArea\r\n        acceptedFiles={[\"image/*\"]}\r\n        dropzoneText={\"Drag and drop an image here or click\"}\r\n        onChange={(files) => {\r\n          console.log(\"Files:\", files);\r\n          setFiles(files);\r\n        }}\r\n        maxFileSize={10485760}\r\n      />\r\n      <div className=\"text-center mt-2\">\r\n        {sentimentScore >= -3 && (\r\n          <Button\r\n            onClick={() => {\r\n              postDetails(files, title, tags, project);\r\n              // console.log(project);\r\n            }}\r\n          >\r\n            Post\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default DragDropImages;\r\n","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\Emoji.js",[],"C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\ProjectRecommendation.js",["453","454"],"import React, { Component } from \"react\";\r\nimport { getCurrentUser, getUserById } from \"./../user/apiUser\";\r\nimport { listprojects } from \"./../project/apiProject\";\r\nimport { Link } from \"react-router-dom\";\r\nimport JoinProject from \"./../project/JoinProject\";\r\n\r\nconst similarity = require(\"sentence-similarity\");\r\nconst similarityScore = require(\"similarity-score\");\r\n\r\nclass ProjectRecommendation extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      skills: [],\r\n      user_projects: [],\r\n      projects: [],\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    var userid = await getCurrentUser()._id;\r\n    // console.log(userid);\r\n\r\n    var user_obj = await getUserById(userid);\r\n    this.setState({\r\n      skills: user_obj.user.skills,\r\n      user_projects: user_obj.user.projects,\r\n    });\r\n\r\n    listprojects().then((data) => {\r\n      if (data.error) {\r\n        console.log(data.error);\r\n      } else {\r\n        this.setState({ projects: data });\r\n      }\r\n    });\r\n  }\r\n\r\n  renderUsers = (final_out) => (\r\n    <div className=\"row row-cols-1 row-cols-md-1\">\r\n      {final_out.map((project, i) => (\r\n        <div className=\"col\">\r\n          <div className=\"card card-custom gutter-b card-stretch\" key={i}>\r\n            <div className=\"card-body text-center pt-4\">\r\n              <div className=\"my-4\">\r\n                <h5 className=\"text-dark font-weight-bold font-size-h3\">\r\n                  {project.title}\r\n                </h5>\r\n              </div>\r\n              <div className=\"text-dark font-weight-bold font-size-h6\">\r\n                {project.description}\r\n              </div>\r\n              <div className=\"lead\">\r\n                {project.skills.map((skill) => (\r\n                  <span class=\"btn btn-light-info btn-sm font-weight-bold btn-upper btn-text m-2\">\r\n                    {skill}\r\n                  </span>\r\n                ))}\r\n              </div>\r\n              <div className=\"mt-9\">\r\n                <Link\r\n                  to={{\r\n                    pathname: `/project/${project._id}`,\r\n                    state: { project: project },\r\n                  }}\r\n                  className=\"btn btn-light-primary font-weight-bolder btn-sm py-3 px-6 text-uppercase\"\r\n                >\r\n                  view project\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n\r\n  render() {\r\n    const { skills, projects, user_projects } = this.state;\r\n\r\n    // console.log(skills);\r\n    // console.log(projects);\r\n\r\n    let final_out = [];\r\n    let winkOpts = {\r\n      f: similarityScore.winklerMetaphone,\r\n      options: { threshold: 0 },\r\n    };\r\n    projects.forEach((project) => {\r\n      var out = {};\r\n      var score = similarity(skills, project.skills, winkOpts);\r\n      // console.log(score)\r\n      // console.log(project.skills,skills);\r\n      out = project;\r\n      out[\"exact\"] = score.exact;\r\n      // console.log(out);\r\n      final_out.push(out);\r\n    });\r\n    final_out = final_out.filter((x) => !user_projects.includes(x._id));\r\n    final_out = final_out.filter((x) => x.completion_percentage != 100);\r\n    final_out.sort(function (a, b) {\r\n      return b.exact - a.exact;\r\n    });\r\n    // final_out = final_out.filter(x => x.exact !=0);\r\n    final_out = final_out.slice(0, 5);\r\n    // console.log(final_out);\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        {final_out.length === 0 ? (\r\n          <></>\r\n        ) : (\r\n          <>\r\n            <h4 className=\"mt-5 mb-5\"> Recommended Projects for You ...</h4>\r\n            {this.renderUsers(final_out)}\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProjectRecommendation;\r\n","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\viewProject.js",["455","456"],"C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\EditProfile.js",["457","458"],"import React, { Component } from \"react\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { read, update } from \"./apiUser\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport SkillsInput from \"../utils/signupbutton/Tagify/SkillsInput\";\r\nimport DefaultProfile from \"../images/avatar.png\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport DragDropProfilePic from \"./../posts/DragDropProfilePic\";\r\nimport { postProfilePic, removeProfilePic } from \"../posts/apiPosts\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { setProfilePic } from \"../store/user\";\r\nimport { connect } from \"react-redux\";\r\nclass EditProfile extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      id: \"\",\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      redirectToProfile: false,\r\n      error: \"\",\r\n      initialName: \"\",\r\n      open: false,\r\n    };\r\n  }\r\n\r\n  init = (userId) => {\r\n    const token = isAuthenticated().token;\r\n    read(userId, token).then((data) => {\r\n      if (data.error) {\r\n        this.setState({ redirectToProfile: true });\r\n      } else {\r\n        this.setState({\r\n          id: data._id,\r\n          name: data.name,\r\n          email: data.email,\r\n          username: data.username,\r\n          location: data.location,\r\n          bio: data.bio,\r\n          dob: data.dob,\r\n          skills: data.skills,\r\n          social: data.social,\r\n          error: \"\",\r\n        });\r\n        let str = \"\";\r\n        data.skills.map((skill) => {\r\n          str += skill;\r\n          str += \",\";\r\n        });\r\n        str = str.slice(0, -1);\r\n        this.setState({ skillstr: str });\r\n        this.setState({ initialName: data.name });\r\n      }\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const userId = this.props.match.params.userId;\r\n    this.init(userId);\r\n  }\r\n  handleChange = (name) => (event) => {\r\n    this.setState({ [name]: event.target.value });\r\n  };\r\n  handleSkills = (newSkills) => {\r\n    this.setState({ skills: newSkills });\r\n  };\r\n  handleSocialChange = (name) => (event) => {\r\n    const social = Object.assign({}, this.state.social, {\r\n      [name]: event.target.value,\r\n    });\r\n    this.setState({ social });\r\n  };\r\n  clickSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { name, username, email, password, location, bio, social, skills } =\r\n      this.state;\r\n    const user = {\r\n      name,\r\n      username,\r\n      email,\r\n      location,\r\n      bio,\r\n      social,\r\n      skills,\r\n      password: password || undefined,\r\n    };\r\n    // console.log(user);\r\n    const userId = this.props.match.params.userId;\r\n    const token = isAuthenticated().token;\r\n    update(userId, token, user).then((data) => {\r\n      if (data.error) this.setState({ error: data.error });\r\n      else\r\n        this.setState({\r\n          redirectToProfile: true,\r\n        });\r\n    });\r\n    // console.log(user);\r\n  };\r\n  handleOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n  setImage = (image) => {\r\n    console.log(image);\r\n    this.setState({ image });\r\n  };\r\n  render() {\r\n    const {\r\n      id,\r\n      name,\r\n      email,\r\n      password,\r\n      username,\r\n      location,\r\n      bio,\r\n      social,\r\n      redirectToProfile,\r\n      error,\r\n      skillstr,\r\n      initialName,\r\n      open,\r\n      image,\r\n    } = this.state;\r\n    if (redirectToProfile) {\r\n      return <Redirect to={`/user/${id}`} />;\r\n    }\r\n    if (social === undefined) return null;\r\n    const { profilePic } = this.props;\r\n    let dp =\r\n      profilePic === \"\" || profilePic === undefined\r\n        ? DefaultProfile\r\n        : profilePic;\r\n    console.log(\"dp:\", dp);\r\n    return (\r\n      <div className=\"container\">\r\n        <ToastContainer />\r\n        <h2 className=\"mt-5 mb-5\">Edit Profile</h2>\r\n        <div\r\n          className=\"alert alert-danger\"\r\n          style={{ display: error ? \"\" : \"none\" }}\r\n        >\r\n          {error}\r\n        </div>\r\n        <div className=\"card card-custom gutter-b\">\r\n          <div className=\"card-body\">\r\n            <div className=\"d-flex\">\r\n              <div className=\"flex-grow-1\">\r\n                <div className=\"d-flex align-items-center justify-content-between flex-wrap\">\r\n                  <div className=\"mr-3\">\r\n                    <Modal show={open} onHide={this.handleChange}>\r\n                      <Modal.Header>\r\n                        <Modal.Title>\r\n                          Let's change your Display Picture\r\n                        </Modal.Title>\r\n                      </Modal.Header>\r\n\r\n                      <Modal.Body>\r\n                        {image !== undefined ? (\r\n                          <img\r\n                            src={URL.createObjectURL(image)}\r\n                            width={\"450px\"}\r\n                          />\r\n                        ) : (\r\n                          <DragDropProfilePic setImage={this.setImage} />\r\n                        )}\r\n                      </Modal.Body>\r\n\r\n                      <Modal.Footer>\r\n                        <Button\r\n                          variant=\"secondary\"\r\n                          onClick={() => this.handleClose}\r\n                        >\r\n                          Close\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"primary\"\r\n                          onClick={() => {\r\n                            if (image !== undefined) {\r\n                              postProfilePic(image).then((url) => {\r\n                                if (url) {\r\n                                  toast.success(\"profile picture updated\");\r\n                                  this.props.setProfilePic({ profilePic: url });\r\n                                  this.handleClose();\r\n                                }\r\n                              });\r\n                            }\r\n                          }}\r\n                        >\r\n                          Save changes\r\n                        </Button>\r\n                      </Modal.Footer>\r\n                    </Modal>\r\n                    <img\r\n                      src={dp}\r\n                      alt={initialName}\r\n                      className=\"symbol symbol-60 symbol-xxl-100 mr-3 align-self-start align-self-xxl-center\"\r\n                      style={{ width: \"55px\" }}\r\n                    />\r\n                    <button\r\n                      className=\"btn btn-light-warning btn-sm font-weight-bold btn-upper btn-text m-1\"\r\n                      onClick={() => {\r\n                        this.handleOpen();\r\n                      }}\r\n                    >\r\n                      Edit DP\r\n                    </button>\r\n                    <button\r\n                      className=\"btn btn-light-danger btn-sm font-weight-bold btn-upper btn-text m-1\"\r\n                      onClick={() =>\r\n                        removeProfilePic().then((data) => {\r\n                          console.log(\"dp:\", data);\r\n                        })\r\n                      }\r\n                    >\r\n                      Delete DP\r\n                    </button>\r\n                  </div>\r\n                  <h3>hello</h3>\r\n                </div>\r\n                <form className=\"mt-5\">\r\n                  <h3 className=\"pd-5\">Personal Info</h3>\r\n                  <div className=\"row\">\r\n                    <div className=\"col\">\r\n                      <div className=\"form-group\">\r\n                        <label>Username</label>\r\n                        <input\r\n                          onChange={this.handleChange(\"username\")}\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          value={username}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                      <div className=\"form-group\">\r\n                        <label>Name</label>\r\n                        <input\r\n                          onChange={this.handleChange(\"name\")}\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          value={name}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"col\">\r\n                      <div className=\"form-group\">\r\n                        <label>Email</label>\r\n                        <input\r\n                          onChange={this.handleChange(\"email\")}\r\n                          type=\"email\"\r\n                          className=\"form-control\"\r\n                          value={email}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                      <div className=\"form-group\">\r\n                        <label>Password</label>\r\n                        <input\r\n                          onChange={this.handleChange(\"password\")}\r\n                          type=\"password\"\r\n                          className=\"form-control\"\r\n                          value={password}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"col\">\r\n                      <div className=\"form-group\">\r\n                        <label>Bio</label>\r\n                        <input\r\n                          onChange={this.handleChange(\"bio\")}\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          value={bio}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                      <div className=\"form-group\">\r\n                        <label>Location</label>\r\n                        <input\r\n                          onChange={this.handleChange(\"location\")}\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          value={location}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"col\">\r\n                      <div className=\"form-group\">\r\n                        <SkillsInput\r\n                          label={\"Skills\"}\r\n                          setSkills={this.handleSkills}\r\n                          value={skillstr}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <h3>Social Info</h3>\r\n                  <div className=\"row\">\r\n                    <div className=\"col\">\r\n                      <div className=\"form-group\">\r\n                        <label>Instagram</label>\r\n                        <input\r\n                          onChange={this.handleSocialChange(\"instagram\")}\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          value={social.instagram}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                      <div className=\"form-group\">\r\n                        <label>Facebook</label>\r\n                        <input\r\n                          onChange={this.handleSocialChange(\"facebook\")}\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          value={social.instagram}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"col\">\r\n                      <div className=\"form-group\">\r\n                        <label>Your Website</label>\r\n                        <input\r\n                          onChange={this.handleSocialChange(\"website\")}\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          value={social.website}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                      <div className=\"form-group\">\r\n                        <label>Linkedin</label>\r\n                        <input\r\n                          onChange={this.handleSocialChange(\"linkedin\")}\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          value={social.linkedin}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"col\">\r\n                      <div className=\"form-group\">\r\n                        <label>Youtube</label>\r\n                        <input\r\n                          onChange={this.handleSocialChange(\"youtube\")}\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          value={social.youtube}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                      <div className=\"form-group\">\r\n                        <label>Twitter</label>\r\n                        <input\r\n                          onChange={this.handleSocialChange(\"twitter\")}\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          value={social.twitter}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <button\r\n                    onClick={this.clickSubmit}\r\n                    className=\"btn btn-raised btn-primary\"\r\n                  >\r\n                    Update\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  profilePic: state.user.profilePic,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setProfilePic: (params) => dispatch(setProfilePic(params)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditProfile);\r\n","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\Post.js",["459","460","461","462","463","464","465","466","467"],"C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\ProjectDashboard.js",["468","469","470","471","472"],"C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Users.js",["473","474","475"],"import React, { Component } from \"react\";\r\nimport {\r\n  list,\r\n  getCurrentUser,\r\n  followUser,\r\n  unfollowUser,\r\n  getUserById,\r\n  unblockUser,\r\n} from \"./apiUser\";\r\nimport DefaultProfile from \"../images/avatar.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateFollowing } from \"../store/user\";\r\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\r\nimport PersonAddDisabledIcon from \"@material-ui/icons/PersonAddDisabled\";\r\nimport LiveClock from \"react-live-clock\";\r\nimport dayjs from \"dayjs\";\r\nimport { Badge } from \"react-bootstrap\";\r\nimport SearchTwoToneIcon from \"@material-ui/icons/SearchTwoTone\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport CheckCircleOutlineIcon from \"@material-ui/icons/CheckCircleOutline\";\r\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\r\nimport SearchUserBar from \"./SearchUserBar\";\r\nimport { notificationAdded } from \"../store/notifications\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nconst onUnBlockUser = (e, user) => {\r\n  let current_user_id = getCurrentUser()._id;\r\n  let client_user_id = user._id;\r\n  console.log(user);\r\n  unblockUser(current_user_id, client_user_id)\r\n    .then((data) => {\r\n      console.log(data);\r\n    })\r\n    .then(() => window.location.reload());\r\n  e.preventDefault();\r\n};\r\n\r\nclass Users extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      users: [],\r\n      blocked_users: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    // console.log(getCurrentUser());\r\n    list().then((data) => {\r\n      if (data.error) {\r\n        console.log(data.error);\r\n      } else {\r\n        this.setState({ users: data });\r\n        let othersProfilePics = {};\r\n        data.map((user) => {\r\n          getUserById(user._id).then((data) => {\r\n            const profilePic =\r\n              data.user.profilePictures.length !== 0\r\n                ? data.user.profilePictures[\r\n                    data.user.profilePictures.length - 1\r\n                  ]\r\n                : DefaultProfile;\r\n            othersProfilePics[user._id] = profilePic;\r\n            this.setState({ othersProfilePics });\r\n            // this.props.setProfilePic({ profilePic });\r\n          });\r\n        });\r\n      }\r\n    });\r\n    getUserById(getCurrentUser()._id).then((data) => {\r\n      this.props.updateFollowing({\r\n        following: data.user.following,\r\n      });\r\n      this.setState({\r\n        blocked_users: data.user.blocked_users,\r\n      });\r\n    });\r\n  }\r\n  componentDidUpdate(prevState, prevProps) {\r\n    console.log(prevState);\r\n    console.log(prevProps);\r\n  }\r\n\r\n  renderUsers = (users, othersProfilePics) => (\r\n    <div className=\"row row-cols-1 row-cols-md-4\">\r\n      {users.map((user, i) => (\r\n        <div className=\"col mb-4\" key={i}>\r\n          <div className=\"card card-custom card-stretch\">\r\n            <div className=\"card-body pt-4\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <img\r\n                  src={othersProfilePics[user._id]}\r\n                  alt={user.name}\r\n                  className=\"symbol symbol-60 symbol-xxl-100 mr-3 align-self-start align-self-xxl-center\"\r\n                  style={{ width: \"55px\" }}\r\n                />\r\n                <div>\r\n                  <h5 className=\"font-weight-bolder text-dark-75 text-hover-primary\">\r\n                    {user.name}\r\n                  </h5>\r\n                  <div className=\"text-muted pb-3\">@{user.username}</div>\r\n                  <Link\r\n                    to={`/user/${user._id}`}\r\n                    className=\"btn btn-raised btn-small btn-primary\"\r\n                  >\r\n                    View Profile\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n              <div className=\"pt-3\">\r\n                <div className=\"d-flex align-items-center justify-content-between mb-2\">\r\n                  <Link\r\n                    to={`/mychats/${isAuthenticated().user._id}`}\r\n                    className=\"btn btn-outline-primary\"\r\n                  >\r\n                    Message\r\n                  </Link>\r\n                  {this.props.following.includes(user._id) ? (\r\n                    <button\r\n                      className=\"btn btn-raised btn-primary ml-3\"\r\n                      onClick={(e) => {\r\n                        unfollowUser(e, user._id).then(\r\n                          (data) =>\r\n                            this.props.updateFollowing({\r\n                              following: data.user.following,\r\n                            })\r\n                          // console.log(data)\r\n                        );\r\n                      }}\r\n                    >\r\n                      UnFollow\r\n                      <PersonAddDisabledIcon />\r\n                    </button>\r\n                  ) : (\r\n                    <button\r\n                      className=\"btn btn-raised btn-primary ml-3\"\r\n                      onClick={(e) =>\r\n                        followUser(e, user._id).then(\r\n                          (data) => {\r\n                            this.props.updateFollowing({\r\n                              following: data.user.following,\r\n                            });\r\n                            this.props.notificationAdded({\r\n                              userId: user._id,\r\n                              message: `${\r\n                                getCurrentUser().name\r\n                              } has followed you.`,\r\n                              type: \"FollowedYou\",\r\n                              userObjId: getCurrentUser()._id,\r\n                            });\r\n                            this.props.notificationAdded({\r\n                              userId: getCurrentUser()._id,\r\n                              message: `Followed ${user.name}!`,\r\n                              type: \"StartedFollowing\",\r\n                              userObjId: user._id,\r\n                            });\r\n                          }\r\n                          // console.log(data.user.following)\r\n                        )\r\n                      }\r\n                    >\r\n                      Follow\r\n                      <PersonAddIcon />\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n\r\n  renderBlockedUsers = (users, othersProfilePics) => (\r\n    <div className=\"row row-cols-1 row-cols-md-4\">\r\n      {users.map((user, i) => (\r\n        <div className=\"col mb-4\" key={i}>\r\n          <div className=\"card card-custom card-stretch\">\r\n            <div className=\"card-body pt-4\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <img\r\n                  src={othersProfilePics[user._id]}\r\n                  alt={user.name}\r\n                  className=\"symbol symbol-60 symbol-xxl-100 mr-3 align-self-start align-self-xxl-center\"\r\n                  style={{ width: \"55px\" }}\r\n                />\r\n                <div>\r\n                  <h5 className=\"font-weight-bolder text-dark-75 text-hover-primary\">\r\n                    {user.name}\r\n                  </h5>\r\n                  <div className=\"text-muted pb-3\">@{user.username}</div>\r\n                  <button\r\n                    className=\"btn btn-primary\"\r\n                    onClick={async (e) => {\r\n                      onUnBlockUser(e, user);\r\n                    }}\r\n                  >\r\n                    UnBlock\r\n                    <CheckCircleOutlineIcon />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n\r\n  render() {\r\n    let users = this.state.users;\r\n    users = users.filter((x) => x._id !== getCurrentUser()._id);\r\n    let final_users = users.filter(\r\n      (x) => !this.state.blocked_users.includes(x._id)\r\n    );\r\n    const { othersProfilePics } = this.state;\r\n    if (othersProfilePics === undefined) return null;\r\n    let final_blocked = users.filter((x) =>\r\n      this.state.blocked_users.includes(x._id)\r\n    );\r\n    console.log(final_blocked);\r\n    return (\r\n      <>\r\n        <ToastContainer />\r\n        <div\r\n          className=\"subheader py-2 py-lg-6  subheader-transparent \"\r\n          id=\"kt_subheader\"\r\n        >\r\n          <div className=\" container  d-flex align-items-center justify-content-between flex-wrap flex-sm-nowrap\">\r\n            <div className=\"d-flex align-items-center flex-wrap mr-2\">\r\n              <h5 className=\"text-dark font-weight-bold mt-2 mb-2 mr-5\">\r\n                Users\r\n              </h5>\r\n              <span>\r\n                <SearchUserBar />\r\n              </span>\r\n            </div>\r\n            <div class=\"d-flex align-items-center flex-wrap\">\r\n              <Badge variant=\"primary\">\r\n                <div className=\"d-flex align-items-center flex-wrap mr-2\">\r\n                  <h6>{dayjs().format(\"DD MMMM, dddd\")}</h6>\r\n                  <div className=\"subheader-separator subheader-separator-ver mt-2 mb-2 mr-4 ml-4 bg-gray-200\"></div>\r\n                  <h6>\r\n                    <LiveClock format=\"hh:mm a\" ticking />\r\n                  </h6>\r\n                </div>\r\n              </Badge>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"container\">\r\n          <h2 className=\"mt-5 mb-5\">Users</h2>\r\n          {this.renderUsers(final_users, othersProfilePics)}\r\n\r\n          <h2 className=\"mt-5 mb-5\">Blocked Users</h2>\r\n          {this.renderBlockedUsers(final_blocked, othersProfilePics)}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  following: state.user.following,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  updateFollowing: (params) => dispatch(updateFollowing(params)),\r\n  notificationAdded: (params) => dispatch(notificationAdded(params)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Users);\r\n","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\NavBar.js",[],"C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Menu.js",["476","477","478","479","480","481","482","483","484","485","486","487","488"],"C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\DeleteUser.js",[],"C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\apiUser.js",["489","490","491","492","493","494"],"import axios from \"axios\";\r\nexport const read = (userId, token) => {\r\n  return fetch(\"http://localhost:8081/user/\" + `${userId}`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const update = (userId, token, user) => {\r\n  return fetch(\"http://localhost:8081/user/\" + `${userId}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(user),\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const remove = (userId, token) => {\r\n  return fetch(\"http://localhost:8081/user/\" + `${userId}`, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const list = () => {\r\n  return fetch(\"http://localhost:8081/users\", {\r\n    method: \"GET\",\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const getCurrentUser = () => {\r\n  return JSON.parse(localStorage.getItem(\"jwt\")).user;\r\n};\r\n\r\nexport const getUserById = (id) => {\r\n  return fetch(`http://localhost:8081/userInfo/${id}`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const getWords = () => {\r\n  return fetch(\"http://localhost:8081/words\", {\r\n    method: \"GET\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const setRating = (userId, rating) => {\r\n  let obj = {\r\n    rating,\r\n  };\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  return fetch(`http://localhost:8081/user/rating/${userId}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(obj),\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const followUser = (e, userId) => {\r\n  e.preventDefault();\r\n  let currentUserId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  return fetch(`http://localhost:8081/follow/${currentUserId}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + token,\r\n    },\r\n    body: JSON.stringify({\r\n      followId: userId,\r\n    }),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      return data;\r\n    });\r\n};\r\n\r\nexport const unfollowUser = (e, userId) => {\r\n  e.preventDefault();\r\n  console.log(userId);\r\n  let currentUserId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  return fetch(`http://localhost:8081/unfollow/${currentUserId}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + token,\r\n    },\r\n    body: JSON.stringify({\r\n      followId: userId,\r\n    }),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      return data;\r\n    });\r\n};\r\n\r\nexport const getfollowers = (userId) => {\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  return fetch(\"http://localhost:8081/followers/\" + `${userId}`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const blockFollower = (e, userId) => {\r\n  e.preventDefault();\r\n  console.log(userId);\r\n  let currentUserId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  return fetch(`http://localhost:8081/blockfollower/`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + token,\r\n    },\r\n    body: JSON.stringify({\r\n      currentUser: currentUserId,\r\n      follower: userId,\r\n    }),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      return data;\r\n    });\r\n};\r\n\r\nexport const getfollowing = (userId) => {\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  return fetch(\"http://localhost:8081/following/\" + `${userId}`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const getfriends = (userId) => {\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  return fetch(\"http://localhost:8081/friends/\" + `${userId}`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const updatePersonalChat = (chat) => {\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let Obj = {\r\n    chat: chat,\r\n  };\r\n  return fetch(\"http://localhost:8081/updatechat\", {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(Obj),\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const clearChat = (current_user_id, client_user_id) => {\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  return fetch(\"http://localhost:8081/clearchat/\", {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify({\r\n      current_user_id: current_user_id,\r\n      client_user_id: client_user_id,\r\n    }),\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const blockUser = (current_user_id, client_user_id) => {\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  return fetch(\"http://localhost:8081/blockuser/\", {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify({\r\n      current_user_id: current_user_id,\r\n      client_user_id: client_user_id,\r\n    }),\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const unblockUser = (current_user_id, client_user_id) => {\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  return fetch(\"http://localhost:8081/unblockuser/\", {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify({\r\n      current_user_id: current_user_id,\r\n      client_user_id: client_user_id,\r\n    }),\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const processResumes = async (file) => {\r\n  // console.log(\"files:\", files);\r\n  // files.map(async (file) => {\r\n  const data = new FormData();\r\n  data.append(\"myFile\", file);\r\n  let settings = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  let response = await axios.put(\r\n    `http://localhost:3000/processResumes`,\r\n    data,\r\n    settings\r\n  );\r\n  let result = response.data.pdfData;\r\n  if (result !== undefined) return result;\r\n  // });\r\n};\r\n\r\nexport const getProfilePic = (userId) => {\r\n  return fetch(`http://localhost:3000/user/profilePic/${userId}`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n    },\r\n  })\r\n    .then((data) => data.json())\r\n    .then((url) => {\r\n      return url;\r\n    });\r\n};\r\n","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\apiPosts.js",["495","496","497"],"import axios from \"axios\";\r\nexport const getAllPosts = () => {\r\n  let userId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let requestObj = {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n  return fetch(`http://localhost:3000/posts/`, requestObj);\r\n};\r\nexport const getPostsOfUser = (userId) => {\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let requestObj = {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n  return fetch(`http://localhost:3000/posts/by/${userId}`, requestObj);\r\n};\r\nexport const uploadPicture2 = (data) => {\r\n  axios.post(`http://localhost:3000/convertToWebp`, data);\r\n};\r\nexport const uploadVideo = (data) => {\r\n  console.log(data);\r\n};\r\nexport const uploadPicture = async (base64Data, fileName) => {\r\n  // var imageBuffer = new Buffer(base64Data, \"base64\"); //console = <Buffer 75 ab 5a 8a ...\r\n  // fs.writeFile(\"test.jpg\", imageBuffer, function (err) {\r\n  //   //...\r\n  //   console.log(imageBuffer);\r\n  // });\r\n  // base64Data = base64Data.split(\",\").pop();\r\n  // console.log(base64Data);\r\n  // const blob = b64toBlob(base64Data, contentType);\r\n  // const blobUrl = URL.createObjectURL(blob);\r\n  // // console.log(\"blob:\", blob);\r\n  // // console.log(\"blobURL:\", blobUrl);\r\n  // console.log(blobUrl);\r\n  let object = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ data: base64Data, fileName: fileName }),\r\n  };\r\n  console.log(\"Object:\", object);\r\n  return fetch(`http://localhost:3000/convertToWebp`, object)\r\n    .then((data) => {\r\n      console.log(data);\r\n      return data.json();\r\n    })\r\n    .then((response) => {\r\n      // console.log(\"url:\", response.result.url);\r\n      // return response.result.url;\r\n      const data = response.result;\r\n      let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n      let userId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n      if (data.url) {\r\n        let url = data.url;\r\n        return fetch(`http://localhost:3000/post/new/${userId}`, {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + token.toString(),\r\n          },\r\n          body: JSON.stringify({\r\n            pic: url,\r\n          }),\r\n        })\r\n          .then((res) => res.json())\r\n          .then((data) => {\r\n            console.log(data);\r\n            return data;\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }\r\n    });\r\n};\r\nexport const createVideoPost = async (video, title, tags, project) => {\r\n  const data = new FormData();\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let userId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  data.append(\"myVideo\", video);\r\n  let settings = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  let response = await axios.post(\r\n    `http://localhost:3000/postVideo`,\r\n    data,\r\n    settings\r\n  );\r\n  let result = response.data.result;\r\n  if (result.url) {\r\n    let url = result.url;\r\n    let settings =\r\n      project !== \"Personal\"\r\n        ? {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: \"Bearer \" + token.toString(),\r\n            },\r\n            body: JSON.stringify({\r\n              video: url,\r\n              title: title,\r\n              tags: tags,\r\n              project: project,\r\n            }),\r\n          }\r\n        : {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: \"Bearer \" + token.toString(),\r\n            },\r\n            body: JSON.stringify({\r\n              video: url,\r\n              title: title,\r\n              tags: tags,\r\n            }),\r\n          };\r\n    return fetch(`/post/new/video/${userId}`, settings)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        return data;\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n};\r\n\r\nexport const createPost = async (final_url, title, tags, project) => {\r\n  console.log(final_url);\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let userId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  let settings =\r\n    project !== \"Personal\"\r\n      ? {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + token.toString(),\r\n          },\r\n          body: JSON.stringify({\r\n            pic: final_url,\r\n            title: title,\r\n            tags: tags,\r\n            project,\r\n          }),\r\n        }\r\n      : {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + token.toString(),\r\n          },\r\n          body: JSON.stringify({\r\n            pic: final_url,\r\n            title: title,\r\n            tags: tags,\r\n          }),\r\n        };\r\n  return fetch(`/post/new/${userId}`, settings)\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      console.log(data);\r\n      return data;\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const likepost = (post_id) => {\r\n  let userId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let obj = {\r\n    userId: userId,\r\n    postId: post_id,\r\n  };\r\n  let settings = {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(obj),\r\n  };\r\n  // console.log(settings.body);\r\n  return fetch(`http://localhost:3000/post/like/${post_id}`, settings)\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const dislikepost = (post_id) => {\r\n  let userId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let obj = {\r\n    userId: userId,\r\n    postId: post_id,\r\n  };\r\n  let settings = {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(obj),\r\n  };\r\n  // console.log(settings.body);\r\n  return fetch(`http://localhost:3000/post/dislike/${post_id}`, settings)\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const reportpost = (post_id) => {\r\n  let userId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n\r\n  let settings = {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n  return fetch(\r\n    `http://localhost:3000/post/report/${userId}/${post_id}`,\r\n    settings\r\n  )\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\nexport const addcomment = (post_id, comment) => {\r\n  let userId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  let userName = JSON.parse(localStorage.getItem(\"jwt\")).user.name;\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let obj = {\r\n    userId: userId,\r\n    userName: userName,\r\n    postId: post_id,\r\n    comment: comment,\r\n  };\r\n  let settings = {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(obj),\r\n  };\r\n  // console.log(settings.body);\r\n  return fetch(`http://localhost:3000/post/addcomment/${post_id}`, settings)\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const getpost = (post_id) => {\r\n  let settings = {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  // console.log(settings.body);\r\n  return fetch(`http://localhost:3000/post/${post_id}`, settings)\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const createTextPost = (text) => {\r\n  let userId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let settings = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify({ text }),\r\n  };\r\n  return fetch(`post/new/text/${userId}`, settings)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      console.log(data);\r\n      return data;\r\n    });\r\n};\r\n\r\nexport const createYoutubePost = (videolink, title, metadata) => {\r\n  let userId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let metadataObj = {\r\n    title: metadata.title,\r\n    author_name: metadata.author_name,\r\n    author_url: metadata.author_url,\r\n    type: metadata.type,\r\n    height: metadata.height,\r\n    width: metadata.width,\r\n    version: metadata.version,\r\n    provider_name: metadata.provider_name,\r\n    provider_url: metadata.provider_url,\r\n    thumbnail_height: metadata.thumbnail_height,\r\n    thumbnail_width: metadata.thumbnail_width,\r\n    thumbnail_url: metadata.thumbnail_url,\r\n  };\r\n  let settings = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify({\r\n      videolink,\r\n      title,\r\n      metadataAuthor: metadataObj.author_name,\r\n      metadataTitle: metadataObj.title,\r\n    }),\r\n  };\r\n  return fetch(`post/new/youtube/${userId}`, settings)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      console.log(data);\r\n      return data;\r\n    });\r\n};\r\n\r\nexport const deletePost = (postId, token) => {\r\n  return fetch(\"http://localhost:3000/post/delete/\" + `${postId}`, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n    .then((response) => {\r\n      console.log(\"done\");\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const getLikesOfPost = (postId) => {\r\n  let arr = [];\r\n  return fetch(`http://localhost:3000/post/likes/${postId}`)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      data.liked_by.map((id) => {\r\n        arr.push(id[\"_id\"]);\r\n      });\r\n      return arr;\r\n    });\r\n};\r\n\r\nexport const editPost = (postId, title) => {\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let obj = {\r\n    postId: postId,\r\n    title: title,\r\n  };\r\n  let settings = {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(obj),\r\n  };\r\n  // console.log(settings.body);\r\n  return fetch(`http://localhost:3000/post/edit/${postId}`, settings)\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const deleteComment = (commentId, postId) => {\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let obj = {\r\n    postId: postId,\r\n    commentId: commentId,\r\n  };\r\n  let settings = {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(obj),\r\n  };\r\n  // console.log(settings.body);\r\n  return fetch(`http://localhost:3000/post/deleteComment/${postId}`, settings)\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\nexport const postProfilePic = async (image) => {\r\n  console.log(image);\r\n  let userId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  const data = new FormData();\r\n  data.append(\"myProfilePicture\", image);\r\n  let settings = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n  let response = await axios.put(\r\n    `http://localhost:3000/user/profilePicture/${userId}`,\r\n    data,\r\n    settings\r\n  );\r\n  let profilePictures = response.data.user.profilePictures;\r\n  return profilePictures[profilePictures.length - 1];\r\n};\r\n\r\nexport const removeProfilePic = async () => {\r\n  let userId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let settings = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n  let response = await axios.put(\r\n    `http://localhost:3000/user/profilePicture/remove/${userId}`,\r\n    settings\r\n  );\r\n  let profilePictures = response.data.user.profilePictures;\r\n  return profilePictures[profilePictures.length - 1];\r\n};\r\n","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Following.js",["498","499","500"],"C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\RecommendedRolePeople.js",["501"],"import React, { useState } from \"react\";\r\nimport PersonAddTwoToneIcon from \"@material-ui/icons/PersonAddTwoTone\";\r\nimport User_Role from \"./User_Role\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nconst RecommendedRolePeople = ({ role, project }) => {\r\n  const [show, setShow] = useState(false);\r\n  return (\r\n    <>\r\n      <div onClick={() => setShow(true)}>\r\n        <PersonAddTwoToneIcon />\r\n      </div>\r\n      <Modal show={show} onHide={() => setShow(false)}>\r\n        <Modal.Header>Most suitable people for Role</Modal.Header>\r\n        <Modal.Body>\r\n          <User_Role role={role} leader={project.leader} project={project} />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={() => setShow(false)}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RecommendedRolePeople;\r\n","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\RoleReq.js",[],"C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\taskComponents\\TrelloTask.js",["502"],"C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\apiNotifications.js",[],"C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\layout\\Task.js",["503"],"C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Personal.js",[],"C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\SearchBar.js",["504","505","506","507","508","509","510","511"],"import React, { useState, useEffect } from \"react\";\r\nimport SearchTwoToneIcon from \"@material-ui/icons/SearchTwoTone\";\r\nimport { list, getCurrentUser } from \"../user/apiUser\";\r\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\r\nimport { listprojects } from \"./../project/apiProject\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nconst SearchBar = () => {\r\n  const [query, setQuery] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [projects, setProjects] = useState([]);\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const [myProjectState, setMyProjectState] = useState({});\r\n  const [url, setUrl] = useState(\"\");\r\n  useEffect(() => {\r\n    let suggestions = [];\r\n    list()\r\n      .then((data) => {\r\n        setUsers(data);\r\n        data.map((user) => {\r\n          suggestions.push({\r\n            id: user._id,\r\n            name: user.name + `(@${user.username})`,\r\n            url: `/user/${user._id}`,\r\n            type: user,\r\n          });\r\n        });\r\n      })\r\n      .then(() => {\r\n        listprojects()\r\n          .then((data) => {\r\n            //   setMyProjects(data.userProjects);\r\n            //   data.userProjects.map((project) => {\r\n            //   suggestions.push({\r\n            //     id: project._id,\r\n            //     name: project.title,\r\n            //     url: `/`,\r\n            //   });\r\n            //   });\r\n            setProjects(data);\r\n            data.map((project) => {\r\n              if (project.team.includes(getCurrentUser()._id)) {\r\n                suggestions.push({\r\n                  id: project._id,\r\n                  name: project.title,\r\n                  url: `/myprojects/dashboard/${project._id}`,\r\n                  type: \"myproject\",\r\n                  data: project,\r\n                });\r\n              } else {\r\n                suggestions.push({\r\n                  id: project._id,\r\n                  name: project.title,\r\n                  url: `/joinproject`,\r\n                  type: \"project\",\r\n                });\r\n              }\r\n            });\r\n          })\r\n          .then(() => {\r\n            setSuggestions(suggestions);\r\n          });\r\n      });\r\n  }, []);\r\n\r\n  const handleOnSearch = (string, results) => {\r\n    // onSearch will have as the first callback parameter\r\n    // the string searched and for the second the results.\r\n    // console.log(string, results);\r\n  };\r\n  const handleOnHover = (result) => {\r\n    // the item hovered\r\n    // console.log(result);\r\n  };\r\n\r\n  const handleOnSelect = (item) => {\r\n    // the item selected\r\n    console.log(item);\r\n    setUrl(item.url);\r\n    if (item.type === \"myproject\") {\r\n      setMyProjectState(item.data);\r\n    }\r\n  };\r\n\r\n  const handleOnFocus = () => {\r\n    // console.log(\"Focused\");\r\n  };\r\n  //   const suggestions = [...users];\r\n  // console.log(suggestions);\r\n  // console.log(\"myProjectState\", myProjectState);\r\n  //   if (url !== \"\" && myProjectState !== {})\r\n  //     return <Redirect to={{ url: url, state: { project: myProjectState } }} />;\r\n  if (url !== \"\") {\r\n    if (myProjectState !== {}) {\r\n      return (\r\n        <Redirect to={{ pathname: url, state: { project: myProjectState } }} />\r\n      );\r\n    }\r\n    return <Redirect to={url} />;\r\n  }\r\n  return (\r\n    // <Redirect>\r\n    <span>\r\n      <div\r\n        className=\"quick-search quick-search-inline ml-4 w-250px\"\r\n        id=\"kt_quick_search_inline\"\r\n      >\r\n        <ReactSearchAutocomplete\r\n          items={suggestions}\r\n          onSearch={handleOnSearch}\r\n          onHover={handleOnHover}\r\n          onSelect={handleOnSelect}\r\n          onFocus={handleOnFocus}\r\n          autoFocus\r\n          styling={{ zIndex: 100 }}\r\n        />\r\n        {/* <form className=\"quick-search-form\">\r\n          <div className=\"input-group rounded\">\r\n            <div className=\"input-group-prepend\">\r\n              <span className=\"input-group-text\">\r\n                <SearchTwoToneIcon />\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </form> */}\r\n      </div>\r\n    </span>\r\n    // </Redirect>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\UserRecommender.js",["512","513","514"],"import React, { Component } from \"react\";\r\nimport { getCurrentUser, list } from \"./../user/apiUser\";\r\nimport { Accordion, Card, Button, Modal } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport RoleList from \"./../project/newProjectForm/RoleCreate\";\r\nconst similarity = require(\"sentence-similarity\");\r\nconst similarityScore = require(\"similarity-score\");\r\n\r\nclass UserRecommender extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      roleDetails: [\r\n        {\r\n          roleName: \"\",\r\n          roleSkills: [],\r\n        },\r\n      ],\r\n      users: [],\r\n      final_users: [],\r\n      show: false,\r\n      error: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    list().then((data) => {\r\n      if (data.error) {\r\n        console.log(data.error);\r\n      } else {\r\n        this.setState({ users: data });\r\n      }\r\n    });\r\n  }\r\n\r\n  handleRoleChange = (name) => (e) => {\r\n    let id = parseInt(e.target.attributes.idx.value);\r\n    const roleDetails = this.state.roleDetails;\r\n    roleDetails[id][name] = e.target.value;\r\n    this.setState({ roleDetails });\r\n  };\r\n\r\n  addNewRow = (e) => {\r\n    this.setState((prevState) => ({\r\n      roleDetails: [\r\n        ...prevState.roleDetails,\r\n        {\r\n          roleName: \"\",\r\n          roleSkills: \"\",\r\n        },\r\n      ],\r\n    }));\r\n  };\r\n\r\n  clickOnDelete(record) {\r\n    this.setState({\r\n      roleDetails: this.state.roleDetails.filter((r) => r !== record),\r\n    });\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({ show: false });\r\n  }\r\n\r\n  handleShow() {\r\n    this.setState({ show: true });\r\n  }\r\n\r\n  calculate = async (e) => {\r\n    e.preventDefault();\r\n    let { roleDetails, users } = this.state;\r\n    this.setState({ error: \"\" });\r\n    await roleDetails.map((role, i) => {\r\n      if (role.roleSkills.length === 0)\r\n        this.setState({ error: \"Pls enter Role Skills of Role \" + (i + 1) });\r\n      if (role.roleName === \"\")\r\n        this.setState({ error: \"Pls enter Role Name at \" + (i + 1) });\r\n    });\r\n    if (this.state.error === \"\" && this.state.error !== undefined) {\r\n      let final_users = [];\r\n      roleDetails.map((role) => {\r\n        let final_out = [];\r\n        let role_skills = role.roleSkills;\r\n        users.sort(function (a, b) {\r\n          return (\r\n            b.projects.length +\r\n            b.completed_projects.length -\r\n            (a.projects.length + a.completed_projects.length)\r\n          );\r\n        });\r\n\r\n        let max_proj = 1;\r\n        if (users.length > 0)\r\n          max_proj =\r\n            users[0].projects.length + users[0].completed_projects.length;\r\n        let winkOpts = {\r\n          f: similarityScore.winklerMetaphone,\r\n          options: { threshold: 0 },\r\n        };\r\n        if (role_skills !== undefined) {\r\n          users.forEach((user) => {\r\n            let out = {};\r\n            let score = similarity(user.skills, role_skills, winkOpts);\r\n            out = user;\r\n            let total_projects =\r\n              user.projects.length + user.completed_projects.length;\r\n            let final_value =\r\n              ((total_projects / max_proj) * user.rating) / 10 +\r\n              score.exact / role_skills.length +\r\n              -0.04 * user.projects.length +\r\n              0.01 * user.completion_percentage_of_all_projects;\r\n            out[\"exact\"] = score.exact;\r\n            out[\"final_value\"] = final_value;\r\n            final_out.push(out);\r\n          });\r\n          final_out.sort(function (a, b) {\r\n            return b.final_value - a.final_value;\r\n          });\r\n          // final_out = final_out.filter((x) => x.exact != 0);\r\n          final_out = final_out.slice(0, 5);\r\n        }\r\n        let obj = { role: role, users: final_out };\r\n        final_users.push(obj);\r\n      });\r\n      this.setState({ final_users: final_users, show: true });\r\n    }\r\n  };\r\n\r\n  renderUsers(users) {\r\n    return users.map((user, i) => (\r\n      <div className=\"col\">\r\n        <div className=\"card mb-3\">\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">{user.name}</h5>\r\n            <p className=\"card-text\">{user.email}</p>\r\n            <p className=\"card-text\">{user.bio}</p>\r\n            <Link\r\n              to={`/user/${user._id}`}\r\n              className=\"btn btn-raised btn-small btn-primary\"\r\n            >\r\n              View Profile\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    ));\r\n  }\r\n\r\n  renderRole(users, role, i) {\r\n    return (\r\n      <Accordion>\r\n        <Card>\r\n          <Card.Header>\r\n            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n              {role.roleName}\r\n            </Accordion.Toggle>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"0\">\r\n            <Card.Body>{this.renderUsers(users)}</Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { roleDetails, error } = this.state;\r\n    const users = this.state.final_users;\r\n    // console.log(this.state.final_users);\r\n    return (\r\n      <div>\r\n        <div\r\n          className=\"alert alert-danger\"\r\n          style={{ display: error ? \"\" : \"none\" }}\r\n        >\r\n          {error}\r\n        </div>\r\n        <form className=\"mt-5\">\r\n          <div className=\"form-group\">\r\n            <RoleList\r\n              add={this.addNewRow}\r\n              delete={this.clickOnDelete.bind(this)}\r\n              roleDetails={roleDetails}\r\n              onChange={this.handleRoleChange}\r\n            />\r\n            <div className=\"row\">\r\n              <button\r\n                onClick={this.calculate}\r\n                className=\"btn btn-raised btn-primary mx-auto mt-3 mb-2 col-sm-3\"\r\n              >\r\n                Find\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <Modal show={this.state.show} onHide={this.handleClose.bind(this)}>\r\n          <Modal.Header>\r\n            <Modal.Title>Best People for your Roles</Modal.Title>\r\n            <Button onClick={this.handleClose.bind(this)}>x</Button>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            {users.map((user, i) => {\r\n              return this.renderRole(user.users, user.role, i);\r\n            })}\r\n          </Modal.Body>\r\n          <Modal.Footer></Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default UserRecommender;\r\n","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\RatingComponentFeedbackForm.js",["515"],"C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\MainRouter.js",["516","517","518","519","520","521","522"],"import React, { useEffect } from \"react\";\r\nimport { Route, Switch, Link } from \"react-router-dom\";\r\nimport Signin from \"./user/Signin\";\r\nimport Home from \"./core/Home\";\r\nimport Menu from \"./core/Menu\";\r\nimport Profile from \"./user/Profile\";\r\nimport Users from \"./user/Users\";\r\nimport EditProfile from \"./user/EditProfile\";\r\nimport \"./styles.css\";\r\nimport \"./style.bundle.css\";\r\nimport NavBar from \"./core/NavBar\";\r\nimport CreateProject from \"./project/newProjectForm/CreateProject\";\r\nimport JoinProject from \"./project/JoinProject\";\r\nimport MyProjects from \"./project/MyProjects\";\r\nimport ProjectDashboard from \"./project/ProjectDashboard\";\r\nimport EditProject from \"./project/EditProject\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Notifications from \"./core/Notifications\";\r\nimport MyChats from \"./user/MyChats\";\r\nimport Landing from \"./core/Landing\";\r\nimport LiveClock from \"react-live-clock\";\r\nimport dayjs from \"dayjs\";\r\nimport { Badge } from \"react-bootstrap\";\r\nimport showPost from \"./posts/showPost\";\r\nimport Recommendation from \"./user/Recommendation\";\r\nimport viewProject from \"./project/viewProject\";\r\n\r\nconst MainRouter = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <body\r\n      id=\"kt_body\"\r\n      className=\"header-fixed header-mobile-fixed subheader-enabled page-loading\"\r\n    >\r\n      <Menu />\r\n      <div\r\n        className=\"content  d-flex flex-column flex-column-fluid\"\r\n        id=\"kt_content\"\r\n      >\r\n        <div className=\"d-flex flex-column-fluid\">\r\n          <div className=\"container\">\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Landing}></Route>\r\n              <Route path=\"/signin\" component={Signin}></Route>\r\n              <Route path=\"/home\" component={Home}></Route>\r\n              <Route path=\"/users\" component={Users}></Route>\r\n              <Route path=\"/createproject\" component={CreateProject}></Route>\r\n              <Route path=\"/joinproject\" component={JoinProject}></Route>\r\n              <Route exact path=\"/myprojects\" component={MyProjects}></Route>\r\n              <Route\r\n                path=\"/myprojects/dashboard/:projectId\"\r\n                component={ProjectDashboard}\r\n              ></Route>\r\n              <Route\r\n                path=\"/myprojects/edit/:projectId\"\r\n                component={EditProject}\r\n              ></Route>\r\n              <Route path=\"/notifs/:userId\" component={Notifications}></Route>\r\n              <Route path=\"/mychats/:userId\" component={MyChats}></Route>\r\n              <Route path=\"/user/edit/:userId\" component={EditProfile}></Route>\r\n              <Route path=\"/user/:userId\" component={Profile}></Route>\r\n              <Route path=\"/post/:postId\" component={showPost}></Route>\r\n              <Route path=\"/project/:projectId\" component={viewProject}></Route>\r\n              <Route path=\"/recommendation\" component={Recommendation}></Route>\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </body>\r\n  );\r\n};\r\n\r\nexport default MainRouter;\r\n","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Notifications.js",["523","524","525","526","527","528","529"],"C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\EditProject.js",["530"],"C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\notifications.js",["531","532"],"C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\TextPostView.js",["533","534","535","536","537","538","539"],"import React, { Component } from \"react\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport Heart from \"react-animated-heart\";\r\nimport { getCurrentUser, getProfilePic } from \"./../user/apiUser\";\r\nimport {\r\n  likepost,\r\n  dislikepost,\r\n  addcomment,\r\n  getpost,\r\n  reportpost,\r\n  deleteComment,\r\n} from \"./apiPosts\";\r\nimport { collect } from \"collect.js\";\r\nimport CommentIcon from \"@material-ui/icons/Comment\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport ReportTwoToneIcon from \"@material-ui/icons/ReportTwoTone\";\r\nimport SendRoundedIcon from \"@material-ui/icons/SendRounded\";\r\nimport VisibilityTwoToneIcon from \"@material-ui/icons/VisibilityTwoTone\";\r\n\r\nimport moment from \"moment\";\r\nimport {\r\n  Accordion,\r\n  Button,\r\n  Card,\r\n  Modal,\r\n  ModalBody,\r\n  Popover,\r\n  OverlayTrigger,\r\n} from \"react-bootstrap\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Sentiment from \"sentiment\";\r\nimport DeletePost from \"./DeletePost\";\r\nimport { changePosts } from \"../store/posts\";\r\nimport { connect } from \"react-redux\";\r\nimport DefaultProfile from \"../images/avatar.png\";\r\nimport DeleteTwoToneIcon from \"@material-ui/icons/DeleteTwoTone\";\r\nconst sentiment = new Sentiment();\r\nclass TextPostView extends Component {\r\n  state = {\r\n    isClick: false,\r\n    comment: \"\",\r\n    id: getCurrentUser()._id,\r\n    sentimentScore: null,\r\n    show: false,\r\n    disabled: false,\r\n    profilePictures: {},\r\n  };\r\n  checkIfUserIdExistsInObject(checkObject, userId) {\r\n    Object.keys(checkObject).map((key) => {\r\n      if (key.toString() === userId.toString()) {\r\n        return true;\r\n      }\r\n    });\r\n    return false;\r\n  }\r\n  async componentDidMount() {\r\n    let users = this.props.liked_by;\r\n    if (users !== undefined && users !== null && users !== [])\r\n      if (users.indexOf(getCurrentUser()._id) > -1)\r\n        this.setState({ isClick: true });\r\n    const { comments } = this.props;\r\n    let pictures = {};\r\n    let picture = {};\r\n    picture = await this.setProfilePicture(getCurrentUser()._id);\r\n    // console.log(picture);\r\n    Object.assign(pictures, picture);\r\n    // console.log(pictures);\r\n    this.setState({ profilePictures: pictures });\r\n    comments.map(async (comment) => {\r\n      // const { profilePictures } = this.state;\r\n      // if (this.checkIfUserIdExistsInObject(profilePictures, comment.userId)) {\r\n      //   this.setProfilePicture(comment.userId);\r\n      // }\r\n      const { profilePictures } = this.state;\r\n      if (!this.checkIfUserIdExistsInObject(profilePictures, comment.userId)) {\r\n        let picture = await this.setProfilePicture(comment.userId);\r\n        Object.assign(pictures, picture);\r\n        // console.log(pictures);\r\n        this.setState({ profilePictures: pictures });\r\n      }\r\n    });\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.comments.length !== prevProps.comments.length) {\r\n      this.props.changePosts(this.props._id);\r\n    }\r\n  }\r\n  setProfilePicture = (userId) => {\r\n    // let picture = {};\r\n    return getProfilePic(userId).then((data) => {\r\n      return { [userId]: data.profilePic };\r\n    });\r\n  };\r\n\r\n  postliked = () => {\r\n    this.setState({ isClick: !this.state.isClick });\r\n    if (this.state.isClick)\r\n      dislikepost(this.props._id)\r\n        .then((data) => console.log(data))\r\n        .then(() => this.props.changePosts(this.props._id));\r\n    else {\r\n      likepost(this.props._id)\r\n        .then((data) => console.log(data))\r\n        .then(() => this.props.changePosts(this.props._id));\r\n    }\r\n  };\r\n  handleSubmitClicked = () => {\r\n    reportpost(this.props._id);\r\n    this.setState({\r\n      show: false,\r\n      isDisabled: true,\r\n    });\r\n  };\r\n  handleClose() {\r\n    this.setState({ show: false });\r\n  }\r\n\r\n  handleShow() {\r\n    this.setState({ show: true });\r\n  }\r\n\r\n  onTextChange = (e) => {\r\n    this.setState({ comment: e.target.value });\r\n    this.findSentiment(e.target.value);\r\n  };\r\n\r\n  submitcomment = () => {\r\n    addcomment(this.props._id, this.state.comment)\r\n      .then((data) => {\r\n        console.log(data);\r\n      })\r\n      .then(() => this.props.changePosts(this.props._id));\r\n  };\r\n\r\n  findSentiment(comment) {\r\n    const result = sentiment.analyze(comment);\r\n    this.setState({\r\n      sentimentScore: result.score,\r\n    });\r\n  }\r\n  deletecomment(e, commentId) {\r\n    e.preventDefault();\r\n    deleteComment(commentId, this.props._id)\r\n      .then((data) => console.log(data))\r\n      .then(() => {\r\n        this.props.changePosts(this.props._id);\r\n        // toast.success(\"deleted comment successfully\");\r\n      });\r\n  }\r\n  rendercomments = (comments) => {\r\n    let reverseComments = [...comments].reverse();\r\n    const { profilePictures } = this.state;\r\n    return reverseComments.map(\r\n      ({ PostedOn, comment, userName, userId, _id }, index) => (\r\n        <div className=\"d-flex py-5\">\r\n          <div className=\"symbol symbol-40 symbol-light-warning mr-5\">\r\n            <span className=\"symbol-label\">\r\n              <img\r\n                src={\r\n                  profilePictures[userId] !== undefined\r\n                    ? profilePictures[userId]\r\n                    : DefaultProfile\r\n                }\r\n                className=\"h-75 align-self-end\"\r\n              />\r\n            </span>\r\n          </div>\r\n          <div className=\"d-flex flex-column flex-row-fluid\">\r\n            <div className=\"d-flex align-items-center flex-wrap\">\r\n              <Link\r\n                to=\"#\"\r\n                className=\"text-dark-75 text-hover-primary mb-1 font-size-lg font-weight-bolder pr-6\"\r\n              >\r\n                {userName}\r\n              </Link>\r\n              <span className=\"text-muted font-weight-normal flex-grow-1 font-size-sm\">\r\n                {moment(PostedOn).format(\"DD-MM-YYYY h:mm a\")}\r\n              </span>\r\n              <div className=\"ml-auto\">\r\n                {this.state.id === userId && (\r\n                  <button\r\n                    className=\"btn btn-clear\"\r\n                    onClick={(e) => this.deletecomment(e, _id)}\r\n                  >\r\n                    <DeleteTwoToneIcon />\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <span className=\"text-dark-75 font-size-sm font-weight-normal pt-1\">\r\n              {comment}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      )\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      footerText,\r\n      text,\r\n      liked_by,\r\n      _id,\r\n      tags,\r\n      comments,\r\n      delete_button,\r\n      created,\r\n      postedBy,\r\n      reportCounter,\r\n    } = this.props;\r\n    const { profilePictures } = this.state;\r\n    let counts = collect(liked_by).count();\r\n    return (\r\n      <>\r\n        <ToastContainer />\r\n        <div className=\"card card-custom gutter-b\">\r\n          <div className=\"card-body\">\r\n            <div className=\"d-flex align-items-center pb-4\">\r\n              <div className=\"symbol symbol-40 symbol-light-warning mr-5\">\r\n                <span className=\"symbol-label\">\r\n                  <img\r\n                    src={\r\n                      profilePictures[this.props.postedBy._id] !== undefined\r\n                        ? profilePictures[this.props.postedBy._id]\r\n                        : DefaultProfile\r\n                    }\r\n                    className=\"h-75 align-self-end\"\r\n                  />\r\n                </span>\r\n              </div>\r\n              <div className=\"d-flex flex-column flex-grow-1\">\r\n                <Link\r\n                  to=\"#\"\r\n                  className=\"text-dark-75 text-hover-primary mb-1 font-size-lg font-weight-bolder\"\r\n                >\r\n                  {footerText}\r\n                </Link>\r\n                <span className=\"text-muted font-weight-bold\">\r\n                  {moment(created).format(\"DD-MM-YYYY h:mm a\")}\r\n                </span>\r\n              </div>\r\n              <div className=\"ml-auto\">\r\n                <OverlayTrigger\r\n                  trigger=\"click\"\r\n                  placement=\"right\"\r\n                  overlay={\r\n                    <Popover id=\"popover-basic\">\r\n                      <Popover.Content>\r\n                        <div>\r\n                          {getCurrentUser()._id === postedBy._id ? (\r\n                            <></>\r\n                          ) : reportCounter.includes(getCurrentUser()._id) ? (\r\n                            <>\r\n                              <button className=\"btn btn-clean\" disabled={true}>\r\n                                <ReportTwoToneIcon /> Post Reported\r\n                              </button>\r\n                            </>\r\n                          ) : (\r\n                            <>\r\n                              <button\r\n                                className=\"btn btn-clean\"\r\n                                onClick={() => {\r\n                                  this.handleShow();\r\n                                  this.setState({ disabled: true });\r\n                                }}\r\n                                disabled={this.state.disabled}\r\n                              >\r\n                                <ReportTwoToneIcon /> Report\r\n                              </button>\r\n                              <Modal\r\n                                show={this.state.show}\r\n                                onHide={this.handleClose.bind(this)}\r\n                              >\r\n                                <Modal.Header>\r\n                                  <Modal.Title>\r\n                                    Are you Sure to report this post?\r\n                                  </Modal.Title>\r\n                                  <Button onClick={this.handleClose.bind(this)}>\r\n                                    x\r\n                                  </Button>\r\n                                </Modal.Header>\r\n                                <ModalBody>\r\n                                  <Button\r\n                                    disabled={this.state.isDisabled}\r\n                                    onClick={this.handleSubmitClicked}\r\n                                  >\r\n                                    Yes\r\n                                  </Button>\r\n                                </ModalBody>\r\n                              </Modal>\r\n                            </>\r\n                          )}\r\n                        </div>\r\n                        <Link\r\n                          className=\"btn btn-clean\"\r\n                          to={{\r\n                            pathname: `/post/${this.props._id}`,\r\n                          }}\r\n                        >\r\n                          <VisibilityTwoToneIcon /> View Full Post\r\n                        </Link>\r\n                        <div>\r\n                          <button\r\n                            className=\"btn btn-clean\"\r\n                            onClick={() => {\r\n                              getpost(_id).then((data) => {\r\n                                let link = `http://localhost:3000/post/${data.post._id}`;\r\n                                navigator.clipboard.writeText(link);\r\n                                toast.success(\"Link copied to clipboard\");\r\n                              });\r\n                            }}\r\n                          >\r\n                            <ShareIcon /> Share Post\r\n                          </button>\r\n                        </div>\r\n                        {delete_button === \"enabled\" ? (\r\n                          <DeletePost postId={_id} />\r\n                        ) : (\r\n                          <div></div>\r\n                        )}\r\n                      </Popover.Content>\r\n                    </Popover>\r\n                  }\r\n                >\r\n                  <button className=\"btn btn-custom\">\r\n                    <MoreVertIcon />\r\n                  </button>\r\n                </OverlayTrigger>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <p className=\"lead ml-10 mt-5 text-dark-75 font-size-lg font-weight-normal \">\r\n                {text}\r\n              </p>\r\n\r\n              <div className=\"d-flex align-items-center\">\r\n                <Heart isClick={this.state.isClick} onClick={this.postliked} />\r\n                {counts + \" likes\"}\r\n              </div>\r\n              <div className=\"d-flex align-items-center\">\r\n                <TextField\r\n                  name=\"comment\"\r\n                  onChange={(e) => this.onTextChange(e)}\r\n                  id=\"standard-basic\"\r\n                  label=\"Add a Comment\"\r\n                  fullWidth\r\n                />\r\n                <button\r\n                  onClick={this.submitcomment}\r\n                  className=\"btn btn-light-primary mr-5 ml-5 \"\r\n                  disabled={this.state.sentimentScore < -3 ? true : false}\r\n                >\r\n                  <SendRoundedIcon />\r\n                </button>\r\n              </div>\r\n              {comments.length > 0 ? (\r\n                this.rendercomments(comments)\r\n              ) : (\r\n                <p>No Comments</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  posts: state.posts.posts,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  changePosts: (params) => dispatch(changePosts(params)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TextPostView);\r\n","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\DeletePost.js",["540","541","542","543"],"C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Form.js",[],"C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\User.js",[],"C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\KickUser.js",["544"],"C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\FeedbackForm.js",["545"],"C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\PostImage.js",[],"C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\TextPost.js",["546","547","548"],"C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\layout\\Pert.js",["549","550","551","552","553","554"],"import React, { Component } from \"react\";\r\n\r\nexport class Pert extends Component {\r\n  renderPert = (pert) => {\r\n    let object = {};\r\n    let object1 = {};\r\n    let object2 = {};\r\n    let object3 = {};\r\n    let object4 = {};\r\n    let object5 = {};\r\n    const arr = [];\r\n    const arr1 = [];\r\n    const arr2 = [];\r\n    const arr3 = [];\r\n    const arr4 = [];\r\n    const arr5 = [];\r\n    // activitiesParams\r\n    if (Object.values(pert.activitiesParams) === undefined)\r\n      return (pert.activitiesParams = 0);\r\n    for (let i = 1; i <= Object.keys(pert.activitiesParams).length; i++) {\r\n      object[\"activitiesParams\"] = pert.activitiesParams[i];\r\n      arr.push(object);\r\n      object = {};\r\n    }\r\n    console.log(arr);\r\n    // console.log(pert.activitiesParams);\r\n\r\n    //earliestFinishTimes\r\n    if (Object.values(pert.earliestFinishTimes) === undefined)\r\n      return (pert.earliestFinishTimes = 0);\r\n    for (let i = 1; i <= Object.keys(pert.earliestFinishTimes).length; i++) {\r\n      object1[\"earliestFinishTimes\"] = pert.earliestFinishTimes[i];\r\n      arr1.push(object1);\r\n      object1 = {};\r\n    }\r\n    console.log(arr1);\r\n\r\n    //earliestStartTimes\r\n    if (Object.values(pert.earliestStartTimes) === undefined)\r\n      return (pert.earliestStartTimes = 0);\r\n    for (let i = 1; i <= Object.keys(pert.earliestStartTimes).length; i++) {\r\n      object2[\"earliestStartTimes\"] = pert.earliestStartTimes[i];\r\n      arr2.push(object2);\r\n      object2 = {};\r\n    }\r\n    console.log(arr2);\r\n    //latestStartTimes\r\n    if (Object.values(pert.latestStartTimes) === undefined)\r\n      return (pert.latestStartTimes = 0);\r\n    for (let i = 1; i <= Object.keys(pert.latestStartTimes).length; i++) {\r\n      object3[\"latestStartTimes\"] = pert.latestStartTimes[i];\r\n      arr3.push(object3);\r\n      object3 = {};\r\n    }\r\n    console.log(arr3);\r\n    //latestFinishTimes\r\n    if (Object.values(pert.latestFinishTimes) === undefined)\r\n      return (pert.latestFinishTimes = 0);\r\n    for (let i = 1; i <= Object.keys(pert.latestFinishTimes).length; i++) {\r\n      object4[\"latestFinishTimes\"] = pert.latestFinishTimes[i];\r\n      arr4.push(object4);\r\n      object4 = {};\r\n    }\r\n    console.log(arr4);\r\n\r\n    //Slack\r\n    if (Object.values(pert.slack) === undefined) return (pert.slack = 0);\r\n    for (let i = 1; i <= Object.keys(pert.slack).length; i++) {\r\n      object5[\"slack\"] = pert.slack[i];\r\n      arr5.push(object5);\r\n      object5 = {};\r\n    }\r\n    console.log(arr4);\r\n\r\n    return (\r\n      <>\r\n        {arr.map((object, index) => {\r\n          if (index !== 0 && index !== 1) {\r\n            return (\r\n              <>\r\n                <div>\r\n                  <div>\r\n                    ET: {object[\"activitiesParams\"].expectedTime} Variance:{\" \"}\r\n                    {object[\"activitiesParams\"].variance}\r\n                  </div>\r\n                </div>\r\n              </>\r\n            );\r\n          }\r\n        })}\r\n\r\n        {/* earliestFinishTimes */}\r\n        {arr1.map((object1, index) => {\r\n          if (\r\n            object1[\"earliestFinishTimes\"] !== undefined &&\r\n            object1[\"earliestFinishTimes\"] !== 0\r\n          ) {\r\n            return (\r\n              <>\r\n                <div>\r\n                  <div>\r\n                    EarliestFinishTimes: {object1[\"earliestFinishTimes\"]}\r\n                  </div>\r\n                </div>\r\n              </>\r\n            );\r\n          }\r\n        })}\r\n        {arr2.map((object2, index) => {\r\n          if (\r\n            object2[\"earliestStartTimes\"] !== undefined &&\r\n            object2[\"earliestStartTimes\"] !== 0\r\n          ) {\r\n            return (\r\n              <>\r\n                <div>\r\n                  <div>earliestStartTimes: {object2[\"earliestStartTimes\"]}</div>\r\n                </div>\r\n              </>\r\n            );\r\n          } else {\r\n            return;\r\n          }\r\n        })}\r\n        {arr3.map((object3, index) => {\r\n          if (\r\n            object3[\"latestStartTimes\"] !== undefined &&\r\n            object3[\"latestStartTimes\"] !== 0\r\n          ) {\r\n            return (\r\n              <>\r\n                <div>\r\n                  <div>latestStartTimes: {object3[\"latestStartTimes\"]}</div>\r\n                </div>\r\n              </>\r\n            );\r\n          }\r\n        })}\r\n        {arr4.map((object4, index) => {\r\n          if (\r\n            object4[\"latestFinishTimes\"] !== undefined &&\r\n            object4[\"latestFinishTimes\"] !== 0\r\n          ) {\r\n            return (\r\n              <>\r\n                <div>\r\n                  <div>latestFinishTimes: {object4[\"latestFinishTimes\"]}</div>\r\n                </div>\r\n              </>\r\n            );\r\n          }\r\n        })}\r\n        {arr5.map((object5, index) => {\r\n          if (object5[\"slack\"] !== undefined && object5[\"slack\"] !== 0) {\r\n            return (\r\n              <>\r\n                <div>\r\n                  <div>slack: {object5[\"slack\"]}</div>\r\n                </div>\r\n              </>\r\n            );\r\n          }\r\n        })}\r\n      </>\r\n    );\r\n  };\r\n  render() {\r\n    const pert = this.props.pert;\r\n    return <>{this.renderPert(pert)}</>;\r\n  }\r\n}\r\n\r\nexport default Pert;\r\n","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Tagify\\Assigner.js",["555","556","557"],"import React, { useEffect } from \"react\";\r\nimport Tags from \"@yaireo/tagify/dist/react.tagify\";\r\nimport \"@yaireo/tagify/dist/tagify.css\";\r\n// Tagify settings object\r\nconst baseTagifySettings = {\r\n  blacklist: [],\r\n  enforceWhitelist: true,\r\n  dropdown: {\r\n    enabled: 0,\r\n  },\r\n  callbacks: {},\r\n};\r\n\r\nfunction Assigner({\r\n  label,\r\n  name,\r\n  value,\r\n  suggestions,\r\n  assignTo,\r\n  assignIds,\r\n  team,\r\n}) {\r\n  const handleChange = (e) => {\r\n    // console.log(e.detail.tagify.value);\r\n    let arr = [];\r\n    let ids = [];\r\n    e.detail.tagify.value.map((val) => {\r\n      arr.push(val.value);\r\n      team.map((member) => {\r\n        // console.log(member.name, val.value);\r\n        if (member.name === val.value) {\r\n          ids.push(member._id);\r\n        }\r\n      });\r\n    });\r\n    assignTo(arr);\r\n    assignIds(ids);\r\n  };\r\n  const settings = {\r\n    ...baseTagifySettings,\r\n    whitelist: suggestions,\r\n    callbacks: {\r\n      add: handleChange,\r\n      remove: handleChange,\r\n      blur: handleChange,\r\n      edit: handleChange,\r\n      invalid: handleChange,\r\n      click: handleChange,\r\n      focus: handleChange,\r\n      \"edit:updated\": handleChange,\r\n      \"edit:start\": handleChange,\r\n    },\r\n  };\r\n  //   console.log(\"words:\");\r\n  if (suggestions.length === 0) return null;\r\n  // console.log(initialValue);\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={\"field-\" + name}>{label}</label>\r\n      <Tags settings={settings} value={value} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Assigner;\r\n","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\Chat.js",["558","559","560","561"],"import TextField from \"@material-ui/core/TextField\";\r\nimport React, { useEffect, useRef, useState, useLayoutEffect } from \"react\";\r\nimport useStayScrolled from \"react-stay-scrolled\";\r\nimport io from \"socket.io-client\";\r\nimport { getCurrentUser } from \"./../user/apiUser\";\r\nimport { updateChat } from \"./apiProject\";\r\nimport { Col } from \"react-bootstrap\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport DefaultProfile from \"../images/avatar.png\";\r\nimport { read } from \"../user/apiUser\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport moment from \"moment\";\r\n\r\nvar options = {\r\n  rememberUpgrade: true,\r\n  transports: [\"websocket\"],\r\n  secure: true,\r\n  rejectUnauthorized: false,\r\n};\r\n\r\nfunction Chat(props) {\r\n  const project_id = props.projectId;\r\n  const status = props.status;\r\n  const [state, setState] = useState({\r\n    message: \"\",\r\n    name: getCurrentUser().name,\r\n    created: new Date(),\r\n  });\r\n  const [chat, setChat] = useState([]);\r\n  const socketRef = useRef();\r\n\r\n  const divRef = useRef(null);\r\n  const { stayScrolled } = useStayScrolled(divRef);\r\n\r\n  useEffect(() => {\r\n    socketRef.current = io.connect(\"http://localhost:8081\", options);\r\n    socketRef.current.emit(\"getChat\", {\r\n      project_id,\r\n      client_chat_length: chat.length,\r\n    });\r\n    socketRef.current.on(\"chat\", (data) => {\r\n      setChat(data);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    socketRef.current = io.connect(\"http://localhost:8081\", options);\r\n    socketRef.current.emit(\"getChat\", {\r\n      project_id,\r\n      client_chat_length: chat.length,\r\n    });\r\n    socketRef.current.on(\"chat\" + project_id, (data) => {\r\n      setChat(data);\r\n      console.log(data);\r\n    });\r\n    socketRef.current.on(\r\n      \"message\" + project_id,\r\n      ({ name, message, created }) => {\r\n        console.log(chat);\r\n        setChat([...chat, { name, message, created }]);\r\n      }\r\n    );\r\n    return () => socketRef.current.disconnect();\r\n  }, [chat]);\r\n\r\n  const onTextChange = (e) => {\r\n    setState({ ...state, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onMessageSubmit = (e) => {\r\n    const { name, message, created } = state;\r\n    if (message.trim() !== \"\") {\r\n      socketRef.current.emit(\"message\", { name, message, created, project_id });\r\n      let chat_msg = { name, message, created };\r\n      updateChat(chat_msg, project_id).then((data) => {\r\n        if (data.error) {\r\n          console.log(data.error);\r\n        } else {\r\n          console.log(data.message);\r\n        }\r\n      });\r\n    }\r\n    e.preventDefault();\r\n    setState({ message: \"\", name });\r\n  };\r\n\r\n  const messagesEndRef = useRef(null);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n  useEffect(scrollToBottom, [chat]);\r\n\r\n  var d = new Date();\r\n  var f = 0;\r\n  function setdate(dd) {\r\n    d = dd;\r\n    return moment(dd).format(\"DD-MM-YYYY\");\r\n  }\r\n  function settoday(dd) {\r\n    d = dd;\r\n    f = 1;\r\n  }\r\n\r\n  const renderChat = () => {\r\n    return chat.map(({ name, message, created }, index) => (\r\n      <div>\r\n        <div className=\"d-flex flex-column m-3 align-items-center\">\r\n          {moment(created).format(\"DD-MM-YYYY\") !==\r\n          moment(d).format(\"DD-MM-YYYY\") ? (\r\n            moment(created).format(\"DD-MM-YYYY\") ===\r\n            moment(new Date()).format(\"DD-MM-YYYY\") ? (\r\n              <span className=\"text-dark-75 font-weight-bold font-size-sm bubble-date\">\r\n                Today{settoday(created)}\r\n              </span>\r\n            ) : (\r\n              <span className=\"text-dark-75 font-weight-bold font-size-sm bubble-date\">\r\n                {setdate(created)}\r\n              </span>\r\n            )\r\n          ) : moment(created).format(\"DD-MM-YYYY\") ===\r\n              moment(new Date()).format(\"DD-MM-YYYY\") && f === 0 ? (\r\n            <span className=\"text-dark-75 font-weight-bold font-size-sm bubble-date\">\r\n              Today{settoday(created)}\r\n            </span>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n        {isAuthenticated().user.name === name ? (\r\n          <div className=\"d-flex flex-column m-3 align-items-end \" key={index}>\r\n            <div className=\"d-flex align-items-center\">\r\n              <div className=\"symbol symbol-circle symbol-40 mr-3\">\r\n                <img\r\n                  src={DefaultProfile}\r\n                  alt={name}\r\n                  style={{ width: \"40px\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <p className=\"text-dark-75 text-hover-primary font-weight-bold font-size-h6 m-0\">\r\n                  {name}\r\n                </p>\r\n                <span className=\"text-muted font-size-sm\">\r\n                  {moment(created).format(\"h:mm a\")}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-2 text-dark-100 font-weight-bold font-size-lg  text-left bubble-alt\">\r\n              {message}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div\r\n            className=\"d-flex flex-column m-3 align-items-start \"\r\n            key={index}\r\n          >\r\n            <div className=\"d-flex align-items-center\">\r\n              <div className=\"symbol symbol-circle symbol-40 mr-3\">\r\n                <img\r\n                  src={DefaultProfile}\r\n                  alt={name}\r\n                  style={{ width: \"40px\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <p className=\"text-dark-75 text-hover-primary font-weight-bold font-size-h6 m-0\">\r\n                  {name}\r\n                </p>\r\n                <span className=\"text-muted font-size-sm\">\r\n                  {moment(created).format(\"h:mm a\")}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-2 text-dark-100 font-weight-bold font-size-lg  text-left  bubble\">\r\n              {message}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    stayScrolled();\r\n  }, [chat]);\r\n\r\n  return (\r\n    <div>\r\n      <div ref={divRef} className=\"render-chat\">\r\n        {renderChat()}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n      {status !== \"Completed\" ? (\r\n        <form onSubmit={onMessageSubmit}>\r\n          <div className=\"row pt-5\">\r\n            <Col sm={10}>\r\n              <TextField\r\n                name=\"message\"\r\n                onChange={(e) => onTextChange(e)}\r\n                value={state.message}\r\n                id=\"outlined-multiline-static\"\r\n                variant=\"outlined\"\r\n                label=\"Message\"\r\n                fullWidth\r\n              />\r\n            </Col>\r\n            <Col>\r\n              <button className=\"btn btn-primary\">\r\n                Send Message <SendIcon />\r\n              </button>\r\n            </Col>\r\n          </div>\r\n        </form>\r\n      ) : (\r\n        <div> Chat has been disabled</div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n","C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Home.js",["562","563","564","565","566","567","568","569","570","571","572","573","574","575","576"],"C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\newProjectForm\\CreateProject.js",["577","578"],"C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\cpm.js",["579","580","581"],"C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\posts.js",["582"],"C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\newProjectForm\\RoleCreate.js",["583"],"C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\DeleteProject.js",[],"C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\User_Role.js",[],"C:\\Users\\Nithiya\\Documents\\College\\Capstone\\Github Clone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\PostVideo.js",[],{"ruleId":"584","replacedBy":"585"},{"ruleId":"586","replacedBy":"587"},{"ruleId":"588","severity":1,"message":"589","line":1,"column":10,"nodeType":"590","messageId":"591","endLine":1,"endColumn":26},{"ruleId":"592","severity":1,"message":"593","line":4,"column":1,"nodeType":"594","endLine":9,"endColumn":2},{"ruleId":"595","severity":1,"message":"596","line":102,"column":13,"nodeType":"597","endLine":102,"endColumn":35},{"ruleId":"584","replacedBy":"598"},{"ruleId":"586","replacedBy":"599"},{"ruleId":"600","severity":1,"message":"601","line":52,"column":13,"nodeType":"602","endLine":62,"endColumn":4},{"ruleId":"600","severity":1,"message":"603","line":62,"column":6,"nodeType":"604","endLine":62,"endColumn":8,"suggestions":"605"},{"ruleId":"600","severity":1,"message":"606","line":109,"column":6,"nodeType":"604","endLine":109,"endColumn":8,"suggestions":"607"},{"ruleId":"600","severity":1,"message":"608","line":138,"column":6,"nodeType":"604","endLine":138,"endColumn":12,"suggestions":"609"},{"ruleId":"595","severity":1,"message":"596","line":298,"column":29,"nodeType":"597","endLine":301,"endColumn":31},{"ruleId":"588","severity":1,"message":"610","line":11,"column":8,"nodeType":"590","messageId":"591","endLine":11,"endColumn":25},{"ruleId":"611","severity":1,"message":"612","line":31,"column":35,"nodeType":"602","messageId":"613","endLine":31,"endColumn":37},{"ruleId":"584","replacedBy":"614"},{"ruleId":"586","replacedBy":"615"},{"ruleId":"588","severity":1,"message":"616","line":2,"column":46,"nodeType":"590","messageId":"591","endLine":2,"endColumn":50},{"ruleId":"588","severity":1,"message":"617","line":4,"column":26,"nodeType":"590","messageId":"591","endLine":4,"endColumn":31},{"ruleId":"588","severity":1,"message":"618","line":14,"column":10,"nodeType":"590","messageId":"591","endLine":14,"endColumn":22},{"ruleId":"588","severity":1,"message":"619","line":98,"column":11,"nodeType":"590","messageId":"591","endLine":98,"endColumn":16},{"ruleId":"588","severity":1,"message":"620","line":98,"column":38,"nodeType":"590","messageId":"591","endLine":98,"endColumn":42},{"ruleId":"588","severity":1,"message":"621","line":6,"column":3,"nodeType":"590","messageId":"591","endLine":6,"endColumn":12},{"ruleId":"588","severity":1,"message":"622","line":7,"column":3,"nodeType":"590","messageId":"591","endLine":7,"endColumn":9},{"ruleId":"588","severity":1,"message":"616","line":8,"column":3,"nodeType":"590","messageId":"591","endLine":8,"endColumn":7},{"ruleId":"588","severity":1,"message":"617","line":23,"column":26,"nodeType":"590","messageId":"591","endLine":23,"endColumn":31},{"ruleId":"611","severity":1,"message":"612","line":49,"column":46,"nodeType":"602","messageId":"613","endLine":49,"endColumn":48},{"ruleId":"588","severity":1,"message":"623","line":22,"column":11,"nodeType":"590","messageId":"591","endLine":22,"endColumn":14},{"ruleId":"611","severity":1,"message":"612","line":24,"column":36,"nodeType":"602","messageId":"613","endLine":24,"endColumn":38},{"ruleId":"611","severity":1,"message":"612","line":26,"column":32,"nodeType":"602","messageId":"613","endLine":26,"endColumn":34},{"ruleId":"588","severity":1,"message":"624","line":57,"column":7,"nodeType":"590","messageId":"591","endLine":57,"endColumn":13},{"ruleId":"625","severity":1,"message":"626","line":237,"column":56,"nodeType":"627","messageId":"628","endLine":237,"endColumn":57},{"ruleId":"625","severity":1,"message":"626","line":252,"column":56,"nodeType":"627","messageId":"628","endLine":252,"endColumn":57},{"ruleId":"588","severity":1,"message":"621","line":23,"column":3,"nodeType":"590","messageId":"591","endLine":23,"endColumn":12},{"ruleId":"588","severity":1,"message":"616","line":25,"column":3,"nodeType":"590","messageId":"591","endLine":25,"endColumn":7},{"ruleId":"588","severity":1,"message":"629","line":31,"column":8,"nodeType":"590","messageId":"591","endLine":31,"endColumn":16},{"ruleId":"588","severity":1,"message":"630","line":36,"column":13,"nodeType":"590","messageId":"591","endLine":36,"endColumn":24},{"ruleId":"611","severity":1,"message":"631","line":53,"column":40,"nodeType":"602","messageId":"632","endLine":53,"endColumn":42},{"ruleId":"595","severity":1,"message":"596","line":163,"column":15,"nodeType":"597","endLine":170,"endColumn":17},{"ruleId":"588","severity":1,"message":"633","line":211,"column":7,"nodeType":"590","messageId":"591","endLine":211,"endColumn":11},{"ruleId":"595","severity":1,"message":"596","line":232,"column":19,"nodeType":"597","endLine":239,"endColumn":21},{"ruleId":"588","severity":1,"message":"634","line":5,"column":8,"nodeType":"590","messageId":"591","endLine":5,"endColumn":29},{"ruleId":"611","severity":1,"message":"612","line":20,"column":26,"nodeType":"602","messageId":"613","endLine":20,"endColumn":28},{"ruleId":"600","severity":1,"message":"635","line":28,"column":6,"nodeType":"604","endLine":28,"endColumn":8,"suggestions":"636"},{"ruleId":"588","severity":1,"message":"622","line":2,"column":10,"nodeType":"590","messageId":"591","endLine":2,"endColumn":16},{"ruleId":"588","severity":1,"message":"617","line":4,"column":26,"nodeType":"590","messageId":"591","endLine":4,"endColumn":31},{"ruleId":"588","severity":1,"message":"637","line":6,"column":10,"nodeType":"590","messageId":"591","endLine":6,"endColumn":20},{"ruleId":"588","severity":1,"message":"638","line":7,"column":10,"nodeType":"590","messageId":"591","endLine":7,"endColumn":19},{"ruleId":"588","severity":1,"message":"639","line":8,"column":8,"nodeType":"590","messageId":"591","endLine":8,"endColumn":19},{"ruleId":"588","severity":1,"message":"640","line":10,"column":8,"nodeType":"590","messageId":"591","endLine":10,"endColumn":17},{"ruleId":"588","severity":1,"message":"641","line":12,"column":10,"nodeType":"590","messageId":"591","endLine":12,"endColumn":18},{"ruleId":"588","severity":1,"message":"642","line":14,"column":9,"nodeType":"590","messageId":"591","endLine":14,"endColumn":17},{"ruleId":"588","severity":1,"message":"643","line":15,"column":9,"nodeType":"590","messageId":"591","endLine":15,"endColumn":16},{"ruleId":"588","severity":1,"message":"644","line":16,"column":17,"nodeType":"590","messageId":"591","endLine":16,"endColumn":25},{"ruleId":"588","severity":1,"message":"645","line":17,"column":10,"nodeType":"590","messageId":"591","endLine":17,"endColumn":18},{"ruleId":"588","severity":1,"message":"646","line":3,"column":10,"nodeType":"590","messageId":"591","endLine":3,"endColumn":15},{"ruleId":"588","severity":1,"message":"647","line":5,"column":8,"nodeType":"590","messageId":"591","endLine":5,"endColumn":12},{"ruleId":"588","severity":1,"message":"648","line":6,"column":8,"nodeType":"590","messageId":"591","endLine":6,"endColumn":12},{"ruleId":"588","severity":1,"message":"649","line":8,"column":3,"nodeType":"590","messageId":"591","endLine":8,"endColumn":10},{"ruleId":"588","severity":1,"message":"650","line":12,"column":3,"nodeType":"590","messageId":"591","endLine":12,"endColumn":17},{"ruleId":"588","severity":1,"message":"651","line":15,"column":3,"nodeType":"590","messageId":"591","endLine":15,"endColumn":10},{"ruleId":"588","severity":1,"message":"622","line":25,"column":10,"nodeType":"590","messageId":"591","endLine":25,"endColumn":16},{"ruleId":"611","severity":1,"message":"631","line":72,"column":22,"nodeType":"602","messageId":"632","endLine":72,"endColumn":24},{"ruleId":"611","severity":1,"message":"612","line":79,"column":11,"nodeType":"652","messageId":"653","endLine":79,"endColumn":18},{"ruleId":"611","severity":1,"message":"612","line":126,"column":37,"nodeType":"602","messageId":"613","endLine":126,"endColumn":39},{"ruleId":"611","severity":1,"message":"612","line":180,"column":45,"nodeType":"602","messageId":"613","endLine":180,"endColumn":47},{"ruleId":"611","severity":1,"message":"612","line":191,"column":22,"nodeType":"602","messageId":"613","endLine":191,"endColumn":24},{"ruleId":"611","severity":1,"message":"631","line":209,"column":25,"nodeType":"602","messageId":"632","endLine":209,"endColumn":27},{"ruleId":"611","severity":1,"message":"612","line":214,"column":9,"nodeType":"652","messageId":"653","endLine":214,"endColumn":16},{"ruleId":"611","severity":1,"message":"612","line":215,"column":47,"nodeType":"602","messageId":"613","endLine":215,"endColumn":49},{"ruleId":"611","severity":1,"message":"631","line":250,"column":48,"nodeType":"602","messageId":"632","endLine":250,"endColumn":50},{"ruleId":"588","severity":1,"message":"654","line":282,"column":15,"nodeType":"590","messageId":"591","endLine":282,"endColumn":24},{"ruleId":"611","severity":1,"message":"612","line":365,"column":24,"nodeType":"602","messageId":"613","endLine":365,"endColumn":26},{"ruleId":"611","severity":1,"message":"612","line":368,"column":27,"nodeType":"602","messageId":"613","endLine":368,"endColumn":29},{"ruleId":"655","severity":1,"message":"656","line":370,"column":31,"nodeType":"657","messageId":"658","endLine":370,"endColumn":47},{"ruleId":"588","severity":1,"message":"659","line":395,"column":15,"nodeType":"590","messageId":"591","endLine":395,"endColumn":18},{"ruleId":"588","severity":1,"message":"659","line":416,"column":15,"nodeType":"590","messageId":"591","endLine":416,"endColumn":18},{"ruleId":"611","severity":1,"message":"612","line":444,"column":31,"nodeType":"602","messageId":"613","endLine":444,"endColumn":33},{"ruleId":"611","severity":1,"message":"612","line":491,"column":24,"nodeType":"602","messageId":"613","endLine":491,"endColumn":26},{"ruleId":"611","severity":1,"message":"612","line":495,"column":27,"nodeType":"602","messageId":"613","endLine":495,"endColumn":29},{"ruleId":"655","severity":1,"message":"656","line":497,"column":31,"nodeType":"657","messageId":"658","endLine":497,"endColumn":47},{"ruleId":"588","severity":1,"message":"659","line":522,"column":15,"nodeType":"590","messageId":"591","endLine":522,"endColumn":18},{"ruleId":"588","severity":1,"message":"659","line":543,"column":15,"nodeType":"590","messageId":"591","endLine":543,"endColumn":18},{"ruleId":"611","severity":1,"message":"612","line":570,"column":35,"nodeType":"602","messageId":"613","endLine":570,"endColumn":37},{"ruleId":"588","severity":1,"message":"660","line":610,"column":33,"nodeType":"590","messageId":"591","endLine":610,"endColumn":38},{"ruleId":"611","severity":1,"message":"612","line":614,"column":22,"nodeType":"602","messageId":"613","endLine":614,"endColumn":24},{"ruleId":"611","severity":1,"message":"612","line":617,"column":34,"nodeType":"602","messageId":"613","endLine":617,"endColumn":36},{"ruleId":"588","severity":1,"message":"661","line":1,"column":17,"nodeType":"590","messageId":"591","endLine":1,"endColumn":26},{"ruleId":"611","severity":1,"message":"612","line":18,"column":37,"nodeType":"602","messageId":"613","endLine":18,"endColumn":39},{"ruleId":"611","severity":1,"message":"612","line":31,"column":32,"nodeType":"602","messageId":"613","endLine":31,"endColumn":34},{"ruleId":"611","severity":1,"message":"612","line":18,"column":37,"nodeType":"602","messageId":"613","endLine":18,"endColumn":39},{"ruleId":"588","severity":1,"message":"662","line":37,"column":24,"nodeType":"590","messageId":"591","endLine":37,"endColumn":35},{"ruleId":"588","severity":1,"message":"663","line":117,"column":31,"nodeType":"590","messageId":"591","endLine":117,"endColumn":37},{"ruleId":"611","severity":1,"message":"612","line":38,"column":22,"nodeType":"602","messageId":"613","endLine":38,"endColumn":24},{"ruleId":"588","severity":1,"message":"664","line":2,"column":10,"nodeType":"590","messageId":"591","endLine":2,"endColumn":20},{"ruleId":"588","severity":1,"message":"665","line":2,"column":22,"nodeType":"590","messageId":"591","endLine":2,"endColumn":33},{"ruleId":"588","severity":1,"message":"666","line":9,"column":11,"nodeType":"590","messageId":"591","endLine":9,"endColumn":15},{"ruleId":"611","severity":1,"message":"612","line":28,"column":21,"nodeType":"602","messageId":"613","endLine":28,"endColumn":23},{"ruleId":"588","severity":1,"message":"667","line":64,"column":15,"nodeType":"590","messageId":"591","endLine":64,"endColumn":23},{"ruleId":"611","severity":1,"message":"612","line":66,"column":34,"nodeType":"602","messageId":"613","endLine":66,"endColumn":36},{"ruleId":"611","severity":1,"message":"612","line":69,"column":28,"nodeType":"602","messageId":"613","endLine":69,"endColumn":30},{"ruleId":"588","severity":1,"message":"610","line":2,"column":8,"nodeType":"590","messageId":"591","endLine":2,"endColumn":25},{"ruleId":"588","severity":1,"message":"668","line":3,"column":10,"nodeType":"590","messageId":"591","endLine":3,"endColumn":14},{"ruleId":"588","severity":1,"message":"669","line":6,"column":20,"nodeType":"590","messageId":"591","endLine":6,"endColumn":24},{"ruleId":"588","severity":1,"message":"670","line":8,"column":10,"nodeType":"590","messageId":"591","endLine":8,"endColumn":15},{"ruleId":"588","severity":1,"message":"671","line":8,"column":17,"nodeType":"590","messageId":"591","endLine":8,"endColumn":25},{"ruleId":"588","severity":1,"message":"645","line":10,"column":10,"nodeType":"590","messageId":"591","endLine":10,"endColumn":18},{"ruleId":"611","severity":1,"message":"612","line":40,"column":28,"nodeType":"602","messageId":"613","endLine":40,"endColumn":30},{"ruleId":"588","severity":1,"message":"610","line":2,"column":8,"nodeType":"590","messageId":"591","endLine":2,"endColumn":25},{"ruleId":"588","severity":1,"message":"672","line":3,"column":16,"nodeType":"590","messageId":"591","endLine":3,"endColumn":30},{"ruleId":"588","severity":1,"message":"673","line":5,"column":10,"nodeType":"590","messageId":"591","endLine":5,"endColumn":22},{"ruleId":"588","severity":1,"message":"669","line":6,"column":20,"nodeType":"590","messageId":"591","endLine":6,"endColumn":24},{"ruleId":"588","severity":1,"message":"670","line":8,"column":10,"nodeType":"590","messageId":"591","endLine":8,"endColumn":15},{"ruleId":"588","severity":1,"message":"671","line":8,"column":17,"nodeType":"590","messageId":"591","endLine":8,"endColumn":25},{"ruleId":"588","severity":1,"message":"674","line":9,"column":10,"nodeType":"590","messageId":"591","endLine":9,"endColumn":15},{"ruleId":"611","severity":1,"message":"612","line":17,"column":25,"nodeType":"602","messageId":"613","endLine":17,"endColumn":27},{"ruleId":"588","severity":1,"message":"669","line":4,"column":10,"nodeType":"590","messageId":"591","endLine":4,"endColumn":14},{"ruleId":"588","severity":1,"message":"675","line":7,"column":10,"nodeType":"590","messageId":"591","endLine":7,"endColumn":24},{"ruleId":"600","severity":1,"message":"676","line":33,"column":6,"nodeType":"604","endLine":33,"endColumn":18,"suggestions":"677"},{"ruleId":"588","severity":1,"message":"622","line":2,"column":10,"nodeType":"590","messageId":"591","endLine":2,"endColumn":16},{"ruleId":"611","severity":1,"message":"612","line":15,"column":23,"nodeType":"602","messageId":"613","endLine":15,"endColumn":25},{"ruleId":"588","severity":1,"message":"638","line":7,"column":10,"nodeType":"590","messageId":"591","endLine":7,"endColumn":19},{"ruleId":"588","severity":1,"message":"678","line":5,"column":8,"nodeType":"590","messageId":"591","endLine":5,"endColumn":19},{"ruleId":"679","severity":1,"message":"680","line":100,"column":65,"nodeType":"627","messageId":"681","endLine":100,"endColumn":67},{"ruleId":"588","severity":1,"message":"682","line":8,"column":10,"nodeType":"590","messageId":"591","endLine":8,"endColumn":24},{"ruleId":"611","severity":1,"message":"612","line":27,"column":35,"nodeType":"602","messageId":"613","endLine":27,"endColumn":37},{"ruleId":"611","severity":1,"message":"612","line":47,"column":33,"nodeType":"602","messageId":"613","endLine":47,"endColumn":35},{"ruleId":"595","severity":1,"message":"596","line":162,"column":27,"nodeType":"597","endLine":165,"endColumn":29},{"ruleId":"588","severity":1,"message":"683","line":16,"column":8,"nodeType":"590","messageId":"591","endLine":16,"endColumn":19},{"ruleId":"588","severity":1,"message":"621","line":24,"column":3,"nodeType":"590","messageId":"591","endLine":24,"endColumn":12},{"ruleId":"588","severity":1,"message":"684","line":40,"column":8,"nodeType":"590","messageId":"591","endLine":40,"endColumn":16},{"ruleId":"588","severity":1,"message":"629","line":41,"column":8,"nodeType":"590","messageId":"591","endLine":41,"endColumn":16},{"ruleId":"611","severity":1,"message":"631","line":57,"column":40,"nodeType":"602","messageId":"632","endLine":57,"endColumn":42},{"ruleId":"588","severity":1,"message":"685","line":97,"column":9,"nodeType":"590","messageId":"591","endLine":97,"endColumn":16},{"ruleId":"595","severity":1,"message":"596","line":183,"column":15,"nodeType":"597","endLine":190,"endColumn":17},{"ruleId":"588","severity":1,"message":"633","line":229,"column":7,"nodeType":"590","messageId":"591","endLine":229,"endColumn":11},{"ruleId":"595","severity":1,"message":"596","line":249,"column":19,"nodeType":"597","endLine":256,"endColumn":21},{"ruleId":"588","severity":1,"message":"621","line":2,"column":10,"nodeType":"590","messageId":"591","endLine":2,"endColumn":19},{"ruleId":"588","severity":1,"message":"616","line":2,"column":21,"nodeType":"590","messageId":"591","endLine":2,"endColumn":25},{"ruleId":"588","severity":1,"message":"622","line":2,"column":27,"nodeType":"590","messageId":"591","endLine":2,"endColumn":33},{"ruleId":"588","severity":1,"message":"686","line":29,"column":8,"nodeType":"590","messageId":"591","endLine":29,"endColumn":17},{"ruleId":"611","severity":1,"message":"631","line":704,"column":42,"nodeType":"602","messageId":"632","endLine":704,"endColumn":44},{"ruleId":"588","severity":1,"message":"610","line":19,"column":8,"nodeType":"590","messageId":"591","endLine":19,"endColumn":25},{"ruleId":"588","severity":1,"message":"687","line":22,"column":10,"nodeType":"590","messageId":"591","endLine":22,"endColumn":33},{"ruleId":"611","severity":1,"message":"612","line":54,"column":25,"nodeType":"602","messageId":"613","endLine":54,"endColumn":27},{"ruleId":"588","severity":1,"message":"688","line":4,"column":10,"nodeType":"590","messageId":"591","endLine":4,"endColumn":28},{"ruleId":"588","severity":1,"message":"689","line":6,"column":10,"nodeType":"590","messageId":"591","endLine":6,"endColumn":13},{"ruleId":"588","severity":1,"message":"672","line":12,"column":10,"nodeType":"590","messageId":"591","endLine":12,"endColumn":24},{"ruleId":"588","severity":1,"message":"690","line":13,"column":8,"nodeType":"590","messageId":"591","endLine":13,"endColumn":14},{"ruleId":"588","severity":1,"message":"642","line":22,"column":9,"nodeType":"590","messageId":"591","endLine":22,"endColumn":17},{"ruleId":"691","severity":1,"message":"692","line":71,"column":27,"nodeType":"597","endLine":71,"endColumn":74},{"ruleId":"691","severity":1,"message":"692","line":85,"column":27,"nodeType":"597","endLine":85,"endColumn":74},{"ruleId":"691","severity":1,"message":"692","line":99,"column":27,"nodeType":"597","endLine":99,"endColumn":75},{"ruleId":"691","severity":1,"message":"692","line":113,"column":27,"nodeType":"597","endLine":113,"endColumn":75},{"ruleId":"691","severity":1,"message":"692","line":127,"column":27,"nodeType":"597","endLine":127,"endColumn":75},{"ruleId":"691","severity":1,"message":"692","line":161,"column":27,"nodeType":"597","endLine":161,"endColumn":75},{"ruleId":"691","severity":1,"message":"692","line":181,"column":27,"nodeType":"597","endLine":181,"endColumn":75},{"ruleId":"691","severity":1,"message":"692","line":201,"column":27,"nodeType":"597","endLine":201,"endColumn":75},{"ruleId":"625","severity":1,"message":"626","line":3,"column":46,"nodeType":"627","messageId":"628","endLine":3,"endColumn":47},{"ruleId":"625","severity":1,"message":"626","line":18,"column":46,"nodeType":"627","messageId":"628","endLine":18,"endColumn":47},{"ruleId":"625","severity":1,"message":"626","line":34,"column":46,"nodeType":"627","messageId":"628","endLine":34,"endColumn":47},{"ruleId":"625","severity":1,"message":"626","line":155,"column":51,"nodeType":"627","messageId":"628","endLine":155,"endColumn":52},{"ruleId":"625","severity":1,"message":"626","line":194,"column":51,"nodeType":"627","messageId":"628","endLine":194,"endColumn":52},{"ruleId":"625","severity":1,"message":"626","line":210,"column":49,"nodeType":"627","messageId":"628","endLine":210,"endColumn":50},{"ruleId":"588","severity":1,"message":"624","line":3,"column":7,"nodeType":"590","messageId":"591","endLine":3,"endColumn":13},{"ruleId":"625","severity":1,"message":"626","line":351,"column":53,"nodeType":"627","messageId":"628","endLine":351,"endColumn":54},{"ruleId":"611","severity":1,"message":"612","line":371,"column":30,"nodeType":"602","messageId":"613","endLine":371,"endColumn":32},{"ruleId":"588","severity":1,"message":"693","line":13,"column":10,"nodeType":"590","messageId":"591","endLine":13,"endColumn":24},{"ruleId":"611","severity":1,"message":"612","line":19,"column":26,"nodeType":"602","messageId":"613","endLine":19,"endColumn":28},{"ruleId":"600","severity":1,"message":"694","line":27,"column":6,"nodeType":"604","endLine":27,"endColumn":8,"suggestions":"695"},{"ruleId":"696","severity":1,"message":"697","line":15,"column":11,"nodeType":"597","endLine":15,"endColumn":78},{"ruleId":"588","severity":1,"message":"698","line":11,"column":8,"nodeType":"590","messageId":"591","endLine":11,"endColumn":14},{"ruleId":"611","severity":1,"message":"631","line":8,"column":42,"nodeType":"602","messageId":"632","endLine":8,"endColumn":44},{"ruleId":"588","severity":1,"message":"610","line":2,"column":8,"nodeType":"590","messageId":"591","endLine":2,"endColumn":25},{"ruleId":"588","severity":1,"message":"669","line":6,"column":20,"nodeType":"590","messageId":"591","endLine":6,"endColumn":24},{"ruleId":"588","severity":1,"message":"670","line":8,"column":10,"nodeType":"590","messageId":"591","endLine":8,"endColumn":15},{"ruleId":"588","severity":1,"message":"671","line":8,"column":17,"nodeType":"590","messageId":"591","endLine":8,"endColumn":25},{"ruleId":"588","severity":1,"message":"674","line":9,"column":10,"nodeType":"590","messageId":"591","endLine":9,"endColumn":15},{"ruleId":"588","severity":1,"message":"645","line":10,"column":10,"nodeType":"590","messageId":"591","endLine":10,"endColumn":18},{"ruleId":"611","severity":1,"message":"612","line":19,"column":25,"nodeType":"602","messageId":"613","endLine":19,"endColumn":27},{"ruleId":"611","severity":1,"message":"612","line":40,"column":32,"nodeType":"602","messageId":"613","endLine":40,"endColumn":34},{"ruleId":"588","severity":1,"message":"672","line":2,"column":10,"nodeType":"590","messageId":"591","endLine":2,"endColumn":24},{"ruleId":"611","severity":1,"message":"612","line":73,"column":37,"nodeType":"602","messageId":"613","endLine":73,"endColumn":39},{"ruleId":"611","severity":1,"message":"612","line":81,"column":30,"nodeType":"602","messageId":"613","endLine":81,"endColumn":32},{"ruleId":"611","severity":1,"message":"612","line":17,"column":23,"nodeType":"602","messageId":"613","endLine":17,"endColumn":25},{"ruleId":"588","severity":1,"message":"661","line":1,"column":17,"nodeType":"590","messageId":"591","endLine":1,"endColumn":26},{"ruleId":"588","severity":1,"message":"669","line":2,"column":25,"nodeType":"590","messageId":"591","endLine":2,"endColumn":29},{"ruleId":"588","severity":1,"message":"699","line":11,"column":8,"nodeType":"590","messageId":"591","endLine":11,"endColumn":14},{"ruleId":"588","severity":1,"message":"700","line":21,"column":8,"nodeType":"590","messageId":"591","endLine":21,"endColumn":17},{"ruleId":"588","severity":1,"message":"701","line":22,"column":8,"nodeType":"590","messageId":"591","endLine":22,"endColumn":13},{"ruleId":"588","severity":1,"message":"702","line":23,"column":10,"nodeType":"590","messageId":"591","endLine":23,"endColumn":15},{"ruleId":"588","severity":1,"message":"642","line":29,"column":9,"nodeType":"590","messageId":"591","endLine":29,"endColumn":17},{"ruleId":"588","severity":1,"message":"622","line":5,"column":10,"nodeType":"590","messageId":"591","endLine":5,"endColumn":16},{"ruleId":"588","severity":1,"message":"703","line":29,"column":10,"nodeType":"590","messageId":"591","endLine":29,"endColumn":38},{"ruleId":"588","severity":1,"message":"704","line":31,"column":7,"nodeType":"590","messageId":"591","endLine":31,"endColumn":15},{"ruleId":"611","severity":1,"message":"612","line":45,"column":35,"nodeType":"602","messageId":"613","endLine":45,"endColumn":37},{"ruleId":"588","severity":1,"message":"705","line":77,"column":11,"nodeType":"590","messageId":"591","endLine":77,"endColumn":24},{"ruleId":"588","severity":1,"message":"706","line":84,"column":11,"nodeType":"590","messageId":"591","endLine":84,"endColumn":19},{"ruleId":"611","severity":1,"message":"631","line":116,"column":54,"nodeType":"602","messageId":"632","endLine":116,"endColumn":56},{"ruleId":"611","severity":1,"message":"612","line":34,"column":32,"nodeType":"602","messageId":"613","endLine":34,"endColumn":34},{"ruleId":"588","severity":1,"message":"707","line":1,"column":10,"nodeType":"590","messageId":"591","endLine":1,"endColumn":26},{"ruleId":"588","severity":1,"message":"708","line":2,"column":27,"nodeType":"590","messageId":"591","endLine":2,"endColumn":43},{"ruleId":"588","severity":1,"message":"683","line":15,"column":8,"nodeType":"590","messageId":"591","endLine":15,"endColumn":19},{"ruleId":"588","severity":1,"message":"621","line":23,"column":3,"nodeType":"590","messageId":"591","endLine":23,"endColumn":12},{"ruleId":"588","severity":1,"message":"616","line":25,"column":3,"nodeType":"590","messageId":"591","endLine":25,"endColumn":7},{"ruleId":"611","severity":1,"message":"631","line":51,"column":40,"nodeType":"602","messageId":"632","endLine":51,"endColumn":42},{"ruleId":"595","severity":1,"message":"596","line":160,"column":15,"nodeType":"597","endLine":167,"endColumn":17},{"ruleId":"588","severity":1,"message":"633","line":207,"column":7,"nodeType":"590","messageId":"591","endLine":207,"endColumn":11},{"ruleId":"595","severity":1,"message":"596","line":224,"column":19,"nodeType":"597","endLine":231,"endColumn":21},{"ruleId":"588","severity":1,"message":"622","line":3,"column":10,"nodeType":"590","messageId":"591","endLine":3,"endColumn":16},{"ruleId":"588","severity":1,"message":"709","line":3,"column":18,"nodeType":"590","messageId":"591","endLine":3,"endColumn":32},{"ruleId":"588","severity":1,"message":"710","line":3,"column":34,"nodeType":"590","messageId":"591","endLine":3,"endColumn":41},{"ruleId":"588","severity":1,"message":"666","line":12,"column":21,"nodeType":"590","messageId":"591","endLine":12,"endColumn":25},{"ruleId":"611","severity":1,"message":"612","line":39,"column":22,"nodeType":"602","messageId":"613","endLine":39,"endColumn":24},{"ruleId":"600","severity":1,"message":"711","line":33,"column":6,"nodeType":"604","endLine":33,"endColumn":8,"suggestions":"712"},{"ruleId":"588","severity":1,"message":"669","line":4,"column":10,"nodeType":"590","messageId":"591","endLine":4,"endColumn":14},{"ruleId":"588","severity":1,"message":"713","line":7,"column":26,"nodeType":"590","messageId":"591","endLine":7,"endColumn":43},{"ruleId":"600","severity":1,"message":"676","line":33,"column":6,"nodeType":"604","endLine":33,"endColumn":18,"suggestions":"714"},{"ruleId":"611","severity":1,"message":"631","line":77,"column":34,"nodeType":"602","messageId":"632","endLine":77,"endColumn":36},{"ruleId":"611","severity":1,"message":"631","line":93,"column":36,"nodeType":"602","messageId":"632","endLine":93,"endColumn":38},{"ruleId":"611","severity":1,"message":"612","line":122,"column":13,"nodeType":"652","messageId":"653","endLine":122,"endColumn":20},{"ruleId":"611","severity":1,"message":"631","line":125,"column":36,"nodeType":"602","messageId":"632","endLine":125,"endColumn":38},{"ruleId":"611","severity":1,"message":"631","line":139,"column":36,"nodeType":"602","messageId":"632","endLine":139,"endColumn":38},{"ruleId":"611","severity":1,"message":"631","line":153,"column":36,"nodeType":"602","messageId":"632","endLine":153,"endColumn":38},{"ruleId":"588","severity":1,"message":"661","line":1,"column":17,"nodeType":"590","messageId":"591","endLine":1,"endColumn":26},{"ruleId":"611","severity":1,"message":"612","line":27,"column":37,"nodeType":"602","messageId":"613","endLine":27,"endColumn":39},{"ruleId":"611","severity":1,"message":"612","line":29,"column":25,"nodeType":"602","messageId":"613","endLine":29,"endColumn":27},{"ruleId":"588","severity":1,"message":"715","line":10,"column":10,"nodeType":"590","messageId":"591","endLine":10,"endColumn":14},{"ruleId":"600","severity":1,"message":"716","line":44,"column":6,"nodeType":"604","endLine":44,"endColumn":8,"suggestions":"717"},{"ruleId":"600","severity":1,"message":"718","line":64,"column":6,"nodeType":"604","endLine":64,"endColumn":12,"suggestions":"719"},{"ruleId":"600","severity":1,"message":"720","line":186,"column":6,"nodeType":"604","endLine":186,"endColumn":12,"suggestions":"721"},{"ruleId":"588","severity":1,"message":"708","line":3,"column":10,"nodeType":"590","messageId":"591","endLine":3,"endColumn":26},{"ruleId":"588","severity":1,"message":"722","line":8,"column":3,"nodeType":"590","messageId":"591","endLine":8,"endColumn":14},{"ruleId":"588","severity":1,"message":"688","line":9,"column":3,"nodeType":"590","messageId":"591","endLine":9,"endColumn":21},{"ruleId":"588","severity":1,"message":"723","line":10,"column":3,"nodeType":"590","messageId":"591","endLine":10,"endColumn":29},{"ruleId":"588","severity":1,"message":"724","line":12,"column":13,"nodeType":"590","messageId":"591","endLine":12,"endColumn":14},{"ruleId":"588","severity":1,"message":"725","line":15,"column":10,"nodeType":"590","messageId":"591","endLine":15,"endColumn":20},{"ruleId":"588","severity":1,"message":"646","line":17,"column":10,"nodeType":"590","messageId":"591","endLine":17,"endColumn":15},{"ruleId":"588","severity":1,"message":"622","line":17,"column":17,"nodeType":"590","messageId":"591","endLine":17,"endColumn":23},{"ruleId":"588","severity":1,"message":"726","line":20,"column":10,"nodeType":"590","messageId":"591","endLine":20,"endColumn":21},{"ruleId":"588","severity":1,"message":"610","line":25,"column":8,"nodeType":"590","messageId":"591","endLine":25,"endColumn":25},{"ruleId":"611","severity":1,"message":"631","line":62,"column":46,"nodeType":"602","messageId":"632","endLine":62,"endColumn":48},{"ruleId":"588","severity":1,"message":"705","line":99,"column":13,"nodeType":"590","messageId":"591","endLine":99,"endColumn":26},{"ruleId":"588","severity":1,"message":"727","line":100,"column":50,"nodeType":"590","messageId":"591","endLine":100,"endColumn":60},{"ruleId":"595","severity":1,"message":"596","line":166,"column":27,"nodeType":"597","endLine":169,"endColumn":29},{"ruleId":"611","severity":1,"message":"631","line":213,"column":35,"nodeType":"602","messageId":"632","endLine":213,"endColumn":37},{"ruleId":"611","severity":1,"message":"612","line":73,"column":31,"nodeType":"602","messageId":"613","endLine":73,"endColumn":33},{"ruleId":"588","severity":1,"message":"728","line":123,"column":38,"nodeType":"590","messageId":"591","endLine":123,"endColumn":44},{"ruleId":"588","severity":1,"message":"729","line":2,"column":10,"nodeType":"590","messageId":"591","endLine":2,"endColumn":18},{"ruleId":"588","severity":1,"message":"730","line":4,"column":5,"nodeType":"590","messageId":"591","endLine":4,"endColumn":15},{"ruleId":"588","severity":1,"message":"731","line":5,"column":5,"nodeType":"590","messageId":"591","endLine":5,"endColumn":21},{"ruleId":"588","severity":1,"message":"732","line":2,"column":10,"nodeType":"590","messageId":"591","endLine":2,"endColumn":24},{"ruleId":"588","severity":1,"message":"733","line":9,"column":9,"nodeType":"590","messageId":"591","endLine":9,"endColumn":19},"no-native-reassign",["734"],"no-negated-in-lhs",["735"],"no-unused-vars","'devToolsEnhancer' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["734"],["735"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["736"],"React Hook useEffect has missing dependencies: 'chat' and 'user._id'. Either include them or remove the dependency array.",["737"],"React Hook useEffect has a missing dependency: 'user._id'. Either include it or remove the dependency array.",["738"],"'SearchTwoToneIcon' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside",["734"],["735"],"'Card' is defined but never used.","'toast' is defined but never used.","'DropzoneArea' is defined but never used.","'error' is assigned a value but never used.","'open' is assigned a value but never used.","'Accordion' is defined but never used.","'Button' is defined but never used.","'obj' is assigned a value but never used.","'userId' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'Dropdown' is defined but never used.","'youtubeMeta' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'tags' is assigned a value but never used.","'PersonAddDisabledIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'followers'. Either include them or remove the dependency array.",["739"],"'createPost' is defined but never used.","'TextField' is defined but never used.","'SkillsInput' is defined but never used.","'Sentiment' is defined but never used.","'getPosts' is defined but never used.","'dispatch' is assigned a value but never used.","'history' is assigned a value but never used.","'setFiles' is assigned a value but never used.","'projects' is assigned a value but never used.","'Modal' is defined but never used.","'Pert' is defined but never used.","'Task' is defined but never used.","'addEdge' is defined but never used.","'removeElements' is defined but never used.","'addTask' is defined but never used.","ReturnStatement","expectedReturnValue","'finaldiff' is assigned a value but never used.","no-self-assign","'task.description' is assigned to itself.","MemberExpression","selfAssignment","'ele' is assigned a value but never used.","'tasks' is assigned a value but never used.","'useEffect' is defined but never used.","'projectTeam' is assigned a value but never used.","'rating' is assigned a value but never used.","'AttachFile' is defined but never used.","'Description' is defined but never used.","'type' is assigned a value but never used.","'finalObj' is assigned a value but never used.","'list' is defined but never used.","'Link' is defined but never used.","'query' is assigned a value but never used.","'setQuery' is assigned a value but never used.","'getCurrentUser' is defined but never used.","'listprojects' is defined but never used.","'users' is assigned a value but never used.","'createTextPost' is defined but never used.","React Hook useEffect has a missing dependency: 'validateYouTubeUrl'. Either include it or remove the dependency array.",["740"],"'JoinProject' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","unexpected","'ToastContainer' is defined but never used.","'CommentIcon' is defined but never used.","'EditPost' is defined but never used.","'picture' is assigned a value but never used.","'StartIcon' is defined but never used.","'ReactSearchAutocomplete' is defined but never used.","'clearNotifications' is defined but never used.","'Nav' is defined but never used.","'socket' is defined but never used.","jsx-a11y/role-supports-aria-props","The attribute aria-haspopup is not supported by the role listitem. This role is implicit on the element li.","'followingUsers' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'following'. Either include them or remove the dependency array.",["741"],"react/jsx-pascal-case","Imported JSX component User_Role must be in PascalCase or SCREAMING_SNAKE_CASE","'moment' is defined but never used.","'NavBar' is defined but never used.","'LiveClock' is defined but never used.","'dayjs' is defined but never used.","'Badge' is defined but never used.","'removeAndUpdateNotifications' is defined but never used.","'BASE_URL' is assigned a value but never used.","'notifications' is assigned a value but never used.","'selected' is assigned a value but never used.","'createAsyncThunk' is defined but never used.","'getNotifications' is defined but never used.","'OverlayTrigger' is defined but never used.","'Tooltip' is defined but never used.","React Hook useEffect has a missing dependency: 'projectId'. Either include it or remove the dependency array.",["742"],"'createYoutubePost' is defined but never used.",["743"],"'read' is defined but never used.","React Hook useEffect has missing dependencies: 'chat.length' and 'project_id'. Either include them or remove the dependency array.",["744"],"React Hook useEffect has a missing dependency: 'project_id'. Either include it or remove the dependency array.",["745"],"React Hook useLayoutEffect has a missing dependency: 'stayScrolled'. Either include it or remove the dependency array.",["746"],"'getNotified' is defined but never used.","'setSegregatedNotifications' is defined but never used.","'_' is defined but never used.","'getProject' is defined but never used.","'getAllPosts' is defined but never used.","'youtubeUrl' is assigned a value but never used.","'skills' is assigned a value but never used.","'getTasks' is defined but never used.","'lastNodeId' is assigned a value but never used.","'lastConnectionId' is assigned a value but never used.","'getLikesOfPost' is defined but never used.","'roleSkills' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"747","fix":"748"},{"desc":"749","fix":"750"},{"desc":"749","fix":"751"},{"desc":"752","fix":"753"},{"desc":"754","fix":"755"},{"desc":"756","fix":"757"},{"desc":"758","fix":"759"},{"desc":"754","fix":"760"},{"desc":"761","fix":"762"},{"desc":"763","fix":"764"},{"desc":"765","fix":"766"},"Update the dependencies array to be: [dispatch]",{"range":"767","text":"768"},"Update the dependencies array to be: [chat, user._id]",{"range":"769","text":"770"},{"range":"771","text":"770"},"Update the dependencies array to be: [dispatch, followers]",{"range":"772","text":"773"},"Update the dependencies array to be: [props.text, validateYouTubeUrl]",{"range":"774","text":"775"},"Update the dependencies array to be: [dispatch, following]",{"range":"776","text":"777"},"Update the dependencies array to be: [projectId]",{"range":"778","text":"779"},{"range":"780","text":"775"},"Update the dependencies array to be: [chat.length, project_id]",{"range":"781","text":"782"},"Update the dependencies array to be: [chat, project_id]",{"range":"783","text":"784"},"Update the dependencies array to be: [chat, stayScrolled]",{"range":"785","text":"786"},[2100,2102],"[dispatch]",[3310,3312],"[chat, user._id]",[4108,4114],[1113,1115],"[dispatch, followers]",[1205,1217],"[props.text, validateYouTubeUrl]",[1093,1095],"[dispatch, following]",[1239,1241],"[projectId]",[1199,1211],[1365,1367],"[chat.length, project_id]",[1946,1952],"[chat, project_id]",[6020,6026],"[chat, stayScrolled]"]