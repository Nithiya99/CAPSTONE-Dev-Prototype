[{"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\taskComponents\\EditModel.js":"1","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\ProjectDashboard.js":"2","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\projectStats.js":"3","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\layout\\LayoutComponent.js":"4","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\layout\\Task.js":"5","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\MainRouter.js":"6","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\EditProject.js":"7","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\cpm.js":"8","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\posts.js":"9","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\AssignedTo.js":"10","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Tagify\\SkillsInput.js":"11","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\taskComponents\\TrelloTask.js":"12","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Personal.js":"13","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\RoleEditView.js":"14","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\ProjectRecommendation.js":"15","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\DeleteUser.js":"16","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\App.js":"17","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\viewProject.js":"18","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\tasks.js":"19","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Following.js":"20","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\DeletePost.js":"21","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\Requests.js":"22","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\TextPost.js":"23","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\UserRecommender.js":"24"},{"size":4676,"mtime":1623055400837,"results":"25","hashOfConfig":"26"},{"size":46166,"mtime":1623131601845,"results":"27","hashOfConfig":"26"},{"size":1502,"mtime":1623109971704,"results":"28","hashOfConfig":"26"},{"size":28157,"mtime":1623127389994,"results":"29","hashOfConfig":"26"},{"size":684,"mtime":1618198716000,"results":"30","hashOfConfig":"26"},{"size":3011,"mtime":1622526659947,"results":"31","hashOfConfig":"26"},{"size":5907,"mtime":1619336138172,"results":"32","hashOfConfig":"26"},{"size":2698,"mtime":1623105117161,"results":"33","hashOfConfig":"26"},{"size":1999,"mtime":1622474182028,"results":"34","hashOfConfig":"26"},{"size":598,"mtime":1618198716000,"results":"35","hashOfConfig":"26"},{"size":499,"mtime":1618198716000,"results":"36","hashOfConfig":"26"},{"size":13699,"mtime":1622738474116,"results":"37","hashOfConfig":"26"},{"size":2382,"mtime":1621611019775,"results":"38","hashOfConfig":"26"},{"size":2630,"mtime":1619336085672,"results":"39","hashOfConfig":"26"},{"size":3713,"mtime":1622526660153,"results":"40","hashOfConfig":"26"},{"size":1156,"mtime":1618198716000,"results":"41","hashOfConfig":"26"},{"size":479,"mtime":1620823754762,"results":"42","hashOfConfig":"26"},{"size":10093,"mtime":1622526660402,"results":"43","hashOfConfig":"26"},{"size":533,"mtime":1619342435694,"results":"44","hashOfConfig":"26"},{"size":3208,"mtime":1622365940780,"results":"45","hashOfConfig":"26"},{"size":1276,"mtime":1621951154959,"results":"46","hashOfConfig":"26"},{"size":3344,"mtime":1622362145951,"results":"47","hashOfConfig":"26"},{"size":4031,"mtime":1621613775477,"results":"48","hashOfConfig":"26"},{"size":7727,"mtime":1623049819463,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"13vq143",{"filePath":"52","messages":"53","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\taskComponents\\EditModel.js",["100"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\ProjectDashboard.js",["101","102","103","104","105","106","107","108","109","110","111","112","113","114"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\projectStats.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\layout\\LayoutComponent.js",["115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148"],"import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport Pert from \"./Pert\";\r\nimport Task from \"./Task\";\r\nimport ReactFlow, {\r\n  addEdge,\r\n  Background,\r\n  Controls,\r\n  MiniMap,\r\n  removeElements,\r\n} from \"react-flow-renderer\";\r\nimport {\r\n  addTask,\r\n  getTasks,\r\n  putConnections,\r\n  deleteConnections,\r\n  getConnections,\r\n  putPredecessors,\r\n  putPosition,\r\n  putExpectedTime,\r\n  addToKickOutCounter,\r\n} from \"../apiProject\";\r\nimport jsPERT from \"js-pert\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport {\r\n  nodeAdded,\r\n  connectionAdded,\r\n  replaceNodes,\r\n  replaceConnections,\r\n  replaceElements,\r\n  setPert,\r\n  setExpectedTime,\r\n  setSlacks,\r\n  setCriticalPath,\r\n  setAllIdPertData,\r\n  setIdFromKey,\r\n} from \"../../store/cpm\";\r\nimport { notificationAdded } from \"../../store/notifications\";\r\nimport { updateTasks } from \"../../store/tasks\";\r\nimport { getCurrentUser, getUserById } from \"./../../user/apiUser\";\r\nimport moment from \"moment\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nconst styles = (theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 3, 3),\r\n  },\r\n});\r\nclass LayoutComponent extends Component {\r\n  state = {\r\n    elements: [],\r\n    tasks: [],\r\n    nodes: [],\r\n    kickoutusers: [],\r\n    pert: {},\r\n    task: {},\r\n    show: false,\r\n    checked: false,\r\n    bleh: 1,\r\n  };\r\n\r\n  onElementsRemove = (elementsToRemove) => {\r\n    if (this.props.project.leader.toString() === getCurrentUser()._id) {\r\n      let cons = this.props.connections;\r\n      const filteredConnections = cons.filter(\r\n        (con) => con.id !== elementsToRemove[0].id\r\n      );\r\n      this.props.replaceConnections({ connections: filteredConnections });\r\n      cons.map((con) => {\r\n        if (con.id === elementsToRemove[0].id) {\r\n          // console.log(con.id, elementsToRemove[0].id);\r\n          deleteConnections(this.props.project._id, con._id).then((data) => {\r\n            console.log(\"connection deleted\");\r\n            // this.pertCalc();\r\n          });\r\n          return;\r\n        }\r\n      });\r\n    }\r\n  };\r\n  onLoad = (reactFlowInstance) => {\r\n    reactFlowInstance.fitView();\r\n  };\r\n  onNodeDragStop = (e, node) => {\r\n    // console.log(node.position, node.data._id);\r\n    putPosition(this.props.project._id, node.data._id, node.position).then(\r\n      () => {\r\n        console.log(node.position + \" is saved\");\r\n      }\r\n    );\r\n  };\r\n  edgeInElements(elements, edge) {\r\n    let inside = false;\r\n    elements.map((elem) => {\r\n      if (elem.id.toString() === edge.id.toString()) {\r\n        inside = true;\r\n      }\r\n      return \"done\";\r\n    });\r\n    return inside;\r\n  }\r\n  onConnect = (params) => {\r\n    if (this.props.project.leader.toString() === getCurrentUser()._id) {\r\n      let source = params.source;\r\n      let target = params.target;\r\n      if (source !== undefined && target !== undefined) {\r\n        let edge = {\r\n          id:\r\n            \"reactflow__edge-\" +\r\n            source.toString() +\r\n            \"null-\" +\r\n            target.toString() +\r\n            \"null\",\r\n          source: source.toString(),\r\n          sourceHandle: null,\r\n          target: target.toString(),\r\n          targetHandle: null,\r\n        };\r\n        // console.log(this.state.elements);\r\n        let sourceId = \"\";\r\n        let targetId = \"\";\r\n        // console.log(this.props.nodes);\r\n        this.props.nodes.map((elem) => {\r\n          if (elem.id === source) {\r\n            sourceId = elem.key;\r\n          }\r\n          if (elem.id === target) {\r\n            targetId = elem.key;\r\n          }\r\n        });\r\n        putPredecessors(this.props.project._id, targetId, sourceId).then(() => {\r\n          console.log(sourceId + \" has new Predecessor \" + targetId);\r\n        });\r\n        // let ele = [...this.state.elements];\r\n        // if (!this.edgeInElements(ele, edge)) {\r\n        //   ele.push(edge);\r\n        putConnections(this.props.project._id, sourceId, targetId).then(() => {\r\n          console.log(\"connection \" + sourceId + \"to \" + targetId + \"added\");\r\n        });\r\n        // }\r\n        this.props.connectionAdded({ connection: edge });\r\n        // this.setState({ elements: ele });\r\n        // console.log(this.state.elements);\r\n        this.pertCalc();\r\n      }\r\n    }\r\n  };\r\n  getIdOfObjectId = (elemId) => {\r\n    let id = {};\r\n    const { nodes } = this.props;\r\n    id = nodes.map((elem) => {\r\n      if (elem.data !== undefined)\r\n        if (elem.data._id.toString() === elemId) {\r\n          id = elem.id;\r\n        }\r\n      return id;\r\n    });\r\n    return id[id.length - 1];\r\n  };\r\n  // handleClose = () => {\r\n  //   this.setState({ show: false });\r\n  // };\r\n  pertCalc = async () => {\r\n    // this.setState({ show: true });\r\n    // console.log(\"inside pertCalc:\", tasksObject);\r\n    let nodes = this.props.nodes.map((elem) => ({\r\n      ...elem,\r\n    }));\r\n    // let connections = this.props.connections.map((elem) => ({\r\n    //   ...elem,\r\n    // }));\r\n    // console.log(connections);\r\n    // let { connections } = this.props;\r\n    // console.log(\"props:\", this.props.connections);\r\n    // console.log(\"connections:\");\r\n    let ids = [];\r\n    this.props.connections.map((connection) => {\r\n      // console.log(connection.source, connection.target);\r\n      if (!ids.includes(connection.source)) {\r\n        ids.push(connection.source.toString());\r\n      }\r\n      if (!ids.includes(connection.target)) {\r\n        ids.push(connection.target.toString());\r\n      }\r\n    });\r\n    // console.log(\"nodes:\");\r\n    let newNodes = [];\r\n    nodes.map((node) => {\r\n      if (ids.includes(node.id)) newNodes.push(node);\r\n    });\r\n\r\n    let tasksObject = ids.includes(\"1\")\r\n      ? {\r\n          1: {\r\n            id: \"1\",\r\n            mostLikelyTime: 0,\r\n            optimisticTime: 0,\r\n            pessimisticTime: 0,\r\n            predecessors: [],\r\n          },\r\n        }\r\n      : {};\r\n    // console.log(\"TasksObject before node addition:\", tasksObject);\r\n    // console.log(ids);\r\n    // console.log(\"nodes sent for pertcalc:\", newNodes);\r\n    newNodes.map((elem) => {\r\n      if (\r\n        elem.data.predecessors.length === 0 ||\r\n        elem.data.predecessors === undefined\r\n      )\r\n        return;\r\n      elem.data.predecessors.map((pre, index) => {\r\n        let id = this.getIdOfObjectId(pre.toString());\r\n        // console.log(id);\r\n        let predecessors = [...elem.data.predecessors];\r\n        predecessors[index] = id.toString();\r\n        elem.data = { ...elem.data, predecessors };\r\n      });\r\n    });\r\n    // console.log(nodes);\r\n    tasksObject = newNodes.map((elem) => {\r\n      // console.log(\"tasksObject node:\", elem);\r\n      tasksObject[elem.id.toString()] = {\r\n        id: elem.id.toString(),\r\n        optimisticTime: elem.data.optimistic,\r\n        mostLikelyTime: elem.data.time,\r\n        pessimisticTime: elem.data.pessimistic,\r\n        predecessors: elem.data.predecessors,\r\n      };\r\n      return tasksObject;\r\n    });\r\n    let tasksObjectFinal = tasksObject[tasksObject.length - 1];\r\n    // console.log(\"TasksObject:\");\r\n    // console.log(\"taskObject:\", tasksObjectFinal);\r\n    // console.log(\"Pert:\");\r\n    let pert = {};\r\n    // console.log(\"gonna set pert\");\r\n    try {\r\n      // if (tasksObject[1] !== undefined) {\r\n      // console.log(tasksObject[1]);\r\n      console.log(tasksObjectFinal);\r\n      pert = jsPERT(tasksObjectFinal);\r\n      this.props.setPert({ pert });\r\n      console.log(this.props.pert);\r\n      // this.props.setSlacks({ slackObject: this.props.pert.slack });\r\n      // console.log(\"slacks:\");\r\n\r\n      let slackObject = {};\r\n      slackObject = newNodes.map((elem, index) => {\r\n        // console.log(elem.id, pert.slack[elem.id]);\r\n        if (index !== 0 && index !== 1) {\r\n          // console.log(\"Slack elem:\", elem);                           // Website design layout\r\n          console.log(\"index:\", index);\r\n          console.log(\"task:\", elem.data.label);\r\n          let created = elem.data.created;\r\n\r\n          // let earliestFinish = new Date(\r\n          //   pert.earliestFinishTimes[index] + created\r\n          // ); // 23/5 + 3\r\n          let createdDate = new Date(created);\r\n          let earliestFinish = moment(createdDate, \"DD-MM-YYYY\").add(\r\n            pert.earliestFinishTimes[index + 1],\r\n            \"days\"\r\n          );\r\n          earliestFinish = earliestFinish._d;\r\n          // let slack = new Date(pert.slack[elem.id]);\r\n          const diffTime = Math.abs(earliestFinish - createdDate);\r\n          const duration = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n          // console.log(duration);\r\n          let today = new Date();\r\n          let todayDate = new Date(today.toUTCString()); // 25/5\r\n          let earliestStart = moment(createdDate, \"DD-MM-YYYY\").add(\r\n            +pert.earliestStartTimes[index + 1],\r\n            \"days\"\r\n          );\r\n          earliestStart = earliestStart._d;\r\n          // console.log(todayDate, startTime._d);\r\n          const diffTime2 = Math.abs(todayDate - earliestStart);\r\n          let daysDone = Math.ceil(diffTime2 / (1000 * 60 * 60 * 24));\r\n          // console.log(daysDone);\r\n          let finaldiff = Math.abs(duration - daysDone);\r\n          let days = Math.round(\r\n            (earliestFinish - todayDate) / (1000 * 60 * 60 * 24)\r\n          );\r\n          console.log(earliestStart, todayDate, earliestFinish);\r\n          console.log(\r\n            \"no. of days done:\",\r\n            Math.round(todayDate - earliestStart) / (1000 * 60 * 60 * 24)\r\n          );\r\n          console.log(\r\n            \"no. of days left:\",\r\n            Math.round((earliestFinish - todayDate) / (1000 * 60 * 60 * 24))\r\n          );\r\n          days = pert.slack[elem.id] !== 0 ? days + pert.slack[elem.id] : days;\r\n          // 23/5 25/5 26/5\r\n          // console.log(\"slack:\", pert.slack[elem.id]);\r\n          // console.log(\"day1:\", duration);\r\n          // console.log(\"day2:\", daysDone);\r\n          // console.log(\"days left:\", days);\r\n          // console.log(\"Overdue\", days >= 0 ? false : true);\r\n          // console.log(elem.data.label + \" \" + days + \" \" + pert.slack[elem.id]);\r\n          // console.log(days < 0 ? \"overdue\" : \"not\");\r\n          if (days < 0) {\r\n            // console.log(\"overdue:\", days);\r\n            elem.data.assignedTo.map((person, i) => {\r\n              addToKickOutCounter(\r\n                elem.key,\r\n                person,\r\n                this.props.project._id\r\n              ).then((data) => {\r\n                if (i === elem.data.assignedTo.length - 1) {\r\n                  // console.log(data.result.overdueCounter);\r\n                  let overdues = data.result.overdueCounter;\r\n                  console.log(overdues);\r\n                  let { kickoutusers } = this.state;\r\n                  Object.keys(overdues).map(async (user) => {\r\n                    if (\r\n                      overdues[user].length === 3 &&\r\n                      user !== this.props.project.leader &&\r\n                      !kickoutusers.includes(user)\r\n                    ) {\r\n                      console.log(\"time to kick out +_+\");\r\n                      let userObj = await getUserById(user);\r\n                      // console.log(userObj);\r\n                      let username = userObj.user.name;\r\n                      // console.log();\r\n                      kickoutusers.push(user);\r\n                      this.setState({ kickoutusers });\r\n                      this.props.notificationAdded({\r\n                        userId: getCurrentUser()._id,\r\n                        message: `3 hits, time to kick out ${username} in ${this.props.project.title}`,\r\n                        type: \"KickOutUser\",\r\n                        userObjId: user,\r\n                        project: this.props.project,\r\n                      });\r\n                      toast.error(`Warning : 3 overdues by ${username}`);\r\n                    }\r\n                  });\r\n                }\r\n              });\r\n            });\r\n          }\r\n          slackObject[elem.data.label] = {\r\n            id: elem.data._id,\r\n            slack: pert.slack[elem.id],\r\n            days: days,\r\n            daysPassed: Math.round(\r\n              (todayDate - earliestStart) / (1000 * 60 * 60 * 24)\r\n            ),\r\n            earliestStartDate: earliestStart,\r\n            todayDate: todayDate,\r\n            earliestFinishDate: earliestFinish,\r\n            overdue: days >= 0 ? false : true,\r\n          };\r\n          return slackObject;\r\n        }\r\n      });\r\n      console.log(\"slacks Object:\", slackObject[slackObject.length - 1]);\r\n      let obj = slackObject[slackObject.length - 1];\r\n      this.props.setSlacks({ slackObject: obj });\r\n\r\n      let newNodesKeyObject = {};\r\n      newNodesKeyObject = newNodes.map((node) => {\r\n        newNodesKeyObject[node.key] = node.id;\r\n        return newNodesKeyObject;\r\n      });\r\n      newNodesKeyObject = newNodesKeyObject[newNodesKeyObject.length - 1];\r\n      // console.log(\"newNodesKeysObject:\", newNodesKeyObject);\r\n      this.props.setIdFromKey({ idFromKeyObject: newNodesKeyObject });\r\n\r\n      let newNodesIdObject = {};\r\n      newNodesIdObject = newNodes.map((node) => {\r\n        newNodesIdObject[node.id] = node.data;\r\n        return newNodesIdObject;\r\n      });\r\n      newNodesIdObject = newNodesIdObject[newNodesIdObject.length - 1];\r\n      // console.log(\"newNodes:\", newNodes);\r\n      // console.log(\"newNodesObject:\", newNodesObject);\r\n      let criticalPathData = {};\r\n      criticalPathData = pert.criticalPath.map((id) => {\r\n        criticalPathData[id] = newNodesIdObject[id];\r\n        return criticalPathData;\r\n      });\r\n      criticalPathData = criticalPathData[criticalPathData.length - 1];\r\n      console.log(\"Objects available:\", newNodesIdObject, newNodesKeyObject);\r\n      // console.log(\"criticalPathDataObject:\", criticalPathData);\r\n\r\n      // let pertValues = {};\r\n      // const promises = pert.criticalPath.map((id) => {\r\n      //   let obj = {\r\n      //     earliestStart: pert.earliestStartTimes[id],\r\n      //     earliestFinish: pert.earliestFinishTimes[id],\r\n      //     latestStart: pert.latestStartTimes[id],\r\n      //     latestFinish: pert.latestFinishTimes[id],\r\n      //     slack: pert.slack[id],\r\n      //     expectedTime: pert.activityParams[id].expectedTime,\r\n      //     variance: pert.activityParams[id].variance,\r\n      //   };\r\n      //   pertValues[newNodesIdObject[id]._id] = obj;\r\n      //   return pertValues;\r\n      // });\r\n      // pertValues = await Promise.all(promises);\r\n      let pertValues = {};\r\n      pertValues[\"criticalPath\"] = pert.criticalPath;\r\n      let promises = await Object.keys(pert.network).map((key, index) => {\r\n        if (key !== \"__start\" && key !== \"__end\") {\r\n          // console.log(key);\r\n          // console.log(pert.earliestFinishTimes);\r\n          pertValues[key] = {\r\n            expectedTime: pert.activitiesParams[key].expectedTime,\r\n            variance: pert.activitiesParams[key].variance,\r\n            earliestFinish: pert.earliestFinishTimes[key],\r\n            earliestStart: pert.earliestStartTimes[key],\r\n            latestFinish: pert.latestFinishTimes[key],\r\n            latestStart: pert.latestStartTimes[key],\r\n            network: pert.network[key],\r\n            slack: pert.slack[key],\r\n          };\r\n          // if (index === Object.keys(pert.network).length - 3) return pertValues;\r\n        }\r\n        return pertValues;\r\n      });\r\n      let data = promises[promises.length - 1];\r\n      // console.log(\"all pert:\", pert);\r\n      this.props.setCriticalPath({ criticalPath: criticalPathData });\r\n\r\n      this.props.setExpectedTime({\r\n        expectedTime: Math.floor(this.props.pert.latestFinishTimes.__end),\r\n      });\r\n\r\n      this.props.setAllIdPertData({ pertData: data });\r\n      putExpectedTime(\r\n        this.props.project._id,\r\n        Math.floor(this.props.pert.latestFinishTimes.__end)\r\n      );\r\n      // }\r\n    } catch (err) {\r\n      // console.log(err);\r\n      this.props.setPert({ pert: {} });\r\n      // console.log(this.props.pert);\r\n      this.props.setExpectedTime({\r\n        expectedTime: 0,\r\n      });\r\n      putExpectedTime(this.props.project._id, 0);\r\n    }\r\n    // this.setState({ pert });\r\n  };\r\n  onElementClick = (event, element) => {\r\n    console.log(element);\r\n  };\r\n  componentDidMount() {\r\n    let newNodes = [];\r\n\r\n    getTasks(this.props.project._id).then((data) => {\r\n      // console.log(data.tasks);\r\n      const tasks = data.tasks;\r\n      let newTasks = [];\r\n      tasks.map((task) => {\r\n        newTasks.push({ ...task });\r\n      });\r\n      newTasks.map((task) => {\r\n        task[\"label\"] = task.taskName;\r\n        task[\"description\"] = task.description;\r\n        task[\"time\"] = task.mostLikelyTime;\r\n        task[\"optimistic\"] = task.optimisticTime;\r\n        task[\"pessimistic\"] = task.pessimisticTime;\r\n        if (\r\n          task.taskName !== \"Completed!!\" &&\r\n          task.taskName !== \"Lets Start Working\"\r\n        ) {\r\n          let newNode = {\r\n            key: task._id,\r\n            id: (newNodes.length + 1).toString(),\r\n            data: task,\r\n            sourcePosition: \"right\",\r\n            targetPosition: \"left\",\r\n            position:\r\n              task.position !== undefined\r\n                ? task.position\r\n                : {\r\n                    x: (Math.random() * window.innerWidth) / 2,\r\n                    y: (Math.random() * window.innerHeight) / 2,\r\n                  },\r\n          };\r\n          newNodes.push(newNode);\r\n        }\r\n        if (task.taskName === \"Lets Start Working\") {\r\n          let ele = [...this.state.elements];\r\n          let newNode = {\r\n            key: task._id,\r\n            id: \"1\",\r\n            type: \"input\",\r\n            data: {\r\n              label: \"Lets Start Working\",\r\n              description: \"Start working on tasks to complete project on time\",\r\n              pessimistic: 0,\r\n              time: 0,\r\n              optimistic: 0,\r\n              predecessors: [],\r\n              _id: task._id,\r\n            },\r\n            sourcePosition: \"right\",\r\n            position:\r\n              task.position !== undefined ? task.position : { x: 0, y: 0 },\r\n          };\r\n          newNodes.push(newNode);\r\n        }\r\n        if (task.taskName === \"Completed!!\") {\r\n          let ele = [...this.state.elements];\r\n          let newNode = {\r\n            key: task._id,\r\n            id: \"2\",\r\n            type: \"output\",\r\n            data: {\r\n              label: \"Completed!!\",\r\n              description: \"Yaaayy you gus have completed the project\",\r\n              pessimistic: 0,\r\n              time: 0,\r\n              optimistic: 0,\r\n              predecessors: task.predecessors,\r\n              _id: task._id,\r\n            },\r\n            targetPosition: \"left\",\r\n            position:\r\n              task.position !== undefined ? task.position : { x: 500, y: 0 },\r\n          };\r\n          newNodes.push(newNode);\r\n        }\r\n      });\r\n      this.props.replaceNodes({ nodes: newNodes });\r\n      // console.log(\"Mount nodes:\", this.props.nodes);\r\n    });\r\n    getConnections(this.props.project._id)\r\n      .then((data) => {\r\n        let connections = [];\r\n        data.connections.map((link) => {\r\n          newNodes.map((elem) => {\r\n            if (elem.key !== undefined) {\r\n              if (link.from.toString() === elem.key.toString()) {\r\n                this.setState({ source: elem });\r\n              }\r\n              if (link.to.toString() === elem.key.toString()) {\r\n                this.setState({ target: elem });\r\n              }\r\n            }\r\n          });\r\n          let source = this.state.source;\r\n          let target = this.state.target;\r\n          if (source !== undefined && target !== undefined) {\r\n            let edge = {\r\n              id:\r\n                \"reactflow__edge-\" +\r\n                source.id.toString() +\r\n                \"null-\" +\r\n                target.id.toString() +\r\n                \"null\",\r\n              source: source.id.toString(),\r\n              sourceHandle: null,\r\n              target: target.id.toString(),\r\n              targetHandle: null,\r\n              _id: link._id,\r\n            };\r\n            connections.push(edge);\r\n          }\r\n          return \"done\";\r\n        });\r\n        // console.log(connections);\r\n        this.props.replaceConnections({ connections: connections });\r\n      })\r\n      .then(() => {\r\n        this.pertCalc();\r\n      });\r\n  }\r\n  componentDidUpdate(prevState, prevProps) {\r\n    if (this.props.connections.length !== prevState.connections.length) {\r\n      this.pertCalc();\r\n      // console.log(prevState.connections.length, this.props.connections.length);\r\n      // console.log(\"Pert from comp update:\", this.props.pert);\r\n      // console.log(\"Pert calculation nodes:\", this.props.nodes);\r\n    }\r\n    if (prevState.tasks.length !== this.props.tasks.length) {\r\n      const { tasks } = this.props;\r\n      let newTasks = [];\r\n      tasks.map((task) => {\r\n        newTasks.push({ ...task });\r\n      });\r\n      let newNodes = [];\r\n      newTasks.map((task) => {\r\n        task[\"label\"] = task.taskName;\r\n        task[\"description\"] = task.description;\r\n        task[\"time\"] = task.mostLikelyTime;\r\n        task[\"optimistic\"] = task.optimisticTime;\r\n        task[\"pessimistic\"] = task.pessimisticTime;\r\n        if (\r\n          task.taskName !== \"Completed!!\" &&\r\n          task.taskName !== \"Lets Start Working\"\r\n        ) {\r\n          let newNode = {\r\n            key: task._id,\r\n            id: (newNodes.length + 1).toString(),\r\n            data: task,\r\n            sourcePosition: \"right\",\r\n            targetPosition: \"left\",\r\n            position:\r\n              task.position !== undefined\r\n                ? task.position\r\n                : {\r\n                    x: (Math.random() * window.innerWidth) / 2,\r\n                    y: (Math.random() * window.innerHeight) / 2,\r\n                  },\r\n          };\r\n          newNodes.push(newNode);\r\n        }\r\n        if (task.taskName === \"Lets Start Working\") {\r\n          let ele = [...this.state.elements];\r\n          let newNode = {\r\n            key: task._id,\r\n            id: \"1\",\r\n            type: \"input\",\r\n            data: {\r\n              label: \"Lets Start Working\",\r\n              description: \"Start working on tasks to complete project on time\",\r\n              pessimistic: 0,\r\n              time: 0,\r\n              optimistic: 0,\r\n              predecessors: [],\r\n              _id: task._id,\r\n            },\r\n            sourcePosition: \"right\",\r\n            position:\r\n              task.position !== undefined ? task.position : { x: 0, y: 0 },\r\n          };\r\n          newNodes.push(newNode);\r\n        }\r\n        if (task.taskName === \"Completed!!\") {\r\n          let ele = [...this.state.elements];\r\n          let newNode = {\r\n            key: task._id,\r\n            id: \"2\",\r\n            type: \"output\",\r\n            data: {\r\n              label: \"Completed!!\",\r\n              description: \"Yaaayy you gus have completed the project\",\r\n              pessimistic: 0,\r\n              time: 0,\r\n              optimistic: 0,\r\n              predecessors: task.predecessors,\r\n              _id: task._id,\r\n            },\r\n            targetPosition: \"left\",\r\n            position:\r\n              task.position !== undefined ? task.position : { x: 500, y: 0 },\r\n          };\r\n          newNodes.push(newNode);\r\n        }\r\n      });\r\n      this.props.replaceNodes({ nodes: newNodes });\r\n      if (this.props.connections.length === 0) {\r\n        getConnections(this.props.project._id)\r\n          .then((data) => {\r\n            let connections = [];\r\n            data.connections.map((link) => {\r\n              newNodes.map((elem) => {\r\n                if (elem.key !== undefined) {\r\n                  if (link.from.toString() === elem.key.toString()) {\r\n                    this.setState({ source: elem });\r\n                  }\r\n                  if (link.to.toString() === elem.key.toString()) {\r\n                    this.setState({ target: elem });\r\n                  }\r\n                }\r\n              });\r\n              let source = this.state.source;\r\n              let target = this.state.target;\r\n              let edge = {\r\n                id:\r\n                  \"reactflow__edge-\" +\r\n                  source.id.toString() +\r\n                  \"null-\" +\r\n                  target.id.toString() +\r\n                  \"null\",\r\n                source: source.id.toString(),\r\n                sourceHandle: null,\r\n                target: target.id.toString(),\r\n                targetHandle: null,\r\n                _id: link._id,\r\n              };\r\n              connections.push(edge);\r\n\r\n              return \"done\";\r\n            });\r\n            // console.log(connections);\r\n            this.props.replaceConnections({ connections: connections });\r\n          })\r\n          .then(() => {\r\n            this.pertCalc();\r\n          });\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    if (this.props.tasks.length === 0) return <div>No tasks</div>;\r\n    const { nodes, connections, tasks } = this.props;\r\n    const { status } = this.props.project;\r\n    let connectCheck = status === \"Completed\" ? false : true;\r\n    const elements = [];\r\n    nodes.map((node) => {\r\n      elements.push({ ...node });\r\n    });\r\n    connections.map((connection) => {\r\n      elements.push({ ...connection });\r\n    });\r\n    // console.log(\"nodes:\", nodes);\r\n    return (\r\n      <div>\r\n        {/* <ToastContainer /> */}\r\n        <div className=\"container-fluid\">\r\n          <ReactFlow\r\n            elements={elements}\r\n            onLoad={this.onLoad}\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"65vh\",\r\n              backgroundColor: \"#1A192B\",\r\n            }}\r\n            onNodeDragStop={this.onNodeDragStop}\r\n            onConnect={this.onConnect}\r\n            onElementClick={this.onElementClick}\r\n            onElementsRemove={this.onElementsRemove}\r\n            connectionLineStyle={{ stroke: \"#ddd\", strokeWidth: 2 }}\r\n            connectionLineType=\"bezier\"\r\n            snapToGrid={true}\r\n            snapGrid={[16, 16]}\r\n            nodesConnectable={connectCheck}\r\n            nodesDraggable={connectCheck}\r\n            defaultZoom={1}\r\n          >\r\n            <Background color=\"#888\" gap={16} />\r\n            <MiniMap\r\n              nodeColor={(n) => {\r\n                if (n.type === \"input\") return \"#DC143C\";\r\n                if (n.type === \"output\") return \"#90ee90\";\r\n                return \"cyan\";\r\n              }}\r\n            />\r\n            <Controls />\r\n          </ReactFlow>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  nodes: state.cpm.nodes,\r\n  connections: state.cpm.connections,\r\n  state: state,\r\n  notifications: state.notifications.notifications,\r\n  tasks: state.tasks.tasks,\r\n  elements: state.cpm.elements,\r\n  pert: state.cpm.pert,\r\n  slacks: state.cpm.slacks,\r\n  criticalPath: state.cpm.criticalPath,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  nodeAdded: (params) => dispatch(nodeAdded(params)),\r\n  connectionAdded: (params) => dispatch(connectionAdded(params)),\r\n  updateTasks: (params) => dispatch(updateTasks(params)),\r\n  replaceNodes: (params) => dispatch(replaceNodes(params)),\r\n  replaceConnections: (params) => dispatch(replaceConnections(params)),\r\n  replaceElements: (params) => dispatch(replaceElements(params)),\r\n  setPert: (params) => dispatch(setPert(params)),\r\n  setExpectedTime: (params) => dispatch(setExpectedTime(params)),\r\n  setSlacks: (params) => dispatch(setSlacks(params)),\r\n  setCriticalPath: (params) => dispatch(setCriticalPath(params)),\r\n  notificationAdded: (params) => dispatch(notificationAdded(params)),\r\n  setAllIdPertData: (params) => dispatch(setAllIdPertData(params)),\r\n  setIdFromKey: (params) => dispatch(setIdFromKey(params)),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(styles)(LayoutComponent));\r\n",["149","150"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\layout\\Task.js",["151"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\MainRouter.js",["152","153","154","155","156","157","158"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\EditProject.js",["159"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\cpm.js",["160","161","162"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\posts.js",["163"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\AssignedTo.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Tagify\\SkillsInput.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\taskComponents\\TrelloTask.js",["164"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Personal.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\RoleEditView.js",["165","166"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\ProjectRecommendation.js",["167","168"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\DeleteUser.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\App.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\viewProject.js",["169","170"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\tasks.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Following.js",["171","172","173"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\DeletePost.js",["174","175","176","177"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\Requests.js",["178"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\TextPost.js",["179","180","181"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\UserRecommender.js",["182","183","184","185","186"],{"ruleId":"187","severity":1,"message":"188","line":31,"column":32,"nodeType":"189","messageId":"190","endLine":31,"endColumn":34},{"ruleId":"191","severity":1,"message":"192","line":2,"column":10,"nodeType":"193","messageId":"194","endLine":2,"endColumn":19},{"ruleId":"191","severity":1,"message":"195","line":2,"column":21,"nodeType":"193","messageId":"194","endLine":2,"endColumn":25},{"ruleId":"191","severity":1,"message":"196","line":2,"column":27,"nodeType":"193","messageId":"194","endLine":2,"endColumn":33},{"ruleId":"191","severity":1,"message":"197","line":29,"column":8,"nodeType":"193","messageId":"194","endLine":29,"endColumn":17},{"ruleId":"187","severity":1,"message":"188","line":87,"column":22,"nodeType":"189","messageId":"190","endLine":87,"endColumn":24},{"ruleId":"191","severity":1,"message":"198","line":104,"column":9,"nodeType":"193","messageId":"194","endLine":104,"endColumn":14},{"ruleId":"191","severity":1,"message":"199","line":128,"column":44,"nodeType":"193","messageId":"194","endLine":128,"endColumn":56},{"ruleId":"187","severity":1,"message":"188","line":159,"column":26,"nodeType":"189","messageId":"190","endLine":159,"endColumn":28},{"ruleId":"191","severity":1,"message":"200","line":230,"column":13,"nodeType":"193","messageId":"194","endLine":230,"endColumn":28},{"ruleId":"191","severity":1,"message":"201","line":256,"column":29,"nodeType":"193","messageId":"194","endLine":256,"endColumn":42},{"ruleId":"191","severity":1,"message":"202","line":305,"column":27,"nodeType":"193","messageId":"194","endLine":305,"endColumn":40},{"ruleId":"191","severity":1,"message":"200","line":313,"column":9,"nodeType":"193","messageId":"194","endLine":313,"endColumn":24},{"ruleId":"191","severity":1,"message":"203","line":477,"column":11,"nodeType":"193","messageId":"194","endLine":477,"endColumn":19},{"ruleId":"187","severity":1,"message":"204","line":974,"column":42,"nodeType":"189","messageId":"205","endLine":974,"endColumn":44},{"ruleId":"191","severity":1,"message":"206","line":3,"column":10,"nodeType":"193","messageId":"194","endLine":3,"endColumn":15},{"ruleId":"191","severity":1,"message":"207","line":5,"column":8,"nodeType":"193","messageId":"194","endLine":5,"endColumn":12},{"ruleId":"191","severity":1,"message":"208","line":6,"column":8,"nodeType":"193","messageId":"194","endLine":6,"endColumn":12},{"ruleId":"191","severity":1,"message":"209","line":8,"column":3,"nodeType":"193","messageId":"194","endLine":8,"endColumn":10},{"ruleId":"191","severity":1,"message":"210","line":12,"column":3,"nodeType":"193","messageId":"194","endLine":12,"endColumn":17},{"ruleId":"191","severity":1,"message":"211","line":15,"column":3,"nodeType":"193","messageId":"194","endLine":15,"endColumn":10},{"ruleId":"191","severity":1,"message":"196","line":26,"column":10,"nodeType":"193","messageId":"194","endLine":26,"endColumn":16},{"ruleId":"191","severity":1,"message":"212","line":44,"column":17,"nodeType":"193","messageId":"194","endLine":44,"endColumn":31},{"ruleId":"187","severity":1,"message":"204","line":78,"column":22,"nodeType":"189","messageId":"205","endLine":78,"endColumn":24},{"ruleId":"187","severity":1,"message":"188","line":85,"column":11,"nodeType":"213","messageId":"214","endLine":85,"endColumn":18},{"ruleId":"187","severity":1,"message":"188","line":132,"column":37,"nodeType":"189","messageId":"190","endLine":132,"endColumn":39},{"ruleId":"187","severity":1,"message":"188","line":186,"column":45,"nodeType":"189","messageId":"190","endLine":186,"endColumn":47},{"ruleId":"187","severity":1,"message":"188","line":197,"column":22,"nodeType":"189","messageId":"190","endLine":197,"endColumn":24},{"ruleId":"187","severity":1,"message":"204","line":215,"column":25,"nodeType":"189","messageId":"205","endLine":215,"endColumn":27},{"ruleId":"187","severity":1,"message":"188","line":220,"column":9,"nodeType":"213","messageId":"214","endLine":220,"endColumn":16},{"ruleId":"187","severity":1,"message":"188","line":221,"column":47,"nodeType":"189","messageId":"190","endLine":221,"endColumn":49},{"ruleId":"187","severity":1,"message":"204","line":258,"column":48,"nodeType":"189","messageId":"205","endLine":258,"endColumn":50},{"ruleId":"191","severity":1,"message":"215","line":290,"column":15,"nodeType":"193","messageId":"194","endLine":290,"endColumn":24},{"ruleId":"187","severity":1,"message":"188","line":314,"column":50,"nodeType":"189","messageId":"190","endLine":314,"endColumn":52},{"ruleId":"187","severity":1,"message":"188","line":467,"column":24,"nodeType":"189","messageId":"190","endLine":467,"endColumn":26},{"ruleId":"187","severity":1,"message":"188","line":470,"column":27,"nodeType":"189","messageId":"190","endLine":470,"endColumn":29},{"ruleId":"216","severity":1,"message":"217","line":472,"column":31,"nodeType":"218","messageId":"219","endLine":472,"endColumn":47},{"ruleId":"191","severity":1,"message":"220","line":497,"column":15,"nodeType":"193","messageId":"194","endLine":497,"endColumn":18},{"ruleId":"191","severity":1,"message":"220","line":518,"column":15,"nodeType":"193","messageId":"194","endLine":518,"endColumn":18},{"ruleId":"187","severity":1,"message":"188","line":546,"column":31,"nodeType":"189","messageId":"190","endLine":546,"endColumn":33},{"ruleId":"187","severity":1,"message":"188","line":593,"column":24,"nodeType":"189","messageId":"190","endLine":593,"endColumn":26},{"ruleId":"187","severity":1,"message":"188","line":597,"column":27,"nodeType":"189","messageId":"190","endLine":597,"endColumn":29},{"ruleId":"216","severity":1,"message":"217","line":599,"column":31,"nodeType":"218","messageId":"219","endLine":599,"endColumn":47},{"ruleId":"191","severity":1,"message":"220","line":624,"column":15,"nodeType":"193","messageId":"194","endLine":624,"endColumn":18},{"ruleId":"191","severity":1,"message":"220","line":645,"column":15,"nodeType":"193","messageId":"194","endLine":645,"endColumn":18},{"ruleId":"187","severity":1,"message":"188","line":672,"column":35,"nodeType":"189","messageId":"190","endLine":672,"endColumn":37},{"ruleId":"191","severity":1,"message":"221","line":712,"column":33,"nodeType":"193","messageId":"194","endLine":712,"endColumn":38},{"ruleId":"187","severity":1,"message":"188","line":716,"column":22,"nodeType":"189","messageId":"190","endLine":716,"endColumn":24},{"ruleId":"187","severity":1,"message":"188","line":719,"column":34,"nodeType":"189","messageId":"190","endLine":719,"endColumn":36},{"ruleId":"222","replacedBy":"223"},{"ruleId":"224","replacedBy":"225"},{"ruleId":"187","severity":1,"message":"204","line":8,"column":42,"nodeType":"189","messageId":"205","endLine":8,"endColumn":44},{"ruleId":"191","severity":1,"message":"226","line":1,"column":17,"nodeType":"193","messageId":"194","endLine":1,"endColumn":26},{"ruleId":"191","severity":1,"message":"227","line":2,"column":25,"nodeType":"193","messageId":"194","endLine":2,"endColumn":29},{"ruleId":"191","severity":1,"message":"228","line":11,"column":8,"nodeType":"193","messageId":"194","endLine":11,"endColumn":14},{"ruleId":"191","severity":1,"message":"229","line":21,"column":8,"nodeType":"193","messageId":"194","endLine":21,"endColumn":17},{"ruleId":"191","severity":1,"message":"230","line":22,"column":8,"nodeType":"193","messageId":"194","endLine":22,"endColumn":13},{"ruleId":"191","severity":1,"message":"231","line":23,"column":10,"nodeType":"193","messageId":"194","endLine":23,"endColumn":15},{"ruleId":"191","severity":1,"message":"232","line":29,"column":9,"nodeType":"193","messageId":"194","endLine":29,"endColumn":17},{"ruleId":"187","severity":1,"message":"188","line":34,"column":32,"nodeType":"189","messageId":"190","endLine":34,"endColumn":34},{"ruleId":"191","severity":1,"message":"233","line":2,"column":10,"nodeType":"193","messageId":"194","endLine":2,"endColumn":18},{"ruleId":"191","severity":1,"message":"234","line":4,"column":5,"nodeType":"193","messageId":"194","endLine":4,"endColumn":15},{"ruleId":"191","severity":1,"message":"235","line":5,"column":5,"nodeType":"193","messageId":"194","endLine":5,"endColumn":21},{"ruleId":"191","severity":1,"message":"236","line":2,"column":10,"nodeType":"193","messageId":"194","endLine":2,"endColumn":24},{"ruleId":"191","severity":1,"message":"237","line":11,"column":8,"nodeType":"193","messageId":"194","endLine":11,"endColumn":14},{"ruleId":"191","severity":1,"message":"238","line":76,"column":9,"nodeType":"193","messageId":"194","endLine":76,"endColumn":17},{"ruleId":"191","severity":1,"message":"239","line":77,"column":9,"nodeType":"193","messageId":"194","endLine":77,"endColumn":19},{"ruleId":"191","severity":1,"message":"240","line":5,"column":8,"nodeType":"193","messageId":"194","endLine":5,"endColumn":19},{"ruleId":"241","severity":1,"message":"242","line":100,"column":65,"nodeType":"243","messageId":"244","endLine":100,"endColumn":67},{"ruleId":"191","severity":1,"message":"212","line":8,"column":10,"nodeType":"193","messageId":"194","endLine":8,"endColumn":24},{"ruleId":"187","severity":1,"message":"188","line":27,"column":35,"nodeType":"189","messageId":"190","endLine":27,"endColumn":37},{"ruleId":"191","severity":1,"message":"245","line":13,"column":10,"nodeType":"193","messageId":"194","endLine":13,"endColumn":24},{"ruleId":"187","severity":1,"message":"188","line":19,"column":26,"nodeType":"189","messageId":"190","endLine":19,"endColumn":28},{"ruleId":"246","severity":1,"message":"247","line":27,"column":6,"nodeType":"248","endLine":27,"endColumn":8,"suggestions":"249"},{"ruleId":"191","severity":1,"message":"196","line":3,"column":10,"nodeType":"193","messageId":"194","endLine":3,"endColumn":16},{"ruleId":"191","severity":1,"message":"250","line":3,"column":18,"nodeType":"193","messageId":"194","endLine":3,"endColumn":32},{"ruleId":"191","severity":1,"message":"251","line":3,"column":34,"nodeType":"193","messageId":"194","endLine":3,"endColumn":41},{"ruleId":"191","severity":1,"message":"252","line":12,"column":21,"nodeType":"193","messageId":"194","endLine":12,"endColumn":25},{"ruleId":"191","severity":1,"message":"253","line":20,"column":11,"nodeType":"193","messageId":"194","endLine":20,"endColumn":14},{"ruleId":"191","severity":1,"message":"227","line":4,"column":10,"nodeType":"193","messageId":"194","endLine":4,"endColumn":14},{"ruleId":"191","severity":1,"message":"254","line":7,"column":26,"nodeType":"193","messageId":"194","endLine":7,"endColumn":43},{"ruleId":"246","severity":1,"message":"255","line":33,"column":6,"nodeType":"248","endLine":33,"endColumn":18,"suggestions":"256"},{"ruleId":"191","severity":1,"message":"257","line":2,"column":10,"nodeType":"193","messageId":"194","endLine":2,"endColumn":24},{"ruleId":"187","severity":1,"message":"188","line":75,"column":37,"nodeType":"189","messageId":"190","endLine":75,"endColumn":39},{"ruleId":"187","severity":1,"message":"188","line":83,"column":30,"nodeType":"189","messageId":"190","endLine":83,"endColumn":32},{"ruleId":"187","severity":1,"message":"188","line":135,"column":22,"nodeType":"189","messageId":"190","endLine":135,"endColumn":24},{"ruleId":"187","severity":1,"message":"188","line":140,"column":22,"nodeType":"189","messageId":"190","endLine":140,"endColumn":24},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'Accordion' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","'Button' is defined but never used.","'StartIcon' is defined but never used.","'names' is assigned a value but never used.","'criticalPath' is assigned a value but never used.","'keyFromIdObject' is assigned a value but never used.","'earliestStart' is assigned a value but never used.","'allIdPertData' is assigned a value but never used.","'duration' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'Modal' is defined but never used.","'Pert' is defined but never used.","'Task' is defined but never used.","'addEdge' is defined but never used.","'removeElements' is defined but never used.","'addTask' is defined but never used.","'ToastContainer' is defined but never used.","ReturnStatement","expectedReturnValue","'finaldiff' is assigned a value but never used.","no-self-assign","'task.description' is assigned to itself.","MemberExpression","selfAssignment","'ele' is assigned a value but never used.","'tasks' is assigned a value but never used.","no-native-reassign",["258"],"no-negated-in-lhs",["259"],"'useEffect' is defined but never used.","'Link' is defined but never used.","'NavBar' is defined but never used.","'LiveClock' is defined but never used.","'dayjs' is defined but never used.","'Badge' is defined but never used.","'dispatch' is assigned a value but never used.","'getTasks' is defined but never used.","'lastNodeId' is assigned a value but never used.","'lastConnectionId' is assigned a value but never used.","'getLikesOfPost' is defined but never used.","'moment' is defined but never used.","'roleName' is assigned a value but never used.","'roleSkills' is assigned a value but never used.","'JoinProject' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'followingUsers' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'following'. Either include them or remove the dependency array.","ArrayExpression",["260"],"'OverlayTrigger' is defined but never used.","'Tooltip' is defined but never used.","'type' is assigned a value but never used.","'url' is assigned a value but never used.","'createYoutubePost' is defined but never used.","React Hook useEffect has a missing dependency: 'validateYouTubeUrl'. Either include it or remove the dependency array.",["261"],"'getCurrentUser' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"262","fix":"263"},{"desc":"264","fix":"265"},"Update the dependencies array to be: [dispatch, following]",{"range":"266","text":"267"},"Update the dependencies array to be: [props.text, validateYouTubeUrl]",{"range":"268","text":"269"},[1093,1095],"[dispatch, following]",[1199,1211],"[props.text, validateYouTubeUrl]"]