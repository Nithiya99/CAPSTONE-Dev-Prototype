[{"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\layout\\LayoutComponent.js":"1","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\ProjectDashboard.js":"2","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\Post.js":"3","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\MyProjects.js":"4","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Home.js":"5","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Profile.js":"6"},{"size":23477,"mtime":1622032505871,"results":"7","hashOfConfig":"8"},{"size":25192,"mtime":1622034788223,"results":"9","hashOfConfig":"8"},{"size":13289,"mtime":1622035863120,"results":"10","hashOfConfig":"8"},{"size":37256,"mtime":1622036209880,"results":"11","hashOfConfig":"8"},{"size":11664,"mtime":1622035873940,"results":"12","hashOfConfig":"8"},{"size":19734,"mtime":1622035936690,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"6p3aao",{"filePath":"16","messages":"17","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\layout\\LayoutComponent.js",["27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\ProjectDashboard.js",["59","60","61","62"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\Post.js",["63","64","65","66","67","68","69"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\MyProjects.js",["70","71","72","73","74","75","76"],"import React, { Component } from \"react\";\r\nimport { listmyprojects } from \"./apiProject\";\r\nimport {\r\n  OverlayTrigger,\r\n  Tooltip,\r\n  Accordion,\r\n  Button,\r\n  Card,\r\n  Tab,\r\n  Nav,\r\n} from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getCurrentUser, getUserById } from \"./../user/apiUser\";\r\nimport RoleReq from \"./RoleReq\";\r\nimport AssignedTo from \"./AssignedTo\";\r\nimport DeleteProject from \"./DeleteProject\";\r\nimport LeaveProject from \"./LeaveProject\";\r\nimport EditTwoToneIcon from \"@material-ui/icons/EditTwoTone\";\r\nimport DashboardTwoToneIcon from \"@material-ui/icons/DashboardTwoTone\";\r\nimport SubmitProject from \"./SubmitProject\";\r\nimport UserRecommendation from \"./UserRecommendation\";\r\nimport socket from \"./../utils/Socket\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { clearAll } from \"../store/cpm\";\r\nimport { connect } from \"react-redux\";\r\nimport LiveClock from \"react-live-clock\";\r\nimport dayjs from \"dayjs\";\r\nimport { Badge } from \"react-bootstrap\";\r\nimport QueryBuilderTwoToneIcon from \"@material-ui/icons/QueryBuilderTwoTone\";\r\nimport ErrorTwoToneIcon from \"@material-ui/icons/ErrorTwoTone\";\r\nimport CheckCircleTwoToneIcon from \"@material-ui/icons/CheckCircleTwoTone\";\r\nimport RecommendedRolePeople from \"./RecommendedRolePeople\";\r\nimport User_Role from \"./User_Role\";\r\nimport moment from \"moment\";\r\nclass MyProjects extends Component {\r\n  state = {\r\n    myProjects: [],\r\n    currentProject: {},\r\n    user: {},\r\n  };\r\n  componentDidMount() {\r\n    listmyprojects().then((data) => {\r\n      this.setState({ myProjects: data });\r\n      let projectLeaderNames = {};\r\n      let projectCreatedDates = {};\r\n      let projectEstimatedDates = {};\r\n      let overdueStatus = {};\r\n      data.userProjects.map((project, index) => {\r\n        //Leader name\r\n        // let number = index;\r\n        if (project.leader !== undefined)\r\n          getUserById(project.leader).then((data) => {\r\n            projectLeaderNames[project._id] = data.user.name;\r\n            // console.log(projectLeaderNames);\r\n            this.setState({ projectLeaderNames });\r\n          });\r\n        // var date = moment(new Date(project.created.substr(0, 16)));\r\n        // console.log(date.format(\"DD-MMM-YYYY\"));\r\n\r\n        let date = moment(new Date(project.created.substr(0, 16)));\r\n        var new_date = moment(date, \"DD-MM-YYYY\").add(\r\n          project.estimatedTime,\r\n          \"days\"\r\n        );\r\n        projectEstimatedDates[project._id] = new_date.format(\"DD-MMM-YYYY\");\r\n        this.setState({ projectEstimatedDates });\r\n        projectCreatedDates[project._id] = date.format(\"DD-MMM-YYYY\");\r\n        this.setState({ projectCreatedDates });\r\n        // console.log(project.leadername);\r\n        console.log(\"today:\", date.format(\"DD-MMM-YYYY\"));\r\n        console.log(\"estimatedDate:\", new_date.format(\"DD-MMM-YYYY\"));\r\n        console.log(\r\n          new_date.format(\"DD-MMM-YYYY\") +\r\n            \" is After \" +\r\n            date.format(\"DD-MMM-YYYY\") +\r\n            \":\" +\r\n            new_date.isAfter(date)\r\n        );\r\n        overdueStatus[project._id] = {\r\n          today: date.format(\"DD-MMM-YYYY\"),\r\n          estimatedDate: new_date.format(\"DD-MMM-YYYY\"),\r\n          overdue: !new_date.isSameOrAfter(date),\r\n        };\r\n        console.log(overdueStatus);\r\n        this.setState({ overdueStatus });\r\n      });\r\n      // toast.dark(\"Loaded\");\r\n    });\r\n  }\r\n  renderProject(project) {\r\n    // return <h5>{project.title}</h5>;\r\n    console.log(project.title);\r\n  }\r\n  render() {\r\n    if (\r\n      this.state.myProjects === undefined ||\r\n      this.state.myProjects.length === 0\r\n    )\r\n      return <h1>No Projects</h1>;\r\n    const {\r\n      myProjects,\r\n      projectLeaderNames,\r\n      projectCreatedDates,\r\n      projectEstimatedDates,\r\n      overdueStatus,\r\n    } = this.state;\r\n    // console.log(projectLeaderNames);\r\n    if (\r\n      projectLeaderNames === undefined ||\r\n      projectCreatedDates === undefined ||\r\n      projectEstimatedDates === undefined\r\n    )\r\n      return null;\r\n    if (\r\n      Object.keys(projectLeaderNames).length !==\r\n        myProjects.userProjects.length ||\r\n      Object.keys(projectCreatedDates).length !==\r\n        myProjects.userProjects.length ||\r\n      Object.keys(projectEstimatedDates).length !==\r\n        myProjects.userProjects.length\r\n    )\r\n      return null;\r\n    console.log(projectCreatedDates);\r\n    let onGoingProjects = myProjects.userProjects.filter(\r\n      (x) => x.status.includes(\"In Progress\") && !overdueStatus[x._id].overdue\r\n    );\r\n    let overdueProjects = myProjects.userProjects.filter(\r\n      (x) => x.status.includes(\"In Progress\") && overdueStatus[x._id].overdue\r\n    );\r\n    let CompletedProjects = myProjects.userProjects.filter((x) =>\r\n      x.status.includes(\"Completed\")\r\n    );\r\n    console.log(\"overdueProjects:\", overdueProjects);\r\n    console.log(\"ongoingprojects:\", onGoingProjects);\r\n    console.log(\"completedprojects:\", CompletedProjects);\r\n    socket.emit(\"getOnlineUsers\");\r\n    socket.on(\"onlineUsers\", (data) => console.log(data));\r\n    // getUserById(project.leader).then((data) => console.log(data));\r\n\r\n    return (\r\n      <>\r\n        <div\r\n          className=\"subheader py-2 py-lg-6  subheader-transparent \"\r\n          id=\"kt_subheader\"\r\n        >\r\n          <div className=\" container  d-flex align-items-center justify-content-between flex-wrap flex-sm-nowrap\">\r\n            <div className=\"d-flex align-items-center flex-wrap mr-2\">\r\n              <h5 className=\"text-dark font-weight-bold mt-2 mb-2 mr-5\">\r\n                My Projects\r\n              </h5>\r\n              <div className=\"subheader-separator subheader-separator-ver mt-2 mb-2 mr-4 bg-gray-200\"></div>\r\n            </div>\r\n            <div class=\"d-flex align-items-center flex-wrap\">\r\n              <Badge variant=\"primary\">\r\n                <div className=\"d-flex align-items-center flex-wrap mr-2\">\r\n                  <h6>{dayjs().format(\"DD MMMM, dddd\")}</h6>\r\n                  <div className=\"subheader-separator subheader-separator-ver mt-2 mb-2 mr-4 ml-4 bg-gray-200\"></div>\r\n                  <h6>\r\n                    <LiveClock format=\"hh:mm a\" ticking />\r\n                  </h6>\r\n                </div>\r\n              </Badge>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"container\">\r\n          <div className=\"card\">\r\n            <Tab.Container id=\"projectStats\" defaultActiveKey=\"ongoingProj\">\r\n              <div className=\"card-header\">\r\n                <div className=\"card-title\">\r\n                  <Nav variant=\"pills\">\r\n                    <Nav.Item>\r\n                      <Nav.Link eventKey=\"ongoingProj\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"mr-3\">\r\n                            <QueryBuilderTwoToneIcon />\r\n                          </div>\r\n                          <div>Ongoing Projects</div>\r\n                        </div>\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                      <Nav.Link eventKey=\"overdueProj\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"mr-3\">\r\n                            <ErrorTwoToneIcon />\r\n                          </div>\r\n                          <div>Overdue Projects</div>\r\n                        </div>\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                      <Nav.Link eventKey=\"completedProj\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"mr-3\">\r\n                            <CheckCircleTwoToneIcon />\r\n                          </div>\r\n                          <div>Completed Projects</div>\r\n                        </div>\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                  </Nav>\r\n                </div>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <Tab.Content>\r\n                  <Tab.Pane eventKey=\"ongoingProj\">\r\n                    <div className=\"row row-cols-1 row-cols-md-2\">\r\n                      {onGoingProjects.map((project, index) => (\r\n                        <div className=\"col mb-4\">\r\n                          <div className=\"card card-custom gutter-b card-stretch\">\r\n                            {/* {console.log(project.completion_percentage)} */}\r\n                            <div className=\"card-body\">\r\n                              <div className=\"d-flex align-items-center\">\r\n                                <div className=\"d-flex-flex-column mr-auto\">\r\n                                  <p className=\"card-title font-weight-bolder font-size-h5 text-dark mb-1\">\r\n                                    {project.title}\r\n                                  </p>\r\n                                  <span className=\"text-muted font-weight-bold\">\r\n                                    {projectLeaderNames[project._id]}\r\n                                  </span>\r\n                                </div>\r\n                                <div className=\"card-toolbar mb-auto\">\r\n                                  <div className=\"d-flex align-items-center justify-content-between\">\r\n                                    <OverlayTrigger\r\n                                      key=\"top\"\r\n                                      placement=\"top\"\r\n                                      overlay={\r\n                                        <Tooltip id=\"top2\">\r\n                                          Project Dashboard\r\n                                        </Tooltip>\r\n                                      }\r\n                                    >\r\n                                      <Link\r\n                                        className=\"btn btn-info mr-2\"\r\n                                        to={{\r\n                                          pathname: `/myprojects/dashboard/${project._id}`,\r\n                                          state: { project: project },\r\n                                        }}\r\n                                      >\r\n                                        <DashboardTwoToneIcon />\r\n                                      </Link>\r\n                                    </OverlayTrigger>\r\n                                    {getCurrentUser()._id === project.leader ? (\r\n                                      <div className=\"d-flex align-items-center justify-content-between\">\r\n                                        <OverlayTrigger\r\n                                          key=\"top\"\r\n                                          placement=\"top\"\r\n                                          overlay={\r\n                                            <Tooltip id=\"tooltip-top\">\r\n                                              Edit Project\r\n                                            </Tooltip>\r\n                                          }\r\n                                        >\r\n                                          <Link\r\n                                            className=\"btn btn-warning mr-2\"\r\n                                            to={{\r\n                                              pathname: `/myprojects/edit/${project._id}`,\r\n                                              state: { project: project },\r\n                                            }}\r\n                                          >\r\n                                            <EditTwoToneIcon />\r\n                                          </Link>\r\n                                        </OverlayTrigger>\r\n\r\n                                        <DeleteProject\r\n                                          projectId={project._id}\r\n                                        />\r\n                                        {project.completion_percentage ===\r\n                                        100 ? (\r\n                                          <SubmitProject\r\n                                            projectId={project._id}\r\n                                            projectTeam={project.team}\r\n                                            projectLeader={project.leader}\r\n                                          />\r\n                                        ) : (\r\n                                          <div> </div>\r\n                                        )}\r\n                                      </div>\r\n                                    ) : (\r\n                                      <div>\r\n                                        <LeaveProject project={project} />\r\n                                      </div>\r\n                                    )}\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"d-flex flex-wrap mt-14\">\r\n                                <div className=\"mr-12 d-flex flex-column mb-7\">\r\n                                  <span className=\"d-block font-weight-bold mb-4\">\r\n                                    Start Date\r\n                                  </span>\r\n                                  <span className=\"btn btn-light-primary btn-sm font-weight-bold btn-upper btn-text\">\r\n                                    {projectCreatedDates[project._id]}\r\n                                  </span>\r\n                                </div>\r\n                                <div className=\"mr-12 d-flex flex-column mb-7\">\r\n                                  <span className=\"d-block font-weight-bold mb-4\">\r\n                                    Due Date\r\n                                  </span>\r\n                                  <span className=\"btn btn-light-primary btn-sm font-weight-bold btn-upper btn-text\">\r\n                                    {projectEstimatedDates[project._id]}\r\n                                  </span>\r\n                                </div>\r\n                                <div className=\"flex-row-fluid mb-7\">\r\n                                  <span className=\"d-block font-weight-bold mb-4\">\r\n                                    Progress\r\n                                  </span>\r\n                                  <div className=\"d-flex align-items-center pt-2\">\r\n                                    <div className=\"progress progress-xs mt-2 mb-2 w-100\">\r\n                                      <div\r\n                                        className=\"progress-bar bg-warning\"\r\n                                        role=\"progressbar\"\r\n                                        style={{\r\n                                          width: `${project.completion_percentage}%`,\r\n                                        }}\r\n                                        aria-valuenow=\"50\"\r\n                                        aria-valuemin=\"0\"\r\n                                        aria-valuemax=\"100\"\r\n                                      ></div>\r\n                                    </div>\r\n                                    <span className=\"ml-3 font-weight-bolder\">\r\n                                      {project.completion_percentage}%\r\n                                    </span>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div className=\"d-flex align-items-center justify-content-between mb-2\">\r\n                                <span className=\"font-weight-bold mr-2\">\r\n                                  Description:{\" \"}\r\n                                </span>\r\n                                <span>{project.description}</span>\r\n                              </div>\r\n                              {project.skills.map((skill) => (\r\n                                <span class=\"btn btn-light-info btn-sm font-weight-bold btn-upper btn-text m-1\">\r\n                                  {skill}\r\n                                </span>\r\n                              ))}\r\n                              <table className=\"table table-light\">\r\n                                <thead>\r\n                                  {/* <User_Role\r\n                                    role={role}\r\n                                    leader={project.leader}\r\n                                  /> */}\r\n                                  <tr>\r\n                                    <th key={\"rolename\"}>Role Name</th>\r\n                                    <th key={\"skills\"}>Skills Required</th>\r\n                                    <th key={\"assigned\"}>Assigned To</th>\r\n                                    <th key={\"invite\"}>Send Invite</th>\r\n                                  </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                  {project.roles.map((role) => (\r\n                                    <>\r\n                                      <tr key={role._id.toString()}>\r\n                                        <td\r\n                                          key={\r\n                                            role._id.toString() +\r\n                                            role.roleName.toString()\r\n                                          }\r\n                                        >\r\n                                          {role.roleName}\r\n                                        </td>\r\n                                        <td\r\n                                          key={\r\n                                            role._id.toString() +\r\n                                            role.roleSkills.toString()\r\n                                          }\r\n                                        >\r\n                                          {role.roleSkills.join(\", \")}\r\n                                        </td>\r\n                                        <td>\r\n                                          {project.leader ===\r\n                                            getCurrentUser()._id &&\r\n                                          role.assignedTo === undefined ? (\r\n                                            <div>\r\n                                              <RoleReq\r\n                                                requestBy={role.requestBy}\r\n                                                projectId={project._id}\r\n                                                roleId={role._id}\r\n                                              />\r\n                                            </div>\r\n                                          ) : (\r\n                                            <div>\r\n                                              <AssignedTo\r\n                                                id={role.assignedTo}\r\n                                              />\r\n                                            </div>\r\n                                          )}\r\n                                        </td>\r\n                                        <td>\r\n                                          <button className=\"btn btn-info\">\r\n                                            <RecommendedRolePeople\r\n                                              project={project}\r\n                                              role={role}\r\n                                            />\r\n                                          </button>\r\n                                        </td>\r\n                                      </tr>\r\n                                    </>\r\n                                  ))}\r\n                                </tbody>\r\n                              </table>\r\n                              {getCurrentUser()._id === project.leader ? (\r\n                                <UserRecommendation project={project} />\r\n                              ) : (\r\n                                <div></div>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </Tab.Pane>\r\n                  <Tab.Pane eventKey=\"overdueProj\">\r\n                    <div className=\"row row-cols-1 row-cols-md-2\">\r\n                      {overdueProjects.map((project, index) => (\r\n                        <div className=\"col mb-4\">\r\n                          <div className=\"card card-custom gutter-b card-stretch\">\r\n                            {/* {console.log(project.completion_percentage)} */}\r\n                            <div className=\"card-body\">\r\n                              <div className=\"d-flex align-items-center\">\r\n                                <div className=\"d-flex-flex-column mr-auto\">\r\n                                  <p className=\"card-title font-weight-bolder font-size-h5 text-dark mb-1\">\r\n                                    {project.title}\r\n                                  </p>\r\n                                  <span className=\"text-muted font-weight-bold\">\r\n                                    {projectLeaderNames[project._id]}\r\n                                  </span>\r\n                                </div>\r\n                                <div className=\"card-toolbar mb-auto\">\r\n                                  <div className=\"d-flex align-items-center justify-content-between\">\r\n                                    <OverlayTrigger\r\n                                      key=\"top\"\r\n                                      placement=\"top\"\r\n                                      overlay={\r\n                                        <Tooltip id=\"top2\">\r\n                                          Project Dashboard\r\n                                        </Tooltip>\r\n                                      }\r\n                                    >\r\n                                      <Link\r\n                                        className=\"btn btn-info mr-2\"\r\n                                        to={{\r\n                                          pathname: `/myprojects/dashboard/${project._id}`,\r\n                                          state: { project: project },\r\n                                        }}\r\n                                      >\r\n                                        <DashboardTwoToneIcon />\r\n                                      </Link>\r\n                                    </OverlayTrigger>\r\n                                    {getCurrentUser()._id === project.leader ? (\r\n                                      <div className=\"d-flex align-items-center justify-content-between\">\r\n                                        <OverlayTrigger\r\n                                          key=\"top\"\r\n                                          placement=\"top\"\r\n                                          overlay={\r\n                                            <Tooltip id=\"tooltip-top\">\r\n                                              Edit Project\r\n                                            </Tooltip>\r\n                                          }\r\n                                        >\r\n                                          <Link\r\n                                            className=\"btn btn-warning mr-2\"\r\n                                            to={{\r\n                                              pathname: `/myprojects/edit/${project._id}`,\r\n                                              state: { project: project },\r\n                                            }}\r\n                                          >\r\n                                            <EditTwoToneIcon />\r\n                                          </Link>\r\n                                        </OverlayTrigger>\r\n\r\n                                        <DeleteProject\r\n                                          projectId={project._id}\r\n                                        />\r\n                                        {project.completion_percentage ===\r\n                                        100 ? (\r\n                                          <SubmitProject\r\n                                            projectId={project._id}\r\n                                            projectTeam={project.team}\r\n                                            projectLeader={project.leader}\r\n                                          />\r\n                                        ) : (\r\n                                          <div> </div>\r\n                                        )}\r\n                                      </div>\r\n                                    ) : (\r\n                                      <div>\r\n                                        <LeaveProject project={project} />\r\n                                      </div>\r\n                                    )}\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"d-flex flex-wrap mt-14\">\r\n                                <div className=\"mr-12 d-flex flex-column mb-7\">\r\n                                  <span className=\"d-block font-weight-bold mb-4\">\r\n                                    Start Date\r\n                                  </span>\r\n                                  <span className=\"btn btn-light-primary btn-sm font-weight-bold btn-upper btn-text\">\r\n                                    {projectCreatedDates[project._id]}\r\n                                  </span>\r\n                                </div>\r\n                                <div className=\"mr-12 d-flex flex-column mb-7\">\r\n                                  <span className=\"d-block font-weight-bold mb-4\">\r\n                                    Due Date\r\n                                  </span>\r\n                                  <span className=\"btn btn-light-primary btn-sm font-weight-bold btn-upper btn-text\">\r\n                                    {projectEstimatedDates[project._id]}\r\n                                  </span>\r\n                                </div>\r\n                                <div className=\"flex-row-fluid mb-7\">\r\n                                  <span className=\"d-block font-weight-bold mb-4\">\r\n                                    Progress\r\n                                  </span>\r\n                                  <div className=\"d-flex align-items-center pt-2\">\r\n                                    <div className=\"progress progress-xs mt-2 mb-2 w-100\">\r\n                                      <div\r\n                                        className=\"progress-bar bg-warning\"\r\n                                        role=\"progressbar\"\r\n                                        style={{\r\n                                          width: `${project.completion_percentage}%`,\r\n                                        }}\r\n                                        aria-valuenow=\"50\"\r\n                                        aria-valuemin=\"0\"\r\n                                        aria-valuemax=\"100\"\r\n                                      ></div>\r\n                                    </div>\r\n                                    <span className=\"ml-3 font-weight-bolder\">\r\n                                      {project.completion_percentage}%\r\n                                    </span>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div className=\"d-flex align-items-center justify-content-between mb-2\">\r\n                                <span className=\"font-weight-bold mr-2\">\r\n                                  Description:{\" \"}\r\n                                </span>\r\n                                <span>{project.description}</span>\r\n                              </div>\r\n                              <div className=\"d-flex align-items-center justify-content-between mb-2\">\r\n                                <span className=\"font-weight-bold mr-2\">\r\n                                  Skills:{\" \"}\r\n                                </span>\r\n                                <span>{project.skills.join(\", \")}</span>\r\n                              </div>\r\n                              <table className=\"table table-light\">\r\n                                <thead>\r\n                                  <tr>\r\n                                    <th key={\"rolename\"}>Role Name</th>\r\n                                    <th key={\"skills\"}>Skills Required</th>\r\n\r\n                                    <th key={\"assigned\"}>Assigned To</th>\r\n                                  </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                  {project.roles.map((role) => (\r\n                                    <tr key={role._id.toString()}>\r\n                                      <td\r\n                                        key={\r\n                                          role._id.toString() +\r\n                                          role.roleName.toString()\r\n                                        }\r\n                                      >\r\n                                        {role.roleName}\r\n                                      </td>\r\n                                      <td\r\n                                        key={\r\n                                          role._id.toString() +\r\n                                          role.roleSkills.toString()\r\n                                        }\r\n                                      >\r\n                                        {role.roleSkills.join(\", \")}\r\n                                      </td>\r\n                                      <td>\r\n                                        {project.leader ===\r\n                                          getCurrentUser()._id &&\r\n                                        role.assignedTo === undefined ? (\r\n                                          <div>\r\n                                            <RoleReq\r\n                                              requestBy={role.requestBy}\r\n                                              projectId={project._id}\r\n                                              roleId={role._id}\r\n                                            />\r\n                                          </div>\r\n                                        ) : (\r\n                                          <div>\r\n                                            <AssignedTo id={role.assignedTo} />\r\n                                          </div>\r\n                                        )}\r\n                                      </td>\r\n                                      <td></td>\r\n                                    </tr>\r\n                                  ))}\r\n                                </tbody>\r\n                              </table>\r\n                              {getCurrentUser()._id === project.leader ? (\r\n                                <UserRecommendation project={project} />\r\n                              ) : (\r\n                                <div></div>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </Tab.Pane>\r\n                  <Tab.Pane eventKey=\"completedProj\">\r\n                    <div className=\"row row-cols-1 row-cols-md-2\">\r\n                      {CompletedProjects.map((project) => (\r\n                        <div className=\"col mb-4\">\r\n                          <div className=\"card card-custom gutter-b card-stretch\">\r\n                            <div className=\"card-body\">\r\n                              <div className=\"d-flex align-items-center\">\r\n                                <div className=\"d-flex-flex-column mr-auto\">\r\n                                  <p className=\"card-title font-weight-bolder font-size-h5 text-dark mb-1\">\r\n                                    {project.title}\r\n                                  </p>\r\n                                  <span className=\"text-muted font-weight-bold\">\r\n                                    {projectLeaderNames[project._id]}\r\n                                  </span>\r\n                                </div>\r\n                                <div className=\"card-toolbar mb-auto\">\r\n                                  <div className=\"d-flex align-items-center justify-content-between\">\r\n                                    <OverlayTrigger\r\n                                      key=\"top\"\r\n                                      placement=\"top\"\r\n                                      overlay={\r\n                                        <Tooltip id=\"top2\">\r\n                                          Project Dashboard\r\n                                        </Tooltip>\r\n                                      }\r\n                                    >\r\n                                      <Link\r\n                                        className=\"btn btn-info mr-2\"\r\n                                        to={{\r\n                                          pathname: `/myprojects/dashboard/${project._id}`,\r\n                                          state: { project: project },\r\n                                        }}\r\n                                      >\r\n                                        <DashboardTwoToneIcon />\r\n                                      </Link>\r\n                                    </OverlayTrigger>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"d-flex flex-wrap mt-14\">\r\n                                <div className=\"mr-12 d-flex flex-column mb-7\">\r\n                                  <span className=\"d-block font-weight-bold mb-4\">\r\n                                    Start Date\r\n                                  </span>\r\n                                  <span className=\"btn btn-light-primary btn-sm font-weight-bold btn-upper btn-text\">\r\n                                    {projectCreatedDates[project._id]}\r\n                                  </span>\r\n                                </div>\r\n                                <div className=\"mr-12 d-flex flex-column mb-7\">\r\n                                  <span className=\"d-block font-weight-bold mb-4\">\r\n                                    Due Date\r\n                                  </span>\r\n                                  <span className=\"btn btn-light-primary btn-sm font-weight-bold btn-upper btn-text\">\r\n                                    [Load]\r\n                                  </span>\r\n                                </div>\r\n                                <div className=\"flex-row-fluid mb-7\">\r\n                                  <span className=\"d-block font-weight-bold mb-4\">\r\n                                    Progress\r\n                                  </span>\r\n                                  <div className=\"d-flex align-items-center pt-2\">\r\n                                    <div className=\"progress progress-xs mt-2 mb-2 w-100\">\r\n                                      <div\r\n                                        className=\"progress-bar bg-warning\"\r\n                                        role=\"progressbar\"\r\n                                        style={{\r\n                                          width: `${project.completion_percentage}%`,\r\n                                        }}\r\n                                        aria-valuenow=\"50\"\r\n                                        aria-valuemin=\"0\"\r\n                                        aria-valuemax=\"100\"\r\n                                      ></div>\r\n                                    </div>\r\n                                    <span className=\"ml-3 font-weight-bolder\">\r\n                                      {project.completion_percentage}%\r\n                                    </span>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div className=\"d-flex align-items-center justify-content-between mb-2\">\r\n                                <span className=\"font-weight-bold mr-2\">\r\n                                  Description:{\" \"}\r\n                                </span>\r\n                                <span>{project.description}</span>\r\n                              </div>\r\n                              <div className=\"d-flex align-items-center justify-content-between mb-2\">\r\n                                <span className=\"font-weight-bold mr-2\">\r\n                                  Skills:{\" \"}\r\n                                </span>\r\n                                <span>{project.skills.join(\", \")}</span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </Tab.Pane>\r\n                </Tab.Content>\r\n              </div>\r\n            </Tab.Container>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  clearAll: (params) => dispatch(clearAll(params)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(MyProjects);\r\n","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Home.js",["77","78","79","80","81","82","83","84","85","86","87","88","89","90","91"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Profile.js",["92","93","94","95","96","97"],{"ruleId":"98","severity":1,"message":"99","line":3,"column":10,"nodeType":"100","messageId":"101","endLine":3,"endColumn":15},{"ruleId":"98","severity":1,"message":"102","line":5,"column":8,"nodeType":"100","messageId":"101","endLine":5,"endColumn":12},{"ruleId":"98","severity":1,"message":"103","line":6,"column":8,"nodeType":"100","messageId":"101","endLine":6,"endColumn":12},{"ruleId":"98","severity":1,"message":"104","line":8,"column":3,"nodeType":"100","messageId":"101","endLine":8,"endColumn":10},{"ruleId":"98","severity":1,"message":"105","line":12,"column":3,"nodeType":"100","messageId":"101","endLine":12,"endColumn":17},{"ruleId":"98","severity":1,"message":"106","line":15,"column":3,"nodeType":"100","messageId":"101","endLine":15,"endColumn":10},{"ruleId":"98","severity":1,"message":"107","line":25,"column":10,"nodeType":"100","messageId":"101","endLine":25,"endColumn":16},{"ruleId":"108","severity":1,"message":"109","line":72,"column":22,"nodeType":"110","messageId":"111","endLine":72,"endColumn":24},{"ruleId":"108","severity":1,"message":"112","line":79,"column":11,"nodeType":"113","messageId":"114","endLine":79,"endColumn":18},{"ruleId":"108","severity":1,"message":"112","line":126,"column":37,"nodeType":"110","messageId":"115","endLine":126,"endColumn":39},{"ruleId":"108","severity":1,"message":"112","line":180,"column":45,"nodeType":"110","messageId":"115","endLine":180,"endColumn":47},{"ruleId":"108","severity":1,"message":"112","line":191,"column":22,"nodeType":"110","messageId":"115","endLine":191,"endColumn":24},{"ruleId":"108","severity":1,"message":"109","line":209,"column":25,"nodeType":"110","messageId":"111","endLine":209,"endColumn":27},{"ruleId":"108","severity":1,"message":"112","line":214,"column":9,"nodeType":"113","messageId":"114","endLine":214,"endColumn":16},{"ruleId":"108","severity":1,"message":"112","line":215,"column":47,"nodeType":"110","messageId":"115","endLine":215,"endColumn":49},{"ruleId":"108","severity":1,"message":"109","line":250,"column":48,"nodeType":"110","messageId":"111","endLine":250,"endColumn":50},{"ruleId":"98","severity":1,"message":"116","line":282,"column":15,"nodeType":"100","messageId":"101","endLine":282,"endColumn":24},{"ruleId":"108","severity":1,"message":"112","line":365,"column":24,"nodeType":"110","messageId":"115","endLine":365,"endColumn":26},{"ruleId":"108","severity":1,"message":"112","line":368,"column":27,"nodeType":"110","messageId":"115","endLine":368,"endColumn":29},{"ruleId":"117","severity":1,"message":"118","line":370,"column":31,"nodeType":"119","messageId":"120","endLine":370,"endColumn":47},{"ruleId":"98","severity":1,"message":"121","line":395,"column":15,"nodeType":"100","messageId":"101","endLine":395,"endColumn":18},{"ruleId":"98","severity":1,"message":"121","line":416,"column":15,"nodeType":"100","messageId":"101","endLine":416,"endColumn":18},{"ruleId":"108","severity":1,"message":"112","line":444,"column":31,"nodeType":"110","messageId":"115","endLine":444,"endColumn":33},{"ruleId":"108","severity":1,"message":"112","line":491,"column":24,"nodeType":"110","messageId":"115","endLine":491,"endColumn":26},{"ruleId":"108","severity":1,"message":"112","line":495,"column":27,"nodeType":"110","messageId":"115","endLine":495,"endColumn":29},{"ruleId":"117","severity":1,"message":"118","line":497,"column":31,"nodeType":"119","messageId":"120","endLine":497,"endColumn":47},{"ruleId":"98","severity":1,"message":"121","line":522,"column":15,"nodeType":"100","messageId":"101","endLine":522,"endColumn":18},{"ruleId":"98","severity":1,"message":"121","line":543,"column":15,"nodeType":"100","messageId":"101","endLine":543,"endColumn":18},{"ruleId":"108","severity":1,"message":"112","line":570,"column":35,"nodeType":"110","messageId":"115","endLine":570,"endColumn":37},{"ruleId":"98","severity":1,"message":"122","line":610,"column":33,"nodeType":"100","messageId":"101","endLine":610,"endColumn":38},{"ruleId":"108","severity":1,"message":"112","line":614,"column":22,"nodeType":"110","messageId":"115","endLine":614,"endColumn":24},{"ruleId":"108","severity":1,"message":"112","line":617,"column":34,"nodeType":"110","messageId":"115","endLine":617,"endColumn":36},{"ruleId":"98","severity":1,"message":"123","line":2,"column":10,"nodeType":"100","messageId":"101","endLine":2,"endColumn":19},{"ruleId":"98","severity":1,"message":"124","line":2,"column":21,"nodeType":"100","messageId":"101","endLine":2,"endColumn":25},{"ruleId":"98","severity":1,"message":"107","line":2,"column":27,"nodeType":"100","messageId":"101","endLine":2,"endColumn":33},{"ruleId":"108","severity":1,"message":"109","line":491,"column":42,"nodeType":"110","messageId":"111","endLine":491,"endColumn":44},{"ruleId":"98","severity":1,"message":"125","line":16,"column":8,"nodeType":"100","messageId":"101","endLine":16,"endColumn":19},{"ruleId":"98","severity":1,"message":"123","line":24,"column":3,"nodeType":"100","messageId":"101","endLine":24,"endColumn":12},{"ruleId":"98","severity":1,"message":"126","line":40,"column":8,"nodeType":"100","messageId":"101","endLine":40,"endColumn":16},{"ruleId":"98","severity":1,"message":"127","line":41,"column":8,"nodeType":"100","messageId":"101","endLine":41,"endColumn":16},{"ruleId":"128","severity":1,"message":"129","line":143,"column":15,"nodeType":"130","endLine":143,"endColumn":75},{"ruleId":"98","severity":1,"message":"131","line":182,"column":7,"nodeType":"100","messageId":"101","endLine":182,"endColumn":11},{"ruleId":"128","severity":1,"message":"129","line":199,"column":19,"nodeType":"130","endLine":199,"endColumn":79},{"ruleId":"98","severity":1,"message":"123","line":6,"column":3,"nodeType":"100","messageId":"101","endLine":6,"endColumn":12},{"ruleId":"98","severity":1,"message":"107","line":7,"column":3,"nodeType":"100","messageId":"101","endLine":7,"endColumn":9},{"ruleId":"98","severity":1,"message":"124","line":8,"column":3,"nodeType":"100","messageId":"101","endLine":8,"endColumn":7},{"ruleId":"98","severity":1,"message":"132","line":23,"column":10,"nodeType":"100","messageId":"101","endLine":23,"endColumn":24},{"ruleId":"98","severity":1,"message":"133","line":23,"column":26,"nodeType":"100","messageId":"101","endLine":23,"endColumn":31},{"ruleId":"98","severity":1,"message":"134","line":34,"column":8,"nodeType":"100","messageId":"101","endLine":34,"endColumn":17},{"ruleId":"108","severity":1,"message":"112","line":49,"column":46,"nodeType":"110","messageId":"115","endLine":49,"endColumn":48},{"ruleId":"98","severity":1,"message":"135","line":3,"column":10,"nodeType":"100","messageId":"101","endLine":3,"endColumn":26},{"ruleId":"98","severity":1,"message":"136","line":8,"column":3,"nodeType":"100","messageId":"101","endLine":8,"endColumn":14},{"ruleId":"98","severity":1,"message":"137","line":9,"column":3,"nodeType":"100","messageId":"101","endLine":9,"endColumn":21},{"ruleId":"98","severity":1,"message":"138","line":10,"column":3,"nodeType":"100","messageId":"101","endLine":10,"endColumn":29},{"ruleId":"98","severity":1,"message":"139","line":12,"column":13,"nodeType":"100","messageId":"101","endLine":12,"endColumn":14},{"ruleId":"98","severity":1,"message":"140","line":15,"column":10,"nodeType":"100","messageId":"101","endLine":15,"endColumn":20},{"ruleId":"98","severity":1,"message":"99","line":17,"column":10,"nodeType":"100","messageId":"101","endLine":17,"endColumn":15},{"ruleId":"98","severity":1,"message":"107","line":17,"column":17,"nodeType":"100","messageId":"101","endLine":17,"endColumn":23},{"ruleId":"98","severity":1,"message":"141","line":20,"column":10,"nodeType":"100","messageId":"101","endLine":20,"endColumn":21},{"ruleId":"98","severity":1,"message":"142","line":25,"column":8,"nodeType":"100","messageId":"101","endLine":25,"endColumn":25},{"ruleId":"108","severity":1,"message":"109","line":62,"column":46,"nodeType":"110","messageId":"111","endLine":62,"endColumn":48},{"ruleId":"98","severity":1,"message":"143","line":99,"column":13,"nodeType":"100","messageId":"101","endLine":99,"endColumn":26},{"ruleId":"98","severity":1,"message":"144","line":100,"column":50,"nodeType":"100","messageId":"101","endLine":100,"endColumn":60},{"ruleId":"128","severity":1,"message":"129","line":166,"column":27,"nodeType":"130","endLine":169,"endColumn":29},{"ruleId":"108","severity":1,"message":"109","line":213,"column":35,"nodeType":"110","messageId":"111","endLine":213,"endColumn":37},{"ruleId":"98","severity":1,"message":"124","line":18,"column":3,"nodeType":"100","messageId":"101","endLine":18,"endColumn":7},{"ruleId":"98","severity":1,"message":"145","line":19,"column":3,"nodeType":"100","messageId":"101","endLine":19,"endColumn":12},{"ruleId":"98","severity":1,"message":"146","line":20,"column":3,"nodeType":"100","messageId":"101","endLine":20,"endColumn":16},{"ruleId":"98","severity":1,"message":"147","line":94,"column":9,"nodeType":"100","messageId":"101","endLine":94,"endColumn":16},{"ruleId":"98","severity":1,"message":"148","line":95,"column":13,"nodeType":"100","messageId":"101","endLine":95,"endColumn":22},{"ruleId":"108","severity":1,"message":"112","line":98,"column":30,"nodeType":"110","messageId":"115","endLine":98,"endColumn":32},"no-unused-vars","'Modal' is defined but never used.","Identifier","unusedVar","'Pert' is defined but never used.","'Task' is defined but never used.","'addEdge' is defined but never used.","'removeElements' is defined but never used.","'addTask' is defined but never used.","'Button' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","expectedInside","'finaldiff' is assigned a value but never used.","no-self-assign","'task.description' is assigned to itself.","MemberExpression","selfAssignment","'ele' is assigned a value but never used.","'tasks' is assigned a value but never used.","'Accordion' is defined but never used.","'Card' is defined but never used.","'CommentIcon' is defined but never used.","'EditPost' is defined but never used.","'Dropdown' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'tags' is assigned a value but never used.","'ToastContainer' is defined but never used.","'toast' is defined but never used.","'User_Role' is defined but never used.","'getNotifications' is defined but never used.","'getNotified' is defined but never used.","'clearNotifications' is defined but never used.","'setSegregatedNotifications' is defined but never used.","'_' is defined but never used.","'getProject' is defined but never used.","'getAllPosts' is defined but never used.","'SearchTwoToneIcon' is defined but never used.","'notifications' is assigned a value but never used.","'youtubeUrl' is assigned a value but never used.","'ListGroup' is defined but never used.","'ListGroupItem' is defined but never used.","'overdue' is assigned a value but never used.","'following' is assigned a value but never used."]