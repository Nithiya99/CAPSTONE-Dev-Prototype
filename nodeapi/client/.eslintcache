[{"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\apiUser.js":"1","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\App.js":"2","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\MyChats.js":"3","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Landing.js":"4","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\EditProject.js":"5","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\showPost.js":"6","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\TextPostView.js":"7","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\apiPosts.js":"8","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\UserRecommendation.js":"9","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\Socket.js":"10","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Tagify\\SkillsInput.js":"11","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\auth\\index.js":"12","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\Emoji.js":"13","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\layout\\LayoutComponent.js":"14","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\DragDropImages.js":"15","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Social.js":"16","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\reportWebVitals.js":"17","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\NavBar.js":"18","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Notifications.js":"19","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\newProjectForm\\CreateProject.js":"20","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\apiProject.js":"21","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\notifications.js":"22","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\tasks.js":"23","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\ModalButton.js":"24","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\LeaveProject.js":"25","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\RatingComponent.js":"26","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\SearchProjectBar.js":"27","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\TextPost.js":"28","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\RatingComponentFeedbackForm.js":"29","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Tagify\\Assigner.js":"30","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Menu.js":"31","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\Post.js":"32","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\cpm.js":"33","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\Requests.js":"34","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\taskComponents\\TrelloTask.js":"35","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\taskComponents\\EditModel.js":"36","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Users.js":"37","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\YoutubePost.js":"38","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\RecommendedRolePeople.js":"39","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\User_Role.js":"40","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Tagify\\AssignPerson.js":"41","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\FeedbackForm.js":"42","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\ProjectRecommendation.js":"43","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Profile.js":"44","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\DragDropProfilePic.js":"45","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\SubmitProject.js":"46","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\apiNotifications.js":"47","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Personal.js":"48","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\PostVideo.js":"49","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\PdfDropZone.js":"50","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Home.js":"51","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\DeleteUser.js":"52","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Following.js":"53","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\PostImage.js":"54","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Signin.js":"55","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\posts.js":"56","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\Chat.js":"57","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\DeletePost.js":"58","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\SearchBar.js":"59","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\DragDropVideo.js":"60","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\User.js":"61","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Recommendation.js":"62"},{"size":8540,"mtime":1622206044033,"results":"63","hashOfConfig":"64"},{"size":479,"mtime":1621938995405,"results":"65","hashOfConfig":"64"},{"size":14616,"mtime":1621938995452,"results":"66","hashOfConfig":"64"},{"size":426,"mtime":1621938995410,"results":"67","hashOfConfig":"64"},{"size":6112,"mtime":1621938995430,"results":"68","hashOfConfig":"64"},{"size":12887,"mtime":1622007571386,"results":"69","hashOfConfig":"64"},{"size":10570,"mtime":1622007571343,"results":"70","hashOfConfig":"64"},{"size":13307,"mtime":1622181763348,"results":"71","hashOfConfig":"64"},{"size":5168,"mtime":1622096852802,"results":"72","hashOfConfig":"64"},{"size":242,"mtime":1621938995454,"results":"73","hashOfConfig":"64"},{"size":522,"mtime":1621938995456,"results":"74","hashOfConfig":"64"},{"size":1831,"mtime":1621938995408,"results":"75","hashOfConfig":"64"},{"size":2120,"mtime":1621938995430,"results":"76","hashOfConfig":"64"},{"size":23477,"mtime":1622032505871,"results":"77","hashOfConfig":"64"},{"size":6944,"mtime":1621938995425,"results":"78","hashOfConfig":"64"},{"size":4033,"mtime":1621938995456,"results":"79","hashOfConfig":"64"},{"size":375,"mtime":1621938995436,"results":"80","hashOfConfig":"64"},{"size":362,"mtime":1621938995410,"results":"81","hashOfConfig":"64"},{"size":23929,"mtime":1622096852664,"results":"82","hashOfConfig":"64"},{"size":7174,"mtime":1621938995434,"results":"83","hashOfConfig":"64"},{"size":16845,"mtime":1622306635953,"results":"84","hashOfConfig":"64"},{"size":2825,"mtime":1622096852868,"results":"85","hashOfConfig":"64"},{"size":554,"mtime":1621938995437,"results":"86","hashOfConfig":"64"},{"size":992,"mtime":1621938995455,"results":"87","hashOfConfig":"64"},{"size":2668,"mtime":1621938995431,"results":"88","hashOfConfig":"64"},{"size":1643,"mtime":1621938995432,"results":"89","hashOfConfig":"64"},{"size":4178,"mtime":1621938995406,"results":"90","hashOfConfig":"64"},{"size":4031,"mtime":1621938995427,"results":"91","hashOfConfig":"64"},{"size":2185,"mtime":1622032505838,"results":"92","hashOfConfig":"64"},{"size":1517,"mtime":1621938995456,"results":"93","hashOfConfig":"64"},{"size":15665,"mtime":1622121909733,"results":"94","hashOfConfig":"64"},{"size":13289,"mtime":1622035863120,"results":"95","hashOfConfig":"64"},{"size":2239,"mtime":1621938995436,"results":"96","hashOfConfig":"64"},{"size":3337,"mtime":1621949112080,"results":"97","hashOfConfig":"64"},{"size":12116,"mtime":1622032505881,"results":"98","hashOfConfig":"64"},{"size":4130,"mtime":1621938995435,"results":"99","hashOfConfig":"64"},{"size":9836,"mtime":1622096852938,"results":"100","hashOfConfig":"64"},{"size":12884,"mtime":1622007571373,"results":"101","hashOfConfig":"64"},{"size":853,"mtime":1622096852781,"results":"102","hashOfConfig":"64"},{"size":4388,"mtime":1622096852824,"results":"103","hashOfConfig":"64"},{"size":915,"mtime":1621938995456,"results":"104","hashOfConfig":"64"},{"size":2241,"mtime":1622032505803,"results":"105","hashOfConfig":"64"},{"size":3598,"mtime":1621938995411,"results":"106","hashOfConfig":"64"},{"size":21467,"mtime":1622096852911,"results":"107","hashOfConfig":"64"},{"size":1507,"mtime":1621938995425,"results":"108","hashOfConfig":"64"},{"size":4607,"mtime":1621938995432,"results":"109","hashOfConfig":"64"},{"size":2027,"mtime":1622096852630,"results":"110","hashOfConfig":"64"},{"size":2382,"mtime":1621938995455,"results":"111","hashOfConfig":"64"},{"size":622,"mtime":1621938995427,"results":"112","hashOfConfig":"64"},{"size":2330,"mtime":1622214303490,"results":"113","hashOfConfig":"64"},{"size":11664,"mtime":1622035873940,"results":"114","hashOfConfig":"64"},{"size":1207,"mtime":1621938995451,"results":"115","hashOfConfig":"64"},{"size":2157,"mtime":1622047641012,"results":"116","hashOfConfig":"64"},{"size":2022,"mtime":1621938995427,"results":"117","hashOfConfig":"64"},{"size":6689,"mtime":1621938995453,"results":"118","hashOfConfig":"64"},{"size":1999,"mtime":1622007571398,"results":"119","hashOfConfig":"64"},{"size":6958,"mtime":1621938995429,"results":"120","hashOfConfig":"64"},{"size":1276,"mtime":1622004119633,"results":"121","hashOfConfig":"64"},{"size":4089,"mtime":1621938995412,"results":"122","hashOfConfig":"64"},{"size":4346,"mtime":1621938995425,"results":"123","hashOfConfig":"64"},{"size":3029,"mtime":1621938995457,"results":"124","hashOfConfig":"64"},{"size":13232,"mtime":1622306635972,"results":"125","hashOfConfig":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"6p3aao",{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"130"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"140"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"140"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"134"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"152"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"152"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"130"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"157"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"214","messages":"215","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"152"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"152"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"228","messages":"229","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"230","messages":"231","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"232","messages":"233","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"152"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"245","messages":"246","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"257","messages":"258","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"259","messages":"260","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"261","messages":"262","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"263","messages":"264","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\apiUser.js",["269","270","271","272","273","274"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\App.js",[],["275","276"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\MyChats.js",["277","278","279","280","281"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  getCurrentUser,\r\n  getfriends,\r\n  getUserById,\r\n  updatePersonalChat,\r\n  clearChat,\r\n  blockUser,\r\n  unblockUser,\r\n} from \"./apiUser\";\r\nimport DefaultProfile from \"./../images/avatar.png\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Row, Tab, Col, Nav } from \"react-bootstrap\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { clearFriends, friendAdded } from \"../store/user\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport io from \"socket.io-client\";\r\nimport moment from \"moment\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport CheckCircleOutlineIcon from \"@material-ui/icons/CheckCircleOutline\";\r\nimport BlockIcon from \"@material-ui/icons/Block\";\r\nimport ClearAllIcon from \"@material-ui/icons/ClearAll\";\r\n\r\nvar options = {\r\n  rememberUpgrade: true,\r\n  transports: [\"websocket\"],\r\n  secure: true,\r\n  rejectUnauthorized: false,\r\n};\r\n\r\nconst MyChats = () => {\r\n  const dispatch = useDispatch();\r\n  const friends = useSelector((state) => state.user.friends);\r\n  const [user, setUser] = useState({});\r\n  const [touser_id, settouser_id] = useState(String);\r\n  const [toname, settoname] = useState(String);\r\n  const [state, setState] = useState({\r\n    message: \"\",\r\n    from_name: getCurrentUser().name,\r\n    created: new Date(),\r\n  });\r\n  const [blocked_users, set_blocked_user] = useState([]);\r\n  const [isblocked, set_isblocked] = useState(Boolean);\r\n  const [blocked_by, set_blocked_by] = useState([]);\r\n  const [isblocked_by, set_isblocked_by] = useState(Boolean);\r\n  const [chat, setChat] = useState([]);\r\n\r\n  const divRef = useRef(null);\r\n  const messagesEndRef = useRef(null);\r\n  const socketRef = useRef();\r\n\r\n  useEffect(async () => {\r\n    dispatch(clearFriends());\r\n    await getfriends(getCurrentUser()._id).then(async (data) => {\r\n      await data.map(async (userid) => {\r\n        await getUserById(userid).then((u) => {\r\n          if (u.user._id !== getCurrentUser()._id)\r\n            dispatch(friendAdded({ user: u.user }));\r\n        });\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  // console.log(friends);\r\n\r\n  function fun(user) {\r\n    let userid = getCurrentUser()._id;\r\n    socketRef.current = io.connect(\"http://localhost:8081\", options);\r\n    socketRef.current.emit(\"getPersonalChat\", {\r\n      userid,\r\n      touser: user._id,\r\n      client_chat_length: chat.length,\r\n    });\r\n    socketRef.current.on(\"personalchat\" + userid, (data) => {\r\n      setChat(data);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    let userid = getCurrentUser()._id;\r\n\r\n    getUserById(userid).then((data) => {\r\n      set_blocked_user(data.user.blocked_users);\r\n      set_blocked_by(data.user.blocked_by);\r\n    });\r\n\r\n    socketRef.current = io.connect(\"http://localhost:8081\", options);\r\n    socketRef.current.emit(\"getPersonalChat\", {\r\n      userid,\r\n      touser: user._id,\r\n      client_chat_length: chat.length,\r\n    });\r\n\r\n    socketRef.current.on(\r\n      \"personal_message\" + userid,\r\n      ({ from_name, toname, message, created, touser_id, fromuser }) => {\r\n        let chats = [...chat];\r\n        chats.push({\r\n          from_name,\r\n          toname,\r\n          message,\r\n          created,\r\n          touser_id,\r\n          fromuser,\r\n        });\r\n        setChat(chats);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let userid = getCurrentUser()._id;\r\n    socketRef.current = io.connect(\"http://localhost:8081\", options);\r\n    socketRef.current.emit(\"getPersonalChat\", {\r\n      userid,\r\n      touser: user._id,\r\n      client_chat_length: chat.length,\r\n    });\r\n    socketRef.current.on(\"personalchat\" + userid, (data) => {\r\n      setChat(data);\r\n    });\r\n    socketRef.current.on(\r\n      \"personal_message\" + userid,\r\n      ({ from_name, toname, message, created, touser_id, fromuser }) => {\r\n        let chats = [...chat];\r\n        chats.push({\r\n          from_name,\r\n          toname,\r\n          message,\r\n          created,\r\n          touser_id,\r\n          fromuser,\r\n        });\r\n        setChat(chats);\r\n      }\r\n    );\r\n    return () => socketRef.current.disconnect();\r\n  }, [chat]);\r\n\r\n  const onMessageSubmit = (e) => {\r\n    const { from_name, message, created } = state;\r\n    let fromuser = getCurrentUser()._id;\r\n    if (message.trim() !== \"\") {\r\n      socketRef.current.emit(\"personal_message\", {\r\n        from_name,\r\n        toname,\r\n        message,\r\n        created,\r\n        touser_id,\r\n        fromuser,\r\n      });\r\n      let chat_msg = {\r\n        from_name,\r\n        toname,\r\n        message,\r\n        created,\r\n        touser_id,\r\n        fromuser,\r\n      };\r\n      updatePersonalChat(chat_msg).then((data) => {\r\n        let chats = [...chat];\r\n        chats.push(chat_msg);\r\n        setChat(chats);\r\n      });\r\n    }\r\n    e.preventDefault();\r\n    setState({ message: \"\", from_name });\r\n  };\r\n\r\n  const onTextChange = (e) => {\r\n    setState({ ...state, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onClearChat = (e) => {\r\n    let current_user_id = getCurrentUser()._id;\r\n    let client_user_id = user._id;\r\n    clearChat(current_user_id, client_user_id).then((data) => {\r\n      let chats = [];\r\n      setChat(chats);\r\n      console.log(data);\r\n    });\r\n    e.preventDefault();\r\n  };\r\n\r\n  const onBlockUser = (e) => {\r\n    let current_user_id = getCurrentUser()._id;\r\n    let client_user_id = user._id;\r\n    blockUser(current_user_id, client_user_id).then((data) => {\r\n      console.log(data);\r\n    });\r\n    e.preventDefault();\r\n  };\r\n\r\n  const onUnBlockUser = (e) => {\r\n    let current_user_id = getCurrentUser()._id;\r\n    let client_user_id = user._id;\r\n    unblockUser(current_user_id, client_user_id).then((data) => {\r\n      console.log(data);\r\n    });\r\n    e.preventDefault();\r\n  };\r\n\r\n  var d = new Date();\r\n  var f = 0;\r\n  function setdate(dd) {\r\n    d = dd;\r\n    return moment(dd).format(\"DD-MM-YYYY\");\r\n  }\r\n  function settoday(dd) {\r\n    d = dd;\r\n    f = 1;\r\n  }\r\n  const renderChat = () => {\r\n    f = 0;\r\n    return chat.map(({ from_name, message, created }, index) => (\r\n      <div>\r\n        <div className=\"d-flex flex-column m-3 align-items-center\">\r\n          {moment(created).format(\"DD-MM-YYYY\") !==\r\n          moment(d).format(\"DD-MM-YYYY\") ? (\r\n            moment(created).format(\"DD-MM-YYYY\") ===\r\n            moment(new Date()).format(\"DD-MM-YYYY\") ? (\r\n              <span className=\"text-dark-75 font-weight-bold font-size-sm bubble-date\">\r\n                Today{settoday(created)}\r\n              </span>\r\n            ) : (\r\n              <span className=\"text-dark-75 font-weight-bold font-size-sm bubble-date\">\r\n                {setdate(created)}\r\n              </span>\r\n            )\r\n          ) : moment(created).format(\"DD-MM-YYYY\") ===\r\n              moment(new Date()).format(\"DD-MM-YYYY\") && f === 0 ? (\r\n            <span className=\"text-dark-75 font-weight-bold font-size-sm bubble-date\">\r\n              Today{settoday(created)}\r\n            </span>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n        </div>\r\n        {isAuthenticated().user.name === from_name ? (\r\n          <div className=\"d-flex flex-column m-3 align-items-end \" key={index}>\r\n            <div className=\"d-flex align-items-center\">\r\n              <div>\r\n                <span className=\"text-muted font-size-sm\">\r\n                  {moment(created).format(\"h:mm a\")}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-2 text-dark font-weight-bold font-size-lg  text-left bubble-alt\">\r\n              {message}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div\r\n            className=\"d-flex flex-column m-3 align-items-start \"\r\n            key={index}\r\n          >\r\n            <div className=\"d-flex align-items-center\">\r\n              <div>\r\n                <span className=\"text-muted font-size-sm\">\r\n                  {moment(created).format(\"h:mm a\")}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-2 text-dark font-weight-bold font-size-lg  text-left  bubble\">\r\n              {message}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div className=\"pt-5\">\r\n      <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"empty\">\r\n        <Row>\r\n          <Col sm={3}>\r\n            <div className=\"card card-custom card-stretch\">\r\n              <div className=\"card-body pt-4\">\r\n                <Nav variant=\"pills\" className=\"flex-column mt-3\">\r\n                  {friends.map((user, i) => (\r\n                    <Nav.Item>\r\n                      {/* {console.log(user)} */}\r\n\r\n                      <Nav.Link\r\n                        eventKey={i}\r\n                        onClick={() => {\r\n                          setUser(user);\r\n                          settouser_id(user._id);\r\n                          settoname(user.name);\r\n                          fun(user);\r\n                          set_isblocked(blocked_users.indexOf(user._id) > -1);\r\n                          set_isblocked_by(blocked_by.indexOf(user._id) > -1);\r\n                        }}\r\n                      >\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"mr-3\">\r\n                            <img\r\n                              src={DefaultProfile}\r\n                              style={{ width: \"40px\" }}\r\n                            />\r\n                          </div>\r\n                          <div>{user.name}</div>\r\n                        </div>\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                  ))}\r\n                </Nav>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n          <Col sm={9}>\r\n            <Tab.Content>\r\n              <Tab.Pane eventKey=\"empty\">\r\n                <div className=\"card card-stretch\">\r\n                  <div className=\"card-header\">\r\n                    <div className=\"card-title align-items-start flex-column\">\r\n                      <h4 className=\"card-label font-weight-bolder text-dark\">\r\n                        Click on a chat.\r\n                      </h4>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Tab.Pane>\r\n              {friends.map((user, i) => {\r\n                let comp = [];\r\n                comp.push(\r\n                  <Tab.Pane eventKey={i}>\r\n                    <div className=\"card card-stretch\">\r\n                      <div className=\"card-header\">\r\n                        <div className=\"card-title\">\r\n                          <div className=\"d-flex align-items-center justify-content-between flex-wrap\">\r\n                            <div className=\"d-flex align-items-center text-dark font-size-h5 font-weight-bold mr-3\">\r\n                              {user.name}\r\n                            </div>\r\n                            <div className=\"d-flex flex-wrap my-2\">\r\n                              <button\r\n                                className=\"btn btn-light-warning\"\r\n                                onClick={onClearChat}\r\n                              >\r\n                                Clear\r\n                                <ClearAllIcon />\r\n                              </button>\r\n\r\n                              {!isblocked ? (\r\n                                <button\r\n                                  className=\"btn btn-light-danger ml-5\"\r\n                                  onClick={onBlockUser}\r\n                                >\r\n                                  Block\r\n                                  <BlockIcon />\r\n                                </button>\r\n                              ) : (\r\n                                <button\r\n                                  className=\"btn btn-light-danger\"\r\n                                  onClick={onUnBlockUser}\r\n                                >\r\n                                  UnBlock\r\n                                  <CheckCircleOutlineIcon />\r\n                                </button>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"card-body\">\r\n                        <div>\r\n                          <div ref={divRef} className=\"render-chat\">\r\n                            {renderChat()}\r\n                            <div ref={messagesEndRef} />\r\n                          </div>\r\n\r\n                          {!isblocked ? (\r\n                            !isblocked_by ? (\r\n                              <form onSubmit={onMessageSubmit}>\r\n                                <div className=\"row pt-5\">\r\n                                  <Col sm={10}>\r\n                                    <TextField\r\n                                      name=\"message\"\r\n                                      onChange={(e) => {\r\n                                        onTextChange(e);\r\n                                      }}\r\n                                      value={state.message}\r\n                                      id=\"outlined-multiline-static\"\r\n                                      variant=\"outlined\"\r\n                                      label=\"Message\"\r\n                                      fullWidth\r\n                                    />\r\n                                  </Col>\r\n                                  <Col>\r\n                                    <button className=\"btn btn-primary\">\r\n                                      Send Message <SendIcon />\r\n                                    </button>\r\n                                  </Col>\r\n                                </div>\r\n                              </form>\r\n                            ) : (\r\n                              <h4 className=\"card-label font-weight-bolder text-dark\">\r\n                                You have been blocked by the user\r\n                              </h4>\r\n                            )\r\n                          ) : (\r\n                            <h4 className=\"card-label font-weight-bolder text-dark\">\r\n                              You won't recieve any messages unless you unblock\r\n                              the user\r\n                            </h4>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Tab.Pane>\r\n                );\r\n                return comp;\r\n              })}\r\n            </Tab.Content>\r\n          </Col>\r\n        </Row>\r\n      </Tab.Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyChats;\r\n",["282","283"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Landing.js",[],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\EditProject.js",["284"],"import React, { Component } from \"react\";\r\nimport SkillsInput from \"./../utils/signupbutton/Tagify/SkillsInput\";\r\nimport { updateProject } from \"./apiProject\";\r\n\r\nimport RoleEditView from \"./RoleEditView\";\r\nexport default class EditProject extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      title: \"\",\r\n      description: \"\",\r\n      skills: [],\r\n      error: \"\",\r\n      team: [],\r\n      tasks: [],\r\n      roleDetails: [],\r\n      open: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { project } = this.props.location.state;\r\n    this.setState({\r\n      title: project.title,\r\n      description: project.description,\r\n      skills: project.skills,\r\n      roleDetails: project.roles,\r\n      leader: project.leader,\r\n      id: project._id,\r\n      team: project.team,\r\n      tasks: project.tasks,\r\n    });\r\n    let str = \"\";\r\n    project.skills.map((skill) => {\r\n      str += skill;\r\n      str += \",\";\r\n    });\r\n    str = str.slice(0, -1);\r\n    this.setState({ skillstr: str });\r\n  }\r\n\r\n  handleChange = (proj) => (event) => {\r\n    console.log(proj);\r\n    console.log(event.target.value);\r\n    this.setState({ error: \"\" });\r\n    this.setState({ [proj]: event.target.value });\r\n  };\r\n  handleSkills = (newSkills) => {\r\n    this.setState({ skills: newSkills });\r\n  };\r\n  handleRoleChange = (name) => (e) => {\r\n    let id = parseInt(e.target.attributes.idx.value);\r\n    const roleDetails = this.state.roleDetails;\r\n    roleDetails[id][name] = e.target.value;\r\n    this.setState({ roleDetails });\r\n  };\r\n\r\n  addNewRow = (e) => {\r\n    this.setState((prevState) => ({\r\n      roleDetails: [\r\n        ...prevState.roleDetails,\r\n        {\r\n          roleName: \"\",\r\n          roleSkills: [],\r\n          requestBy: [],\r\n        },\r\n      ],\r\n    }));\r\n  };\r\n\r\n  deteteRow = (index) => {\r\n    this.setState({\r\n      roleDetails: this.state.roleDetails.filter(\r\n        (s, sindex) => index !== sindex\r\n      ),\r\n    });\r\n  };\r\n\r\n  clickOnDelete(record) {\r\n    this.setState({\r\n      roleDetails: this.state.roleDetails.filter((r) => r !== record),\r\n    });\r\n  }\r\n\r\n  clickSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.setState({ loading: true });\r\n    let { title, description, skills, roleDetails, team, tasks } = this.state;\r\n    let project = {\r\n      title,\r\n      description,\r\n      skills,\r\n      roleDetails,\r\n      team,\r\n      tasks,\r\n    };\r\n    updateProject(project, this.state.id).then((val) => {\r\n      console.log(val);\r\n    });\r\n  };\r\n  render() {\r\n    if (!this.props.location.state) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div className=\"mt-5\">\r\n        <h1>Edit Project</h1>\r\n        <p className=\"text-muted\">\r\n          Change the desired info and click save at the end of the form.\r\n        </p>\r\n        <form className=\"mt-5\">\r\n          <div className=\"form-group\">\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-10 offset-1\">\r\n                <label>\r\n                  <big>Title of your Project</big>\r\n                </label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  value={this.state.title}\r\n                  type=\"text\"\r\n                  onChange={this.handleChange(\"title\")}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mt-3\">\r\n              <div className=\"col-sm-10 offset-1\">\r\n                <label>\r\n                  <big>Description of the Project</big>\r\n                </label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  value={this.state.description}\r\n                  onChange={this.handleChange(\"description\")}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mt-3\">\r\n              <div className=\"col-sm-10 offset-1\">\r\n                <SkillsInput\r\n                  label={<big>Skills</big>}\r\n                  setSkills={this.handleSkills}\r\n                  value={this.state.skillstr}\r\n                />\r\n              </div>\r\n            </div>\r\n            {/* <div className=\"row mt-3\">\r\n              <div className=\"col-sm-10 offset-1\">\r\n                <big>Roles</big>\r\n              </div>\r\n            </div>\r\n            {this.state.roleDetails.map((role) => {\r\n              <div className=\"row mt-3\">\r\n                <div className=\"col-sm-10 offset-1\">{role.roleName}</div>\r\n              </div>;\r\n            })} */}\r\n            {/* <table className=\"table \">\r\n              <thead>\r\n                <tr key={\"title\"}>\r\n                  <th key={\"rolename\"}>Role Name</th>\r\n                  <th key={\"skills\"}>Skills Required</th>\r\n                </tr>\r\n                {this.state.roleDetails.map((role) => (\r\n                  <tr key={role._id.toString()}>\r\n                    <td key={role._id.toString() + role.roleName.toString()}>\r\n                      {role.roleName}\r\n                    </td>\r\n                    <td key={role._id.toString() + role.roleSkills.toString()}>\r\n                      {role.roleSkills + \",\"}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </thead>\r\n            </table> */}\r\n            <RoleEditView\r\n              delete={this.clickOnDelete.bind(this)}\r\n              roleDetails={this.state.roleDetails}\r\n              onChange={this.handleRoleChange}\r\n            />\r\n\r\n            <div className=\"d-flex justify-content-center\">\r\n              <button\r\n                onClick={() => this.addNewRow()}\r\n                type=\"button\"\r\n                className=\"btn btn-primary text-center \"\r\n              >\r\n                <i className=\"fa fa-plus\" aria-hidden=\"true\" />\r\n              </button>\r\n            </div>\r\n            <div className=\"row\">\r\n              <button\r\n                className=\"btn btn-raised btn-primary mx-auto mt-3 mb-2 col-sm-3\"\r\n                onClick={this.clickSubmit}\r\n              >\r\n                Save Changes\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n",["285","286"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\showPost.js",["287","288","289","290","291","292"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\TextPostView.js",["293","294","295","296","297","298"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\apiPosts.js",["299","300","301"],"import axios from \"axios\";\r\nexport const getAllPosts = () => {\r\n  let userId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let requestObj = {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n  return fetch(`http://localhost:3000/posts/`, requestObj);\r\n};\r\nexport const getPostsOfUser = (userId) => {\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let requestObj = {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n  return fetch(`http://localhost:3000/posts/by/${userId}`, requestObj);\r\n};\r\nexport const uploadPicture2 = (data) => {\r\n  axios.post(`http://localhost:3000/convertToWebp`, data);\r\n};\r\nexport const uploadVideo = (data) => {\r\n  console.log(data);\r\n};\r\nexport const uploadPicture = async (base64Data, fileName) => {\r\n  // var imageBuffer = new Buffer(base64Data, \"base64\"); //console = <Buffer 75 ab 5a 8a ...\r\n  // fs.writeFile(\"test.jpg\", imageBuffer, function (err) {\r\n  //   //...\r\n  //   console.log(imageBuffer);\r\n  // });\r\n  // base64Data = base64Data.split(\",\").pop();\r\n  // console.log(base64Data);\r\n  // const blob = b64toBlob(base64Data, contentType);\r\n  // const blobUrl = URL.createObjectURL(blob);\r\n  // // console.log(\"blob:\", blob);\r\n  // // console.log(\"blobURL:\", blobUrl);\r\n  // console.log(blobUrl);\r\n  let object = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ data: base64Data, fileName: fileName }),\r\n  };\r\n  console.log(\"Object:\", object);\r\n  return fetch(`http://localhost:3000/convertToWebp`, object)\r\n    .then((data) => {\r\n      console.log(data);\r\n      return data.json();\r\n    })\r\n    .then((response) => {\r\n      // console.log(\"url:\", response.result.url);\r\n      // return response.result.url;\r\n      const data = response.result;\r\n      let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n      let userId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n      if (data.url) {\r\n        let url = data.url;\r\n        return fetch(`http://localhost:3000/post/new/${userId}`, {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + token.toString(),\r\n          },\r\n          body: JSON.stringify({\r\n            pic: url,\r\n          }),\r\n        })\r\n          .then((res) => res.json())\r\n          .then((data) => {\r\n            console.log(data);\r\n            return data;\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }\r\n    });\r\n};\r\nexport const createVideoPost = async (video, title, tags, project) => {\r\n  const data = new FormData();\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let userId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  data.append(\"myVideo\", video);\r\n  let settings = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  let response = await axios.post(\r\n    `http://localhost:3000/postVideo`,\r\n    data,\r\n    settings\r\n  );\r\n  let result = response.data.result;\r\n  if (result.url) {\r\n    let url = result.url;\r\n    let settings =\r\n      project !== \"Personal\"\r\n        ? {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: \"Bearer \" + token.toString(),\r\n            },\r\n            body: JSON.stringify({\r\n              video: url,\r\n              title: title,\r\n              tags: tags,\r\n              project: project,\r\n            }),\r\n          }\r\n        : {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: \"Bearer \" + token.toString(),\r\n            },\r\n            body: JSON.stringify({\r\n              video: url,\r\n              title: title,\r\n              tags: tags,\r\n            }),\r\n          };\r\n    return fetch(`/post/new/video/${userId}`, settings)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        return data;\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n};\r\n\r\nexport const createPost = async (final_url, title, tags, project) => {\r\n  console.log(final_url);\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let userId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  let settings =\r\n    project !== \"Personal\"\r\n      ? {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + token.toString(),\r\n          },\r\n          body: JSON.stringify({\r\n            pic: final_url,\r\n            title: title,\r\n            tags: tags,\r\n            project,\r\n          }),\r\n        }\r\n      : {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + token.toString(),\r\n          },\r\n          body: JSON.stringify({\r\n            pic: final_url,\r\n            title: title,\r\n            tags: tags,\r\n          }),\r\n        };\r\n  return fetch(`/post/new/${userId}`, settings)\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      console.log(data);\r\n      return data;\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const likepost = (post_id) => {\r\n  let userId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let obj = {\r\n    userId: userId,\r\n    postId: post_id,\r\n  };\r\n  let settings = {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(obj),\r\n  };\r\n  // console.log(settings.body);\r\n  return fetch(`http://localhost:3000/post/like/${post_id}`, settings)\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const dislikepost = (post_id) => {\r\n  let userId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let obj = {\r\n    userId: userId,\r\n    postId: post_id,\r\n  };\r\n  let settings = {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(obj),\r\n  };\r\n  // console.log(settings.body);\r\n  return fetch(`http://localhost:3000/post/dislike/${post_id}`, settings)\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const reportpost = (post_id) => {\r\n  let userId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n\r\n  let settings = {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n  return fetch(\r\n    `http://localhost:3000/post/report/${userId}/${post_id}`,\r\n    settings\r\n  )\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\nexport const addcomment = (post_id, comment) => {\r\n  let userId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  let userName = JSON.parse(localStorage.getItem(\"jwt\")).user.name;\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let obj = {\r\n    userId: userId,\r\n    userName: userName,\r\n    postId: post_id,\r\n    comment: comment,\r\n  };\r\n  let settings = {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(obj),\r\n  };\r\n  // console.log(settings.body);\r\n  return fetch(`http://localhost:3000/post/addcomment/${post_id}`, settings)\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const getpost = (post_id) => {\r\n  let settings = {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  // console.log(settings.body);\r\n  return fetch(`http://localhost:3000/post/${post_id}`, settings)\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const createTextPost = (text) => {\r\n  let userId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let settings = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify({ text }),\r\n  };\r\n  return fetch(`post/new/text/${userId}`, settings)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      console.log(data);\r\n      return data;\r\n    });\r\n};\r\n\r\nexport const createYoutubePost = (videolink, title, metadata) => {\r\n  let userId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let metadataObj = {\r\n    title: metadata.title,\r\n    author_name: metadata.author_name,\r\n    author_url: metadata.author_url,\r\n    type: metadata.type,\r\n    height: metadata.height,\r\n    width: metadata.width,\r\n    version: metadata.version,\r\n    provider_name: metadata.provider_name,\r\n    provider_url: metadata.provider_url,\r\n    thumbnail_height: metadata.thumbnail_height,\r\n    thumbnail_width: metadata.thumbnail_width,\r\n    thumbnail_url: metadata.thumbnail_url,\r\n  };\r\n  let settings = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify({\r\n      videolink,\r\n      title,\r\n      metadataAuthor: metadataObj.author_name,\r\n      metadataTitle: metadataObj.title,\r\n    }),\r\n  };\r\n  return fetch(`post/new/youtube/${userId}`, settings)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      console.log(data);\r\n      return data;\r\n    });\r\n};\r\n\r\nexport const deletePost = (postId, token) => {\r\n  return fetch(\"http://localhost:3000/post/delete/\" + `${postId}`, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n    .then((response) => {\r\n      console.log(\"done\");\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const getLikesOfPost = (postId) => {\r\n  let arr = [];\r\n  return fetch(`http://localhost:3000/post/likes/${postId}`)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      data.liked_by.map((id) => {\r\n        arr.push(id[\"_id\"]);\r\n      });\r\n      return arr;\r\n    });\r\n};\r\n\r\nexport const editPost = (postId, title) => {\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let obj = {\r\n    postId: postId,\r\n    title: title,\r\n  };\r\n  let settings = {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(obj),\r\n  };\r\n  // console.log(settings.body);\r\n  return fetch(`http://localhost:3000/post/edit/${postId}`, settings)\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const deleteComment = (commentId, postId) => {\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let obj = {\r\n    postId: postId,\r\n    commentId: commentId,\r\n  };\r\n  let settings = {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(obj),\r\n  };\r\n  // console.log(settings.body);\r\n  return fetch(`http://localhost:3000/post/deleteComment/${postId}`, settings)\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\nexport const postProfilePic = async (image) => {\r\n  console.log(image);\r\n  let userId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  const data = new FormData();\r\n  data.append(\"myProfilePicture\", image);\r\n  let settings = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n  let response = await axios.put(\r\n    `http://localhost:3000/user/profilePicture/${userId}`,\r\n    data,\r\n    settings\r\n  );\r\n  let profilePictures = response.data.user.profilePictures;\r\n  return profilePictures[profilePictures.length - 1];\r\n};\r\n\r\nexport const removeProfilePic = async () => {\r\n  let userId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let settings = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n  let response = await axios.put(\r\n    `http://localhost:3000/user/profilePicture/remove/${userId}`,\r\n    settings\r\n  );\r\n  let profilePictures = response.data.user.profilePictures;\r\n  return profilePictures[profilePictures.length - 1];\r\n};\r\n","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\UserRecommendation.js",[],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\Socket.js",[],["302","303"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Tagify\\SkillsInput.js",[],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\auth\\index.js",[],["304","305"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\Emoji.js",[],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\layout\\LayoutComponent.js",["306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337"],"import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport Pert from \"./Pert\";\r\nimport Task from \"./Task\";\r\nimport ReactFlow, {\r\n  addEdge,\r\n  Background,\r\n  Controls,\r\n  MiniMap,\r\n  removeElements,\r\n} from \"react-flow-renderer\";\r\nimport {\r\n  addTask,\r\n  getTasks,\r\n  putConnections,\r\n  deleteConnections,\r\n  getConnections,\r\n  putPredecessors,\r\n  putPosition,\r\n  putExpectedTime,\r\n} from \"../apiProject\";\r\nimport jsPERT from \"js-pert\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport {\r\n  nodeAdded,\r\n  connectionAdded,\r\n  replaceNodes,\r\n  replaceConnections,\r\n  replaceElements,\r\n  setPert,\r\n  setExpectedTime,\r\n  setSlacks,\r\n  setCriticalPath,\r\n} from \"../../store/cpm\";\r\nimport { updateTasks } from \"../../store/tasks\";\r\nimport { getCurrentUser } from \"./../../user/apiUser\";\r\nimport moment from \"moment\";\r\nconst styles = (theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 3, 3),\r\n  },\r\n});\r\nclass LayoutComponent extends Component {\r\n  state = {\r\n    elements: [],\r\n    tasks: [],\r\n    nodes: [],\r\n    pert: {},\r\n    task: {},\r\n    show: false,\r\n    checked: false,\r\n    bleh: 1,\r\n  };\r\n\r\n  onElementsRemove = (elementsToRemove) => {\r\n    if (this.props.project.leader.toString() === getCurrentUser()._id) {\r\n      let cons = this.props.connections;\r\n      const filteredConnections = cons.filter(\r\n        (con) => con.id !== elementsToRemove[0].id\r\n      );\r\n      this.props.replaceConnections({ connections: filteredConnections });\r\n      cons.map((con) => {\r\n        if (con.id === elementsToRemove[0].id) {\r\n          // console.log(con.id, elementsToRemove[0].id);\r\n          deleteConnections(this.props.project._id, con._id).then((data) => {\r\n            console.log(\"connection deleted\");\r\n            // this.pertCalc();\r\n          });\r\n          return;\r\n        }\r\n      });\r\n    }\r\n  };\r\n  onLoad = (reactFlowInstance) => {\r\n    reactFlowInstance.fitView();\r\n  };\r\n  onNodeDragStop = (e, node) => {\r\n    // console.log(node.position, node.data._id);\r\n    putPosition(this.props.project._id, node.data._id, node.position).then(\r\n      () => {\r\n        console.log(node.position + \" is saved\");\r\n      }\r\n    );\r\n  };\r\n  edgeInElements(elements, edge) {\r\n    let inside = false;\r\n    elements.map((elem) => {\r\n      if (elem.id.toString() === edge.id.toString()) {\r\n        inside = true;\r\n      }\r\n      return \"done\";\r\n    });\r\n    return inside;\r\n  }\r\n  onConnect = (params) => {\r\n    if (this.props.project.leader.toString() === getCurrentUser()._id) {\r\n      let source = params.source;\r\n      let target = params.target;\r\n      if (source !== undefined && target !== undefined) {\r\n        let edge = {\r\n          id:\r\n            \"reactflow__edge-\" +\r\n            source.toString() +\r\n            \"null-\" +\r\n            target.toString() +\r\n            \"null\",\r\n          source: source.toString(),\r\n          sourceHandle: null,\r\n          target: target.toString(),\r\n          targetHandle: null,\r\n        };\r\n        // console.log(this.state.elements);\r\n        let sourceId = \"\";\r\n        let targetId = \"\";\r\n        // console.log(this.props.nodes);\r\n        this.props.nodes.map((elem) => {\r\n          if (elem.id === source) {\r\n            sourceId = elem.key;\r\n          }\r\n          if (elem.id === target) {\r\n            targetId = elem.key;\r\n          }\r\n        });\r\n        putPredecessors(this.props.project._id, targetId, sourceId).then(() => {\r\n          console.log(sourceId + \" has new Predecessor \" + targetId);\r\n        });\r\n        // let ele = [...this.state.elements];\r\n        // if (!this.edgeInElements(ele, edge)) {\r\n        //   ele.push(edge);\r\n        putConnections(this.props.project._id, sourceId, targetId).then(() => {\r\n          console.log(\"connection \" + sourceId + \"to \" + targetId + \"added\");\r\n        });\r\n        // }\r\n        this.props.connectionAdded({ connection: edge });\r\n        // this.setState({ elements: ele });\r\n        // console.log(this.state.elements);\r\n        this.pertCalc();\r\n      }\r\n    }\r\n  };\r\n  getIdOfObjectId = (elemId) => {\r\n    let id = {};\r\n    const { nodes } = this.props;\r\n    id = nodes.map((elem) => {\r\n      if (elem.data !== undefined)\r\n        if (elem.data._id.toString() === elemId) {\r\n          id = elem.id;\r\n        }\r\n      return id;\r\n    });\r\n    return id[id.length - 1];\r\n  };\r\n  // handleClose = () => {\r\n  //   this.setState({ show: false });\r\n  // };\r\n  pertCalc = () => {\r\n    // this.setState({ show: true });\r\n    // console.log(\"inside pertCalc:\", tasksObject);\r\n    let nodes = this.props.nodes.map((elem) => ({\r\n      ...elem,\r\n    }));\r\n    // let connections = this.props.connections.map((elem) => ({\r\n    //   ...elem,\r\n    // }));\r\n    // console.log(connections);\r\n    // let { connections } = this.props;\r\n    // console.log(\"props:\", this.props.connections);\r\n    // console.log(\"connections:\");\r\n    let ids = [];\r\n    this.props.connections.map((connection) => {\r\n      // console.log(connection.source, connection.target);\r\n      if (!ids.includes(connection.source)) {\r\n        ids.push(connection.source.toString());\r\n      }\r\n      if (!ids.includes(connection.target)) {\r\n        ids.push(connection.target.toString());\r\n      }\r\n    });\r\n    // console.log(\"nodes:\");\r\n    let newNodes = [];\r\n    nodes.map((node) => {\r\n      if (ids.includes(node.id)) newNodes.push(node);\r\n    });\r\n\r\n    let tasksObject = ids.includes(\"1\")\r\n      ? {\r\n          1: {\r\n            id: \"1\",\r\n            mostLikelyTime: 0,\r\n            optimisticTime: 0,\r\n            pessimisticTime: 0,\r\n            predecessors: [],\r\n          },\r\n        }\r\n      : {};\r\n    // console.log(\"TasksObject before node addition:\", tasksObject);\r\n    // console.log(ids);\r\n    // console.log(\"nodes sent for pertcalc:\", newNodes);\r\n    newNodes.map((elem) => {\r\n      if (\r\n        elem.data.predecessors.length === 0 ||\r\n        elem.data.predecessors === undefined\r\n      )\r\n        return;\r\n      elem.data.predecessors.map((pre, index) => {\r\n        let id = this.getIdOfObjectId(pre.toString());\r\n        // console.log(id);\r\n        let predecessors = [...elem.data.predecessors];\r\n        predecessors[index] = id.toString();\r\n        elem.data = { ...elem.data, predecessors };\r\n      });\r\n    });\r\n    // console.log(nodes);\r\n    tasksObject = newNodes.map((elem) => {\r\n      // console.log(\"tasksObject node:\", elem);\r\n      tasksObject[elem.id.toString()] = {\r\n        id: elem.id.toString(),\r\n        optimisticTime: elem.data.optimistic,\r\n        mostLikelyTime: elem.data.time,\r\n        pessimisticTime: elem.data.pessimistic,\r\n        predecessors: elem.data.predecessors,\r\n      };\r\n      return tasksObject;\r\n    });\r\n    let tasksObjectFinal = tasksObject[tasksObject.length - 1];\r\n    // console.log(\"TasksObject:\");\r\n    // console.log(tasksObjectFinal);\r\n    // console.log(\"Pert:\");\r\n    let pert = {};\r\n    // console.log(\"gonna set pert\");\r\n    try {\r\n      // if (tasksObject[1] !== undefined) {\r\n      // console.log(tasksObject[1]);\r\n      pert = jsPERT(tasksObjectFinal);\r\n      this.props.setPert({ pert });\r\n      console.log(this.props.pert);\r\n      // this.props.setSlacks({ slackObject: this.props.pert.slack });\r\n      // console.log(\"slacks:\");\r\n      let slackObject = {};\r\n      slackObject = newNodes.map((elem, index) => {\r\n        // console.log(elem.id, pert.slack[elem.id]);\r\n        if (index !== 0 && index !== 1) {\r\n          // console.log(\"Slack elem:\", elem);                           // Website design layout\r\n          console.log(\"index:\", index);\r\n          console.log(\"task:\", elem.data.label);\r\n          let created = elem.data.created;\r\n\r\n          // let earliestFinish = new Date(\r\n          //   pert.earliestFinishTimes[index] + created\r\n          // ); // 23/5 + 3\r\n          let createdDate = new Date(created);\r\n          let earliestFinish = moment(createdDate, \"DD-MM-YYYY\").add(\r\n            pert.earliestFinishTimes[index + 1],\r\n            \"days\"\r\n          );\r\n          earliestFinish = earliestFinish._d;\r\n          // let slack = new Date(pert.slack[elem.id]);\r\n          const diffTime = Math.abs(earliestFinish - createdDate);\r\n          const duration = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n          // console.log(duration);\r\n          let today = new Date();\r\n          let todayDate = new Date(today.toUTCString()); // 25/5\r\n          let earliestStart = moment(createdDate, \"DD-MM-YYYY\").add(\r\n            +pert.earliestStartTimes[index + 1],\r\n            \"days\"\r\n          );\r\n          earliestStart = earliestStart._d;\r\n          // console.log(todayDate, startTime._d);\r\n          const diffTime2 = Math.abs(todayDate - earliestStart);\r\n          let daysDone = Math.ceil(diffTime2 / (1000 * 60 * 60 * 24));\r\n          // console.log(daysDone);\r\n          let finaldiff = Math.abs(duration - daysDone);\r\n          let days = Math.round(\r\n            (earliestFinish - todayDate) / (1000 * 60 * 60 * 24)\r\n          );\r\n          console.log(earliestStart, todayDate, earliestFinish);\r\n          console.log(\r\n            \"no. of days done:\",\r\n            Math.round(todayDate - earliestStart) / (1000 * 60 * 60 * 24)\r\n          );\r\n          console.log(\r\n            \"no. of days left:\",\r\n            Math.round((earliestFinish - todayDate) / (1000 * 60 * 60 * 24))\r\n          );\r\n          days = pert.slack[elem.id] !== 0 ? days + pert.slack[elem.id] : days;\r\n          // 23/5 25/5 26/5\r\n          // console.log(\"slack:\", pert.slack[elem.id]);\r\n          // console.log(\"day1:\", duration);\r\n          // console.log(\"day2:\", daysDone);\r\n          // console.log(\"days left:\", days);\r\n          // console.log(\"Overdue\", days >= 0 ? false : true);\r\n          // console.log(elem.data.label + \" \" + days + \" \" + pert.slack[elem.id]);\r\n          slackObject[elem.data.label] = {\r\n            slack: pert.slack[elem.id],\r\n            days: days,\r\n            daysPassed: Math.round(\r\n              (todayDate - earliestStart) / (1000 * 60 * 60 * 24)\r\n            ),\r\n            earliestStartDate: earliestStart,\r\n            todayDate: todayDate,\r\n            earliestFinishDate: earliestFinish,\r\n            overdue: days >= 0 ? false : true,\r\n          };\r\n          return slackObject;\r\n        }\r\n      });\r\n      console.log(\"slacks Object:\", slackObject[slackObject.length - 1]);\r\n      let obj = slackObject[slackObject.length - 1];\r\n      this.props.setSlacks({ slackObject: obj });\r\n      let newNodesObject = {};\r\n      newNodesObject = newNodes.map((node) => {\r\n        newNodesObject[node.id] = node.data;\r\n        return newNodesObject;\r\n      });\r\n      newNodesObject = newNodesObject[newNodesObject.length - 1];\r\n      // console.log(\"newNodesObject:\", newNodesObject);\r\n      let criticalPathData = {};\r\n      criticalPathData = pert.criticalPath.map((id) => {\r\n        criticalPathData[id] = newNodesObject[id];\r\n        return criticalPathData;\r\n      });\r\n      criticalPathData = criticalPathData[criticalPathData.length - 1];\r\n      console.log(\"criticalPathDataObject:\", criticalPathData);\r\n      this.props.setCriticalPath({ criticalPath: criticalPathData });\r\n\r\n      this.props.setExpectedTime({\r\n        expectedTime: Math.floor(this.props.pert.latestFinishTimes.__end),\r\n      });\r\n      putExpectedTime(\r\n        this.props.project._id,\r\n        Math.floor(this.props.pert.latestFinishTimes.__end)\r\n      );\r\n      // }\r\n    } catch (err) {\r\n      // console.log(err);\r\n      this.props.setPert({ pert: {} });\r\n      // console.log(this.props.pert);\r\n      this.props.setExpectedTime({\r\n        expectedTime: 0,\r\n      });\r\n      putExpectedTime(this.props.project._id, 0);\r\n    }\r\n    // this.setState({ pert });\r\n  };\r\n  onElementClick = (event, element) => {\r\n    console.log(element);\r\n  };\r\n  componentDidMount() {\r\n    let newNodes = [];\r\n\r\n    getTasks(this.props.project._id).then((data) => {\r\n      // console.log(data.tasks);\r\n      const tasks = data.tasks;\r\n      let newTasks = [];\r\n      tasks.map((task) => {\r\n        newTasks.push({ ...task });\r\n      });\r\n      newTasks.map((task) => {\r\n        task[\"label\"] = task.taskName;\r\n        task[\"description\"] = task.description;\r\n        task[\"time\"] = task.mostLikelyTime;\r\n        task[\"optimistic\"] = task.optimisticTime;\r\n        task[\"pessimistic\"] = task.pessimisticTime;\r\n        if (\r\n          task.taskName !== \"Completed!!\" &&\r\n          task.taskName !== \"Lets Start Working\"\r\n        ) {\r\n          let newNode = {\r\n            key: task._id,\r\n            id: (newNodes.length + 1).toString(),\r\n            data: task,\r\n            sourcePosition: \"right\",\r\n            targetPosition: \"left\",\r\n            position:\r\n              task.position !== undefined\r\n                ? task.position\r\n                : {\r\n                    x: (Math.random() * window.innerWidth) / 2,\r\n                    y: (Math.random() * window.innerHeight) / 2,\r\n                  },\r\n          };\r\n          newNodes.push(newNode);\r\n        }\r\n        if (task.taskName === \"Lets Start Working\") {\r\n          let ele = [...this.state.elements];\r\n          let newNode = {\r\n            key: task._id,\r\n            id: \"1\",\r\n            type: \"input\",\r\n            data: {\r\n              label: \"Lets Start Working\",\r\n              description: \"Start working on tasks to complete project on time\",\r\n              pessimistic: 0,\r\n              time: 0,\r\n              optimistic: 0,\r\n              predecessors: [],\r\n              _id: task._id,\r\n            },\r\n            sourcePosition: \"right\",\r\n            position:\r\n              task.position !== undefined ? task.position : { x: 0, y: 0 },\r\n          };\r\n          newNodes.push(newNode);\r\n        }\r\n        if (task.taskName === \"Completed!!\") {\r\n          let ele = [...this.state.elements];\r\n          let newNode = {\r\n            key: task._id,\r\n            id: \"2\",\r\n            type: \"output\",\r\n            data: {\r\n              label: \"Completed!!\",\r\n              description: \"Yaaayy you gus have completed the project\",\r\n              pessimistic: 0,\r\n              time: 0,\r\n              optimistic: 0,\r\n              predecessors: task.predecessors,\r\n              _id: task._id,\r\n            },\r\n            targetPosition: \"left\",\r\n            position:\r\n              task.position !== undefined ? task.position : { x: 500, y: 0 },\r\n          };\r\n          newNodes.push(newNode);\r\n        }\r\n      });\r\n      this.props.replaceNodes({ nodes: newNodes });\r\n      // console.log(\"Mount nodes:\", this.props.nodes);\r\n    });\r\n    getConnections(this.props.project._id)\r\n      .then((data) => {\r\n        let connections = [];\r\n        data.connections.map((link) => {\r\n          newNodes.map((elem) => {\r\n            if (elem.key !== undefined) {\r\n              if (link.from.toString() === elem.key.toString()) {\r\n                this.setState({ source: elem });\r\n              }\r\n              if (link.to.toString() === elem.key.toString()) {\r\n                this.setState({ target: elem });\r\n              }\r\n            }\r\n          });\r\n          let source = this.state.source;\r\n          let target = this.state.target;\r\n          if (source !== undefined && target !== undefined) {\r\n            let edge = {\r\n              id:\r\n                \"reactflow__edge-\" +\r\n                source.id.toString() +\r\n                \"null-\" +\r\n                target.id.toString() +\r\n                \"null\",\r\n              source: source.id.toString(),\r\n              sourceHandle: null,\r\n              target: target.id.toString(),\r\n              targetHandle: null,\r\n              _id: link._id,\r\n            };\r\n            connections.push(edge);\r\n          }\r\n          return \"done\";\r\n        });\r\n        // console.log(connections);\r\n        this.props.replaceConnections({ connections: connections });\r\n      })\r\n      .then(() => {\r\n        this.pertCalc();\r\n      });\r\n  }\r\n  componentDidUpdate(prevState, prevProps) {\r\n    if (this.props.connections.length !== prevState.connections.length) {\r\n      this.pertCalc();\r\n      // console.log(prevState.connections.length, this.props.connections.length);\r\n      // console.log(\"Pert from comp update:\", this.props.pert);\r\n      // console.log(\"Pert calculation nodes:\", this.props.nodes);\r\n    }\r\n    if (prevState.tasks.length !== this.props.tasks.length) {\r\n      const { tasks } = this.props;\r\n      let newTasks = [];\r\n      tasks.map((task) => {\r\n        newTasks.push({ ...task });\r\n      });\r\n      let newNodes = [];\r\n      newTasks.map((task) => {\r\n        task[\"label\"] = task.taskName;\r\n        task[\"description\"] = task.description;\r\n        task[\"time\"] = task.mostLikelyTime;\r\n        task[\"optimistic\"] = task.optimisticTime;\r\n        task[\"pessimistic\"] = task.pessimisticTime;\r\n        if (\r\n          task.taskName !== \"Completed!!\" &&\r\n          task.taskName !== \"Lets Start Working\"\r\n        ) {\r\n          let newNode = {\r\n            key: task._id,\r\n            id: (newNodes.length + 1).toString(),\r\n            data: task,\r\n            sourcePosition: \"right\",\r\n            targetPosition: \"left\",\r\n            position:\r\n              task.position !== undefined\r\n                ? task.position\r\n                : {\r\n                    x: (Math.random() * window.innerWidth) / 2,\r\n                    y: (Math.random() * window.innerHeight) / 2,\r\n                  },\r\n          };\r\n          newNodes.push(newNode);\r\n        }\r\n        if (task.taskName === \"Lets Start Working\") {\r\n          let ele = [...this.state.elements];\r\n          let newNode = {\r\n            key: task._id,\r\n            id: \"1\",\r\n            type: \"input\",\r\n            data: {\r\n              label: \"Lets Start Working\",\r\n              description: \"Start working on tasks to complete project on time\",\r\n              pessimistic: 0,\r\n              time: 0,\r\n              optimistic: 0,\r\n              predecessors: [],\r\n              _id: task._id,\r\n            },\r\n            sourcePosition: \"right\",\r\n            position:\r\n              task.position !== undefined ? task.position : { x: 0, y: 0 },\r\n          };\r\n          newNodes.push(newNode);\r\n        }\r\n        if (task.taskName === \"Completed!!\") {\r\n          let ele = [...this.state.elements];\r\n          let newNode = {\r\n            key: task._id,\r\n            id: \"2\",\r\n            type: \"output\",\r\n            data: {\r\n              label: \"Completed!!\",\r\n              description: \"Yaaayy you gus have completed the project\",\r\n              pessimistic: 0,\r\n              time: 0,\r\n              optimistic: 0,\r\n              predecessors: task.predecessors,\r\n              _id: task._id,\r\n            },\r\n            targetPosition: \"left\",\r\n            position:\r\n              task.position !== undefined ? task.position : { x: 500, y: 0 },\r\n          };\r\n          newNodes.push(newNode);\r\n        }\r\n      });\r\n      this.props.replaceNodes({ nodes: newNodes });\r\n      if (this.props.connections.length === 0) {\r\n        getConnections(this.props.project._id)\r\n          .then((data) => {\r\n            let connections = [];\r\n            data.connections.map((link) => {\r\n              newNodes.map((elem) => {\r\n                if (elem.key !== undefined) {\r\n                  if (link.from.toString() === elem.key.toString()) {\r\n                    this.setState({ source: elem });\r\n                  }\r\n                  if (link.to.toString() === elem.key.toString()) {\r\n                    this.setState({ target: elem });\r\n                  }\r\n                }\r\n              });\r\n              let source = this.state.source;\r\n              let target = this.state.target;\r\n              let edge = {\r\n                id:\r\n                  \"reactflow__edge-\" +\r\n                  source.id.toString() +\r\n                  \"null-\" +\r\n                  target.id.toString() +\r\n                  \"null\",\r\n                source: source.id.toString(),\r\n                sourceHandle: null,\r\n                target: target.id.toString(),\r\n                targetHandle: null,\r\n                _id: link._id,\r\n              };\r\n              connections.push(edge);\r\n\r\n              return \"done\";\r\n            });\r\n            // console.log(connections);\r\n            this.props.replaceConnections({ connections: connections });\r\n          })\r\n          .then(() => {\r\n            this.pertCalc();\r\n          });\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    if (this.props.tasks.length === 0) return <div>No tasks</div>;\r\n    const { nodes, connections, tasks } = this.props;\r\n    const { status } = this.props.project;\r\n    let connectCheck = status === \"Completed\" ? false : true;\r\n    const elements = [];\r\n    nodes.map((node) => {\r\n      elements.push({ ...node });\r\n    });\r\n    connections.map((connection) => {\r\n      elements.push({ ...connection });\r\n    });\r\n    // console.log(\"nodes:\", nodes);\r\n    return (\r\n      <div>\r\n        <div className=\"container-fluid\">\r\n          <ReactFlow\r\n            elements={elements}\r\n            onLoad={this.onLoad}\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"65vh\",\r\n              backgroundColor: \"#1A192B\",\r\n            }}\r\n            onNodeDragStop={this.onNodeDragStop}\r\n            onConnect={this.onConnect}\r\n            onElementClick={this.onElementClick}\r\n            onElementsRemove={this.onElementsRemove}\r\n            connectionLineStyle={{ stroke: \"#ddd\", strokeWidth: 2 }}\r\n            connectionLineType=\"bezier\"\r\n            snapToGrid={true}\r\n            snapGrid={[16, 16]}\r\n            nodesConnectable={connectCheck}\r\n            nodesDraggable={connectCheck}\r\n            defaultZoom={1}\r\n          >\r\n            <Background color=\"#888\" gap={16} />\r\n            <MiniMap\r\n              nodeColor={(n) => {\r\n                if (n.type === \"input\") return \"#DC143C\";\r\n                if (n.type === \"output\") return \"#90ee90\";\r\n                return \"cyan\";\r\n              }}\r\n            />\r\n            <Controls />\r\n          </ReactFlow>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  nodes: state.cpm.nodes,\r\n  connections: state.cpm.connections,\r\n  state: state,\r\n  notifications: state.notifications.notifications,\r\n  tasks: state.tasks.tasks,\r\n  elements: state.cpm.elements,\r\n  pert: state.cpm.pert,\r\n  slacks: state.cpm.slacks,\r\n  criticalPath: state.cpm.criticalPath,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  nodeAdded: (params) => dispatch(nodeAdded(params)),\r\n  connectionAdded: (params) => dispatch(connectionAdded(params)),\r\n  updateTasks: (params) => dispatch(updateTasks(params)),\r\n  replaceNodes: (params) => dispatch(replaceNodes(params)),\r\n  replaceConnections: (params) => dispatch(replaceConnections(params)),\r\n  replaceElements: (params) => dispatch(replaceElements(params)),\r\n  setPert: (params) => dispatch(setPert(params)),\r\n  setExpectedTime: (params) => dispatch(setExpectedTime(params)),\r\n  setSlacks: (params) => dispatch(setSlacks(params)),\r\n  setCriticalPath: (params) => dispatch(setCriticalPath(params)),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(styles)(LayoutComponent));\r\n","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\DragDropImages.js",["338"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Social.js",[],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\reportWebVitals.js",[],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\NavBar.js",[],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Notifications.js",["339","340","341","342","343"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\newProjectForm\\CreateProject.js",["344"],"import React, { Component } from \"react\";\r\nimport RoleList from \"./RoleCreate\";\r\nimport { newProject } from \"./../apiProject\";\r\nimport SkillsInput from \"./../../utils/signupbutton/Tagify/SkillsInput\";\r\nimport LiveClock from \"react-live-clock\";\r\nimport dayjs from \"dayjs\";\r\nimport { Badge } from \"react-bootstrap\";\r\n\r\nclass CreateProject extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      title: \"\",\r\n      description: \"\",\r\n      skills: [\"\"],\r\n      error: \"\",\r\n      roleDetails: [\r\n        {\r\n          index: Math.random(),\r\n          roleName: \"\",\r\n          roleSkills: [\"\"],\r\n        },\r\n      ],\r\n      open: false,\r\n    };\r\n  }\r\n\r\n  handleChange = (proj) => (event) => {\r\n    this.setState({ error: \"\" });\r\n    this.setState({ [proj]: event.target.value });\r\n  };\r\n  handleSkills = (newSkills) => {\r\n    this.setState({ skills: newSkills });\r\n  };\r\n  handleRoleChange = (name) => (e) => {\r\n    let id = parseInt(e.target.attributes.idx.value);\r\n    const roleDetails = this.state.roleDetails;\r\n    roleDetails[id][name] = e.target.value;\r\n    this.setState({ roleDetails });\r\n  };\r\n\r\n  addNewRow = (e) => {\r\n    this.setState((prevState) => ({\r\n      roleDetails: [\r\n        ...prevState.roleDetails,\r\n        {\r\n          index: Math.random(),\r\n          roleName: \"\",\r\n          roleSkills: \"\",\r\n        },\r\n      ],\r\n    }));\r\n  };\r\n\r\n  deteteRow = (index) => {\r\n    this.setState({\r\n      roleDetails: this.state.roleDetails.filter(\r\n        (s, sindex) => index !== sindex\r\n      ),\r\n    });\r\n  };\r\n\r\n  clickOnDelete(record) {\r\n    this.setState({\r\n      roleDetails: this.state.roleDetails.filter((r) => r !== record),\r\n    });\r\n  }\r\n\r\n  clickSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.setState({ loading: true });\r\n    let { title, description, skills, roleDetails } = this.state;\r\n    let project = {\r\n      title,\r\n      description,\r\n      skills,\r\n      roleDetails,\r\n    };\r\n    // newProject(project);\r\n    try {\r\n      newProject(project).then((data) => {\r\n        if (data === undefined) return;\r\n        if (data.error) {\r\n          if (data.similar) {\r\n            this.setState({ similar: data.similar });\r\n            console.log(this.state.similar);\r\n          }\r\n          this.setState({ error: data.error });\r\n        } else\r\n          this.setState({\r\n            title: \"\",\r\n            description: \"\",\r\n            skills: [\"\"],\r\n            roleDetails: [\r\n              {\r\n                index: Math.random(),\r\n                roleName: \"\",\r\n                roleSkills: [],\r\n              },\r\n            ],\r\n            error: \"\",\r\n            open: true,\r\n          });\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    // console.log(project);\r\n  };\r\n\r\n  render() {\r\n    let { error, title, description, skills, roleDetails, open } = this.state;\r\n    return (\r\n      <>\r\n        <div\r\n          className=\"subheader py-2 py-lg-6  subheader-transparent \"\r\n          id=\"kt_subheader\"\r\n        >\r\n          <div className=\" container  d-flex align-items-center justify-content-between flex-wrap flex-sm-nowrap\">\r\n            <div className=\"d-flex align-items-center flex-wrap mr-2\">\r\n              <h5 className=\"text-dark font-weight-bold mt-2 mb-2 mr-5\">\r\n                Create Project\r\n              </h5>\r\n              <div className=\"subheader-separator subheader-separator-ver mt-2 mb-2 mr-4 bg-gray-200\"></div>\r\n            </div>\r\n            <div class=\"d-flex align-items-center flex-wrap\">\r\n              <Badge variant=\"primary\">\r\n                <div className=\"d-flex align-items-center flex-wrap mr-2\">\r\n                  <h6>{dayjs().format(\"DD MMMM, dddd\")}</h6>\r\n                  <div className=\"subheader-separator subheader-separator-ver mt-2 mb-2 mr-4 ml-4 bg-gray-200\"></div>\r\n                  <h6>\r\n                    <LiveClock format=\"hh:mm a\" ticking />\r\n                  </h6>\r\n                </div>\r\n              </Badge>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"container\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              <div className=\"card-title\">\r\n                <h2>Let's Start a New Project</h2>\r\n                <p className=\"text-muted\">\r\n                  Fill in the form with all the necessary details to register\r\n                  the project.\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <div\r\n                className=\"alert alert-danger\"\r\n                style={{ display: error ? \"\" : \"none\" }}\r\n              >\r\n                {error}\r\n              </div>\r\n\r\n              <div\r\n                className=\"alert alert-success\"\r\n                style={{ display: open ? \"\" : \"none\" }}\r\n              >\r\n                Project Successfully Registered. Check \"My Projects\".\r\n              </div>\r\n              <form className=\"mt-5\">\r\n                <div className=\"form-group\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-10 offset-1\">\r\n                      <label>\r\n                        <big>Title of your Project</big>\r\n                      </label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        value={title}\r\n                        onChange={this.handleChange(\"title\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row mt-3\">\r\n                    <div className=\"col-sm-10 offset-1\">\r\n                      <label>\r\n                        <big>Description of the Project</big>\r\n                      </label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        value={description}\r\n                        onChange={this.handleChange(\"description\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row mt-3\">\r\n                    <div className=\"col-sm-10 offset-1\">\r\n                      <SkillsInput\r\n                        label={<big>Skills</big>}\r\n                        setSkills={this.handleSkills}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  {/*<RoleView />*/}\r\n                  <RoleList\r\n                    add={this.addNewRow}\r\n                    delete={this.clickOnDelete.bind(this)}\r\n                    roleDetails={roleDetails}\r\n                    onChange={this.handleRoleChange}\r\n                  />\r\n                  <div className=\"row\">\r\n                    <button\r\n                      onClick={this.clickSubmit}\r\n                      className=\"btn btn-raised btn-primary mx-auto mt-3 mb-2 col-sm-3\"\r\n                    >\r\n                      Create Project!\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateProject;\r\n","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\apiProject.js",["345","346","347"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\notifications.js",["348","349"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\tasks.js",[],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\ModalButton.js",[],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\LeaveProject.js",["350"],"import React, { Component } from \"react\";\r\nimport { updateProject, leaveProject } from \"./apiProject\";\r\nimport { Button, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport { isAuthenticated } from \"./../auth/index\";\r\nimport { getCurrentUser } from \"./../user/apiUser\";\r\nimport ExitToAppTwoToneIcon from \"@material-ui/icons/ExitToAppTwoTone\";\r\nclass LeaveProject extends Component {\r\n  state = {};\r\n  leaveproject = () => {\r\n    const project = this.props.project;\r\n    console.log(project);\r\n    let final_team = [],\r\n      final_tasks = [],\r\n      final_roles = [];\r\n    let tasks = project.tasks;\r\n    tasks.forEach((task) => {\r\n      let final_task = task;\r\n      let taskmembs = task.assignedTo;\r\n      let f_taskmembs = [];\r\n      taskmembs.forEach((memb) => {\r\n        if (memb === getCurrentUser()._id) f_taskmembs.push(project.leader);\r\n        else f_taskmembs.push(memb);\r\n      });\r\n      f_taskmembs = [...new Set(f_taskmembs)];\r\n      final_task.assignedTo = f_taskmembs;\r\n      console.log(final_task);\r\n      final_tasks.push(final_task);\r\n    });\r\n    console.log(final_tasks);\r\n\r\n    let membs = project.team;\r\n    membs.forEach((user) => {\r\n      if (user !== getCurrentUser()._id) final_team.push(user);\r\n      console.log(final_team);\r\n    });\r\n\r\n    let roles = project.roles;\r\n    roles.map((role) => {\r\n      if (role.assignedTo !== getCurrentUser()._id) final_roles.push(role);\r\n    });\r\n\r\n    let proj = {\r\n      title: project.title,\r\n      description: project.description,\r\n      skills: project.skills,\r\n      roleDetails: final_roles,\r\n      team: final_team,\r\n      tasks: final_tasks,\r\n    };\r\n    updateProject(proj, project._id).then((data) => {\r\n      if (data.error) {\r\n        console.log(data.error);\r\n      } else {\r\n        const token = isAuthenticated().token;\r\n        leaveProject(getCurrentUser()._id, project._id, token).then((data) => {\r\n          if (data.error) {\r\n            console.log(data.error);\r\n          }\r\n        });\r\n        alert(\"You left this project\");\r\n        window.location.reload(false);\r\n      }\r\n    });\r\n  };\r\n\r\n  leaveConfirmed = () => {\r\n    let answer = window.confirm(\"Are you sure you want to leave this project?\");\r\n    if (answer) {\r\n      this.leaveproject();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <OverlayTrigger\r\n          key=\"top\"\r\n          placement=\"top\"\r\n          overlay={<Tooltip id=\"top2\">Leave Project</Tooltip>}\r\n        >\r\n          <Button onClick={this.leaveConfirmed} variant=\"danger\">\r\n            <ExitToAppTwoToneIcon />\r\n          </Button>\r\n        </OverlayTrigger>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LeaveProject;\r\n","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\RatingComponent.js",["351","352"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\SearchProjectBar.js",["353","354","355","356","357","358","359"],"import React, { useState, useEffect } from \"react\";\r\nimport SearchTwoToneIcon from \"@material-ui/icons/SearchTwoTone\";\r\nimport { list, getCurrentUser } from \"./user/apiUser\";\r\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\r\nimport { listprojects } from \"./project/apiProject\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nconst SearchProjectBar = () => {\r\n  const [query, setQuery] = useState([]);\r\n  //   const [users, setUsers] = useState([]);\r\n  const [projects, setProjects] = useState([]);\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const [myProjectState, setMyProjectState] = useState({});\r\n  const [url, setUrl] = useState(\"\");\r\n  useEffect(() => {\r\n    let suggestions = [];\r\n    // list()\r\n    //   .then((data) => {\r\n    //     setUsers(data);\r\n    //     data.map((user) => {\r\n    //       suggestions.push({\r\n    //         id: user._id,\r\n    //         name: user.name,\r\n    //         url: `/user/${user._id}`,\r\n    //         type: user,\r\n    //       });\r\n    //     });\r\n    //   })\r\n    //   .then(() => {\r\n    listprojects()\r\n      .then((data) => {\r\n        //   setMyProjects(data.userProjects);\r\n        //   data.userProjects.map((project) => {\r\n        //   suggestions.push({\r\n        //     id: project._id,\r\n        //     name: project.title,\r\n        //     url: `/`,\r\n        //   });\r\n        //   });\r\n        setProjects(data);\r\n        data.map((project) => {\r\n          if (project.team.includes(getCurrentUser()._id)) {\r\n            suggestions.push({\r\n              id: project._id,\r\n              name: project.title,\r\n              url: `/myprojects/dashboard/${project._id}`,\r\n              type: \"myproject\",\r\n              data: project,\r\n            });\r\n          } else {\r\n            suggestions.push({\r\n              id: project._id,\r\n              name: project.title,\r\n              url: `/joinproject`,\r\n              type: \"project\",\r\n            });\r\n          }\r\n        });\r\n      })\r\n      .then(() => {\r\n        setSuggestions(suggestions);\r\n      });\r\n    //   });\r\n  }, []);\r\n\r\n  const handleOnSearch = (string, results) => {\r\n    // onSearch will have as the first callback parameter\r\n    // the string searched and for the second the results.\r\n    // console.log(string, results);\r\n  };\r\n  const handleOnHover = (result) => {\r\n    // the item hovered\r\n    // console.log(result);\r\n  };\r\n\r\n  const handleOnSelect = (item) => {\r\n    // the item selected\r\n    if (item.type === \"myproject\") {\r\n      console.log(item);\r\n      setUrl(item.url);\r\n      setMyProjectState(item.data);\r\n    }\r\n    if (item.type === \"project\") {\r\n      window.location.reload();\r\n    }\r\n  };\r\n\r\n  const handleOnFocus = () => {\r\n    // console.log(\"Focused\");\r\n  };\r\n  //   const suggestions = [...users];\r\n  console.log(suggestions);\r\n  console.log(\"myProjectState\", myProjectState);\r\n  //   if (url !== \"\" && myProjectState !== {})\r\n  //     return <Redirect to={{ url: url, state: { project: myProjectState } }} />;\r\n  if (url !== \"\") {\r\n    if (myProjectState !== {}) {\r\n      return (\r\n        <Redirect to={{ pathname: url, state: { project: myProjectState } }} />\r\n      );\r\n    }\r\n    // window.location.reload();\r\n    // return <Redirect to={url} />;\r\n    // if not his project redirected to join project, so nothing done\r\n  }\r\n  return (\r\n    // <Redirect>\r\n    <span>\r\n      <div\r\n        className=\"quick-search quick-search-inline ml-4 w-250px\"\r\n        id=\"kt_quick_search_inline\"\r\n      >\r\n        <ReactSearchAutocomplete\r\n          items={suggestions}\r\n          onSearch={handleOnSearch}\r\n          onHover={handleOnHover}\r\n          onSelect={handleOnSelect}\r\n          onFocus={handleOnFocus}\r\n          autoFocus\r\n          styling={{ zIndex: 100 }}\r\n        />\r\n        {/* <form className=\"quick-search-form\">\r\n          <div className=\"input-group rounded\">\r\n            <div className=\"input-group-prepend\">\r\n              <span className=\"input-group-text\">\r\n                <SearchTwoToneIcon />\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </form> */}\r\n      </div>\r\n    </span>\r\n    // </Redirect>\r\n  );\r\n};\r\n\r\nexport default SearchProjectBar;\r\n","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\TextPost.js",["360","361","362"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\RatingComponentFeedbackForm.js",["363"],"import React, { Component } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\n// import { setRating } from \"../../../controllers/user\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { getCurrentUser, setRating } from \"../user/apiUser\";\r\nimport Emoji from \"./Emoji\";\r\nclass RatingComponentFeedbackForm extends Component {\r\n  state = {\r\n    rating: {},\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleValueChange = this.handleValueChange.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    const { team } = this.props;\r\n    team.map((member) => {\r\n      if (member._id.toString() !== getCurrentUser()._id.toString()) {\r\n        let { rating } = this.state;\r\n        rating[member._id] = 5 * (10 / 7);\r\n        this.setState({ rating });\r\n      }\r\n    });\r\n  }\r\n  submitproject = () => {\r\n    const userId = isAuthenticated().user._id;\r\n    const { rating } = this.state;\r\n    setRating(userId, rating).then((data) => {\r\n      if (data.message === \"Updated Ratings\") {\r\n        alert(\"thanks for your feedback! :)\");\r\n      }\r\n    });\r\n  };\r\n  handleValueChange(rat, memberId) {\r\n    let { rating } = this.state;\r\n    let temp = rating;\r\n    temp[memberId] = rat;\r\n    this.setState({ rating: temp });\r\n    console.log(rating);\r\n    // console.log(rating);\r\n  }\r\n  render() {\r\n    const { team } = this.props;\r\n    return (\r\n      <>\r\n        <table>\r\n          {team.map((member) => (\r\n            <>\r\n              {member._id.toString() !== getCurrentUser()._id.toString() ? (\r\n                <tr key={member._id}>\r\n                  <td>\r\n                    <div key={\"name \" + member._id}>{member.name}</div>\r\n                  </td>\r\n                  <td key={\"slider \" + member._id}>\r\n                    <Emoji\r\n                      memberId={member._id}\r\n                      handleValueChange={this.handleValueChange}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </>\r\n          ))}\r\n        </table>\r\n        <Button onClick={() => this.submitproject()}>Submit</Button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RatingComponentFeedbackForm;\r\n","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Tagify\\Assigner.js",["364","365","366"],"import React, { useEffect } from \"react\";\r\nimport Tags from \"@yaireo/tagify/dist/react.tagify\";\r\nimport \"@yaireo/tagify/dist/tagify.css\";\r\n// Tagify settings object\r\nconst baseTagifySettings = {\r\n  blacklist: [],\r\n  enforceWhitelist: true,\r\n  dropdown: {\r\n    enabled: 0,\r\n  },\r\n  callbacks: {},\r\n};\r\n\r\nfunction Assigner({\r\n  label,\r\n  name,\r\n  value,\r\n  suggestions,\r\n  assignTo,\r\n  assignIds,\r\n  team,\r\n}) {\r\n  const handleChange = (e) => {\r\n    // console.log(e.detail.tagify.value);\r\n    let arr = [];\r\n    let ids = [];\r\n    e.detail.tagify.value.map((val) => {\r\n      arr.push(val.value);\r\n      team.map((member) => {\r\n        // console.log(member.name, val.value);\r\n        if (member.name === val.value) {\r\n          ids.push(member._id);\r\n        }\r\n      });\r\n    });\r\n    assignTo(arr);\r\n    assignIds(ids);\r\n  };\r\n  const settings = {\r\n    ...baseTagifySettings,\r\n    whitelist: suggestions,\r\n    callbacks: {\r\n      add: handleChange,\r\n      remove: handleChange,\r\n      blur: handleChange,\r\n      edit: handleChange,\r\n      invalid: handleChange,\r\n      click: handleChange,\r\n      focus: handleChange,\r\n      \"edit:updated\": handleChange,\r\n      \"edit:start\": handleChange,\r\n    },\r\n  };\r\n  //   console.log(\"words:\");\r\n  if (suggestions.length === 0) return null;\r\n  // console.log(initialValue);\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={\"field-\" + name}>{label}</label>\r\n      <Tags settings={settings} value={value} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Assigner;\r\n","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Menu.js",["367","368","369","370","371","372","373","374","375","376","377","378","379"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\Post.js",["380","381","382","383","384","385","386"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\cpm.js",["387","388","389"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\Requests.js",["390"],"import React, { Component } from \"react\";\r\nimport { getUserById } from \"../user/apiUser\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { acceptRequest, declineRequest } from \"./apiProject\";\r\nimport { getCurrentUser } from \"./../user/apiUser\";\r\nimport { connect } from \"react-redux\";\r\nimport { notificationAdded } from \"../store/notifications\";\r\nclass Requests extends Component {\r\n  state = {};\r\n  componentDidMount() {\r\n    const { reqId } = this.props;\r\n    getUserById(reqId).then((res) => {\r\n      this.setState({ user: res.user });\r\n    });\r\n  }\r\n  render() {\r\n    const { user } = this.state;\r\n    const { projectId, roleId } = this.props;\r\n    if (user === undefined) return null;\r\n    const url = \"http://localhost:3000/user/\" + user._id.toString();\r\n    return (\r\n      <>\r\n        <div className=\"row\">\r\n          <div className=\"ml-2 mt-2\">\r\n            {user.name}\r\n            <small className=\"text-mute\">(@{user.username})</small>\r\n          </div>\r\n          {/* <div className=\"ml-2\">\r\n            <Button\r\n              onClick={() => {\r\n                console.log(url);\r\n              }}\r\n            >\r\n              View Profile\r\n            </Button>\r\n          </div> */}\r\n          <div className=\"ml-1\">\r\n            <Button\r\n              onClick={() => {\r\n                acceptRequest(\r\n                  getCurrentUser()._id,\r\n                  projectId,\r\n                  user._id,\r\n                  roleId\r\n                ).then((res) => {\r\n                  console.log(res);\r\n                  this.props.notificationAdded({\r\n                    userId: user._id,\r\n                    message: `New Role Accepted by ${\r\n                      getCurrentUser().name\r\n                    }, Time to show off my skills B)`,\r\n                    type: \"RoleAccepted\",\r\n                    projectId: projectId,\r\n                  });\r\n                  this.props.notificationAdded({\r\n                    userId: getCurrentUser()._id,\r\n                    message: `@${user.username} added to project! Welcome the new Member`,\r\n                    type: \"NewMember\",\r\n                    projectId: projectId,\r\n                  });\r\n                });\r\n              }}\r\n            >\r\n              Accept\r\n            </Button>\r\n          </div>\r\n          <div className=\"ml-1\">\r\n            <Button\r\n              onClick={() => {\r\n                declineRequest(\r\n                  getCurrentUser()._id,\r\n                  projectId,\r\n                  user._id,\r\n                  roleId\r\n                ).then((res) => {\r\n                  console.log(res);\r\n                  this.props.notificationAdded({\r\n                    userId: user._id,\r\n                    message: `Role Declined by ${getCurrentUser().name} :(`,\r\n                    type: \"RoleDeclined\",\r\n                    projectId: projectId,\r\n                  });\r\n                });\r\n              }}\r\n            >\r\n              Decline\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  notifications: state.notifications.notifications,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  notificationAdded: (params) => dispatch(notificationAdded(params)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Requests);\r\n","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\taskComponents\\TrelloTask.js",["391"],"import React, { Component } from \"react\";\r\nimport { listmytasks } from \"../apiProject\";\r\nimport { getCurrentUser } from \"./../../user/apiUser\";\r\nimport { updateTask } from \"./../apiProject\";\r\nimport Board from \"react-trello\";\r\nimport { deleteTask, getTasks } from \"../apiProject\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateTasks, updateTrello } from \"./../../store/tasks\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport EditModel from \"./EditModel\";\r\nimport moment from \"moment\";\r\n\r\nlet data = {};\r\nlet projleader = \"\";\r\nlet tasks = [];\r\nlet projectId = \"\";\r\n\r\nclass TrelloTask extends Component {\r\n  state = {\r\n    mytasks: [],\r\n    boardData: { lanes: [] },\r\n    editable: true,\r\n    isleader: false,\r\n    show: false,\r\n    alltasks: [],\r\n    cardId: \"\",\r\n    currentTask: {},\r\n    flag: false,\r\n  };\r\n  setEventBus = (eventBus) => {\r\n    this.setState({ eventBus });\r\n  };\r\n  handleDragStart = (cardId, laneId) => {\r\n    this.setState({\r\n      flag: false,\r\n    });\r\n    console.log(\"drag started\");\r\n    if (tasks === {}) return;\r\n    tasks.forEach((task) => {\r\n      if (task.id === cardId) {\r\n        // console.log(getCurrentUser()._id)\r\n        task.assigned.forEach((user) => {\r\n          // console.log(user)\r\n          if (user === getCurrentUser()._id)\r\n            this.setState({\r\n              flag: true,\r\n            });\r\n        });\r\n      }\r\n    });\r\n    console.log(laneId);\r\n    if (\r\n      projleader === getCurrentUser()._id &&\r\n      (laneId === \"Review\" || laneId === \"COMPLETED\")\r\n    )\r\n      this.setState({\r\n        flag: true,\r\n      });\r\n  };\r\n  handleDragEnd = (cardId, sourceLaneId, targetLaneId) => {\r\n    console.log(\"drag ended\");\r\n\r\n    if (sourceLaneId === targetLaneId) this.setState({ flag: true });\r\n\r\n    if (this.state.flag === false) {\r\n      alert(\r\n        \"Sry.. You are not allowed to do this operation.. Changes made will be resetted\"\r\n      );\r\n      window.location.reload(false);\r\n    }\r\n  };\r\n\r\n  onCardDelete = async (cardId, laneId) => {\r\n    if (projleader === getCurrentUser()._id) {\r\n      let response = window.confirm(\"Are you Sure?\");\r\n      if (response) {\r\n        await deleteTask(cardId, projectId);\r\n        await getTasks(projectId).then((data) => {\r\n          this.props.updateTasks({ tasks: data.tasks });\r\n          // console.log(data);\r\n        });\r\n        // this.updateBoard();\r\n      } else {\r\n        // toast.error(\"Gimme a second...\", {\r\n        //   position: \"top-right\",\r\n        //   autoClose: 5000,\r\n        //   hideProgressBar: false,\r\n        //   closeOnClick: true,\r\n        //   pauseOnHover: true,\r\n        //   draggable: true,\r\n        //   progress: undefined,\r\n        // });\r\n        window.location.reload();\r\n      }\r\n    } else {\r\n      toast.warning(\r\n        \"You are not allowed to delete tasks.. Your action will be reverted..\"\r\n      );\r\n      window.location.reload();\r\n    }\r\n  };\r\n  async componentDidMount() {\r\n    projectId = this.props.projectId;\r\n    if (this.props.status === \"Completed\") {\r\n      this.setState({\r\n        editable: false,\r\n      });\r\n    }\r\n\r\n    await listmytasks().then((data) => {\r\n      let allproj = data.userProjects;\r\n      allproj.forEach((proj) => {\r\n        if (proj._id === this.props.projectId) {\r\n          projleader = proj.leader;\r\n          // this.setState({\r\n          //   mytasks: proj.tasks,\r\n          // });\r\n          // console.log(this.state.mytasks)\r\n        }\r\n      });\r\n    });\r\n    getTasks(this.props.projectId).then((val) => {\r\n      val.tasks.shift();\r\n      val.tasks.shift();\r\n      this.setState({ mytasks: val.tasks, alltasks: val.tasks });\r\n      this.updateBoard();\r\n    });\r\n    if (getCurrentUser()._id === projleader)\r\n      this.setState({\r\n        isleader: true,\r\n      });\r\n  }\r\n  showMe = () => {\r\n    this.setState({ show: true });\r\n  };\r\n  hideMe = () => {\r\n    this.setState({ show: false });\r\n  };\r\n\r\n  onCardClick = (cardId, metadata, laneId) => {\r\n    const currentTask = this.props.tasks.find(({ _id }) => _id === cardId);\r\n    this.setState({\r\n      cardId: cardId,\r\n      currentTask,\r\n    });\r\n    // console.log(this.state.currentTask);\r\n    this.showMe();\r\n  };\r\n\r\n  get_card_label = (slackObject, task) => {\r\n    let card_label = \"\";\r\n    if (slackObject[task.taskName] !== undefined) {\r\n      if (slackObject[task.taskName].days >= 0)\r\n        card_label = slackObject[task.taskName].days + \" days left\";\r\n      else\r\n        card_label =\r\n          Math.abs(slackObject[task.taskName].days) + \" days overdue\";\r\n    } else card_label = task.mostLikelyTime + \" days left\";\r\n\r\n    if (task.status === \"COMPLETED\") card_label = \"Completed\";\r\n    if (task.status === \"Review\") card_label = \"Reviewing\";\r\n    return card_label;\r\n  };\r\n\r\n  get_card_style = (slackObject, task) => {\r\n    let color = \"\";\r\n    // console.log(task.taskName, \"Object:\", slackObject[task.taskName]);\r\n    if (\r\n      slackObject[task.taskName] !== undefined &&\r\n      slackObject[task.taskName].overdue &&\r\n      (task.status === \"PLANNED\" || task.status === \"WIP\")\r\n    )\r\n      color = \"#ED2939\";\r\n    return color;\r\n  };\r\n\r\n  updateBoard = () => {\r\n    const mytasks = this.state.mytasks;\r\n    // console.log(\"slackObject:\", this.props.slackObject);\r\n    const { slackObject } = this.props;\r\n    // console.log(mytasks);\r\n    // console.log(\"mytasks:\" + mytasks);\r\n    let cards_planned = [];\r\n    let cards_wip = [];\r\n    let cards_review = [];\r\n    let cards_completed = [];\r\n    mytasks.forEach((task) => {\r\n      // if (slackObject[task.taskName] !== undefined)\r\n      //   console.log(\"Overdue:\", slackObject[task.taskName].overdue);\r\n      var card = {\r\n        id: task._id,\r\n        title: task.taskName,\r\n        // label: this.get_card_label(slackObject, task),\r\n        description: (\r\n          <>\r\n            <div className=\"lead\">{task.taskDescription}</div>\r\n            <p>{this.get_card_label(slackObject, task)}</p>\r\n            {/* {slackObject[task.taskName].map((startDate) => (\r\n              <p>{startDate.earliestStartDate}</p>\r\n            ))} */}\r\n            {/* <p>\r\n              Start By:{\" \"}\r\n              {moment(slackObject[task.taskName].earliestStartDate).format(\r\n                \"DD-MM-YYYY\"\r\n              )}\r\n            </p>\r\n            <p>\r\n              Finish By:{\" \"}\r\n              {moment(slackObject[task.taskName].earliestFinishDate).format(\r\n                \"DD-MM-YYYY\"\r\n              )}\r\n            </p> */}\r\n          </>\r\n        ),\r\n        pessimisticTime: task.pessimisticTime,\r\n        optimisticTime: task.optimisticTime,\r\n        assigned: task.assignedTo,\r\n        mostLikelyTime: task.mostLikelyTime,\r\n        status: task.status,\r\n        style: {\r\n          backgroundColor: this.get_card_style(slackObject, task),\r\n        },\r\n      };\r\n      if (task.status === \"PLANNED\") cards_planned.push(card);\r\n      else if (task.status === \"WIP\") cards_wip.push(card);\r\n      else if (task.status === \"Review\") cards_review.push(card);\r\n      else if (task.status === \"COMPLETED\") cards_completed.push(card);\r\n    });\r\n    data = {\r\n      lanes: [\r\n        {\r\n          id: \"PLANNED\",\r\n          title: \"Todo Tasks\",\r\n          label: \"1/4\",\r\n          droppable: this.state.editable,\r\n          cards: cards_planned,\r\n          style: {\r\n            backgroundColor: \"#3179ba\",\r\n            boxShadow: \"2px 2px 4px 0px rgba(0,0,0,0.75)\",\r\n            color: \"#fff\",\r\n            width: \"23.5%\",\r\n            maxHeight: \"60vh\",\r\n          },\r\n        },\r\n        {\r\n          id: \"WIP\",\r\n          title: \"Work In Progress\",\r\n          label: \"2/4\",\r\n          droppable: this.state.editable,\r\n          cards: cards_wip,\r\n          style: {\r\n            backgroundColor: \"#FFCC33\",\r\n            boxShadow: \"2px 2px 4px 0px rgba(0,0,0,0.75)\",\r\n            color: \"#fff\",\r\n            width: \"23.5%\",\r\n            maxHeight: \"60vh\",\r\n          },\r\n        },\r\n        {\r\n          id: \"Review\",\r\n          title: \"Review\",\r\n          label: \"3/4\",\r\n          droppable: this.state.editable,\r\n          cards: cards_review,\r\n          style: {\r\n            backgroundColor: \"#FF9900\",\r\n            boxShadow: \"2px 2px 4px 0px rgba(0,0,0,0.75)\",\r\n            color: \"#fff\",\r\n            width: \"23.5%\",\r\n            maxHeight: \"60vh\",\r\n          },\r\n        },\r\n        {\r\n          id: \"COMPLETED\",\r\n          title: \"Completed\",\r\n          label: \"4/4\",\r\n          droppable: this.state.editable && this.state.isleader,\r\n          cards: cards_completed,\r\n          style: {\r\n            backgroundColor: \"#00CC00\",\r\n            boxShadow: \"2px 2px 4px 0px rgba(0,0,0,0.75)\",\r\n            color: \"#fff\",\r\n            width: \"23.5%\",\r\n            maxHeight: \"60vh\",\r\n          },\r\n        },\r\n      ],\r\n    };\r\n    this.setState({ boardData: data });\r\n  };\r\n  shouldReceiveNewData = (nextData) => {\r\n    let cards = [];\r\n    nextData.lanes.forEach((data) => {\r\n      data.cards.forEach((card) => {\r\n        if (this.state.flag === true) card.status = card.laneId;\r\n        else card.laneId = card.status;\r\n        cards.push(card);\r\n      });\r\n    });\r\n    tasks = cards;\r\n    cards.forEach((card) => {\r\n      updateTask(card, this.props.projectId);\r\n    });\r\n    this.setState({ mytasks: cards });\r\n  };\r\n  // componentWillReceiveProps() {\r\n  //   if (\r\n  //     this.state.mytasks.length < this.props.tasks.length &&\r\n  //     this.state.mytasks.length !== this.props.tasks.length\r\n  //   ) {\r\n  //     this.setState({ mytasks: this.props.tasks });\r\n  //     console.log(\"new Tasks:\", this.state.tasks);\r\n  //     // this.updateBoard();\r\n  //   }\r\n  // }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const tasks = [...this.props.tasks];\r\n    tasks.shift();\r\n    tasks.shift();\r\n    if (prevState.mytasks.length !== tasks.length) {\r\n      if (this.props.updateTrelloBoard) {\r\n        // console.log(this.props.updateTrelloBoard);\r\n        getTasks(this.props.projectId)\r\n          .then((data) => {\r\n            this.setState({ mytasks: data.tasks });\r\n            this.updateBoard();\r\n          })\r\n          .then(() => this.props.updateTrello({ update: false }));\r\n        // console.log(prevState.mytasks, tasks);\r\n      }\r\n      // this.setState({ mytasks: tasks });\r\n    }\r\n    // console.log(prevState.mytasks.length, tasks.length);\r\n  }\r\n  render() {\r\n    // console.log(this.state.mytasks);\r\n    // console.log(this.state.currentTask);\r\n    return (\r\n      <div>\r\n        {this.state.show && this.state.isleader ? (\r\n          <EditModel\r\n            projectId={projectId}\r\n            task={this.state.currentTask}\r\n            id={this.state.cardId}\r\n            show={this.state.show}\r\n            showMe={this.showMe}\r\n            hideMe={this.hideMe}\r\n          />\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        <ToastContainer />\r\n        <div>\r\n          <h3>Task List</h3>\r\n        </div>\r\n        <div>\r\n          <Board\r\n            // editable\r\n            // editLaneTitle\r\n            data={this.state.boardData}\r\n            onDataChange={this.shouldReceiveNewData}\r\n            eventBusHandle={this.setEventBus}\r\n            handleDragStart={this.handleDragStart}\r\n            handleDragEnd={this.handleDragEnd}\r\n            onCardDelete={this.onCardDelete}\r\n            onCardClick={this.onCardClick}\r\n            hideCardDeleteIcon={!this.state.isleader}\r\n            style={{\r\n              backgroundColor: \"#eee\",\r\n              height: \"65vh\",\r\n            }}\r\n            cardStyle={{\r\n              overflow: \"hidden\",\r\n              width: \"90%\",\r\n              marginLeft: \"auto\",\r\n              marginRight: \"auto\",\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  tasks: state.tasks.tasks,\r\n  updateTrelloBoard: state.tasks.updateTrelloBoard,\r\n  slackObject: state.cpm.slacks,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  updateTasks: (params) => dispatch(updateTasks(params)),\r\n  updateTrello: (params) => dispatch(updateTrello(params)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TrelloTask);\r\n","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\taskComponents\\EditModel.js",["392"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Users.js",["393","394","395"],"import React, { Component } from \"react\";\r\nimport {\r\n  list,\r\n  getCurrentUser,\r\n  followUser,\r\n  unfollowUser,\r\n  getUserById,\r\n  unblockUser,\r\n} from \"./apiUser\";\r\nimport DefaultProfile from \"../images/avatar.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateFollowing } from \"../store/user\";\r\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\r\nimport PersonAddDisabledIcon from \"@material-ui/icons/PersonAddDisabled\";\r\nimport LiveClock from \"react-live-clock\";\r\nimport dayjs from \"dayjs\";\r\nimport { Badge } from \"react-bootstrap\";\r\nimport SearchTwoToneIcon from \"@material-ui/icons/SearchTwoTone\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport CheckCircleOutlineIcon from \"@material-ui/icons/CheckCircleOutline\";\r\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\r\nimport SearchUserBar from \"./SearchUserBar\";\r\nimport { notificationAdded } from \"../store/notifications\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nconst onUnBlockUser = (e, user) => {\r\n  let current_user_id = getCurrentUser()._id;\r\n  let client_user_id = user._id;\r\n  console.log(user);\r\n  unblockUser(current_user_id, client_user_id).then((data) => {\r\n    console.log(data);\r\n  });\r\n  e.preventDefault();\r\n};\r\n\r\nclass Users extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      users: [],\r\n      blocked_users: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    // console.log(getCurrentUser());\r\n    list().then((data) => {\r\n      if (data.error) {\r\n        console.log(data.error);\r\n      } else {\r\n        this.setState({ users: data });\r\n        let othersProfilePics = {};\r\n        data.map((user) => {\r\n          getUserById(user._id).then((data) => {\r\n            const profilePic =\r\n              data.user.profilePictures.length !== 0\r\n                ? data.user.profilePictures[\r\n                    data.user.profilePictures.length - 1\r\n                  ]\r\n                : DefaultProfile;\r\n            othersProfilePics[user._id] = profilePic;\r\n            this.setState({ othersProfilePics });\r\n            // this.props.setProfilePic({ profilePic });\r\n          });\r\n        });\r\n      }\r\n    });\r\n    getUserById(getCurrentUser()._id).then((data) => {\r\n      this.props.updateFollowing({\r\n        following: data.user.following,\r\n      });\r\n      this.setState({\r\n        blocked_users: data.user.blocked_users,\r\n      });\r\n    });\r\n  }\r\n  componentDidUpdate(prevState, prevProps) {\r\n    console.log(prevState);\r\n    console.log(prevProps);\r\n  }\r\n\r\n  renderUsers = (users, othersProfilePics) => (\r\n    <div className=\"row row-cols-1 row-cols-md-4\">\r\n      {users.map((user, i) => (\r\n        <div className=\"col mb-4\" key={i}>\r\n          <div className=\"card card-custom card-stretch\">\r\n            <div className=\"card-body pt-4\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <img\r\n                  src={othersProfilePics[user._id]}\r\n                  alt={user.name}\r\n                  className=\"symbol symbol-60 symbol-xxl-100 mr-3 align-self-start align-self-xxl-center\"\r\n                  style={{ width: \"55px\" }}\r\n                />\r\n                <div>\r\n                  <h5 className=\"font-weight-bolder text-dark-75 text-hover-primary\">\r\n                    {user.name}\r\n                  </h5>\r\n                  <div className=\"text-muted pb-3\">@{user.username}</div>\r\n                  <Link\r\n                    to={`/user/${user._id}`}\r\n                    className=\"btn btn-raised btn-small btn-primary\"\r\n                  >\r\n                    View Profile\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n              <div className=\"pt-3\">\r\n                <div className=\"d-flex align-items-center justify-content-between mb-2\">\r\n                  <Link\r\n                    to={`/mychats/${isAuthenticated().user._id}`}\r\n                    className=\"btn btn-outline-primary\"\r\n                  >\r\n                    Message\r\n                  </Link>\r\n                  {this.props.following.includes(user._id) ? (\r\n                    <button\r\n                      className=\"btn btn-raised btn-primary ml-3\"\r\n                      onClick={(e) => {\r\n                        unfollowUser(e, user._id).then(\r\n                          (data) =>\r\n                            this.props.updateFollowing({\r\n                              following: data.user.following,\r\n                            })\r\n                          // console.log(data)\r\n                        );\r\n                      }}\r\n                    >\r\n                      UnFollow\r\n                      <PersonAddDisabledIcon />\r\n                    </button>\r\n                  ) : (\r\n                    <button\r\n                      className=\"btn btn-raised btn-primary ml-3\"\r\n                      onClick={(e) =>\r\n                        followUser(e, user._id).then(\r\n                          (data) => {\r\n                            this.props.updateFollowing({\r\n                              following: data.user.following,\r\n                            });\r\n                            this.props.notificationAdded({\r\n                              userId: user._id,\r\n                              message: `${\r\n                                getCurrentUser().name\r\n                              } has followed you.`,\r\n                              type: \"FollowedYou\",\r\n                              userObjId: getCurrentUser()._id,\r\n                            });\r\n                            this.props.notificationAdded({\r\n                              userId: getCurrentUser()._id,\r\n                              message: `Followed ${user.name}!`,\r\n                              type: \"StartedFollowing\",\r\n                              userObjId: user._id,\r\n                            });\r\n                          }\r\n                          // console.log(data.user.following)\r\n                        )\r\n                      }\r\n                    >\r\n                      Follow\r\n                      <PersonAddIcon />\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n\r\n  renderBlockedUsers = (users, othersProfilePics) => (\r\n    <div className=\"row row-cols-1 row-cols-md-4\">\r\n      {users.map((user, i) => (\r\n        <div className=\"col mb-4\" key={i}>\r\n          <div className=\"card card-custom card-stretch\">\r\n            <div className=\"card-body pt-4\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <img\r\n                  src={othersProfilePics[user._id]}\r\n                  alt={user.name}\r\n                  className=\"symbol symbol-60 symbol-xxl-100 mr-3 align-self-start align-self-xxl-center\"\r\n                  style={{ width: \"55px\" }}\r\n                />\r\n                <div>\r\n                  <h5 className=\"font-weight-bolder text-dark-75 text-hover-primary\">\r\n                    {user.name}\r\n                  </h5>\r\n                  <div className=\"text-muted pb-3\">@{user.username}</div>\r\n                  <button\r\n                    className=\"btn btn-primary\"\r\n                    onClick={(e) => onUnBlockUser(e, user)}\r\n                  >\r\n                    UnBlock\r\n                    <CheckCircleOutlineIcon />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n\r\n  render() {\r\n    let users = this.state.users;\r\n    users = users.filter((x) => x._id !== getCurrentUser()._id);\r\n    let final_users = users.filter(\r\n      (x) => !this.state.blocked_users.includes(x._id)\r\n    );\r\n    const { othersProfilePics } = this.state;\r\n    if (othersProfilePics === undefined) return null;\r\n    let final_blocked = users.filter((x) =>\r\n      this.state.blocked_users.includes(x._id)\r\n    );\r\n    console.log(final_blocked);\r\n    return (\r\n      <>\r\n        <ToastContainer />\r\n        <div\r\n          className=\"subheader py-2 py-lg-6  subheader-transparent \"\r\n          id=\"kt_subheader\"\r\n        >\r\n          <div className=\" container  d-flex align-items-center justify-content-between flex-wrap flex-sm-nowrap\">\r\n            <div className=\"d-flex align-items-center flex-wrap mr-2\">\r\n              <h5 className=\"text-dark font-weight-bold mt-2 mb-2 mr-5\">\r\n                Users\r\n              </h5>\r\n              <span>\r\n                <SearchUserBar />\r\n              </span>\r\n            </div>\r\n            <div class=\"d-flex align-items-center flex-wrap\">\r\n              <Badge variant=\"primary\">\r\n                <div className=\"d-flex align-items-center flex-wrap mr-2\">\r\n                  <h6>{dayjs().format(\"DD MMMM, dddd\")}</h6>\r\n                  <div className=\"subheader-separator subheader-separator-ver mt-2 mb-2 mr-4 ml-4 bg-gray-200\"></div>\r\n                  <h6>\r\n                    <LiveClock format=\"hh:mm a\" ticking />\r\n                  </h6>\r\n                </div>\r\n              </Badge>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"container\">\r\n          <h2 className=\"mt-5 mb-5\">Users</h2>\r\n          {this.renderUsers(final_users, othersProfilePics)}\r\n\r\n          <h2 className=\"mt-5 mb-5\">Blocked Users</h2>\r\n          {this.renderBlockedUsers(final_blocked, othersProfilePics)}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  following: state.user.following,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  updateFollowing: (params) => dispatch(updateFollowing(params)),\r\n  notificationAdded: (params) => dispatch(notificationAdded(params)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Users);\r\n","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\YoutubePost.js",["396","397","398","399","400","401","402"],"import React, { Component } from \"react\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport Heart from \"react-animated-heart\";\r\nimport { getCurrentUser } from \"./../user/apiUser\";\r\nimport DefaultProfile from \"../images/avatar.png\";\r\nimport {\r\n  likepost,\r\n  dislikepost,\r\n  addcomment,\r\n  getpost,\r\n  deleteComment,\r\n  reportpost,\r\n} from \"./apiPosts\";\r\nimport { collect } from \"collect.js\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport VisibilityTwoToneIcon from \"@material-ui/icons/VisibilityTwoTone\";\r\nimport ReportTwoToneIcon from \"@material-ui/icons/ReportTwoTone\";\r\nimport SendRoundedIcon from \"@material-ui/icons/SendRounded\";\r\nimport DeleteTwoToneIcon from \"@material-ui/icons/DeleteTwoTone\";\r\nimport moment from \"moment\";\r\nimport {\r\n  Accordion,\r\n  Button,\r\n  Card,\r\n  Modal,\r\n  ModalBody,\r\n  Popover,\r\n  OverlayTrigger,\r\n} from \"react-bootstrap\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Sentiment from \"sentiment\";\r\nimport YouTubeIcon from \"@material-ui/icons/YouTube\";\r\nimport * as youtubeMeta from \"youtube-metadata-from-url\";\r\nimport DeletePost from \"./DeletePost\";\r\nimport ReactPlayer from \"react-player/youtube\";\r\nimport { connect } from \"react-redux\";\r\nimport { changePosts } from \"../store/posts\";\r\n\r\nconst sentiment = new Sentiment();\r\nclass YoutubePost extends Component {\r\n  state = {\r\n    isClick: false,\r\n    comment: \"\",\r\n    id: getCurrentUser()._id,\r\n    sentimentScore: null,\r\n    disabled: false,\r\n    // metadata: {},\r\n  };\r\n\r\n  componentDidMount() {\r\n    let users = this.props.liked_by;\r\n    if (users !== undefined && users !== null && users !== [])\r\n      if (users.indexOf(getCurrentUser()._id) > -1)\r\n        this.setState({ isClick: true });\r\n    // youtubeMeta\r\n    //   .metadata(this.props.url)\r\n    // //   .bind(this)\r\n    //   .then(\r\n    //     function (json) {\r\n    //       //   console.log(\"Response:\", json);\r\n    //       this.setState({ metadata: json });\r\n    //     },\r\n    //     function (err) {\r\n    //       console.log(err);\r\n    //     }\r\n    //   );\r\n  }\r\n  postliked = () => {\r\n    this.setState({ isClick: !this.state.isClick });\r\n    if (this.state.isClick)\r\n      dislikepost(this.props._id)\r\n        .then((data) => console.log(data))\r\n        .then(() => this.props.changePosts(this.props._id));\r\n    else\r\n      likepost(this.props._id)\r\n        .then((data) => console.log(data))\r\n        .then(() => this.props.changePosts(this.props._id));\r\n  };\r\n\r\n  handleSubmitClicked = () => {\r\n    reportpost(this.props._id);\r\n    this.setState({\r\n      show: false,\r\n      isDisabled: true,\r\n    });\r\n  };\r\n  handleClose() {\r\n    this.setState({ show: false });\r\n  }\r\n\r\n  handleShow() {\r\n    this.setState({ show: true });\r\n  }\r\n  onTextChange = (e) => {\r\n    this.setState({ comment: e.target.value });\r\n    this.findSentiment(e.target.value);\r\n  };\r\n\r\n  submitcomment = () => {\r\n    addcomment(this.props._id, this.state.comment).then(async (data) => {\r\n      await this.props.changePosts(this.props._id);\r\n    });\r\n  };\r\n\r\n  findSentiment(comment) {\r\n    const result = sentiment.analyze(comment);\r\n    this.setState({\r\n      sentimentScore: result.score,\r\n    });\r\n  }\r\n\r\n  deletecomment(e, commentId) {\r\n    e.preventDefault();\r\n    deleteComment(commentId, this.props._id)\r\n      .then((data) => console.log(data))\r\n      .then(async () => {\r\n        await this.props.changePosts(this.props._id);\r\n        toast.success(\"deleted comment successfully\");\r\n      });\r\n  }\r\n\r\n  rendercomments = (comments) => {\r\n    let reverseComments = [...comments].reverse();\r\n    return reverseComments.map(\r\n      ({ PostedOn, comment, userName, _id, userId }, index) => (\r\n        <div className=\"d-flex py-5\">\r\n          <div className=\"symbol symbol-40 symbol-light-warning mr-5\">\r\n            <span className=\"symbol-label\">\r\n              <img src={DefaultProfile} className=\"h-75 align-self-end\" />\r\n            </span>\r\n          </div>\r\n          <div className=\"d-flex flex-column flex-row-fluid\">\r\n            <div className=\"d-flex align-items-center flex-wrap\">\r\n              <Link\r\n                to=\"#\"\r\n                className=\"text-dark-75 text-hover-primary mb-1 font-size-lg font-weight-bolder pr-6\"\r\n              >\r\n                {userName}\r\n              </Link>\r\n              <span className=\"text-muted font-weight-normal flex-grow-1 font-size-sm\">\r\n                {moment(PostedOn).format(\"DD-MM-YYYY h:mm a\")}\r\n              </span>\r\n              <div className=\"ml-auto\">\r\n                {this.state.id === userId && (\r\n                  <button\r\n                    className=\"btn btn-clear\"\r\n                    onClick={(e) => this.deletecomment(e, _id)}\r\n                  >\r\n                    <DeleteTwoToneIcon />\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <span className=\"text-dark-75 font-size-sm font-weight-normal pt-1\">\r\n              {comment}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      )\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      headerText,\r\n      footerText,\r\n      url,\r\n      liked_by,\r\n      _id,\r\n      tags,\r\n      comments,\r\n      metadataTitle,\r\n      metadataAuthor,\r\n      delete_button,\r\n      created,\r\n      postedBy,\r\n      reportCounter,\r\n    } = this.props;\r\n    // const { metadata } = this.state;\r\n    let counts = collect(liked_by).count();\r\n    // console.log(\"metadataTitle:\", metadataTitle);\r\n    return (\r\n      <>\r\n        <ToastContainer />\r\n        <div className=\"card card-custom gutter-b\">\r\n          <div className=\"card-body\">\r\n            <div className=\"d-flex align-items-center pb-4\">\r\n              <div className=\"symbol symbol-40 symbol-light-warning mr-5\">\r\n                <span className=\"symbol-label\">\r\n                  <img src={DefaultProfile} className=\"h-75 align-self-end\" />\r\n                </span>\r\n              </div>\r\n              <div className=\"d-flex flex-column flex-grow-1\">\r\n                <Link\r\n                  to=\"#\"\r\n                  className=\"text-dark-75 text-hover-primary mb-1 font-size-lg font-weight-bolder\"\r\n                >\r\n                  {footerText}\r\n                </Link>\r\n                <span className=\"text-muted font-weight-bold\">\r\n                  {moment(created).format(\"DD-MM-YYYY h:mm a\")}\r\n                </span>\r\n              </div>\r\n              <div className=\"ml-auto\">\r\n                <OverlayTrigger\r\n                  trigger=\"click\"\r\n                  placement=\"right\"\r\n                  overlay={\r\n                    <Popover id=\"popover-basic\">\r\n                      <Popover.Content>\r\n                        <div>\r\n                          {getCurrentUser()._id === postedBy._id ? (\r\n                            <></>\r\n                          ) : reportCounter.includes(getCurrentUser()._id) ? (\r\n                            <>\r\n                              <button className=\"btn btn-clean\" disabled={true}>\r\n                                <ReportTwoToneIcon /> Post Reported\r\n                              </button>\r\n                            </>\r\n                          ) : (\r\n                            <>\r\n                              <button\r\n                                className=\"btn btn-clean\"\r\n                                onClick={() => {\r\n                                  this.handleShow();\r\n                                  this.setState({ disabled: true });\r\n                                }}\r\n                                disabled={this.state.disabled}\r\n                              >\r\n                                <ReportTwoToneIcon /> Report\r\n                              </button>\r\n                              <Modal\r\n                                show={this.state.show}\r\n                                onHide={this.handleClose.bind(this)}\r\n                              >\r\n                                <Modal.Header>\r\n                                  <Modal.Title>\r\n                                    Are you Sure to report this post?\r\n                                  </Modal.Title>\r\n                                  <Button onClick={this.handleClose.bind(this)}>\r\n                                    x\r\n                                  </Button>\r\n                                </Modal.Header>\r\n                                <ModalBody>\r\n                                  <Button\r\n                                    disabled={this.state.isDisabled}\r\n                                    onClick={this.handleSubmitClicked}\r\n                                  >\r\n                                    Yes\r\n                                  </Button>\r\n                                </ModalBody>\r\n                              </Modal>\r\n                            </>\r\n                          )}\r\n                        </div>\r\n                        <Link\r\n                          className=\"btn btn-clean\"\r\n                          to={{\r\n                            pathname: `/post/${this.props._id}`,\r\n                          }}\r\n                        >\r\n                          <VisibilityTwoToneIcon /> View Full Post\r\n                        </Link>\r\n                        <div>\r\n                          <button\r\n                            className=\"btn btn-clean\"\r\n                            onClick={() => {\r\n                              getpost(_id).then((data) => {\r\n                                let link = `http://localhost:3000/post/${data.post._id}`;\r\n                                navigator.clipboard.writeText(link);\r\n                                toast.success(\"Link copied to clipboard\");\r\n                              });\r\n                            }}\r\n                          >\r\n                            <ShareIcon /> Share Post\r\n                          </button>\r\n                        </div>\r\n                        {delete_button === \"enabled\" ? (\r\n                          <DeletePost postId={_id} />\r\n                        ) : (\r\n                          <div></div>\r\n                        )}\r\n                      </Popover.Content>\r\n                    </Popover>\r\n                  }\r\n                >\r\n                  <button className=\"btn btn-custom\">\r\n                    <MoreVertIcon />\r\n                  </button>\r\n                </OverlayTrigger>\r\n              </div>\r\n            </div>\r\n            <p className=\"lead ml-10 mt-5 text-dark-75 font-size-lg font-weight-normal \">\r\n              {headerText}\r\n            </p>\r\n            <div className=\"mt-3\">\r\n              <p className=\"text-dark-75 font-size-lg font-weight-normal\">\r\n                <YouTubeIcon\r\n                  fontSize=\"large\"\r\n                  className=\"text-danger display-3 mr-5 ml-2\"\r\n                />\r\n                {/* <a href={text} target={\"_blank\"}>\r\n                {text.toString()} {console.log(metadata)}\r\n                </a> */}\r\n                <span>\r\n                  <strong>{metadataTitle}</strong> By {metadataAuthor}\r\n                </span>\r\n                <center>\r\n                  <ReactPlayer url={url} controls={true} width={window.width} />\r\n                </center>\r\n              </p>\r\n              <div className=\"d-flex align-items-center\">\r\n                <Heart isClick={this.state.isClick} onClick={this.postliked} />\r\n\r\n                <button type=\"button\" class=\"btn btn-light-danger\">\r\n                  <strong>\r\n                    <span class=\"badge badge-light\">{counts}</span> Likes\r\n                  </strong>\r\n                </button>\r\n              </div>\r\n              <div className=\"d-flex align-items-center\">\r\n                <TextField\r\n                  name=\"comment\"\r\n                  onChange={(e) => this.onTextChange(e)}\r\n                  id=\"standard-basic\"\r\n                  label=\"Add a Comment\"\r\n                  fullWidth\r\n                />\r\n                <button\r\n                  onClick={this.submitcomment}\r\n                  className=\"btn btn-light-primary mr-5 ml-5 \"\r\n                  disabled={this.state.sentimentScore < -3 ? true : false}\r\n                >\r\n                  <SendRoundedIcon />\r\n                </button>\r\n              </div>\r\n              {comments.length > 0 ? (\r\n                this.rendercomments(comments)\r\n              ) : (\r\n                <p>No Comments</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  posts: state.posts.posts,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  changePosts: (params) => dispatch(changePosts(params)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(YoutubePost);\r\n","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\RecommendedRolePeople.js",["403"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\User_Role.js",[],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Tagify\\AssignPerson.js",["404"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\FeedbackForm.js",["405"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\ProjectRecommendation.js",["406","407"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Profile.js",["408","409","410","411","412","413","414"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\DragDropProfilePic.js",["415","416","417","418","419","420","421","422","423","424","425"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\SubmitProject.js",["426","427","428"],"import React, { Component } from \"react\";\r\nimport { isAuthenticated } from \"./../auth/index\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { finish } from \"./apiProject\";\r\nimport { Button, OverlayTrigger, Tooltip, Modal } from \"react-bootstrap\";\r\nimport PublishTwoToneIcon from \"@material-ui/icons/PublishTwoTone\";\r\nimport socket from \"./../utils/Socket\";\r\nimport RatingComponent from \"./RatingComponent\";\r\nimport { getUserById, setRating } from \"../user/apiUser\";\r\nclass SubmitProject extends Component {\r\n  state = {\r\n    show: false,\r\n    rating: {},\r\n  };\r\n  componentDidMount() {\r\n    const { projectTeam } = this.props;\r\n    let team = [];\r\n    projectTeam.map((member, index) => {\r\n      getUserById(member).then((val) => {\r\n        // let rating = this.state.rating;\r\n        // rating[val.user._id] = 4;\r\n        // this.setState({ rating });\r\n        team.push(val.user);\r\n        this.setState({ team });\r\n        // setRating(val.user._id, rating[val.user._id]).then((val) =>\r\n        //   console.log(val)\r\n        // );\r\n      });\r\n      // console.log(user);\r\n    });\r\n  }\r\n\r\n  submitproject = () => {\r\n    const token = isAuthenticated().token;\r\n    const userId = isAuthenticated().user._id;\r\n    const { rating } = this.state;\r\n    const { projectId, projectTeam } = this.props;\r\n    socket.emit(\"addFeedbackForm\", { rating, projectId });\r\n    // socket.emit(\"getOnlineUsers\");\r\n    // socket.on(\"onlineUsers\", (users) => {\r\n    //   Object.values(users.users).map((user) => {\r\n    //     console.log(user);\r\n    //   });\r\n    // });\r\n    setRating(userId, rating).then((data) => {\r\n      if (data.message === \"Updated Ratings\") {\r\n        finish(projectId, token).then((data) => {\r\n          if (data.error) {\r\n            console.log(data.error);\r\n          } else {\r\n            alert(\"Project marked as completed :) \");\r\n            window.location.reload();\r\n          }\r\n        });\r\n      }\r\n    });\r\n  };\r\n  setRatingObject = (rating) => {\r\n    this.setState({ rating });\r\n    // console.log(this.state.rating);\r\n  };\r\n  handleClose = () => {\r\n    this.setState({ show: false });\r\n  };\r\n  submitConfirmed = () => {\r\n    let answer = window.confirm(\r\n      \"Are you sure you want to submit this project? (Note : If submitted, project cannot be modified)\"\r\n    );\r\n    if (answer) {\r\n      this.setState({ show: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (this.state.redirect) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    const { show, team } = this.state;\r\n    // console.log(team);\r\n    if (team === undefined) return null;\r\n\r\n    return (\r\n      <>\r\n        {show ? (\r\n          <Modal\r\n            show={show}\r\n            onHide={this.handleClose}\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>\r\n                Lets Give your amazing team some Feedback!\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body scrollable=\"true\">\r\n              {team.length === 1 ? (\r\n                <>\r\n                  <h1>Oh wait. You've one man armied this? RESPECT! :O </h1>\r\n                  <Button\r\n                    onClick={() => {\r\n                      this.submitproject();\r\n                    }}\r\n                  >\r\n                    Continue...\r\n                  </Button>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <RatingComponent\r\n                    team={team}\r\n                    rating={this.state.rating}\r\n                    // handleValueChange={this.handleValueChange}\r\n                  />\r\n                  <Button\r\n                    onClick={() => {\r\n                      const { rating } = this.state;\r\n                      // console.log(rating);\r\n                      this.submitproject();\r\n                      this.setState({ show: false });\r\n                    }}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </>\r\n              )}\r\n            </Modal.Body>\r\n          </Modal>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <div>\r\n          <OverlayTrigger\r\n            key=\"top\"\r\n            placement=\"top\"\r\n            overlay={<Tooltip id=\"top\">Finalize Project</Tooltip>}\r\n          >\r\n            <Button\r\n              onClick={this.submitConfirmed}\r\n              className=\"ml-2\"\r\n              variant=\"success\"\r\n            >\r\n              <PublishTwoToneIcon />\r\n            </Button>\r\n          </OverlayTrigger>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SubmitProject;\r\n","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\apiNotifications.js",[],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Personal.js",[],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\PostVideo.js",[],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\PdfDropZone.js",["429","430","431","432","433","434","435"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Home.js",["436","437","438","439","440","441","442","443","444","445","446","447","448","449","450"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\DeleteUser.js",[],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Following.js",["451","452","453"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\PostImage.js",[],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Signin.js",["454"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\posts.js",["455"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\Chat.js",["456","457","458","459"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\DeletePost.js",["460","461","462","463"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\SearchBar.js",["464","465","466","467","468","469","470","471"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\DragDropVideo.js",["472","473"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\User.js",[],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Recommendation.js",["474","475","476","477","478"],{"ruleId":"479","severity":1,"message":"480","line":3,"column":46,"nodeType":"481","messageId":"482","endLine":3,"endColumn":47},{"ruleId":"479","severity":1,"message":"480","line":18,"column":46,"nodeType":"481","messageId":"482","endLine":18,"endColumn":47},{"ruleId":"479","severity":1,"message":"480","line":34,"column":46,"nodeType":"481","messageId":"482","endLine":34,"endColumn":47},{"ruleId":"479","severity":1,"message":"480","line":155,"column":51,"nodeType":"481","messageId":"482","endLine":155,"endColumn":52},{"ruleId":"479","severity":1,"message":"480","line":194,"column":51,"nodeType":"481","messageId":"482","endLine":194,"endColumn":52},{"ruleId":"479","severity":1,"message":"480","line":210,"column":49,"nodeType":"481","messageId":"482","endLine":210,"endColumn":50},{"ruleId":"483","replacedBy":"484"},{"ruleId":"485","replacedBy":"486"},{"ruleId":"487","severity":1,"message":"488","line":52,"column":13,"nodeType":"489","endLine":62,"endColumn":4},{"ruleId":"487","severity":1,"message":"490","line":62,"column":6,"nodeType":"491","endLine":62,"endColumn":8,"suggestions":"492"},{"ruleId":"487","severity":1,"message":"493","line":109,"column":6,"nodeType":"491","endLine":109,"endColumn":8,"suggestions":"494"},{"ruleId":"487","severity":1,"message":"495","line":138,"column":6,"nodeType":"491","endLine":138,"endColumn":12,"suggestions":"496"},{"ruleId":"497","severity":1,"message":"498","line":298,"column":29,"nodeType":"499","endLine":301,"endColumn":31},{"ruleId":"483","replacedBy":"500"},{"ruleId":"485","replacedBy":"501"},{"ruleId":"502","severity":1,"message":"503","line":34,"column":32,"nodeType":"489","messageId":"504","endLine":34,"endColumn":34},{"ruleId":"483","replacedBy":"505"},{"ruleId":"485","replacedBy":"506"},{"ruleId":"507","severity":1,"message":"508","line":17,"column":8,"nodeType":"509","messageId":"510","endLine":17,"endColumn":19},{"ruleId":"507","severity":1,"message":"511","line":19,"column":10,"nodeType":"509","messageId":"510","endLine":19,"endColumn":19},{"ruleId":"507","severity":1,"message":"512","line":28,"column":8,"nodeType":"509","messageId":"510","endLine":28,"endColumn":16},{"ruleId":"497","severity":1,"message":"498","line":149,"column":15,"nodeType":"499","endLine":149,"endColumn":75},{"ruleId":"502","severity":1,"message":"503","line":195,"column":36,"nodeType":"489","messageId":"504","endLine":195,"endColumn":38},{"ruleId":"497","severity":1,"message":"498","line":206,"column":19,"nodeType":"499","endLine":206,"endColumn":79},{"ruleId":"507","severity":1,"message":"508","line":14,"column":8,"nodeType":"509","messageId":"510","endLine":14,"endColumn":19},{"ruleId":"507","severity":1,"message":"511","line":21,"column":3,"nodeType":"509","messageId":"510","endLine":21,"endColumn":12},{"ruleId":"507","severity":1,"message":"513","line":23,"column":3,"nodeType":"509","messageId":"510","endLine":23,"endColumn":7},{"ruleId":"497","severity":1,"message":"498","line":106,"column":13,"nodeType":"499","endLine":106,"endColumn":73},{"ruleId":"507","severity":1,"message":"514","line":135,"column":7,"nodeType":"509","messageId":"510","endLine":135,"endColumn":11},{"ruleId":"497","severity":1,"message":"498","line":151,"column":19,"nodeType":"499","endLine":151,"endColumn":79},{"ruleId":"507","severity":1,"message":"515","line":3,"column":7,"nodeType":"509","messageId":"510","endLine":3,"endColumn":13},{"ruleId":"479","severity":1,"message":"480","line":351,"column":53,"nodeType":"481","messageId":"482","endLine":351,"endColumn":54},{"ruleId":"502","severity":1,"message":"503","line":371,"column":30,"nodeType":"489","messageId":"504","endLine":371,"endColumn":32},{"ruleId":"483","replacedBy":"516"},{"ruleId":"485","replacedBy":"517"},{"ruleId":"483","replacedBy":"518"},{"ruleId":"485","replacedBy":"519"},{"ruleId":"507","severity":1,"message":"520","line":3,"column":10,"nodeType":"509","messageId":"510","endLine":3,"endColumn":15},{"ruleId":"507","severity":1,"message":"521","line":5,"column":8,"nodeType":"509","messageId":"510","endLine":5,"endColumn":12},{"ruleId":"507","severity":1,"message":"522","line":6,"column":8,"nodeType":"509","messageId":"510","endLine":6,"endColumn":12},{"ruleId":"507","severity":1,"message":"523","line":8,"column":3,"nodeType":"509","messageId":"510","endLine":8,"endColumn":10},{"ruleId":"507","severity":1,"message":"524","line":12,"column":3,"nodeType":"509","messageId":"510","endLine":12,"endColumn":17},{"ruleId":"507","severity":1,"message":"525","line":15,"column":3,"nodeType":"509","messageId":"510","endLine":15,"endColumn":10},{"ruleId":"507","severity":1,"message":"526","line":25,"column":10,"nodeType":"509","messageId":"510","endLine":25,"endColumn":16},{"ruleId":"502","severity":1,"message":"527","line":72,"column":22,"nodeType":"489","messageId":"528","endLine":72,"endColumn":24},{"ruleId":"502","severity":1,"message":"503","line":79,"column":11,"nodeType":"529","messageId":"530","endLine":79,"endColumn":18},{"ruleId":"502","severity":1,"message":"503","line":126,"column":37,"nodeType":"489","messageId":"504","endLine":126,"endColumn":39},{"ruleId":"502","severity":1,"message":"503","line":180,"column":45,"nodeType":"489","messageId":"504","endLine":180,"endColumn":47},{"ruleId":"502","severity":1,"message":"503","line":191,"column":22,"nodeType":"489","messageId":"504","endLine":191,"endColumn":24},{"ruleId":"502","severity":1,"message":"527","line":209,"column":25,"nodeType":"489","messageId":"528","endLine":209,"endColumn":27},{"ruleId":"502","severity":1,"message":"503","line":214,"column":9,"nodeType":"529","messageId":"530","endLine":214,"endColumn":16},{"ruleId":"502","severity":1,"message":"503","line":215,"column":47,"nodeType":"489","messageId":"504","endLine":215,"endColumn":49},{"ruleId":"502","severity":1,"message":"527","line":250,"column":48,"nodeType":"489","messageId":"528","endLine":250,"endColumn":50},{"ruleId":"507","severity":1,"message":"531","line":282,"column":15,"nodeType":"509","messageId":"510","endLine":282,"endColumn":24},{"ruleId":"502","severity":1,"message":"503","line":365,"column":24,"nodeType":"489","messageId":"504","endLine":365,"endColumn":26},{"ruleId":"502","severity":1,"message":"503","line":368,"column":27,"nodeType":"489","messageId":"504","endLine":368,"endColumn":29},{"ruleId":"532","severity":1,"message":"533","line":370,"column":31,"nodeType":"534","messageId":"535","endLine":370,"endColumn":47},{"ruleId":"507","severity":1,"message":"536","line":395,"column":15,"nodeType":"509","messageId":"510","endLine":395,"endColumn":18},{"ruleId":"507","severity":1,"message":"536","line":416,"column":15,"nodeType":"509","messageId":"510","endLine":416,"endColumn":18},{"ruleId":"502","severity":1,"message":"503","line":444,"column":31,"nodeType":"489","messageId":"504","endLine":444,"endColumn":33},{"ruleId":"502","severity":1,"message":"503","line":491,"column":24,"nodeType":"489","messageId":"504","endLine":491,"endColumn":26},{"ruleId":"502","severity":1,"message":"503","line":495,"column":27,"nodeType":"489","messageId":"504","endLine":495,"endColumn":29},{"ruleId":"532","severity":1,"message":"533","line":497,"column":31,"nodeType":"534","messageId":"535","endLine":497,"endColumn":47},{"ruleId":"507","severity":1,"message":"536","line":522,"column":15,"nodeType":"509","messageId":"510","endLine":522,"endColumn":18},{"ruleId":"507","severity":1,"message":"536","line":543,"column":15,"nodeType":"509","messageId":"510","endLine":543,"endColumn":18},{"ruleId":"502","severity":1,"message":"503","line":570,"column":35,"nodeType":"489","messageId":"504","endLine":570,"endColumn":37},{"ruleId":"507","severity":1,"message":"537","line":610,"column":33,"nodeType":"509","messageId":"510","endLine":610,"endColumn":38},{"ruleId":"502","severity":1,"message":"503","line":614,"column":22,"nodeType":"489","messageId":"504","endLine":614,"endColumn":24},{"ruleId":"502","severity":1,"message":"503","line":617,"column":34,"nodeType":"489","messageId":"504","endLine":617,"endColumn":36},{"ruleId":"507","severity":1,"message":"538","line":7,"column":10,"nodeType":"509","messageId":"510","endLine":7,"endColumn":19},{"ruleId":"507","severity":1,"message":"539","line":26,"column":10,"nodeType":"509","messageId":"510","endLine":26,"endColumn":38},{"ruleId":"507","severity":1,"message":"540","line":28,"column":7,"nodeType":"509","messageId":"510","endLine":28,"endColumn":15},{"ruleId":"502","severity":1,"message":"503","line":42,"column":35,"nodeType":"489","messageId":"504","endLine":42,"endColumn":37},{"ruleId":"507","severity":1,"message":"541","line":74,"column":11,"nodeType":"509","messageId":"510","endLine":74,"endColumn":24},{"ruleId":"507","severity":1,"message":"542","line":81,"column":11,"nodeType":"509","messageId":"510","endLine":81,"endColumn":19},{"ruleId":"507","severity":1,"message":"543","line":112,"column":38,"nodeType":"509","messageId":"510","endLine":112,"endColumn":44},{"ruleId":"507","severity":1,"message":"515","line":57,"column":7,"nodeType":"509","messageId":"510","endLine":57,"endColumn":13},{"ruleId":"479","severity":1,"message":"480","line":237,"column":56,"nodeType":"481","messageId":"482","endLine":237,"endColumn":57},{"ruleId":"479","severity":1,"message":"480","line":252,"column":56,"nodeType":"481","messageId":"482","endLine":252,"endColumn":57},{"ruleId":"507","severity":1,"message":"544","line":1,"column":10,"nodeType":"509","messageId":"510","endLine":1,"endColumn":26},{"ruleId":"507","severity":1,"message":"545","line":2,"column":27,"nodeType":"509","messageId":"510","endLine":2,"endColumn":43},{"ruleId":"502","severity":1,"message":"503","line":38,"column":22,"nodeType":"489","messageId":"504","endLine":38,"endColumn":24},{"ruleId":"507","severity":1,"message":"526","line":2,"column":10,"nodeType":"509","messageId":"510","endLine":2,"endColumn":16},{"ruleId":"502","severity":1,"message":"503","line":15,"column":23,"nodeType":"489","messageId":"504","endLine":15,"endColumn":25},{"ruleId":"507","severity":1,"message":"546","line":2,"column":8,"nodeType":"509","messageId":"510","endLine":2,"endColumn":25},{"ruleId":"507","severity":1,"message":"547","line":3,"column":10,"nodeType":"509","messageId":"510","endLine":3,"endColumn":14},{"ruleId":"507","severity":1,"message":"548","line":6,"column":20,"nodeType":"509","messageId":"510","endLine":6,"endColumn":24},{"ruleId":"507","severity":1,"message":"549","line":8,"column":10,"nodeType":"509","messageId":"510","endLine":8,"endColumn":15},{"ruleId":"507","severity":1,"message":"550","line":8,"column":17,"nodeType":"509","messageId":"510","endLine":8,"endColumn":25},{"ruleId":"507","severity":1,"message":"551","line":10,"column":10,"nodeType":"509","messageId":"510","endLine":10,"endColumn":18},{"ruleId":"502","severity":1,"message":"503","line":40,"column":28,"nodeType":"489","messageId":"504","endLine":40,"endColumn":30},{"ruleId":"507","severity":1,"message":"548","line":4,"column":10,"nodeType":"509","messageId":"510","endLine":4,"endColumn":14},{"ruleId":"507","severity":1,"message":"552","line":7,"column":26,"nodeType":"509","messageId":"510","endLine":7,"endColumn":43},{"ruleId":"487","severity":1,"message":"553","line":33,"column":6,"nodeType":"491","endLine":33,"endColumn":18,"suggestions":"554"},{"ruleId":"502","severity":1,"message":"503","line":17,"column":23,"nodeType":"489","messageId":"504","endLine":17,"endColumn":25},{"ruleId":"507","severity":1,"message":"555","line":1,"column":17,"nodeType":"509","messageId":"510","endLine":1,"endColumn":26},{"ruleId":"502","severity":1,"message":"503","line":27,"column":37,"nodeType":"489","messageId":"504","endLine":27,"endColumn":39},{"ruleId":"502","severity":1,"message":"503","line":29,"column":25,"nodeType":"489","messageId":"504","endLine":29,"endColumn":27},{"ruleId":"507","severity":1,"message":"556","line":4,"column":10,"nodeType":"509","messageId":"510","endLine":4,"endColumn":28},{"ruleId":"507","severity":1,"message":"557","line":6,"column":10,"nodeType":"509","messageId":"510","endLine":6,"endColumn":13},{"ruleId":"507","severity":1,"message":"558","line":12,"column":10,"nodeType":"509","messageId":"510","endLine":12,"endColumn":24},{"ruleId":"507","severity":1,"message":"559","line":13,"column":8,"nodeType":"509","messageId":"510","endLine":13,"endColumn":14},{"ruleId":"507","severity":1,"message":"560","line":22,"column":9,"nodeType":"509","messageId":"510","endLine":22,"endColumn":17},{"ruleId":"561","severity":1,"message":"562","line":71,"column":27,"nodeType":"499","endLine":71,"endColumn":74},{"ruleId":"561","severity":1,"message":"562","line":85,"column":27,"nodeType":"499","endLine":85,"endColumn":74},{"ruleId":"561","severity":1,"message":"562","line":99,"column":27,"nodeType":"499","endLine":99,"endColumn":75},{"ruleId":"561","severity":1,"message":"562","line":113,"column":27,"nodeType":"499","endLine":113,"endColumn":75},{"ruleId":"561","severity":1,"message":"562","line":127,"column":27,"nodeType":"499","endLine":127,"endColumn":75},{"ruleId":"561","severity":1,"message":"562","line":161,"column":27,"nodeType":"499","endLine":161,"endColumn":75},{"ruleId":"561","severity":1,"message":"562","line":181,"column":27,"nodeType":"499","endLine":181,"endColumn":75},{"ruleId":"561","severity":1,"message":"562","line":201,"column":27,"nodeType":"499","endLine":201,"endColumn":75},{"ruleId":"507","severity":1,"message":"508","line":16,"column":8,"nodeType":"509","messageId":"510","endLine":16,"endColumn":19},{"ruleId":"507","severity":1,"message":"511","line":24,"column":3,"nodeType":"509","messageId":"510","endLine":24,"endColumn":12},{"ruleId":"507","severity":1,"message":"563","line":40,"column":8,"nodeType":"509","messageId":"510","endLine":40,"endColumn":16},{"ruleId":"507","severity":1,"message":"512","line":41,"column":8,"nodeType":"509","messageId":"510","endLine":41,"endColumn":16},{"ruleId":"497","severity":1,"message":"498","line":143,"column":15,"nodeType":"499","endLine":143,"endColumn":75},{"ruleId":"507","severity":1,"message":"514","line":182,"column":7,"nodeType":"509","messageId":"510","endLine":182,"endColumn":11},{"ruleId":"497","severity":1,"message":"498","line":199,"column":19,"nodeType":"499","endLine":199,"endColumn":79},{"ruleId":"507","severity":1,"message":"564","line":2,"column":10,"nodeType":"509","messageId":"510","endLine":2,"endColumn":18},{"ruleId":"507","severity":1,"message":"565","line":4,"column":5,"nodeType":"509","messageId":"510","endLine":4,"endColumn":15},{"ruleId":"507","severity":1,"message":"566","line":5,"column":5,"nodeType":"509","messageId":"510","endLine":5,"endColumn":21},{"ruleId":"507","severity":1,"message":"567","line":20,"column":11,"nodeType":"509","messageId":"510","endLine":20,"endColumn":14},{"ruleId":"507","severity":1,"message":"568","line":11,"column":8,"nodeType":"509","messageId":"510","endLine":11,"endColumn":14},{"ruleId":"502","severity":1,"message":"503","line":31,"column":32,"nodeType":"489","messageId":"504","endLine":31,"endColumn":34},{"ruleId":"507","severity":1,"message":"546","line":19,"column":8,"nodeType":"509","messageId":"510","endLine":19,"endColumn":25},{"ruleId":"507","severity":1,"message":"569","line":22,"column":10,"nodeType":"509","messageId":"510","endLine":22,"endColumn":33},{"ruleId":"502","severity":1,"message":"503","line":52,"column":25,"nodeType":"489","messageId":"504","endLine":52,"endColumn":27},{"ruleId":"507","severity":1,"message":"511","line":23,"column":3,"nodeType":"509","messageId":"510","endLine":23,"endColumn":12},{"ruleId":"507","severity":1,"message":"513","line":25,"column":3,"nodeType":"509","messageId":"510","endLine":25,"endColumn":7},{"ruleId":"507","severity":1,"message":"512","line":31,"column":8,"nodeType":"509","messageId":"510","endLine":31,"endColumn":16},{"ruleId":"507","severity":1,"message":"570","line":36,"column":13,"nodeType":"509","messageId":"510","endLine":36,"endColumn":24},{"ruleId":"497","severity":1,"message":"498","line":132,"column":15,"nodeType":"499","endLine":132,"endColumn":75},{"ruleId":"507","severity":1,"message":"514","line":173,"column":7,"nodeType":"509","messageId":"510","endLine":173,"endColumn":11},{"ruleId":"497","severity":1,"message":"498","line":193,"column":19,"nodeType":"499","endLine":193,"endColumn":79},{"ruleId":"571","severity":1,"message":"572","line":15,"column":11,"nodeType":"499","endLine":15,"endColumn":78},{"ruleId":"502","severity":1,"message":"503","line":11,"column":32,"nodeType":"489","messageId":"504","endLine":11,"endColumn":34},{"ruleId":"487","severity":1,"message":"573","line":33,"column":6,"nodeType":"491","endLine":33,"endColumn":8,"suggestions":"574"},{"ruleId":"507","severity":1,"message":"575","line":5,"column":8,"nodeType":"509","messageId":"510","endLine":5,"endColumn":19},{"ruleId":"576","severity":1,"message":"577","line":97,"column":65,"nodeType":"481","messageId":"578","endLine":97,"endColumn":67},{"ruleId":"507","severity":1,"message":"513","line":18,"column":3,"nodeType":"509","messageId":"510","endLine":18,"endColumn":7},{"ruleId":"507","severity":1,"message":"579","line":19,"column":3,"nodeType":"509","messageId":"510","endLine":19,"endColumn":12},{"ruleId":"507","severity":1,"message":"580","line":20,"column":3,"nodeType":"509","messageId":"510","endLine":20,"endColumn":16},{"ruleId":"507","severity":1,"message":"581","line":39,"column":10,"nodeType":"509","messageId":"510","endLine":39,"endColumn":25},{"ruleId":"507","severity":1,"message":"582","line":99,"column":9,"nodeType":"509","messageId":"510","endLine":99,"endColumn":16},{"ruleId":"507","severity":1,"message":"583","line":100,"column":13,"nodeType":"509","messageId":"510","endLine":100,"endColumn":22},{"ruleId":"502","severity":1,"message":"503","line":103,"column":30,"nodeType":"489","messageId":"504","endLine":103,"endColumn":32},{"ruleId":"507","severity":1,"message":"526","line":2,"column":10,"nodeType":"509","messageId":"510","endLine":2,"endColumn":16},{"ruleId":"507","severity":1,"message":"584","line":4,"column":26,"nodeType":"509","messageId":"510","endLine":4,"endColumn":31},{"ruleId":"507","severity":1,"message":"585","line":6,"column":10,"nodeType":"509","messageId":"510","endLine":6,"endColumn":20},{"ruleId":"507","severity":1,"message":"538","line":7,"column":10,"nodeType":"509","messageId":"510","endLine":7,"endColumn":19},{"ruleId":"507","severity":1,"message":"586","line":8,"column":8,"nodeType":"509","messageId":"510","endLine":8,"endColumn":19},{"ruleId":"507","severity":1,"message":"587","line":10,"column":8,"nodeType":"509","messageId":"510","endLine":10,"endColumn":17},{"ruleId":"507","severity":1,"message":"588","line":12,"column":10,"nodeType":"509","messageId":"510","endLine":12,"endColumn":18},{"ruleId":"507","severity":1,"message":"560","line":14,"column":9,"nodeType":"509","messageId":"510","endLine":14,"endColumn":17},{"ruleId":"507","severity":1,"message":"589","line":15,"column":9,"nodeType":"509","messageId":"510","endLine":15,"endColumn":16},{"ruleId":"507","severity":1,"message":"590","line":16,"column":17,"nodeType":"509","messageId":"510","endLine":16,"endColumn":25},{"ruleId":"507","severity":1,"message":"551","line":17,"column":10,"nodeType":"509","messageId":"510","endLine":17,"endColumn":18},{"ruleId":"502","severity":1,"message":"503","line":18,"column":37,"nodeType":"489","messageId":"504","endLine":18,"endColumn":39},{"ruleId":"507","severity":1,"message":"591","line":37,"column":24,"nodeType":"509","messageId":"510","endLine":37,"endColumn":35},{"ruleId":"507","severity":1,"message":"592","line":117,"column":31,"nodeType":"509","messageId":"510","endLine":117,"endColumn":37},{"ruleId":"507","severity":1,"message":"593","line":2,"column":10,"nodeType":"509","messageId":"510","endLine":2,"endColumn":20},{"ruleId":"507","severity":1,"message":"594","line":2,"column":22,"nodeType":"509","messageId":"510","endLine":2,"endColumn":33},{"ruleId":"507","severity":1,"message":"595","line":9,"column":11,"nodeType":"509","messageId":"510","endLine":9,"endColumn":15},{"ruleId":"502","severity":1,"message":"503","line":28,"column":21,"nodeType":"489","messageId":"504","endLine":28,"endColumn":23},{"ruleId":"507","severity":1,"message":"596","line":64,"column":15,"nodeType":"509","messageId":"510","endLine":64,"endColumn":23},{"ruleId":"502","severity":1,"message":"503","line":66,"column":34,"nodeType":"489","messageId":"504","endLine":66,"endColumn":36},{"ruleId":"502","severity":1,"message":"503","line":69,"column":28,"nodeType":"489","messageId":"504","endLine":69,"endColumn":30},{"ruleId":"507","severity":1,"message":"545","line":3,"column":10,"nodeType":"509","messageId":"510","endLine":3,"endColumn":26},{"ruleId":"507","severity":1,"message":"597","line":8,"column":3,"nodeType":"509","messageId":"510","endLine":8,"endColumn":14},{"ruleId":"507","severity":1,"message":"556","line":9,"column":3,"nodeType":"509","messageId":"510","endLine":9,"endColumn":21},{"ruleId":"507","severity":1,"message":"598","line":10,"column":3,"nodeType":"509","messageId":"510","endLine":10,"endColumn":29},{"ruleId":"507","severity":1,"message":"599","line":12,"column":13,"nodeType":"509","messageId":"510","endLine":12,"endColumn":14},{"ruleId":"507","severity":1,"message":"600","line":15,"column":10,"nodeType":"509","messageId":"510","endLine":15,"endColumn":20},{"ruleId":"507","severity":1,"message":"520","line":17,"column":10,"nodeType":"509","messageId":"510","endLine":17,"endColumn":15},{"ruleId":"507","severity":1,"message":"526","line":17,"column":17,"nodeType":"509","messageId":"510","endLine":17,"endColumn":23},{"ruleId":"507","severity":1,"message":"601","line":20,"column":10,"nodeType":"509","messageId":"510","endLine":20,"endColumn":21},{"ruleId":"507","severity":1,"message":"546","line":25,"column":8,"nodeType":"509","messageId":"510","endLine":25,"endColumn":25},{"ruleId":"502","severity":1,"message":"527","line":62,"column":46,"nodeType":"489","messageId":"528","endLine":62,"endColumn":48},{"ruleId":"507","severity":1,"message":"541","line":99,"column":13,"nodeType":"509","messageId":"510","endLine":99,"endColumn":26},{"ruleId":"507","severity":1,"message":"602","line":100,"column":50,"nodeType":"509","messageId":"510","endLine":100,"endColumn":60},{"ruleId":"497","severity":1,"message":"498","line":166,"column":27,"nodeType":"499","endLine":169,"endColumn":29},{"ruleId":"502","severity":1,"message":"527","line":213,"column":35,"nodeType":"489","messageId":"528","endLine":213,"endColumn":37},{"ruleId":"502","severity":1,"message":"503","line":13,"column":32,"nodeType":"489","messageId":"504","endLine":13,"endColumn":34},{"ruleId":"487","severity":1,"message":"603","line":20,"column":6,"nodeType":"491","endLine":20,"endColumn":12,"suggestions":"604"},{"ruleId":"487","severity":1,"message":"605","line":20,"column":7,"nodeType":"606","endLine":20,"endColumn":11},{"ruleId":"497","severity":1,"message":"498","line":102,"column":13,"nodeType":"499","endLine":102,"endColumn":35},{"ruleId":"507","severity":1,"message":"607","line":2,"column":10,"nodeType":"509","messageId":"510","endLine":2,"endColumn":24},{"ruleId":"507","severity":1,"message":"608","line":10,"column":10,"nodeType":"509","messageId":"510","endLine":10,"endColumn":14},{"ruleId":"487","severity":1,"message":"609","line":44,"column":6,"nodeType":"491","endLine":44,"endColumn":8,"suggestions":"610"},{"ruleId":"487","severity":1,"message":"611","line":64,"column":6,"nodeType":"491","endLine":64,"endColumn":12,"suggestions":"612"},{"ruleId":"487","severity":1,"message":"613","line":186,"column":6,"nodeType":"491","endLine":186,"endColumn":12,"suggestions":"614"},{"ruleId":"507","severity":1,"message":"526","line":3,"column":10,"nodeType":"509","messageId":"510","endLine":3,"endColumn":16},{"ruleId":"507","severity":1,"message":"615","line":3,"column":18,"nodeType":"509","messageId":"510","endLine":3,"endColumn":32},{"ruleId":"507","severity":1,"message":"616","line":3,"column":34,"nodeType":"509","messageId":"510","endLine":3,"endColumn":41},{"ruleId":"507","severity":1,"message":"595","line":12,"column":21,"nodeType":"509","messageId":"510","endLine":12,"endColumn":25},{"ruleId":"507","severity":1,"message":"546","line":2,"column":8,"nodeType":"509","messageId":"510","endLine":2,"endColumn":25},{"ruleId":"507","severity":1,"message":"548","line":6,"column":20,"nodeType":"509","messageId":"510","endLine":6,"endColumn":24},{"ruleId":"507","severity":1,"message":"549","line":8,"column":10,"nodeType":"509","messageId":"510","endLine":8,"endColumn":15},{"ruleId":"507","severity":1,"message":"550","line":8,"column":17,"nodeType":"509","messageId":"510","endLine":8,"endColumn":25},{"ruleId":"507","severity":1,"message":"617","line":9,"column":10,"nodeType":"509","messageId":"510","endLine":9,"endColumn":15},{"ruleId":"507","severity":1,"message":"551","line":10,"column":10,"nodeType":"509","messageId":"510","endLine":10,"endColumn":18},{"ruleId":"502","severity":1,"message":"503","line":19,"column":25,"nodeType":"489","messageId":"504","endLine":19,"endColumn":27},{"ruleId":"502","severity":1,"message":"503","line":40,"column":32,"nodeType":"489","messageId":"504","endLine":40,"endColumn":34},{"ruleId":"507","severity":1,"message":"520","line":2,"column":18,"nodeType":"509","messageId":"510","endLine":2,"endColumn":23},{"ruleId":"507","severity":1,"message":"618","line":2,"column":25,"nodeType":"509","messageId":"510","endLine":2,"endColumn":34},{"ruleId":"507","severity":1,"message":"513","line":2,"column":46,"nodeType":"509","messageId":"510","endLine":2,"endColumn":50},{"ruleId":"507","severity":1,"message":"584","line":4,"column":26,"nodeType":"509","messageId":"510","endLine":4,"endColumn":31},{"ruleId":"507","severity":1,"message":"619","line":14,"column":10,"nodeType":"509","messageId":"510","endLine":14,"endColumn":22},{"ruleId":"507","severity":1,"message":"620","line":94,"column":11,"nodeType":"509","messageId":"510","endLine":94,"endColumn":16},{"ruleId":"507","severity":1,"message":"621","line":94,"column":38,"nodeType":"509","messageId":"510","endLine":94,"endColumn":42},"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-native-reassign",["622"],"no-negated-in-lhs",["623"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["624"],"React Hook useEffect has missing dependencies: 'chat' and 'user._id'. Either include them or remove the dependency array.",["625"],"React Hook useEffect has a missing dependency: 'user._id'. Either include it or remove the dependency array.",["626"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["622"],["623"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside",["622"],["623"],"no-unused-vars","'CommentIcon' is defined but never used.","Identifier","unusedVar","'Accordion' is defined but never used.","'Dropdown' is defined but never used.","'Card' is defined but never used.","'tags' is assigned a value but never used.","'userId' is assigned a value but never used.",["622"],["623"],["622"],["623"],"'Modal' is defined but never used.","'Pert' is defined but never used.","'Task' is defined but never used.","'addEdge' is defined but never used.","'removeElements' is defined but never used.","'addTask' is defined but never used.","'Button' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","ReturnStatement","expectedReturnValue","'finaldiff' is assigned a value but never used.","no-self-assign","'task.description' is assigned to itself.","MemberExpression","selfAssignment","'ele' is assigned a value but never used.","'tasks' is assigned a value but never used.","'TextField' is defined but never used.","'removeAndUpdateNotifications' is defined but never used.","'BASE_URL' is assigned a value but never used.","'notifications' is assigned a value but never used.","'selected' is assigned a value but never used.","'skills' is assigned a value but never used.","'createAsyncThunk' is defined but never used.","'getNotifications' is defined but never used.","'SearchTwoToneIcon' is defined but never used.","'list' is defined but never used.","'Link' is defined but never used.","'query' is assigned a value but never used.","'setQuery' is assigned a value but never used.","'projects' is assigned a value but never used.","'createYoutubePost' is defined but never used.","React Hook useEffect has a missing dependency: 'validateYouTubeUrl'. Either include it or remove the dependency array.",["627"],"'useEffect' is defined but never used.","'clearNotifications' is defined but never used.","'Nav' is defined but never used.","'getCurrentUser' is defined but never used.","'socket' is defined but never used.","'dispatch' is assigned a value but never used.","jsx-a11y/role-supports-aria-props","The attribute aria-haspopup is not supported by the role listitem. This role is implicit on the element li.","'EditPost' is defined but never used.","'getTasks' is defined but never used.","'lastNodeId' is assigned a value but never used.","'lastConnectionId' is assigned a value but never used.","'url' is assigned a value but never used.","'moment' is defined but never used.","'ReactSearchAutocomplete' is defined but never used.","'youtubeMeta' is defined but never used.","react/jsx-pascal-case","Imported JSX component User_Role must be in PascalCase or SCREAMING_SNAKE_CASE","React Hook useEffect has a missing dependency: 'projectId'. Either include it or remove the dependency array.",["628"],"'JoinProject' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","unexpected","'ListGroup' is defined but never used.","'ListGroupItem' is defined but never used.","'sortedLastIndex' is defined but never used.","'overdue' is assigned a value but never used.","'following' is assigned a value but never used.","'toast' is defined but never used.","'createPost' is defined but never used.","'SkillsInput' is defined but never used.","'Sentiment' is defined but never used.","'getPosts' is defined but never used.","'history' is assigned a value but never used.","'setFiles' is assigned a value but never used.","'projectTeam' is assigned a value but never used.","'rating' is assigned a value but never used.","'AttachFile' is defined but never used.","'Description' is defined but never used.","'type' is assigned a value but never used.","'finalObj' is assigned a value but never used.","'getNotified' is defined but never used.","'setSegregatedNotifications' is defined but never used.","'_' is defined but never used.","'getProject' is defined but never used.","'getAllPosts' is defined but never used.","'youtubeUrl' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'following_users'. Either include it or remove the dependency array.",["629"],"The null literal is not a valid dependency because it never changes. You can safely remove it.","Literal","'getLikesOfPost' is defined but never used.","'read' is defined but never used.","React Hook useEffect has missing dependencies: 'chat.length' and 'project_id'. Either include them or remove the dependency array.",["630"],"React Hook useEffect has a missing dependency: 'project_id'. Either include it or remove the dependency array.",["631"],"React Hook useLayoutEffect has a missing dependency: 'stayScrolled'. Either include it or remove the dependency array.",["632"],"'OverlayTrigger' is defined but never used.","'Tooltip' is defined but never used.","'users' is assigned a value but never used.","'ModalBody' is defined but never used.","'DropzoneArea' is defined but never used.","'error' is assigned a value but never used.","'open' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"633","fix":"634"},{"desc":"635","fix":"636"},{"desc":"635","fix":"637"},{"desc":"638","fix":"639"},{"desc":"640","fix":"641"},{"desc":"642","fix":"643"},{"desc":"644","fix":"645"},{"desc":"646","fix":"647"},{"desc":"648","fix":"649"},"Update the dependencies array to be: [dispatch]",{"range":"650","text":"651"},"Update the dependencies array to be: [chat, user._id]",{"range":"652","text":"653"},{"range":"654","text":"653"},"Update the dependencies array to be: [props.text, validateYouTubeUrl]",{"range":"655","text":"656"},"Update the dependencies array to be: [projectId]",{"range":"657","text":"658"},"Update the dependencies array to be: [following_users]",{"range":"659","text":"660"},"Update the dependencies array to be: [chat.length, project_id]",{"range":"661","text":"662"},"Update the dependencies array to be: [chat, project_id]",{"range":"663","text":"664"},"Update the dependencies array to be: [chat, stayScrolled]",{"range":"665","text":"666"},[2100,2102],"[dispatch]",[3310,3312],"[chat, user._id]",[4108,4114],[1199,1211],"[props.text, validateYouTubeUrl]",[1239,1241],"[projectId]",[657,663],"[following_users]",[1365,1367],"[chat.length, project_id]",[1946,1952],"[chat, project_id]",[6018,6024],"[chat, stayScrolled]"]