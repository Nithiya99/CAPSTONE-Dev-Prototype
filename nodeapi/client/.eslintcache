[{"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\MyProjects.js":"1","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Profile.js":"2","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Users.js":"3","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\apiNotifications.js":"4","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\notifications.js":"5","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Notifications.js":"6","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\UserRecommendation.js":"7","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\User_Role.js":"8","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\RecommendedRolePeople.js":"9","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\ProjectDashboard.js":"10","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\apiProject.js":"11"},{"size":37653,"mtime":1622054385854,"results":"12","hashOfConfig":"13"},{"size":20799,"mtime":1622042885366,"results":"14","hashOfConfig":"13"},{"size":9836,"mtime":1622040568262,"results":"15","hashOfConfig":"13"},{"size":1944,"mtime":1622053675712,"results":"16","hashOfConfig":"13"},{"size":2825,"mtime":1622053821278,"results":"17","hashOfConfig":"13"},{"size":23929,"mtime":1622054472577,"results":"18","hashOfConfig":"13"},{"size":5168,"mtime":1622044968752,"results":"19","hashOfConfig":"13"},{"size":4388,"mtime":1622047193026,"results":"20","hashOfConfig":"13"},{"size":853,"mtime":1622046786021,"results":"21","hashOfConfig":"13"},{"size":25562,"mtime":1622054352460,"results":"22","hashOfConfig":"13"},{"size":15994,"mtime":1622050251125,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},"13vq143",{"filePath":"27","messages":"28","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\MyProjects.js",["48","49","50","51","52","53"],"import React, { Component } from \"react\";\r\nimport { listmyprojects } from \"./apiProject\";\r\nimport {\r\n  OverlayTrigger,\r\n  Tooltip,\r\n  Accordion,\r\n  Button,\r\n  Card,\r\n  Tab,\r\n  Nav,\r\n} from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getCurrentUser, getUserById } from \"./../user/apiUser\";\r\nimport RoleReq from \"./RoleReq\";\r\nimport AssignedTo from \"./AssignedTo\";\r\nimport DeleteProject from \"./DeleteProject\";\r\nimport LeaveProject from \"./LeaveProject\";\r\nimport EditTwoToneIcon from \"@material-ui/icons/EditTwoTone\";\r\nimport DashboardTwoToneIcon from \"@material-ui/icons/DashboardTwoTone\";\r\nimport SubmitProject from \"./SubmitProject\";\r\nimport UserRecommendation from \"./UserRecommendation\";\r\nimport socket from \"./../utils/Socket\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { clearAll } from \"../store/cpm\";\r\nimport { connect } from \"react-redux\";\r\nimport LiveClock from \"react-live-clock\";\r\nimport dayjs from \"dayjs\";\r\nimport { Badge } from \"react-bootstrap\";\r\nimport QueryBuilderTwoToneIcon from \"@material-ui/icons/QueryBuilderTwoTone\";\r\nimport ErrorTwoToneIcon from \"@material-ui/icons/ErrorTwoTone\";\r\nimport CheckCircleTwoToneIcon from \"@material-ui/icons/CheckCircleTwoTone\";\r\nimport RecommendedRolePeople from \"./RecommendedRolePeople\";\r\nimport User_Role from \"./User_Role\";\r\nimport moment from \"moment\";\r\nclass MyProjects extends Component {\r\n  state = {\r\n    myProjects: [],\r\n    currentProject: {},\r\n    user: {},\r\n  };\r\n  componentDidMount() {\r\n    listmyprojects().then((data) => {\r\n      this.setState({ myProjects: data });\r\n      let projectLeaderNames = {};\r\n      let projectCreatedDates = {};\r\n      let projectEstimatedDates = {};\r\n      let overdueStatus = {};\r\n      data.userProjects.map((project, index) => {\r\n        //Leader name\r\n        // let number = index;\r\n        if (project.leader !== undefined)\r\n          getUserById(project.leader).then((data) => {\r\n            projectLeaderNames[project._id] = data.user.name;\r\n            // console.log(projectLeaderNames);\r\n            this.setState({ projectLeaderNames });\r\n          });\r\n        // var date = moment(new Date(project.created.substr(0, 16)));\r\n        // console.log(date.format(\"DD-MMM-YYYY\"));\r\n\r\n        let date = moment(new Date(project.created.substr(0, 16)));\r\n        var new_date = moment(date, \"DD-MM-YYYY\").add(\r\n          project.estimatedTime,\r\n          \"days\"\r\n        );\r\n        projectEstimatedDates[project._id] = new_date.format(\"DD-MMM-YYYY\");\r\n        this.setState({ projectEstimatedDates });\r\n        projectCreatedDates[project._id] = date.format(\"DD-MMM-YYYY\");\r\n        this.setState({ projectCreatedDates });\r\n        // console.log(project.leadername);\r\n        console.log(\"today:\", date.format(\"DD-MMM-YYYY\"));\r\n        console.log(\"estimatedDate:\", new_date.format(\"DD-MMM-YYYY\"));\r\n        console.log(\r\n          new_date.format(\"DD-MMM-YYYY\") +\r\n            \" is After \" +\r\n            date.format(\"DD-MMM-YYYY\") +\r\n            \":\" +\r\n            new_date.isAfter(date)\r\n        );\r\n        overdueStatus[project._id] = {\r\n          today: date.format(\"DD-MMM-YYYY\"),\r\n          estimatedDate: new_date.format(\"DD-MMM-YYYY\"),\r\n          overdue: !new_date.isSameOrAfter(date),\r\n        };\r\n        console.log(overdueStatus);\r\n        this.setState({ overdueStatus });\r\n      });\r\n      // toast.dark(\"Loaded\");\r\n    });\r\n  }\r\n  renderProject(project) {\r\n    // return <h5>{project.title}</h5>;\r\n    console.log(project.title);\r\n  }\r\n  render() {\r\n    if (\r\n      this.state.myProjects === undefined ||\r\n      this.state.myProjects.length === 0\r\n    )\r\n      return <h1>No Projects</h1>;\r\n    const {\r\n      myProjects,\r\n      projectLeaderNames,\r\n      projectCreatedDates,\r\n      projectEstimatedDates,\r\n      overdueStatus,\r\n    } = this.state;\r\n    // console.log(projectLeaderNames);\r\n    if (\r\n      projectLeaderNames === undefined ||\r\n      projectCreatedDates === undefined ||\r\n      projectEstimatedDates === undefined\r\n    )\r\n      return null;\r\n    if (\r\n      Object.keys(projectLeaderNames).length !==\r\n        myProjects.userProjects.length ||\r\n      Object.keys(projectCreatedDates).length !==\r\n        myProjects.userProjects.length ||\r\n      Object.keys(projectEstimatedDates).length !==\r\n        myProjects.userProjects.length\r\n    )\r\n      return null;\r\n    console.log(projectCreatedDates);\r\n    let onGoingProjects = myProjects.userProjects.filter(\r\n      (x) => x.status.includes(\"In Progress\") && !overdueStatus[x._id].overdue\r\n    );\r\n    let overdueProjects = myProjects.userProjects.filter(\r\n      (x) => x.status.includes(\"In Progress\") && overdueStatus[x._id].overdue\r\n    );\r\n    let CompletedProjects = myProjects.userProjects.filter((x) =>\r\n      x.status.includes(\"Completed\")\r\n    );\r\n    console.log(\"overdueProjects:\", overdueProjects);\r\n    console.log(\"ongoingprojects:\", onGoingProjects);\r\n    console.log(\"completedprojects:\", CompletedProjects);\r\n    socket.emit(\"getOnlineUsers\");\r\n    socket.on(\"onlineUsers\", (data) => console.log(data));\r\n    // getUserById(project.leader).then((data) => console.log(data));\r\n\r\n    return (\r\n      <>\r\n        <div\r\n          className=\"subheader py-2 py-lg-6  subheader-transparent \"\r\n          id=\"kt_subheader\"\r\n        >\r\n          <ToastContainer />\r\n          <div className=\" container  d-flex align-items-center justify-content-between flex-wrap flex-sm-nowrap\">\r\n            <div className=\"d-flex align-items-center flex-wrap mr-2\">\r\n              <h5 className=\"text-dark font-weight-bold mt-2 mb-2 mr-5\">\r\n                My Projects\r\n              </h5>\r\n              <div className=\"subheader-separator subheader-separator-ver mt-2 mb-2 mr-4 bg-gray-200\"></div>\r\n            </div>\r\n            <div class=\"d-flex align-items-center flex-wrap\">\r\n              <Badge variant=\"primary\">\r\n                <div className=\"d-flex align-items-center flex-wrap mr-2\">\r\n                  <h6>{dayjs().format(\"DD MMMM, dddd\")}</h6>\r\n                  <div className=\"subheader-separator subheader-separator-ver mt-2 mb-2 mr-4 ml-4 bg-gray-200\"></div>\r\n                  <h6>\r\n                    <LiveClock format=\"hh:mm a\" ticking />\r\n                  </h6>\r\n                </div>\r\n              </Badge>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"container\">\r\n          <div className=\"card\">\r\n            <Tab.Container id=\"projectStats\" defaultActiveKey=\"ongoingProj\">\r\n              <div className=\"card-header\">\r\n                <div className=\"card-title\">\r\n                  <Nav variant=\"pills\">\r\n                    <Nav.Item>\r\n                      <Nav.Link eventKey=\"ongoingProj\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"mr-3\">\r\n                            <QueryBuilderTwoToneIcon />\r\n                          </div>\r\n                          <div>Ongoing Projects</div>\r\n                        </div>\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                      <Nav.Link eventKey=\"overdueProj\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"mr-3\">\r\n                            <ErrorTwoToneIcon />\r\n                          </div>\r\n                          <div>Overdue Projects</div>\r\n                        </div>\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                      <Nav.Link eventKey=\"completedProj\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"mr-3\">\r\n                            <CheckCircleTwoToneIcon />\r\n                          </div>\r\n                          <div>Completed Projects</div>\r\n                        </div>\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                  </Nav>\r\n                </div>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <Tab.Content>\r\n                  <Tab.Pane eventKey=\"ongoingProj\">\r\n                    <div className=\"row row-cols-1 row-cols-md-2\">\r\n                      {onGoingProjects.map((project, index) => (\r\n                        <div className=\"col mb-4\">\r\n                          <div className=\"card card-custom gutter-b card-stretch\">\r\n                            {/* {console.log(project.completion_percentage)} */}\r\n                            <div className=\"card-body\">\r\n                              <div className=\"d-flex align-items-center\">\r\n                                <div className=\"d-flex-flex-column mr-auto\">\r\n                                  <p className=\"card-title font-weight-bolder font-size-h5 text-dark mb-1\">\r\n                                    {project.title}\r\n                                  </p>\r\n                                  <span className=\"text-muted font-weight-bold\">\r\n                                    {projectLeaderNames[project._id]}\r\n                                  </span>\r\n                                </div>\r\n                                <div className=\"card-toolbar mb-auto\">\r\n                                  <div className=\"d-flex align-items-center justify-content-between\">\r\n                                    <OverlayTrigger\r\n                                      key=\"top\"\r\n                                      placement=\"top\"\r\n                                      overlay={\r\n                                        <Tooltip id=\"top2\">\r\n                                          Project Dashboard\r\n                                        </Tooltip>\r\n                                      }\r\n                                    >\r\n                                      <Link\r\n                                        className=\"btn btn-info mr-2\"\r\n                                        to={{\r\n                                          pathname: `/myprojects/dashboard/${project._id}`,\r\n                                          state: { project: project },\r\n                                        }}\r\n                                      >\r\n                                        <DashboardTwoToneIcon />\r\n                                      </Link>\r\n                                    </OverlayTrigger>\r\n                                    {getCurrentUser()._id === project.leader ? (\r\n                                      <div className=\"d-flex align-items-center justify-content-between\">\r\n                                        <OverlayTrigger\r\n                                          key=\"top\"\r\n                                          placement=\"top\"\r\n                                          overlay={\r\n                                            <Tooltip id=\"tooltip-top\">\r\n                                              Edit Project\r\n                                            </Tooltip>\r\n                                          }\r\n                                        >\r\n                                          <Link\r\n                                            className=\"btn btn-warning mr-2\"\r\n                                            to={{\r\n                                              pathname: `/myprojects/edit/${project._id}`,\r\n                                              state: { project: project },\r\n                                            }}\r\n                                          >\r\n                                            <EditTwoToneIcon />\r\n                                          </Link>\r\n                                        </OverlayTrigger>\r\n\r\n                                        <DeleteProject\r\n                                          projectId={project._id}\r\n                                        />\r\n                                        {project.completion_percentage ===\r\n                                        100 ? (\r\n                                          <SubmitProject\r\n                                            projectId={project._id}\r\n                                            projectTeam={project.team}\r\n                                            projectLeader={project.leader}\r\n                                          />\r\n                                        ) : (\r\n                                          <div> </div>\r\n                                        )}\r\n                                      </div>\r\n                                    ) : (\r\n                                      <div>\r\n                                        <LeaveProject project={project} />\r\n                                      </div>\r\n                                    )}\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"d-flex flex-wrap mt-14\">\r\n                                <div className=\"mr-12 d-flex flex-column mb-7\">\r\n                                  <span className=\"d-block font-weight-bold mb-4\">\r\n                                    Start Date\r\n                                  </span>\r\n                                  <span className=\"btn btn-light-primary btn-sm font-weight-bold btn-upper btn-text\">\r\n                                    {projectCreatedDates[project._id]}\r\n                                  </span>\r\n                                </div>\r\n                                <div className=\"mr-12 d-flex flex-column mb-7\">\r\n                                  <span className=\"d-block font-weight-bold mb-4\">\r\n                                    Due Date\r\n                                  </span>\r\n                                  <span className=\"btn btn-light-primary btn-sm font-weight-bold btn-upper btn-text\">\r\n                                    {projectEstimatedDates[project._id]}\r\n                                  </span>\r\n                                </div>\r\n                                <div className=\"flex-row-fluid mb-7\">\r\n                                  <span className=\"d-block font-weight-bold mb-4\">\r\n                                    Progress\r\n                                  </span>\r\n                                  <div className=\"d-flex align-items-center pt-2\">\r\n                                    <div className=\"progress progress-xs mt-2 mb-2 w-100\">\r\n                                      <div\r\n                                        className=\"progress-bar bg-warning\"\r\n                                        role=\"progressbar\"\r\n                                        style={{\r\n                                          width: `${project.completion_percentage}%`,\r\n                                        }}\r\n                                        aria-valuenow=\"50\"\r\n                                        aria-valuemin=\"0\"\r\n                                        aria-valuemax=\"100\"\r\n                                      ></div>\r\n                                    </div>\r\n                                    <span className=\"ml-3 font-weight-bolder\">\r\n                                      {project.completion_percentage}%\r\n                                    </span>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div className=\"d-flex align-items-center justify-content-between mb-2\">\r\n                                <span className=\"font-weight-bold mr-2\">\r\n                                  Description:{\" \"}\r\n                                </span>\r\n                                <span>{project.description}</span>\r\n                              </div>\r\n                              {project.skills.map((skill) => (\r\n                                <span class=\"btn btn-light-info btn-sm font-weight-bold btn-upper btn-text m-1\">\r\n                                  {skill}\r\n                                </span>\r\n                              ))}\r\n                              <table className=\"table table-light\">\r\n                                <thead>\r\n                                  {/* <User_Role\r\n                                    role={role}\r\n                                    leader={project.leader}\r\n                                  /> */}\r\n                                  <tr>\r\n                                    <th key={\"rolename\"}>Role Name</th>\r\n                                    <th key={\"skills\"}>Skills Required</th>\r\n                                    <th key={\"assigned\"}>Assigned To</th>\r\n                                    <th key={\"invite\"}>Send Invite</th>\r\n                                  </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                  {project.roles.map((role) => (\r\n                                    <>\r\n                                      <tr key={role._id.toString()}>\r\n                                        <td\r\n                                          key={\r\n                                            role._id.toString() +\r\n                                            role.roleName.toString()\r\n                                          }\r\n                                        >\r\n                                          {role.roleName}\r\n                                        </td>\r\n                                        <td\r\n                                          key={\r\n                                            role._id.toString() +\r\n                                            role.roleSkills.toString()\r\n                                          }\r\n                                        >\r\n                                          {role.roleSkills.join(\", \")}\r\n                                        </td>\r\n                                        <td>\r\n                                          {project.leader ===\r\n                                            getCurrentUser()._id &&\r\n                                          role.assignedTo === undefined ? (\r\n                                            <div>\r\n                                              <RoleReq\r\n                                                requestBy={role.requestBy}\r\n                                                projectId={project._id}\r\n                                                roleId={role._id}\r\n                                              />\r\n                                            </div>\r\n                                          ) : (\r\n                                            <div>\r\n                                              <AssignedTo\r\n                                                id={role.assignedTo}\r\n                                              />\r\n                                            </div>\r\n                                          )}\r\n                                        </td>\r\n                                        <td>\r\n                                          {getCurrentUser()._id ===\r\n                                            project.leader &&\r\n                                          role.assignedTo === undefined ? (\r\n                                            <button className=\"btn btn-info\">\r\n                                              <RecommendedRolePeople\r\n                                                project={project}\r\n                                                role={role}\r\n                                              />\r\n                                            </button>\r\n                                          ) : (\r\n                                            <></>\r\n                                          )}\r\n                                        </td>\r\n                                      </tr>\r\n                                    </>\r\n                                  ))}\r\n                                </tbody>\r\n                              </table>\r\n                              {getCurrentUser()._id === project.leader ? (\r\n                                <UserRecommendation project={project} />\r\n                              ) : (\r\n                                <div></div>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </Tab.Pane>\r\n                  <Tab.Pane eventKey=\"overdueProj\">\r\n                    <div className=\"row row-cols-1 row-cols-md-2\">\r\n                      {overdueProjects.map((project, index) => (\r\n                        <div className=\"col mb-4\">\r\n                          <div className=\"card card-custom gutter-b card-stretch\">\r\n                            {/* {console.log(project.completion_percentage)} */}\r\n                            <div className=\"card-body\">\r\n                              <div className=\"d-flex align-items-center\">\r\n                                <div className=\"d-flex-flex-column mr-auto\">\r\n                                  <p className=\"card-title font-weight-bolder font-size-h5 text-dark mb-1\">\r\n                                    {project.title}\r\n                                  </p>\r\n                                  <span className=\"text-muted font-weight-bold\">\r\n                                    {projectLeaderNames[project._id]}\r\n                                  </span>\r\n                                </div>\r\n                                <div className=\"card-toolbar mb-auto\">\r\n                                  <div className=\"d-flex align-items-center justify-content-between\">\r\n                                    <OverlayTrigger\r\n                                      key=\"top\"\r\n                                      placement=\"top\"\r\n                                      overlay={\r\n                                        <Tooltip id=\"top2\">\r\n                                          Project Dashboard\r\n                                        </Tooltip>\r\n                                      }\r\n                                    >\r\n                                      <Link\r\n                                        className=\"btn btn-info mr-2\"\r\n                                        to={{\r\n                                          pathname: `/myprojects/dashboard/${project._id}`,\r\n                                          state: { project: project },\r\n                                        }}\r\n                                      >\r\n                                        <DashboardTwoToneIcon />\r\n                                      </Link>\r\n                                    </OverlayTrigger>\r\n                                    {getCurrentUser()._id === project.leader ? (\r\n                                      <div className=\"d-flex align-items-center justify-content-between\">\r\n                                        <OverlayTrigger\r\n                                          key=\"top\"\r\n                                          placement=\"top\"\r\n                                          overlay={\r\n                                            <Tooltip id=\"tooltip-top\">\r\n                                              Edit Project\r\n                                            </Tooltip>\r\n                                          }\r\n                                        >\r\n                                          <Link\r\n                                            className=\"btn btn-warning mr-2\"\r\n                                            to={{\r\n                                              pathname: `/myprojects/edit/${project._id}`,\r\n                                              state: { project: project },\r\n                                            }}\r\n                                          >\r\n                                            <EditTwoToneIcon />\r\n                                          </Link>\r\n                                        </OverlayTrigger>\r\n\r\n                                        <DeleteProject\r\n                                          projectId={project._id}\r\n                                        />\r\n                                        {project.completion_percentage ===\r\n                                        100 ? (\r\n                                          <SubmitProject\r\n                                            projectId={project._id}\r\n                                            projectTeam={project.team}\r\n                                            projectLeader={project.leader}\r\n                                          />\r\n                                        ) : (\r\n                                          <div> </div>\r\n                                        )}\r\n                                      </div>\r\n                                    ) : (\r\n                                      <div>\r\n                                        <LeaveProject project={project} />\r\n                                      </div>\r\n                                    )}\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"d-flex flex-wrap mt-14\">\r\n                                <div className=\"mr-12 d-flex flex-column mb-7\">\r\n                                  <span className=\"d-block font-weight-bold mb-4\">\r\n                                    Start Date\r\n                                  </span>\r\n                                  <span className=\"btn btn-light-primary btn-sm font-weight-bold btn-upper btn-text\">\r\n                                    {projectCreatedDates[project._id]}\r\n                                  </span>\r\n                                </div>\r\n                                <div className=\"mr-12 d-flex flex-column mb-7\">\r\n                                  <span className=\"d-block font-weight-bold mb-4\">\r\n                                    Due Date\r\n                                  </span>\r\n                                  <span className=\"btn btn-light-primary btn-sm font-weight-bold btn-upper btn-text\">\r\n                                    {projectEstimatedDates[project._id]}\r\n                                  </span>\r\n                                </div>\r\n                                <div className=\"flex-row-fluid mb-7\">\r\n                                  <span className=\"d-block font-weight-bold mb-4\">\r\n                                    Progress\r\n                                  </span>\r\n                                  <div className=\"d-flex align-items-center pt-2\">\r\n                                    <div className=\"progress progress-xs mt-2 mb-2 w-100\">\r\n                                      <div\r\n                                        className=\"progress-bar bg-warning\"\r\n                                        role=\"progressbar\"\r\n                                        style={{\r\n                                          width: `${project.completion_percentage}%`,\r\n                                        }}\r\n                                        aria-valuenow=\"50\"\r\n                                        aria-valuemin=\"0\"\r\n                                        aria-valuemax=\"100\"\r\n                                      ></div>\r\n                                    </div>\r\n                                    <span className=\"ml-3 font-weight-bolder\">\r\n                                      {project.completion_percentage}%\r\n                                    </span>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div className=\"d-flex align-items-center justify-content-between mb-2\">\r\n                                <span className=\"font-weight-bold mr-2\">\r\n                                  Description:{\" \"}\r\n                                </span>\r\n                                <span>{project.description}</span>\r\n                              </div>\r\n                              <div className=\"d-flex align-items-center justify-content-between mb-2\">\r\n                                <span className=\"font-weight-bold mr-2\">\r\n                                  Skills:{\" \"}\r\n                                </span>\r\n                                <span>{project.skills.join(\", \")}</span>\r\n                              </div>\r\n                              <table className=\"table table-light\">\r\n                                <thead>\r\n                                  <tr>\r\n                                    <th key={\"rolename\"}>Role Name</th>\r\n                                    <th key={\"skills\"}>Skills Required</th>\r\n\r\n                                    <th key={\"assigned\"}>Assigned To</th>\r\n                                  </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                  {project.roles.map((role) => (\r\n                                    <tr key={role._id.toString()}>\r\n                                      <td\r\n                                        key={\r\n                                          role._id.toString() +\r\n                                          role.roleName.toString()\r\n                                        }\r\n                                      >\r\n                                        {role.roleName}\r\n                                      </td>\r\n                                      <td\r\n                                        key={\r\n                                          role._id.toString() +\r\n                                          role.roleSkills.toString()\r\n                                        }\r\n                                      >\r\n                                        {role.roleSkills.join(\", \")}\r\n                                      </td>\r\n                                      <td>\r\n                                        {project.leader ===\r\n                                          getCurrentUser()._id &&\r\n                                        role.assignedTo === undefined ? (\r\n                                          <div>\r\n                                            <RoleReq\r\n                                              requestBy={role.requestBy}\r\n                                              projectId={project._id}\r\n                                              roleId={role._id}\r\n                                            />\r\n                                          </div>\r\n                                        ) : (\r\n                                          <div>\r\n                                            <AssignedTo id={role.assignedTo} />\r\n                                          </div>\r\n                                        )}\r\n                                      </td>\r\n                                      <td></td>\r\n                                    </tr>\r\n                                  ))}\r\n                                </tbody>\r\n                              </table>\r\n                              {getCurrentUser()._id === project.leader ? (\r\n                                <UserRecommendation project={project} />\r\n                              ) : (\r\n                                <div></div>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </Tab.Pane>\r\n                  <Tab.Pane eventKey=\"completedProj\">\r\n                    <div className=\"row row-cols-1 row-cols-md-2\">\r\n                      {CompletedProjects.map((project) => (\r\n                        <div className=\"col mb-4\">\r\n                          <div className=\"card card-custom gutter-b card-stretch\">\r\n                            <div className=\"card-body\">\r\n                              <div className=\"d-flex align-items-center\">\r\n                                <div className=\"d-flex-flex-column mr-auto\">\r\n                                  <p className=\"card-title font-weight-bolder font-size-h5 text-dark mb-1\">\r\n                                    {project.title}\r\n                                  </p>\r\n                                  <span className=\"text-muted font-weight-bold\">\r\n                                    {projectLeaderNames[project._id]}\r\n                                  </span>\r\n                                </div>\r\n                                <div className=\"card-toolbar mb-auto\">\r\n                                  <div className=\"d-flex align-items-center justify-content-between\">\r\n                                    <OverlayTrigger\r\n                                      key=\"top\"\r\n                                      placement=\"top\"\r\n                                      overlay={\r\n                                        <Tooltip id=\"top2\">\r\n                                          Project Dashboard\r\n                                        </Tooltip>\r\n                                      }\r\n                                    >\r\n                                      <Link\r\n                                        className=\"btn btn-info mr-2\"\r\n                                        to={{\r\n                                          pathname: `/myprojects/dashboard/${project._id}`,\r\n                                          state: { project: project },\r\n                                        }}\r\n                                      >\r\n                                        <DashboardTwoToneIcon />\r\n                                      </Link>\r\n                                    </OverlayTrigger>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"d-flex flex-wrap mt-14\">\r\n                                <div className=\"mr-12 d-flex flex-column mb-7\">\r\n                                  <span className=\"d-block font-weight-bold mb-4\">\r\n                                    Start Date\r\n                                  </span>\r\n                                  <span className=\"btn btn-light-primary btn-sm font-weight-bold btn-upper btn-text\">\r\n                                    {projectCreatedDates[project._id]}\r\n                                  </span>\r\n                                </div>\r\n                                <div className=\"mr-12 d-flex flex-column mb-7\">\r\n                                  <span className=\"d-block font-weight-bold mb-4\">\r\n                                    Due Date\r\n                                  </span>\r\n                                  <span className=\"btn btn-light-primary btn-sm font-weight-bold btn-upper btn-text\">\r\n                                    [Load]\r\n                                  </span>\r\n                                </div>\r\n                                <div className=\"flex-row-fluid mb-7\">\r\n                                  <span className=\"d-block font-weight-bold mb-4\">\r\n                                    Progress\r\n                                  </span>\r\n                                  <div className=\"d-flex align-items-center pt-2\">\r\n                                    <div className=\"progress progress-xs mt-2 mb-2 w-100\">\r\n                                      <div\r\n                                        className=\"progress-bar bg-warning\"\r\n                                        role=\"progressbar\"\r\n                                        style={{\r\n                                          width: `${project.completion_percentage}%`,\r\n                                        }}\r\n                                        aria-valuenow=\"50\"\r\n                                        aria-valuemin=\"0\"\r\n                                        aria-valuemax=\"100\"\r\n                                      ></div>\r\n                                    </div>\r\n                                    <span className=\"ml-3 font-weight-bolder\">\r\n                                      {project.completion_percentage}%\r\n                                    </span>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div className=\"d-flex align-items-center justify-content-between mb-2\">\r\n                                <span className=\"font-weight-bold mr-2\">\r\n                                  Description:{\" \"}\r\n                                </span>\r\n                                <span>{project.description}</span>\r\n                              </div>\r\n                              <div className=\"d-flex align-items-center justify-content-between mb-2\">\r\n                                <span className=\"font-weight-bold mr-2\">\r\n                                  Skills:{\" \"}\r\n                                </span>\r\n                                <span>{project.skills.join(\", \")}</span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </Tab.Pane>\r\n                </Tab.Content>\r\n              </div>\r\n            </Tab.Container>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  clearAll: (params) => dispatch(clearAll(params)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(MyProjects);\r\n","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Profile.js",["54","55","56","57","58","59"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Users.js",["60","61","62"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\apiNotifications.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\notifications.js",["63","64"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Notifications.js",["65","66","67","68","69"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getProject } from \"../project/apiProject\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { getNotifications } from \"../apiNotifications\";\r\nimport ReqIcon from \"../images/request.png\";\r\nimport NewAddIcon from \"../images/working.png\";\r\nimport AcceptIcon from \"../images/accepted.png\";\r\nimport DeclineIcon from \"../images/remove.png\";\r\nimport LiveClock from \"react-live-clock\";\r\nimport dayjs from \"dayjs\";\r\nimport { Badge } from \"react-bootstrap\";\r\nimport * as _ from \"lodash\";\r\nimport {\r\n  getNotified,\r\n  clearNotifications,\r\n  setSegregatedNotifications,\r\n  notificationAdded,\r\n  setNotifications,\r\n} from \"../store/notifications\";\r\nimport FeedbackForm from \"./../project/FeedbackForm\";\r\nimport { getCurrentUser } from \"../user/apiUser\";\r\nimport { acceptRequest, declineRequest } from \"./../project/apiProject\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { removeAndUpdateNotifications } from \"./../store/notifications\";\r\nimport { removeNotificationId } from \"./../apiNotifications\";\r\nconst BASE_URL = process.env.REACT_APP_API_URL;\r\nclass Notifications extends Component {\r\n  state = {\r\n    selected: \"home\",\r\n  };\r\n  componentDidMount() {\r\n    this.props.clearNotifications();\r\n    getNotifications()\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((val) => {\r\n        let notifications = val.notifications;\r\n        console.log(\"Notifications:\", notifications);\r\n        notifications.map((notif) => {\r\n          this.props.getNotified({\r\n            type: notif.notifType,\r\n            id: notif._id,\r\n            message: notif.message,\r\n            read: notif.read,\r\n            projectId: notif.projectId ? notif.projectId : \"none\",\r\n          });\r\n        });\r\n\r\n        let notificationGroupedObject = _.groupBy(notifications, \"notifType\");\r\n        console.log(\"Group Object:\", notificationGroupedObject);\r\n        this.setState({ notificationGroupedObject });\r\n        this.props.setSegregatedNotifications({\r\n          segregatedNotifications: notificationGroupedObject,\r\n        });\r\n        // console.log(notifications);\r\n      });\r\n    // const { segregatedNotifications } = this.props;\r\n    // console.log(segregatedNotifications);\r\n  }\r\n  getTo(val) {\r\n    return getProject(val.projectId).then((data) => {\r\n      let obj = {\r\n        pathname: \"/myprojects/dashboard/\" + val.projectId,\r\n        state: { project: data.project },\r\n      };\r\n      // console.log(obj);\r\n      return obj;\r\n    });\r\n  }\r\n  render() {\r\n    let { notifications, segregatedNotifications } = this.props;\r\n    // if (this.props.notifications.length > 0)\r\n    // console.log(this.props.notifications);\r\n    // console.log(segregatedNotifications);\r\n    // if (notifications.length === 0) {\r\n    //   return <>No Notifsss</>;\r\n    // }\r\n    let { selected } = this.state;\r\n    console.log(segregatedNotifications);\r\n\r\n    return (\r\n      <>\r\n        <ToastContainer />\r\n        <div\r\n          className=\"subheader py-2 py-lg-6  subheader-transparent \"\r\n          id=\"kt_subheader\"\r\n        >\r\n          <div className=\" container  d-flex align-items-center justify-content-between flex-wrap flex-sm-nowrap\">\r\n            <div className=\"d-flex align-items-center flex-wrap mr-2\">\r\n              <h5 className=\"text-dark font-weight-bold mt-2 mb-2 mr-5\">\r\n                Notifications\r\n              </h5>\r\n              <div className=\"subheader-separator subheader-separator-ver mt-2 mb-2 mr-4 bg-gray-200\"></div>\r\n            </div>\r\n            <div class=\"d-flex align-items-center flex-wrap\">\r\n              <Badge variant=\"primary\">\r\n                <div className=\"d-flex align-items-center flex-wrap mr-2\">\r\n                  <h6>{dayjs().format(\"DD MMMM, dddd\")}</h6>\r\n                  <div className=\"subheader-separator subheader-separator-ver mt-2 mb-2 mr-4 ml-4 bg-gray-200\"></div>\r\n                  <h6>\r\n                    <LiveClock format=\"hh:mm a\" ticking />\r\n                  </h6>\r\n                </div>\r\n              </Badge>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {Object.keys(segregatedNotifications).map((type) => (\r\n          <div className=\"container mt-5\">\r\n            {segregatedNotifications[type].map((val) => {\r\n              // console.log(newObj);\r\n              if (val.notifType === \"RequestForRole\") {\r\n                return (\r\n                  <>\r\n                    <div\r\n                      className=\"alert alert-custom alert-notice alert-light-dark\"\r\n                      role=\"alert\"\r\n                    >\r\n                      <div className=\"alert-icon\">\r\n                        <img\r\n                          src={ReqIcon}\r\n                          alt=\"Logo\"\r\n                          style={{ height: \"40px\" }}\r\n                        />\r\n                      </div>\r\n                      <div className=\"alert-text\">\r\n                        <Link\r\n                          className=\"text-dark-75 text-hover-primary mb-1 font-size-lg font-weight-bolder\"\r\n                          to={{\r\n                            pathname: \"/myprojects\",\r\n                          }}\r\n                          // {\r\n                          //   pathname: `/myprojects/dashboard/${project._id}`,\r\n                          //   state: { project: project },\r\n                          // }\r\n                        >\r\n                          {val.message}\r\n                        </Link>\r\n                      </div>\r\n                    </div>\r\n                    {/* <Link\r\n                      to={{\r\n                        pathname: \"/myprojects\",\r\n                      }}\r\n                      // {\r\n                      //   pathname: `/myprojects/dashboard/${project._id}`,\r\n                      //   state: { project: project },\r\n                      // }\r\n                    >\r\n                      <div\r\n                        className=\"card-text ml-3 mt-1 mb-2 p-1\"\r\n                        style={{ width: \"50rem\" }}\r\n                      >\r\n                        {val.message}\r\n                      </div>\r\n                    </Link> */}\r\n                  </>\r\n                );\r\n              }\r\n              if (val.notifType === \"RoleDeclined\") {\r\n                return (\r\n                  <>\r\n                    <div\r\n                      className=\"alert alert-custom alert-notice alert-light-danger\"\r\n                      role=\"alert\"\r\n                    >\r\n                      <div className=\"alert-icon\">\r\n                        <img\r\n                          src={DeclineIcon}\r\n                          alt=\"Icon\"\r\n                          style={{ height: \"40px\" }}\r\n                        />\r\n                      </div>\r\n                      <div className=\"alert-text\">\r\n                        <Link\r\n                          className=\"text-dark-75 text-hover-primary mb-1 font-size-lg font-weight-bolder\"\r\n                          to={{\r\n                            pathname: \"/joinproject\",\r\n                          }}\r\n                          // {\r\n                          //   pathname: `/myprojects/dashboard/${project._id}`,\r\n                          //   state: { project: project },\r\n                          // }\r\n                        >\r\n                          {val.message}\r\n                        </Link>\r\n                      </div>\r\n                    </div>\r\n                    {/* <Link\r\n                      to={{\r\n                        pathname: \"/joinproject\",\r\n                      }}\r\n                      // {\r\n                      //   pathname: `/myprojects/dashboard/${project._id}`,\r\n                      //   state: { project: project },\r\n                      // }\r\n                    > \r\n                      <div\r\n                        className=\"card-text ml-3 mt-1 mb-2 p-1\"\r\n                        style={{ width: \"50rem\" }}\r\n                      >\r\n                        {val.message}\r\n                      </div>\r\n                    </Link>*/}\r\n                  </>\r\n                );\r\n              }\r\n              if (val.notifType === \"RoleAccepted\") {\r\n                return (\r\n                  <>\r\n                    <div\r\n                      className=\"alert alert-custom alert-notice alert-light-success\"\r\n                      role=\"alert\"\r\n                    >\r\n                      <div className=\"alert-icon\">\r\n                        <img\r\n                          src={AcceptIcon}\r\n                          alt=\"Icon\"\r\n                          style={{ height: \"40px\" }}\r\n                        />\r\n                      </div>\r\n                      <div className=\"alert-text\">\r\n                        <Link\r\n                          className=\"text-dark-75 text-hover-primary mb-1 font-size-lg font-weight-bolder\"\r\n                          onClick={async () => {\r\n                            let obj = {};\r\n                            obj = await this.getTo(val);\r\n                            // console.log(obj);\r\n                            this.props.history.push(obj);\r\n                          }}\r\n                          // {\r\n                          //   pathname: `/myprojects/dashboard/${project._id}`,\r\n                          //   state: { project: project },\r\n                          // }\r\n                        >\r\n                          {val.message}\r\n                        </Link>\r\n                      </div>\r\n                    </div>\r\n                    {/* <Link\r\n                      onClick={async () => {\r\n                        let obj = {};\r\n                        obj = await this.getTo(val);\r\n                        // console.log(obj);\r\n                        this.props.history.push(obj);\r\n                      }}\r\n                      // {\r\n                      //   pathname: `/myprojects/dashboard/${project._id}`,\r\n                      //   state: { project: project },\r\n                      // }\r\n                    >\r\n                      <div\r\n                        className=\"card-text ml-3 mt-1 mb-2 p-1\"\r\n                        style={{ width: \"50rem\" }}\r\n                      >\r\n                        {val.message}\r\n                      </div>\r\n                    </Link> */}\r\n                  </>\r\n                );\r\n              }\r\n              if (val.notifType === \"NewMember\") {\r\n                return (\r\n                  <>\r\n                    <div\r\n                      className=\"alert alert-custom alert-notice alert-light-warning\"\r\n                      role=\"alert\"\r\n                    >\r\n                      <div className=\"alert-icon\">\r\n                        <img\r\n                          src={NewAddIcon}\r\n                          alt=\"Logo\"\r\n                          style={{ height: \"40px\" }}\r\n                        />\r\n                      </div>\r\n                      <div className=\"alert-text\">\r\n                        <Link\r\n                          className=\"text-dark-75 text-hover-primary mb-1 font-size-lg font-weight-bolder\"\r\n                          onClick={async () => {\r\n                            let obj = {};\r\n                            obj = await this.getTo(val);\r\n                            // console.log(obj);\r\n                            this.props.history.push(obj);\r\n                          }}\r\n                          // {\r\n                          //   pathname: `/myprojects/dashboard/${project._id}`,\r\n                          //   state: { project: project },\r\n                          // }\r\n                        >\r\n                          {val.message}\r\n                        </Link>\r\n                      </div>\r\n                    </div>\r\n                    {/* <Link\r\n                      onClick={async () => {\r\n                        let obj = {};\r\n                        obj = await this.getTo(val);\r\n                        // console.log(obj);\r\n                        this.props.history.push(obj);\r\n                      }}\r\n                      // {\r\n                      //   pathname: `/myprojects/dashboard/${project._id}`,\r\n                      //   state: { project: project },\r\n                      // }\r\n                    >\r\n                      <div\r\n                        className=\"card-text ml-3 mt-1 mb-2 p-1\"\r\n                        style={{ width: \"50rem\" }}\r\n                      >\r\n                        {val.message}\r\n                      </div>\r\n                    </Link> */}\r\n                  </>\r\n                );\r\n              }\r\n              if (val.notifType === \"FeedbackForm\") {\r\n                // console.log(\"FeedbackForm:\", val);\r\n                return (\r\n                  <>\r\n                    <FeedbackForm\r\n                      type={val.notifType}\r\n                      id={val._id}\r\n                      message={val.message}\r\n                      projectId={val.projectId}\r\n                    />\r\n                  </>\r\n                );\r\n              }\r\n              if (val.notifType === \"InviteToProject\") {\r\n                // console.log(\"FeedbackForm:\", val);\r\n                return (\r\n                  <>\r\n                    <>\r\n                      {\" \"}\r\n                      <div\r\n                        className=\"alert alert-custom alert-notice alert-light-warning\"\r\n                        role=\"alert\"\r\n                      >\r\n                        <div className=\"alert-icon\">\r\n                          <img\r\n                            src={NewAddIcon}\r\n                            alt=\"Logo\"\r\n                            style={{ height: \"40px\" }}\r\n                          />\r\n                        </div>\r\n                        <div className=\"alert-text\">\r\n                          <Link\r\n                            className=\"text-dark-75 text-hover-primary mb-1 font-size-lg font-weight-bolder\"\r\n                            to={`/joinproject`}\r\n                            // {\r\n                            //   pathname: `/myprojects/dashboard/${project._id}`,\r\n                            //   state: { project: project },\r\n                            // }\r\n                          >\r\n                            {val.message}\r\n                          </Link>\r\n                        </div>\r\n                      </div>\r\n                    </>\r\n                  </>\r\n                );\r\n              }\r\n              if (\r\n                val.notifType === \"StartedFollowing\" ||\r\n                val.notifType === \"FollowedYou\"\r\n              ) {\r\n                // console.log(\"StartedFollowing:\", val);\r\n                // console.log(\"Current user id: \", getCurrentUser()._id);\r\n                return (\r\n                  <>\r\n                    {\" \"}\r\n                    <div\r\n                      className=\"alert alert-custom alert-notice alert-light-warning\"\r\n                      role=\"alert\"\r\n                    >\r\n                      <div className=\"alert-icon\">\r\n                        <img\r\n                          src={NewAddIcon}\r\n                          alt=\"Logo\"\r\n                          style={{ height: \"40px\" }}\r\n                        />\r\n                      </div>\r\n                      <div className=\"alert-text\">\r\n                        <Link\r\n                          className=\"text-dark-75 text-hover-primary mb-1 font-size-lg font-weight-bolder\"\r\n                          to={`/user/${val.userObjId}`}\r\n                          // {\r\n                          //   pathname: `/myprojects/dashboard/${project._id}`,\r\n                          //   state: { project: project },\r\n                          // }\r\n                        >\r\n                          {val.message}\r\n                        </Link>\r\n                      </div>\r\n                    </div>\r\n                  </>\r\n                );\r\n              }\r\n              if (val.notifType === \"InviteToRole\") {\r\n                // console.log(\"StartedFollowing:\", val);\r\n                // console.log(\"Current user id: \", getCurrentUser()._id);\r\n                console.log(val);\r\n                return (\r\n                  <>\r\n                    <>\r\n                      {\" \"}\r\n                      <div\r\n                        className=\"alert alert-custom alert-notice alert-light-warning\"\r\n                        role=\"alert\"\r\n                      >\r\n                        <div className=\"alert-icon\">\r\n                          <img\r\n                            src={NewAddIcon}\r\n                            alt=\"Logo\"\r\n                            style={{ height: \"40px\" }}\r\n                          />\r\n                        </div>\r\n                        <div className=\"alert-text\">\r\n                          <Link\r\n                            className=\"text-dark-75 text-hover-primary mb-1 font-size-lg font-weight-bolder\"\r\n                            to={`/joinproject`}\r\n                            // {\r\n                            //   pathname: `/myprojects/dashboard/${project._id}`,\r\n                            //   state: { project: project },\r\n                            // }\r\n                          >\r\n                            {val.message}\r\n                          </Link>\r\n                          <Button\r\n                            onClick={() => {\r\n                              // console.log(\r\n                              //   val.sentBy,\r\n                              //   val.projectId,\r\n                              //   val.sentTo,\r\n                              //   val.roleId\r\n                              // );\r\n                              acceptRequest(\r\n                                val.sentBy,\r\n                                val.projectId,\r\n                                val.sentTo,\r\n                                val.roleId\r\n                              )\r\n                                .then((res) => {\r\n                                  console.log(res);\r\n                                  this.props.notificationAdded({\r\n                                    userId: val.sentBy,\r\n                                    message: `New Role (${\r\n                                      res.role.roleName\r\n                                    }) Accepted by ${\r\n                                      getCurrentUser().name\r\n                                    }, Congrats on the new Member!`,\r\n                                    type: \"RoleAcceptedInNotif\",\r\n                                    projectId: val.projectId,\r\n                                  });\r\n                                  this.props.notificationAdded({\r\n                                    userId: getCurrentUser()._id,\r\n                                    message: `New Role (${res.role.roleName})! time to show off my skills B)`,\r\n                                    type: \"RoleAcceptedInNotif\",\r\n                                    projectId: val.projectId,\r\n                                  });\r\n                                })\r\n                                .then(() => {\r\n                                  removeNotificationId(\r\n                                    getCurrentUser()._id,\r\n                                    val._id\r\n                                  ).then((data) => {\r\n                                    if (data.user !== undefined) {\r\n                                      console.log(\"removed notif\");\r\n                                      window.location.reload();\r\n                                    }\r\n                                  });\r\n                                });\r\n                            }}\r\n                          >\r\n                            Accept\r\n                          </Button>\r\n                          <Button\r\n                            onClick={() => {\r\n                              //  declineRequest(\r\n                              //     getCurrentUser()._id,\r\n                              //     projectId,\r\n                              //     user._id,\r\n                              //     roleId\r\n                              //   ).then((res) => {\r\n                              //     console.log(res);\r\n                              //     this.props.notificationAdded({\r\n                              //       userId: user._id,\r\n                              //       message: `Role Declined by ${getCurrentUser().name} :(`,\r\n                              //       type: \"RoleDeclined\",\r\n                              //       projectId: projectId,\r\n                              //     });\r\n                              //   });\r\n                              // }}\r\n                              declineRequest(\r\n                                val.sentBy,\r\n                                val.projectId,\r\n                                val.sentTo,\r\n                                val.roleId\r\n                              )\r\n                                .then((res) => {\r\n                                  console.log(res);\r\n                                  this.props.notificationAdded({\r\n                                    userId: val.sentBy,\r\n                                    message: `Role (${\r\n                                      res.role.roleName\r\n                                    }) declined by ${getCurrentUser().name}`,\r\n                                    type: \"RoleDeclinedInNotif\",\r\n                                    projectId: val.projectId,\r\n                                  });\r\n                                  toast.warning(\r\n                                    `Rejected role (${res.role.roleName}) successfully!`\r\n                                  );\r\n                                  // this.props.removeAndUpdateNotifications({\r\n                                  //   userId: getCurrentUser()._id,\r\n                                  //   notifId: val._id,\r\n                                  // });\r\n                                })\r\n                                .then(() => {\r\n                                  removeNotificationId(\r\n                                    getCurrentUser()._id,\r\n                                    val._id\r\n                                  ).then((data) => {\r\n                                    if (data.user !== undefined) {\r\n                                      console.log(\"removed notif\");\r\n                                      window.location.reload();\r\n                                    }\r\n                                  });\r\n                                });\r\n                            }}\r\n                          >\r\n                            Decline\r\n                          </Button>\r\n                        </div>\r\n                      </div>\r\n                    </>\r\n                  </>\r\n                );\r\n              }\r\n\r\n              return (\r\n                <div\r\n                  className=\"card-text ml-3 mt-1 mb-2 p-1\"\r\n                  style={{ width: \"50rem\" }}\r\n                >\r\n                  {val.message}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        ))}\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  notifications: state.notifications.notifications,\r\n  segregatedNotifications: state.notifications.segregatedNotifications,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getNotified: (params) => dispatch(getNotified(params)),\r\n  clearNotifications: () => dispatch(clearNotifications()),\r\n  setSegregatedNotifications: (params) =>\r\n    dispatch(setSegregatedNotifications(params)),\r\n  notificationAdded: (params) => dispatch(notificationAdded(params)),\r\n  setNotifications: (params) => dispatch(setNotifications(params)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Notifications);\r\n","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\UserRecommendation.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\User_Role.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\RecommendedRolePeople.js",["70"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\ProjectDashboard.js",["71","72","73","74"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\apiProject.js",["75","76"],{"ruleId":"77","severity":1,"message":"78","line":6,"column":3,"nodeType":"79","messageId":"80","endLine":6,"endColumn":12},{"ruleId":"77","severity":1,"message":"81","line":7,"column":3,"nodeType":"79","messageId":"80","endLine":7,"endColumn":9},{"ruleId":"77","severity":1,"message":"82","line":8,"column":3,"nodeType":"79","messageId":"80","endLine":8,"endColumn":7},{"ruleId":"77","severity":1,"message":"83","line":23,"column":26,"nodeType":"79","messageId":"80","endLine":23,"endColumn":31},{"ruleId":"77","severity":1,"message":"84","line":34,"column":8,"nodeType":"79","messageId":"80","endLine":34,"endColumn":17},{"ruleId":"85","severity":1,"message":"86","line":49,"column":46,"nodeType":"87","messageId":"88","endLine":49,"endColumn":48},{"ruleId":"77","severity":1,"message":"82","line":18,"column":3,"nodeType":"79","messageId":"80","endLine":18,"endColumn":7},{"ruleId":"77","severity":1,"message":"89","line":19,"column":3,"nodeType":"79","messageId":"80","endLine":19,"endColumn":12},{"ruleId":"77","severity":1,"message":"90","line":20,"column":3,"nodeType":"79","messageId":"80","endLine":20,"endColumn":16},{"ruleId":"77","severity":1,"message":"91","line":96,"column":9,"nodeType":"79","messageId":"80","endLine":96,"endColumn":16},{"ruleId":"77","severity":1,"message":"92","line":97,"column":13,"nodeType":"79","messageId":"80","endLine":97,"endColumn":22},{"ruleId":"85","severity":1,"message":"86","line":100,"column":30,"nodeType":"87","messageId":"88","endLine":100,"endColumn":32},{"ruleId":"77","severity":1,"message":"93","line":19,"column":8,"nodeType":"79","messageId":"80","endLine":19,"endColumn":25},{"ruleId":"77","severity":1,"message":"94","line":22,"column":10,"nodeType":"79","messageId":"80","endLine":22,"endColumn":33},{"ruleId":"85","severity":1,"message":"86","line":52,"column":25,"nodeType":"87","messageId":"88","endLine":52,"endColumn":27},{"ruleId":"77","severity":1,"message":"95","line":1,"column":10,"nodeType":"79","messageId":"80","endLine":1,"endColumn":26},{"ruleId":"77","severity":1,"message":"96","line":2,"column":27,"nodeType":"79","messageId":"80","endLine":2,"endColumn":43},{"ruleId":"77","severity":1,"message":"97","line":26,"column":10,"nodeType":"79","messageId":"80","endLine":26,"endColumn":38},{"ruleId":"77","severity":1,"message":"98","line":28,"column":7,"nodeType":"79","messageId":"80","endLine":28,"endColumn":15},{"ruleId":"85","severity":1,"message":"86","line":42,"column":35,"nodeType":"87","messageId":"88","endLine":42,"endColumn":37},{"ruleId":"77","severity":1,"message":"99","line":74,"column":11,"nodeType":"79","messageId":"80","endLine":74,"endColumn":24},{"ruleId":"77","severity":1,"message":"100","line":81,"column":11,"nodeType":"79","messageId":"80","endLine":81,"endColumn":19},{"ruleId":"101","severity":1,"message":"102","line":15,"column":11,"nodeType":"103","endLine":15,"endColumn":78},{"ruleId":"77","severity":1,"message":"78","line":2,"column":10,"nodeType":"79","messageId":"80","endLine":2,"endColumn":19},{"ruleId":"77","severity":1,"message":"82","line":2,"column":21,"nodeType":"79","messageId":"80","endLine":2,"endColumn":25},{"ruleId":"77","severity":1,"message":"81","line":2,"column":27,"nodeType":"79","messageId":"80","endLine":2,"endColumn":33},{"ruleId":"85","severity":1,"message":"104","line":498,"column":42,"nodeType":"87","messageId":"105","endLine":498,"endColumn":44},{"ruleId":"106","severity":1,"message":"107","line":207,"column":56,"nodeType":"108","messageId":"109","endLine":207,"endColumn":57},{"ruleId":"106","severity":1,"message":"107","line":222,"column":56,"nodeType":"108","messageId":"109","endLine":222,"endColumn":57},"no-unused-vars","'Accordion' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Card' is defined but never used.","'toast' is defined but never used.","'User_Role' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'ListGroup' is defined but never used.","'ListGroupItem' is defined but never used.","'overdue' is assigned a value but never used.","'following' is assigned a value but never used.","'SearchTwoToneIcon' is defined but never used.","'ReactSearchAutocomplete' is defined but never used.","'createAsyncThunk' is defined but never used.","'getNotifications' is defined but never used.","'removeAndUpdateNotifications' is defined but never used.","'BASE_URL' is assigned a value but never used.","'notifications' is assigned a value but never used.","'selected' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component User_Role must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat"]