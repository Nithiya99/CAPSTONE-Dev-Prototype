[{"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\reportWebVitals.js":"1","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\EditProfile.js":"2","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\MyChats.js":"3","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\notifications.js":"4","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\DeleteUser.js":"5","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\newProjectForm\\RoleCreate.js":"6","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\Socket.js":"7","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\Chat.js":"8","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\ProjectRecommendation.js":"9","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\Emoji.js":"10","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Tagify\\Assigner.js":"11","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\App.js":"12","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Home.js":"13","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\MyProjects.js":"14","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\apiUser.js":"15","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\cpm.js":"16","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\taskComponents\\TrelloTask.js":"17","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\RoleReq.js":"18","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Tagify\\TagFinal.js":"19","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\layout\\Task.js":"20","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\Requests.js":"21","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Personal.js":"22","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\DragDropImages.js":"23","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\Post.js":"24","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\apiPosts.js":"25","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\showPost.js":"26","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Profile.js":"27","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\NavBar.js":"28","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\JoinProject.js":"29","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Tagify\\SkillsInput.js":"30","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\AssignedTo.js":"31","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\RatingComponent.js":"32","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\layout\\Pert.js":"33","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Users.js":"34","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\UserRecommendation.js":"35","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\layout\\LayoutComponent.js":"36","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Social.js":"37"},{"size":375,"mtime":1621337772231,"results":"38","hashOfConfig":"39"},{"size":7020,"mtime":1621337772247,"results":"40","hashOfConfig":"39"},{"size":14301,"mtime":1621343966383,"results":"41","hashOfConfig":"39"},{"size":1948,"mtime":1621337772232,"results":"42","hashOfConfig":"39"},{"size":1207,"mtime":1621337772246,"results":"43","hashOfConfig":"39"},{"size":1886,"mtime":1621337772230,"results":"44","hashOfConfig":"39"},{"size":242,"mtime":1621337772249,"results":"45","hashOfConfig":"39"},{"size":6958,"mtime":1621337772224,"results":"46","hashOfConfig":"39"},{"size":3566,"mtime":1621337772217,"results":"47","hashOfConfig":"39"},{"size":2120,"mtime":1621337772224,"results":"48","hashOfConfig":"39"},{"size":1517,"mtime":1621337772251,"results":"49","hashOfConfig":"39"},{"size":479,"mtime":1621337772215,"results":"50","hashOfConfig":"39"},{"size":5912,"mtime":1621345364416,"results":"51","hashOfConfig":"39"},{"size":24334,"mtime":1621337772226,"results":"52","hashOfConfig":"39"},{"size":7380,"mtime":1621337772249,"results":"53","hashOfConfig":"39"},{"size":2239,"mtime":1621337772232,"results":"54","hashOfConfig":"39"},{"size":10823,"mtime":1621337772231,"results":"55","hashOfConfig":"39"},{"size":973,"mtime":1621337772227,"results":"56","hashOfConfig":"39"},{"size":1297,"mtime":1621337772252,"results":"57","hashOfConfig":"39"},{"size":714,"mtime":1621337772229,"results":"58","hashOfConfig":"39"},{"size":3337,"mtime":1621337772227,"results":"59","hashOfConfig":"39"},{"size":2184,"mtime":1621337772250,"results":"60","hashOfConfig":"39"},{"size":5927,"mtime":1621396718217,"results":"61","hashOfConfig":"39"},{"size":5134,"mtime":1621407583490,"results":"62","hashOfConfig":"39"},{"size":7362,"mtime":1621407046850,"results":"63","hashOfConfig":"39"},{"size":5178,"mtime":1621351537110,"results":"64","hashOfConfig":"39"},{"size":16642,"mtime":1621351279248,"results":"65","hashOfConfig":"39"},{"size":362,"mtime":1621337772217,"results":"66","hashOfConfig":"39"},{"size":10158,"mtime":1621337772225,"results":"67","hashOfConfig":"39"},{"size":522,"mtime":1621337772251,"results":"68","hashOfConfig":"39"},{"size":623,"mtime":1621337772224,"results":"69","hashOfConfig":"39"},{"size":1643,"mtime":1621337772226,"results":"70","hashOfConfig":"39"},{"size":5141,"mtime":1621337772229,"results":"71","hashOfConfig":"39"},{"size":8792,"mtime":1621337772248,"results":"72","hashOfConfig":"39"},{"size":3576,"mtime":1621337772228,"results":"73","hashOfConfig":"39"},{"size":21050,"mtime":1621337772229,"results":"74","hashOfConfig":"39"},{"size":3330,"mtime":1621337772251,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"6p3aao",{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"78"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"78"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"78"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"88"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"78"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\reportWebVitals.js",[],["158","159"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\EditProfile.js",["160"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\MyChats.js",["161","162","163","164","165"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  getCurrentUser,\r\n  getfriends,\r\n  getUserById,\r\n  updatePersonalChat,\r\n  clearChat,\r\n  blockUser,\r\n  unblockUser,\r\n} from \"./apiUser\";\r\nimport DefaultProfile from \"./../images/avatar.png\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Row, Tab, Col, Nav } from \"react-bootstrap\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { clearFriends, friendAdded } from \"../store/user\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport io from \"socket.io-client\";\r\nimport moment from \"moment\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport CheckCircleOutlineIcon from \"@material-ui/icons/CheckCircleOutline\";\r\nimport BlockIcon from \"@material-ui/icons/Block\";\r\nimport ClearAllIcon from \"@material-ui/icons/ClearAll\";\r\n\r\nvar options = {\r\n  rememberUpgrade: true,\r\n  transports: [\"websocket\"],\r\n  secure: true,\r\n  rejectUnauthorized: false,\r\n};\r\n\r\nconst MyChats = () => {\r\n  const dispatch = useDispatch();\r\n  const friends = useSelector((state) => state.user.friends);\r\n  const [user, setUser] = useState({});\r\n  const [touser_id, settouser_id] = useState(String);\r\n  const [toname, settoname] = useState(String);\r\n  const [state, setState] = useState({\r\n    message: \"\",\r\n    from_name: getCurrentUser().name,\r\n    created: new Date(),\r\n  });\r\n  const [blocked_users, set_blocked_user] = useState([]);\r\n  const [isblocked, set_isblocked] = useState(Boolean);\r\n  const [blocked_by, set_blocked_by] = useState([]);\r\n  const [isblocked_by, set_isblocked_by] = useState(Boolean);\r\n  const [chat, setChat] = useState([]);\r\n\r\n  const divRef = useRef(null);\r\n  const messagesEndRef = useRef(null);\r\n  const socketRef = useRef();\r\n\r\n  useEffect(async () => {\r\n    dispatch(clearFriends());\r\n    await getfriends(getCurrentUser()._id).then(async (data) => {\r\n      await data.map(async (userid) => {\r\n        await getUserById(userid).then((u) => {\r\n          if (u.user._id !== getCurrentUser()._id)\r\n            dispatch(friendAdded({ user: u.user }));\r\n        });\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  // console.log(friends);\r\n\r\n  function fun(user) {\r\n    let userid = getCurrentUser()._id;\r\n    socketRef.current = io.connect(\"http://localhost:8081\", options);\r\n    socketRef.current.emit(\"getPersonalChat\", {\r\n      userid,\r\n      touser: user._id,\r\n      client_chat_length: chat.length,\r\n    });\r\n    socketRef.current.on(\"personalchat\" + userid, (data) => {\r\n      setChat(data);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    let userid = getCurrentUser()._id;\r\n\r\n    getUserById(userid).then((data) => {\r\n      set_blocked_user(data.user.blocked_users);\r\n      set_blocked_by(data.user.blocked_by);\r\n    });\r\n\r\n    socketRef.current = io.connect(\"http://localhost:8081\", options);\r\n    socketRef.current.emit(\"getPersonalChat\", {\r\n      userid,\r\n      touser: user._id,\r\n      client_chat_length: chat.length,\r\n    });\r\n\r\n    socketRef.current.on(\r\n      \"personal_message\" + userid,\r\n      ({ from_name, toname, message, created, touser_id, fromuser }) => {\r\n        let chats = [...chat];\r\n        chats.push({\r\n          from_name,\r\n          toname,\r\n          message,\r\n          created,\r\n          touser_id,\r\n          fromuser,\r\n        });\r\n        setChat(chats);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let userid = getCurrentUser()._id;\r\n    socketRef.current = io.connect(\"http://localhost:8081\", options);\r\n    socketRef.current.emit(\"getPersonalChat\", {\r\n      userid,\r\n      touser: user._id,\r\n      client_chat_length: chat.length,\r\n    });\r\n    socketRef.current.on(\"personalchat\" + userid, (data) => {\r\n      setChat(data);\r\n    });\r\n    socketRef.current.on(\r\n      \"personal_message\" + userid,\r\n      ({ from_name, toname, message, created, touser_id, fromuser }) => {\r\n        let chats = [...chat];\r\n        chats.push({\r\n          from_name,\r\n          toname,\r\n          message,\r\n          created,\r\n          touser_id,\r\n          fromuser,\r\n        });\r\n        setChat(chats);\r\n      }\r\n    );\r\n    return () => socketRef.current.disconnect();\r\n  }, [chat]);\r\n\r\n  const onMessageSubmit = (e) => {\r\n    const { from_name, message, created } = state;\r\n    let fromuser = getCurrentUser()._id;\r\n    if (message.trim() !== \"\") {\r\n      socketRef.current.emit(\"personal_message\", {\r\n        from_name,\r\n        toname,\r\n        message,\r\n        created,\r\n        touser_id,\r\n        fromuser,\r\n      });\r\n      let chat_msg = {\r\n        from_name,\r\n        toname,\r\n        message,\r\n        created,\r\n        touser_id,\r\n        fromuser,\r\n      };\r\n      updatePersonalChat(chat_msg).then((data) => {\r\n        let chats = [...chat];\r\n        chats.push(chat_msg);\r\n        setChat(chats);\r\n      });\r\n    }\r\n    e.preventDefault();\r\n    setState({ message: \"\", from_name });\r\n  };\r\n\r\n  const onTextChange = (e) => {\r\n    setState({ ...state, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onClearChat = (e) => {\r\n    let current_user_id = getCurrentUser()._id;\r\n    let client_user_id = user._id;\r\n    clearChat(current_user_id, client_user_id).then((data) => {\r\n      let chats = [];\r\n      setChat(chats);\r\n      console.log(data);\r\n    });\r\n    e.preventDefault();\r\n  };\r\n\r\n  const onBlockUser = (e) => {\r\n    let current_user_id = getCurrentUser()._id;\r\n    let client_user_id = user._id;\r\n    blockUser(current_user_id, client_user_id).then((data) => {\r\n      console.log(data);\r\n    });\r\n    e.preventDefault();\r\n  };\r\n\r\n  const onUnBlockUser = (e) => {\r\n    let current_user_id = getCurrentUser()._id;\r\n    let client_user_id = user._id;\r\n    unblockUser(current_user_id, client_user_id).then((data) => {\r\n      console.log(data);\r\n    });\r\n    e.preventDefault();\r\n  };\r\n\r\n  var d = new Date();\r\n  var f = 0;\r\n  function setdate(dd) {\r\n    d = dd;\r\n    return moment(dd).format(\"DD-MM-YYYY\");\r\n  }\r\n  function settoday(dd) {\r\n    d = dd;\r\n    f = 1;\r\n  }\r\n  const renderChat = () => {\r\n    f = 0;\r\n    return chat.map(({ from_name, message, created }, index) => (\r\n      <div>\r\n        <div className=\"d-flex flex-column m-3 align-items-center\">\r\n          {moment(created).format(\"DD-MM-YYYY\") !==\r\n          moment(d).format(\"DD-MM-YYYY\") ? (\r\n            moment(created).format(\"DD-MM-YYYY\") ===\r\n            moment(new Date()).format(\"DD-MM-YYYY\") ? (\r\n              <span className=\"text-dark-75 font-weight-bold font-size-sm bubble-date\">\r\n                Today{settoday(created)}\r\n              </span>\r\n            ) : (\r\n              <span className=\"text-dark-75 font-weight-bold font-size-sm bubble-date\">\r\n                {setdate(created)}\r\n              </span>\r\n            )\r\n          ) : moment(created).format(\"DD-MM-YYYY\") ===\r\n              moment(new Date()).format(\"DD-MM-YYYY\") && f === 0 ? (\r\n            <span className=\"text-dark-75 font-weight-bold font-size-sm bubble-date\">\r\n              Today{settoday(created)}\r\n            </span>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n        </div>\r\n        {isAuthenticated().user.name === from_name ? (\r\n          <div className=\"d-flex flex-column m-3 align-items-end \" key={index}>\r\n            <div className=\"d-flex align-items-center\">\r\n              <div>\r\n                <span className=\"text-muted font-size-sm\">\r\n                  {moment(created).format(\"h:mm a\")}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-2 text-dark-50 font-weight-bold font-size-lg  text-left bubble-alt\">\r\n              {message}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div\r\n            className=\"d-flex flex-column m-3 align-items-start \"\r\n            key={index}\r\n          >\r\n            <div className=\"d-flex align-items-center\">\r\n              <div>\r\n                <span className=\"text-muted font-size-sm\">\r\n                  {moment(created).format(\"h:mm a\")}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-2 text-dark-50 font-weight-bold font-size-lg  text-left  bubble\">\r\n              {message}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div className=\"pt-5\">\r\n      <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"empty\">\r\n        <Row>\r\n          <Col sm={2}>\r\n            <div className=\"card card-custom card-stretch\">\r\n              <div className=\"card-body pt-4\">\r\n                <Nav variant=\"pills\" className=\"flex-column mt-3\">\r\n                  {friends.map((user, i) => (\r\n                    <Nav.Item>\r\n                      {/* {console.log(user)} */}\r\n\r\n                      <Nav.Link\r\n                        eventKey={i}\r\n                        onClick={() => {\r\n                          setUser(user);\r\n                          settouser_id(user._id);\r\n                          settoname(user.name);\r\n                          fun(user);\r\n                          set_isblocked(blocked_users.indexOf(user._id) > -1);\r\n                          set_isblocked_by(blocked_by.indexOf(user._id) > -1);\r\n                        }}\r\n                      >\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"mr-3\">\r\n                            <img\r\n                              src={DefaultProfile}\r\n                              style={{ width: \"40px\" }}\r\n                            />\r\n                          </div>\r\n                          <div>{user.name}</div>\r\n                        </div>\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                  ))}\r\n                </Nav>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n          <Col sm={10}>\r\n            <Tab.Content>\r\n              <Tab.Pane eventKey=\"empty\">\r\n                <div className=\"card card-stretch\">\r\n                  <div className=\"card-header\">\r\n                    <div className=\"card-title align-items-start flex-column\">\r\n                      <h4 className=\"card-label font-weight-bolder text-dark\">\r\n                        Click on a chat.\r\n                      </h4>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Tab.Pane>\r\n              {friends.map((user, i) => {\r\n                let comp = [];\r\n                comp.push(\r\n                  <Tab.Pane eventKey={i}>\r\n                    <div className=\"card card-stretch\">\r\n                      <div className=\"card-header\">\r\n                        <div className=\"card-title align-items-start flex-column\">\r\n                          <h4 className=\"card-label font-weight-bolder text-dark\">\r\n                            {user.name}\r\n                            <button\r\n                              className=\"btn btn-primary\"\r\n                              onClick={onClearChat}\r\n                            >\r\n                              Clear\r\n                              <ClearAllIcon />\r\n                            </button>\r\n\r\n                            {!isblocked ? (\r\n                              <button\r\n                                className=\"btn btn-primary\"\r\n                                onClick={onBlockUser}\r\n                              >\r\n                                Block\r\n                                <BlockIcon />\r\n                              </button>\r\n                            ) : (\r\n                              <button\r\n                                className=\"btn btn-primary\"\r\n                                onClick={onUnBlockUser}\r\n                              >\r\n                                UnBlock\r\n                                <CheckCircleOutlineIcon />\r\n                              </button>\r\n                            )}\r\n                          </h4>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"card-body\">\r\n                        <div>\r\n                          <div ref={divRef} className=\"render-chat\">\r\n                            {renderChat()}\r\n                            <div ref={messagesEndRef} />\r\n                          </div>\r\n\r\n                          {!isblocked ? (\r\n                            !isblocked_by ? (\r\n                              <form onSubmit={onMessageSubmit}>\r\n                                <div className=\"row pt-5\">\r\n                                  <Col sm={10}>\r\n                                    <TextField\r\n                                      name=\"message\"\r\n                                      onChange={(e) => {\r\n                                        onTextChange(e);\r\n                                      }}\r\n                                      value={state.message}\r\n                                      id=\"outlined-multiline-static\"\r\n                                      variant=\"outlined\"\r\n                                      label=\"Message\"\r\n                                      fullWidth\r\n                                    />\r\n                                  </Col>\r\n                                  <Col>\r\n                                    <button className=\"btn btn-primary\">\r\n                                      Send Message <SendIcon />\r\n                                    </button>\r\n                                  </Col>\r\n                                </div>\r\n                              </form>\r\n                            ) : (\r\n                              <h4 className=\"card-label font-weight-bolder text-dark\">\r\n                                You have been blocked by the user\r\n                              </h4>\r\n                            )\r\n                          ) : (\r\n                            <h4 className=\"card-label font-weight-bolder text-dark\">\r\n                              You won't recieve any messages unless you unblock\r\n                              the user\r\n                            </h4>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Tab.Pane>\r\n                );\r\n                return comp;\r\n              })}\r\n            </Tab.Content>\r\n          </Col>\r\n        </Row>\r\n      </Tab.Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyChats;\r\n","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\notifications.js",["166"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\DeleteUser.js",[],["167","168"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\newProjectForm\\RoleCreate.js",["169"],"import React from \"react\";\r\nimport SkillsInput from \"../../utils/signupbutton/Tagify/SkillsInput\";\r\n\r\nconst RoleList = (props) => {\r\n  // if (props.skillDetails === undefined) return null;\r\n  const { onChange } = props;\r\n  return props.roleDetails.map((val, idx) => {\r\n    let roleName = `roleName-${idx}`;\r\n    let roleSkills = `roleSkills-${idx}`;\r\n    return (\r\n      <div className=\"form-row mt-3\" key={val.index}>\r\n        <div className=\"form-group col-md-4 offset-1\">\r\n          <label>\r\n            <big>Role Title</big>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control required\"\r\n            // rolename=\"roleName\"\r\n            idx={idx}\r\n            id={roleName}\r\n            onChange={onChange(\"roleName\")}\r\n            value={props.roleDetails[idx].roleName}\r\n          />\r\n        </div>\r\n        {/*<div className=\"form-row\" key={val.index}>*/}\r\n        <div className=\"form-group col-md-5\">\r\n          <SkillsInput\r\n            label={<big>Role Skills</big>}\r\n            setSkills={(e) => {\r\n              props.roleDetails[idx].roleSkills = e;\r\n            }}\r\n            value={props.roleDetails[idx].roleSkills}\r\n          />\r\n        </div>\r\n        {/*</div>*/}\r\n        <div className=\"form-group col-md-2 mt-4\">\r\n          {idx === 0 ? (\r\n            <button\r\n              onClick={() => props.add()}\r\n              type=\"button\"\r\n              className=\"btn btn-primary text-center\"\r\n            >\r\n              <i className=\"fa fa-plus\" aria-hidden=\"true\" />\r\n            </button>\r\n          ) : (\r\n            <button\r\n              className=\"btn btn-danger\"\r\n              onClick={() => props.delete(val)}\r\n            >\r\n              <i className=\"fa fa-minus\" aria-hidden=\"true\" />\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n};\r\n\r\nexport default RoleList;\r\n","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\Socket.js",[],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\Chat.js",["170","171","172","173"],"import TextField from \"@material-ui/core/TextField\";\r\nimport React, { useEffect, useRef, useState, useLayoutEffect } from \"react\";\r\nimport useStayScrolled from \"react-stay-scrolled\";\r\nimport io from \"socket.io-client\";\r\nimport { getCurrentUser } from \"./../user/apiUser\";\r\nimport { updateChat } from \"./apiProject\";\r\nimport { Col } from \"react-bootstrap\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport DefaultProfile from \"../images/avatar.png\";\r\nimport { read } from \"../user/apiUser\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport moment from \"moment\";\r\n\r\nvar options = {\r\n  rememberUpgrade: true,\r\n  transports: [\"websocket\"],\r\n  secure: true,\r\n  rejectUnauthorized: false,\r\n};\r\n\r\nfunction Chat(props) {\r\n  const project_id = props.projectId;\r\n  const status = props.status;\r\n  const [state, setState] = useState({\r\n    message: \"\",\r\n    name: getCurrentUser().name,\r\n    created: new Date(),\r\n  });\r\n  const [chat, setChat] = useState([]);\r\n  const socketRef = useRef();\r\n\r\n  const divRef = useRef(null);\r\n  const { stayScrolled } = useStayScrolled(divRef);\r\n\r\n  useEffect(() => {\r\n    socketRef.current = io.connect(\"http://localhost:8081\", options);\r\n    socketRef.current.emit(\"getChat\", {\r\n      project_id,\r\n      client_chat_length: chat.length,\r\n    });\r\n    socketRef.current.on(\"chat\", (data) => {\r\n      setChat(data);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    socketRef.current = io.connect(\"http://localhost:8081\", options);\r\n    socketRef.current.emit(\"getChat\", {\r\n      project_id,\r\n      client_chat_length: chat.length,\r\n    });\r\n    socketRef.current.on(\"chat\" + project_id, (data) => {\r\n      setChat(data);\r\n      console.log(data);\r\n    });\r\n    socketRef.current.on(\r\n      \"message\" + project_id,\r\n      ({ name, message, created }) => {\r\n        console.log(chat);\r\n        setChat([...chat, { name, message, created }]);\r\n      }\r\n    );\r\n    return () => socketRef.current.disconnect();\r\n  }, [chat]);\r\n\r\n  const onTextChange = (e) => {\r\n    setState({ ...state, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onMessageSubmit = (e) => {\r\n    const { name, message, created } = state;\r\n    if (message.trim() !== \"\") {\r\n      socketRef.current.emit(\"message\", { name, message, created, project_id });\r\n      let chat_msg = { name, message, created };\r\n      updateChat(chat_msg, project_id).then((data) => {\r\n        if (data.error) {\r\n          console.log(data.error);\r\n        } else {\r\n          console.log(data.message);\r\n        }\r\n      });\r\n    }\r\n    e.preventDefault();\r\n    setState({ message: \"\", name });\r\n  };\r\n\r\n  const messagesEndRef = useRef(null);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n  useEffect(scrollToBottom, [chat]);\r\n\r\n  var d = new Date();\r\n  var f = 0;\r\n  function setdate(dd) {\r\n    d = dd;\r\n    return moment(dd).format(\"DD-MM-YYYY\");\r\n  }\r\n  function settoday(dd) {\r\n    d = dd;\r\n    f = 1;\r\n  }\r\n\r\n  const renderChat = () => {\r\n    return chat.map(({ name, message, created }, index) => (\r\n      <div>\r\n        <div className=\"d-flex flex-column m-3 align-items-center\">\r\n          {moment(created).format(\"DD-MM-YYYY\") !==\r\n          moment(d).format(\"DD-MM-YYYY\") ? (\r\n            moment(created).format(\"DD-MM-YYYY\") ===\r\n            moment(new Date()).format(\"DD-MM-YYYY\") ? (\r\n              <span className=\"text-dark-75 font-weight-bold font-size-sm bubble-date\">\r\n                Today{settoday(created)}\r\n              </span>\r\n            ) : (\r\n              <span className=\"text-dark-75 font-weight-bold font-size-sm bubble-date\">\r\n                {setdate(created)}\r\n              </span>\r\n            )\r\n          ) : moment(created).format(\"DD-MM-YYYY\") ===\r\n              moment(new Date()).format(\"DD-MM-YYYY\") && f === 0 ? (\r\n            <span className=\"text-dark-75 font-weight-bold font-size-sm bubble-date\">\r\n              Today{settoday(created)}\r\n            </span>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n        {isAuthenticated().user.name === name ? (\r\n          <div className=\"d-flex flex-column m-3 align-items-end \" key={index}>\r\n            <div className=\"d-flex align-items-center\">\r\n              <div className=\"symbol symbol-circle symbol-40 mr-3\">\r\n                <img\r\n                  src={DefaultProfile}\r\n                  alt={name}\r\n                  style={{ width: \"40px\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <p className=\"text-dark-75 text-hover-primary font-weight-bold font-size-h6 m-0\">\r\n                  {name}\r\n                </p>\r\n                <span className=\"text-muted font-size-sm\">\r\n                  {moment(created).format(\"h:mm a\")}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-2 text-dark-50 font-weight-bold font-size-lg  text-left bubble-alt\">\r\n              {message}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div\r\n            className=\"d-flex flex-column m-3 align-items-start \"\r\n            key={index}\r\n          >\r\n            <div className=\"d-flex align-items-center\">\r\n              <div className=\"symbol symbol-circle symbol-40 mr-3\">\r\n                <img\r\n                  src={DefaultProfile}\r\n                  alt={name}\r\n                  style={{ width: \"40px\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <p className=\"text-dark-75 text-hover-primary font-weight-bold font-size-h6 m-0\">\r\n                  {name}\r\n                </p>\r\n                <span className=\"text-muted font-size-sm\">\r\n                  {moment(created).format(\"h:mm a\")}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-2 text-dark-50 font-weight-bold font-size-lg  text-left  bubble\">\r\n              {message}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    stayScrolled();\r\n  }, [chat]);\r\n\r\n  return (\r\n    <div>\r\n      <div ref={divRef} className=\"render-chat\">\r\n        {renderChat()}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n      {status !== \"Completed\" ? (\r\n        <form onSubmit={onMessageSubmit}>\r\n          <div className=\"row pt-5\">\r\n            <Col sm={10}>\r\n              <TextField\r\n                name=\"message\"\r\n                onChange={(e) => onTextChange(e)}\r\n                value={state.message}\r\n                id=\"outlined-multiline-static\"\r\n                variant=\"outlined\"\r\n                label=\"Message\"\r\n                fullWidth\r\n              />\r\n            </Col>\r\n            <Col>\r\n              <button className=\"btn btn-primary\">\r\n                Send Message <SendIcon />\r\n              </button>\r\n            </Col>\r\n          </div>\r\n        </form>\r\n      ) : (\r\n        <div> Chat has been disabled</div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\ProjectRecommendation.js",["174","175"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\Emoji.js",[],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Tagify\\Assigner.js",["176","177","178"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\App.js",[],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Home.js",["179","180","181","182","183","184","185","186","187","188","189"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\MyProjects.js",["190","191","192","193","194"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\apiUser.js",["195","196","197","198","199","200"],"export const read = (userId, token) => {\r\n  return fetch(\"http://localhost:8081/user/\" + `${userId}`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const update = (userId, token, user) => {\r\n  return fetch(\"http://localhost:8081/user/\" + `${userId}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(user),\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const remove = (userId, token) => {\r\n  return fetch(\"http://localhost:8081/user/\" + `${userId}`, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const list = () => {\r\n  return fetch(\"http://localhost:8081/users\", {\r\n    method: \"GET\",\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const getCurrentUser = () => {\r\n  return JSON.parse(localStorage.getItem(\"jwt\")).user;\r\n};\r\n\r\nexport const getUserById = (id) => {\r\n  return fetch(`http://localhost:8081/userInfo/${id}`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const getWords = () => {\r\n  return fetch(\"http://localhost:8081/words\", {\r\n    method: \"GET\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const setRating = (userId, rating) => {\r\n  let obj = {\r\n    rating,\r\n  };\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  return fetch(`http://localhost:8081/user/rating/${userId}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(obj),\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const followUser = (e, userId) => {\r\n  e.preventDefault();\r\n  let currentUserId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  return fetch(`http://localhost:8081/follow/${currentUserId}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + token,\r\n    },\r\n    body: JSON.stringify({\r\n      followId: userId,\r\n    }),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      return data;\r\n    });\r\n};\r\n\r\nexport const unfollowUser = (e, userId) => {\r\n  e.preventDefault();\r\n  console.log(userId);\r\n  let currentUserId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  return fetch(`http://localhost:8081/unfollow/${currentUserId}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + token,\r\n    },\r\n    body: JSON.stringify({\r\n      followId: userId,\r\n    }),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      return data;\r\n    });\r\n};\r\n\r\nexport const getfollowers = (userId) => {\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  return fetch(\"http://localhost:8081/followers/\" + `${userId}`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const getfollowing = (userId) => {\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  return fetch(\"http://localhost:8081/following/\" + `${userId}`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const getfriends = (userId) => {\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  return fetch(\"http://localhost:8081/friends/\" + `${userId}`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const updatePersonalChat = (chat) => {\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let Obj = {\r\n    chat: chat,\r\n  };\r\n  return fetch(\"http://localhost:8081/updatechat\", {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(Obj),\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const clearChat = (current_user_id, client_user_id) => {\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  return fetch(\"http://localhost:8081/clearchat/\", {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify({\r\n      current_user_id: current_user_id,\r\n      client_user_id: client_user_id,\r\n    }),\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const blockUser = (current_user_id, client_user_id) => {\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  return fetch(\"http://localhost:8081/blockuser/\", {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify({\r\n      current_user_id: current_user_id,\r\n      client_user_id: client_user_id,\r\n    }),\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const unblockUser = (current_user_id, client_user_id) => {\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  return fetch(\"http://localhost:8081/unblockuser/\", {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify({\r\n      current_user_id: current_user_id,\r\n      client_user_id: client_user_id,\r\n    }),\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\cpm.js",["201","202","203"],"import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { getTasks } from \"../project/apiProject\";\r\n\r\nlet lastNodeId = 0;\r\nlet lastConnectionId = 0;\r\n\r\nconst slice = createSlice({\r\n  name: \"cpm\",\r\n  initialState: {\r\n    nodes: [],\r\n    connections: [],\r\n    elements: [],\r\n    pert: {},\r\n    expectedTime: 0,\r\n    slacks: {},\r\n    criticalPath: {},\r\n  },\r\n  reducers: {\r\n    nodeAdded: (state, action) => {\r\n      state.nodes.push(action.payload.node);\r\n      //   console.log(action);\r\n      //   console.log(state, action.payload);\r\n    },\r\n    connectionAdded: (state, action) => {\r\n      // console.log(action.payload);\r\n      state.connections.push(action.payload.connection);\r\n      //   console.log(action);\r\n      //   console.log(state, action.payload);\r\n    },\r\n    replaceNodes: (state, action) => {\r\n      const nodes = action.payload.nodes;\r\n      void (state.nodes = nodes);\r\n    },\r\n    replaceConnections: (state, action) => {\r\n      const connections = action.payload.connections;\r\n      void (state.connections = connections);\r\n    },\r\n    replaceElements: (state, action) => {\r\n      const elements = action.payload.elements;\r\n      void (state.elements = elements);\r\n    },\r\n    setPert: (state, action) => {\r\n      const pert = action.payload.pert;\r\n      void (state.pert = pert);\r\n    },\r\n    setExpectedTime: (state, action) => {\r\n      const expectedTime = action.payload.expectedTime;\r\n      // console.log(expectedTime);\r\n      void (state.expectedTime = expectedTime);\r\n    },\r\n    clearAll: (state, action) => {\r\n      state.nodes = [];\r\n      state.connections = [];\r\n      state.elements = [];\r\n      state.pert = {};\r\n      state.expectedTime = 0;\r\n    },\r\n    setSlacks: (state, action) => {\r\n      const slackObject = action.payload.slackObject;\r\n      void (state.slacks = slackObject);\r\n    },\r\n    setCriticalPath: (state, action) => {\r\n      const criticalPath = action.payload.criticalPath;\r\n      void (state.criticalPath = criticalPath);\r\n    },\r\n  },\r\n});\r\nexport const {\r\n  nodeAdded,\r\n  connectionAdded,\r\n  replaceNodes,\r\n  replaceConnections,\r\n  replaceElements,\r\n  setPert,\r\n  setExpectedTime,\r\n  clearAll,\r\n  setSlacks,\r\n  setCriticalPath,\r\n} = slice.actions;\r\nexport default slice.reducer;\r\n","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\taskComponents\\TrelloTask.js",[],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\RoleReq.js",[],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Tagify\\TagFinal.js",["204","205"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\layout\\Task.js",["206"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\Requests.js",["207"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Personal.js",[],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\DragDropImages.js",["208","209","210","211"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\Post.js",["212"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\apiPosts.js",["213"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\showPost.js",[],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Profile.js",["214","215","216","217","218","219"],"import React, { Component } from \"react\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport {\r\n  read,\r\n  getCurrentUser,\r\n  followUser,\r\n  unfollowUser,\r\n  getUserById,\r\n} from \"./apiUser\";\r\nimport DefaultProfile from \"../images/avatar.png\";\r\nimport DeleteUser from \"./DeleteUser\";\r\nimport {\r\n  Row,\r\n  Tab,\r\n  Col,\r\n  Nav,\r\n  Card,\r\n  ListGroup,\r\n  ListGroupItem,\r\n} from \"react-bootstrap\";\r\nimport PersonTwoToneIcon from \"@material-ui/icons/PersonTwoTone\";\r\nimport ChatTwoToneIcon from \"@material-ui/icons/ChatTwoTone\";\r\nimport AccountTreeTwoToneIcon from \"@material-ui/icons/AccountTreeTwoTone\";\r\nimport PhotoTwoToneIcon from \"@material-ui/icons/PhotoTwoTone\";\r\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\r\nimport PersonAddDisabledIcon from \"@material-ui/icons/PersonAddDisabled\";\r\nimport DonutChart from \"react-donut-chart\";\r\nimport { listmyprojects } from \"./../project/apiProject\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateFollowing } from \"../store/user\";\r\nimport Post from \"./../posts/Post\";\r\nimport { getPostsOfUser } from \"../posts/apiPosts\";\r\nclass Profile extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      user: \"\",\r\n      redirectToSignin: false,\r\n      posts: [],\r\n    };\r\n  }\r\n\r\n  init = (userId) => {\r\n    const token = isAuthenticated().token;\r\n    read(userId, token).then((data) => {\r\n      if (data.error) {\r\n        this.setState({ redirectToSignin: true });\r\n      } else {\r\n        this.setState({ user: data });\r\n      }\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const userId = this.props.match.params.userId;\r\n    this.init(userId);\r\n    listmyprojects().then((projects) => {\r\n      this.setState({ projects: projects.userProjects });\r\n    });\r\n    // const { following } = this.props;\r\n    // console.log(1);\r\n    getUserById(getCurrentUser()._id).then((data) => {\r\n      this.props.updateFollowing({\r\n        following: data.user.following,\r\n      });\r\n    });\r\n    getPostsOfUser(userId)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        this.setState({ posts: data });\r\n      });\r\n  }\r\n  // this.setState({ projects });\r\n\r\n  componentWillReceiveProps(props) {\r\n    const userId = props.match.params.userId;\r\n    this.init(userId);\r\n  }\r\n  render() {\r\n    const { redirectToSignin, user } = this.state;\r\n    if (user.skills === undefined) return null;\r\n    if (redirectToSignin) return <Redirect to=\"/signin\" />;\r\n    let projects = this.state.projects;\r\n    let ongoing = 0;\r\n    let completed = 0;\r\n    let overdue = 0;\r\n    const { following } = this.props;\r\n    // console.log(following);\r\n    if (projects !== undefined) {\r\n      projects.map((project) => {\r\n        if (project.status === \"Completed\") completed++;\r\n        if (project.status === \"In Progress\") ongoing++;\r\n      });\r\n    }\r\n    const { posts } = this.state;\r\n    if (posts === undefined) return null;\r\n    return (\r\n      <div className=\"container mt-5\">\r\n        <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"personalInfo\">\r\n          <Row>\r\n            <Col sm={3}>\r\n              <div className=\"card card-custom card-stretch\">\r\n                <div className=\"card-body pt-4\">\r\n                  <div className=\"d-flex align-items-center\">\r\n                    <img\r\n                      src={DefaultProfile}\r\n                      alt={user.name}\r\n                      className=\"symbol symbol-60 symbol-xxl-100 mr-3 align-self-start align-self-xxl-center\"\r\n                      style={{ width: \"55px\" }}\r\n                    />\r\n                    <div>\r\n                      <h5 className=\"font-weight-bolder text-dark-75 text-hover-primary\">\r\n                        {user.name}\r\n                      </h5>\r\n                      <div className=\"text-muted\">@{user.username}</div>\r\n                      {isAuthenticated().user &&\r\n                      isAuthenticated().user._id === user._id ? (\r\n                        <div className=\"mt-2\">\r\n                          <Link\r\n                            className=\"btn btn-sm btn-primary mr-2 py-2 px-3 px-xxl-5 my-1\"\r\n                            to={`/user/edit/${user._id}`}\r\n                          >\r\n                            Edit Profile\r\n                          </Link>\r\n                          <DeleteUser userId={user._id} />\r\n                        </div>\r\n                      ) : (\r\n                        <div className=\"mt-2\">\r\n                          {user._id !== getCurrentUser()._id ? (\r\n                            user.followers.indexOf(getCurrentUser()._id) >\r\n                            -1 ? (\r\n                              <button\r\n                                className=\"btn btn-raised btn-primary\"\r\n                                onClick={(e) =>\r\n                                  unfollowUser(e, user._id).then((data) =>\r\n                                    this.props.updateFollowing({\r\n                                      following: data.user.following,\r\n                                    })\r\n                                  )\r\n                                }\r\n                              >\r\n                                UnFollow <PersonAddDisabledIcon />\r\n                              </button>\r\n                            ) : (\r\n                              <button\r\n                                className=\"btn btn-raised btn-primary\"\r\n                                onClick={(e) =>\r\n                                  followUser(e, user._id).then((data) =>\r\n                                    this.props.updateFollowing({\r\n                                      following: data.user.following,\r\n                                    })\r\n                                  )\r\n                                }\r\n                              >\r\n                                Follow <PersonAddIcon />\r\n                              </button>\r\n                            )\r\n                          ) : (\r\n                            <div></div>\r\n                          )}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\" pt-3\">\r\n                    <div className=\"d-flex align-items-center justify-content-between mb-2\">\r\n                      <span className=\"font-weight-bold mr-2\">Email: </span>\r\n                      <span className=\"text-muted email-wrap text-hover-primary\">\r\n                        {user.email}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"d-flex align-items-center justify-content-between mb-2\">\r\n                      <span className=\"font-weight-bold mr-2\">Location: </span>\r\n                      <span className=\"text-muted text-hover-primary\">\r\n                        {user.location}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"d-flex align-items-center justify-content-between mb-2\">\r\n                      <span className=\"font-weight-bold mr-2\">Joined: </span>\r\n                      <span className=\"text-muted text-hover-primary\">\r\n                        {` ${new Date(user.created).toDateString()}`}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <Nav variant=\"pills\" className=\"flex-column mt-3\">\r\n                    <Nav.Item>\r\n                      <Nav.Link eventKey=\"personalInfo\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"mr-3\">\r\n                            <PersonTwoToneIcon />\r\n                          </div>\r\n                          <div>Personal Information</div>\r\n                        </div>\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                      <Nav.Link eventKey=\"socialInfo\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"mr-3\">\r\n                            <ChatTwoToneIcon />\r\n                          </div>\r\n                          <div>Social Information</div>\r\n                        </div>\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                      <Nav.Link eventKey=\"projInfo\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"mr-3\">\r\n                            <AccountTreeTwoToneIcon />\r\n                          </div>\r\n                          <div>Project Stats</div>\r\n                        </div>\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                      <Nav.Link eventKey=\"posts\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"mr-3\">\r\n                            <PhotoTwoToneIcon />\r\n                          </div>\r\n                          <div>Posts</div>\r\n                        </div>\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                  </Nav>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n            <Col sm={9}>\r\n              <Tab.Content>\r\n                <Tab.Pane eventKey=\"personalInfo\">\r\n                  <div className=\"card card-stretch\">\r\n                    <div className=\"card-header\">\r\n                      <div className=\"card-title align-items-start flex-column\">\r\n                        <h4 className=\"card-label font-weight-bolder text-dark\">\r\n                          Personal Information\r\n                        </h4>\r\n                        <span className=\"text-muted font-weight-bold font-size-sm mt-1\">\r\n                          Update your personal information.\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <table className=\"table table-borderless\">\r\n                        <tbody>\r\n                          <tr>\r\n                            <th>Name</th>\r\n                            <td>{user.name}</td>\r\n                          </tr>\r\n                          <tr>\r\n                            <th>Email</th>\r\n                            <td>{user.email}</td>\r\n                          </tr>\r\n                          <tr>\r\n                            <th>Bio</th>\r\n                            <td>{user.bio}</td>\r\n                          </tr>\r\n                          <tr>\r\n                            <th>Skills</th>\r\n                            <td>{user.skills.join(\" \")}</td>\r\n                          </tr>\r\n                          <tr>\r\n                            <th>Date of Birth</th>\r\n                            <td>{` ${new Date(user.dob).toDateString()}`}</td>\r\n                          </tr>\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                </Tab.Pane>\r\n                <Tab.Pane eventKey=\"socialInfo\">\r\n                  <div className=\"card card-stretch\">\r\n                    <div className=\"card-header\">\r\n                      <div className=\"card-title align-items-start flex-column\">\r\n                        <h4 className=\"card-label font-weight-bolder text-dark\">\r\n                          Social Information\r\n                        </h4>\r\n                        <span className=\"text-muted font-weight-bold font-size-sm mt-1\">\r\n                          Update your personal information.\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <table className=\"table table-borderless\">\r\n                        <tbody>\r\n                          <tr>\r\n                            <th>Website</th>\r\n                            <td>\r\n                              {user.social.website\r\n                                ? user.social.website\r\n                                : \"Not available\"}\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <th>Instagram</th>\r\n                            <td>\r\n                              {user.social.instagram\r\n                                ? user.social.instagram\r\n                                : \"Not available\"}\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <th>Facebook</th>\r\n                            <td>\r\n                              {user.social.facebook\r\n                                ? user.social.facebook\r\n                                : \"Not available\"}\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <th>Linkedin</th>\r\n                            <td>\r\n                              {user.social.linkedin\r\n                                ? user.social.linkedin\r\n                                : \"Not available\"}\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <th>Twitter</th>\r\n                            <td>\r\n                              {user.social.twitter\r\n                                ? user.social.twitter\r\n                                : \"Not available\"}\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <th>Youtube</th>\r\n                            <td>\r\n                              {user.social.youtube\r\n                                ? user.social.youtube\r\n                                : \"Not available\"}\r\n                            </td>\r\n                          </tr>\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                </Tab.Pane>\r\n                <Tab.Pane eventKey=\"projInfo\">\r\n                  <div className=\"card card-stretch\">\r\n                    <div className=\"card-header\">\r\n                      <div className=\"card-title align-items-start flex-column\">\r\n                        <h4 className=\"card-label font-weight-bolder text-dark\">\r\n                          Project Stats\r\n                        </h4>\r\n                        <span className=\"text-muted font-weight-bold font-size-sm mt-1\">\r\n                          Statistics of your projects\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <table className=\"table table-borderless\">\r\n                        <DonutChart\r\n                          data={[\r\n                            {\r\n                              label: \"Ongoing Projects\",\r\n                              value: ongoing,\r\n                            },\r\n                            {\r\n                              label: \"Overdue Projects\",\r\n                              value: 1,\r\n                            },\r\n                            {\r\n                              label: \"Completed Projects\",\r\n                              value: completed,\r\n                            },\r\n                          ]}\r\n                          innerRadius=\"0.6\"\r\n                        />\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                </Tab.Pane>\r\n                <Tab.Pane eventKey=\"posts\">\r\n                  <div>\r\n                    {posts.map((post) => (\r\n                      <Post\r\n                        headerText={post.title}\r\n                        footerText={\"by \" + post.postedBy.name}\r\n                        cardText={post.photo}\r\n                        imageUrl={post.photo}\r\n                        comments={post.comments}\r\n                        liked_by={post.liked_by}\r\n                        tags={post.tags}\r\n                        _id={post._id}\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                </Tab.Pane>\r\n              </Tab.Content>\r\n            </Col>\r\n          </Row>\r\n        </Tab.Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  following: state.user.following,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  updateFollowing: (params) => dispatch(updateFollowing(params)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\r\n","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\NavBar.js",[],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\JoinProject.js",[],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Tagify\\SkillsInput.js",[],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\AssignedTo.js",[],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\RatingComponent.js",["220","221"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\layout\\Pert.js",["222","223","224","225","226","227"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Users.js",[],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\UserRecommendation.js",[],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\layout\\LayoutComponent.js",["228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Social.js",[],{"ruleId":"259","replacedBy":"260"},{"ruleId":"261","replacedBy":"262"},{"ruleId":"263","severity":1,"message":"264","line":39,"column":33,"nodeType":"265","messageId":"266","endLine":39,"endColumn":35},{"ruleId":"267","severity":1,"message":"268","line":52,"column":13,"nodeType":"265","endLine":62,"endColumn":4},{"ruleId":"267","severity":1,"message":"269","line":62,"column":6,"nodeType":"270","endLine":62,"endColumn":8,"suggestions":"271"},{"ruleId":"267","severity":1,"message":"272","line":109,"column":6,"nodeType":"270","endLine":109,"endColumn":8,"suggestions":"273"},{"ruleId":"267","severity":1,"message":"274","line":138,"column":6,"nodeType":"270","endLine":138,"endColumn":12,"suggestions":"275"},{"ruleId":"276","severity":1,"message":"277","line":298,"column":29,"nodeType":"278","endLine":301,"endColumn":31},{"ruleId":"279","severity":1,"message":"280","line":2,"column":27,"nodeType":"281","messageId":"282","endLine":2,"endColumn":43},{"ruleId":"259","replacedBy":"283"},{"ruleId":"261","replacedBy":"284"},{"ruleId":"279","severity":1,"message":"285","line":9,"column":9,"nodeType":"281","messageId":"282","endLine":9,"endColumn":19},{"ruleId":"279","severity":1,"message":"286","line":10,"column":10,"nodeType":"281","messageId":"282","endLine":10,"endColumn":14},{"ruleId":"267","severity":1,"message":"287","line":44,"column":6,"nodeType":"270","endLine":44,"endColumn":8,"suggestions":"288"},{"ruleId":"267","severity":1,"message":"289","line":64,"column":6,"nodeType":"270","endLine":64,"endColumn":12,"suggestions":"290"},{"ruleId":"267","severity":1,"message":"291","line":186,"column":6,"nodeType":"270","endLine":186,"endColumn":12,"suggestions":"292"},{"ruleId":"279","severity":1,"message":"293","line":5,"column":8,"nodeType":"281","messageId":"282","endLine":5,"endColumn":19},{"ruleId":"294","severity":1,"message":"295","line":93,"column":65,"nodeType":"296","messageId":"297","endLine":93,"endColumn":67},{"ruleId":"279","severity":1,"message":"298","line":1,"column":17,"nodeType":"281","messageId":"282","endLine":1,"endColumn":26},{"ruleId":"263","severity":1,"message":"264","line":27,"column":37,"nodeType":"265","messageId":"266","endLine":27,"endColumn":39},{"ruleId":"263","severity":1,"message":"264","line":29,"column":25,"nodeType":"265","messageId":"266","endLine":29,"endColumn":27},{"ruleId":"279","severity":1,"message":"280","line":3,"column":10,"nodeType":"281","messageId":"282","endLine":3,"endColumn":26},{"ruleId":"279","severity":1,"message":"299","line":6,"column":3,"nodeType":"281","messageId":"282","endLine":6,"endColumn":14},{"ruleId":"279","severity":1,"message":"300","line":7,"column":3,"nodeType":"281","messageId":"282","endLine":7,"endColumn":21},{"ruleId":"279","severity":1,"message":"301","line":8,"column":3,"nodeType":"281","messageId":"282","endLine":8,"endColumn":29},{"ruleId":"279","severity":1,"message":"302","line":10,"column":13,"nodeType":"281","messageId":"282","endLine":10,"endColumn":14},{"ruleId":"279","severity":1,"message":"303","line":13,"column":10,"nodeType":"281","messageId":"282","endLine":13,"endColumn":20},{"ruleId":"279","severity":1,"message":"304","line":15,"column":10,"nodeType":"281","messageId":"282","endLine":15,"endColumn":15},{"ruleId":"279","severity":1,"message":"305","line":15,"column":17,"nodeType":"281","messageId":"282","endLine":15,"endColumn":23},{"ruleId":"279","severity":1,"message":"306","line":17,"column":8,"nodeType":"281","messageId":"282","endLine":17,"endColumn":17},{"ruleId":"263","severity":1,"message":"307","line":42,"column":46,"nodeType":"265","messageId":"308","endLine":42,"endColumn":48},{"ruleId":"279","severity":1,"message":"309","line":52,"column":13,"nodeType":"281","messageId":"282","endLine":52,"endColumn":26},{"ruleId":"279","severity":1,"message":"310","line":6,"column":3,"nodeType":"281","messageId":"282","endLine":6,"endColumn":12},{"ruleId":"279","severity":1,"message":"305","line":7,"column":3,"nodeType":"281","messageId":"282","endLine":7,"endColumn":9},{"ruleId":"279","severity":1,"message":"311","line":8,"column":3,"nodeType":"281","messageId":"282","endLine":8,"endColumn":7},{"ruleId":"279","severity":1,"message":"312","line":23,"column":10,"nodeType":"281","messageId":"282","endLine":23,"endColumn":24},{"ruleId":"279","severity":1,"message":"313","line":23,"column":26,"nodeType":"281","messageId":"282","endLine":23,"endColumn":31},{"ruleId":"314","severity":1,"message":"315","line":2,"column":46,"nodeType":"296","messageId":"316","endLine":2,"endColumn":47},{"ruleId":"314","severity":1,"message":"315","line":17,"column":46,"nodeType":"296","messageId":"316","endLine":17,"endColumn":47},{"ruleId":"314","severity":1,"message":"315","line":33,"column":46,"nodeType":"296","messageId":"316","endLine":33,"endColumn":47},{"ruleId":"314","severity":1,"message":"315","line":154,"column":51,"nodeType":"296","messageId":"316","endLine":154,"endColumn":52},{"ruleId":"314","severity":1,"message":"315","line":170,"column":51,"nodeType":"296","messageId":"316","endLine":170,"endColumn":52},{"ruleId":"314","severity":1,"message":"315","line":186,"column":49,"nodeType":"296","messageId":"316","endLine":186,"endColumn":50},{"ruleId":"279","severity":1,"message":"317","line":2,"column":10,"nodeType":"281","messageId":"282","endLine":2,"endColumn":18},{"ruleId":"279","severity":1,"message":"318","line":4,"column":5,"nodeType":"281","messageId":"282","endLine":4,"endColumn":15},{"ruleId":"279","severity":1,"message":"319","line":5,"column":5,"nodeType":"281","messageId":"282","endLine":5,"endColumn":21},{"ruleId":"279","severity":1,"message":"298","line":1,"column":17,"nodeType":"281","messageId":"282","endLine":1,"endColumn":26},{"ruleId":"263","severity":1,"message":"264","line":18,"column":37,"nodeType":"265","messageId":"266","endLine":18,"endColumn":39},{"ruleId":"263","severity":1,"message":"307","line":8,"column":42,"nodeType":"265","messageId":"308","endLine":8,"endColumn":44},{"ruleId":"279","severity":1,"message":"320","line":20,"column":11,"nodeType":"281","messageId":"282","endLine":20,"endColumn":14},{"ruleId":"279","severity":1,"message":"321","line":11,"column":7,"nodeType":"281","messageId":"282","endLine":11,"endColumn":22},{"ruleId":"279","severity":1,"message":"322","line":18,"column":7,"nodeType":"281","messageId":"282","endLine":18,"endColumn":12},{"ruleId":"279","severity":1,"message":"323","line":30,"column":7,"nodeType":"281","messageId":"282","endLine":30,"endColumn":17},{"ruleId":"279","severity":1,"message":"324","line":36,"column":7,"nodeType":"281","messageId":"282","endLine":36,"endColumn":10},{"ruleId":"279","severity":1,"message":"325","line":70,"column":62,"nodeType":"281","messageId":"282","endLine":70,"endColumn":66},{"ruleId":"279","severity":1,"message":"326","line":3,"column":7,"nodeType":"281","messageId":"282","endLine":3,"endColumn":13},{"ruleId":"279","severity":1,"message":"311","line":18,"column":3,"nodeType":"281","messageId":"282","endLine":18,"endColumn":7},{"ruleId":"279","severity":1,"message":"327","line":19,"column":3,"nodeType":"281","messageId":"282","endLine":19,"endColumn":12},{"ruleId":"279","severity":1,"message":"328","line":20,"column":3,"nodeType":"281","messageId":"282","endLine":20,"endColumn":16},{"ruleId":"279","severity":1,"message":"329","line":87,"column":9,"nodeType":"281","messageId":"282","endLine":87,"endColumn":16},{"ruleId":"279","severity":1,"message":"330","line":88,"column":13,"nodeType":"281","messageId":"282","endLine":88,"endColumn":22},{"ruleId":"263","severity":1,"message":"264","line":91,"column":30,"nodeType":"265","messageId":"266","endLine":91,"endColumn":32},{"ruleId":"279","severity":1,"message":"305","line":2,"column":10,"nodeType":"281","messageId":"282","endLine":2,"endColumn":16},{"ruleId":"263","severity":1,"message":"264","line":15,"column":23,"nodeType":"265","messageId":"266","endLine":15,"endColumn":25},{"ruleId":"263","severity":1,"message":"307","line":77,"column":34,"nodeType":"265","messageId":"308","endLine":77,"endColumn":36},{"ruleId":"263","severity":1,"message":"307","line":93,"column":36,"nodeType":"265","messageId":"308","endLine":93,"endColumn":38},{"ruleId":"263","severity":1,"message":"264","line":122,"column":13,"nodeType":"331","messageId":"332","endLine":122,"endColumn":20},{"ruleId":"263","severity":1,"message":"307","line":125,"column":36,"nodeType":"265","messageId":"308","endLine":125,"endColumn":38},{"ruleId":"263","severity":1,"message":"307","line":139,"column":36,"nodeType":"265","messageId":"308","endLine":139,"endColumn":38},{"ruleId":"263","severity":1,"message":"307","line":153,"column":36,"nodeType":"265","messageId":"308","endLine":153,"endColumn":38},{"ruleId":"279","severity":1,"message":"304","line":3,"column":10,"nodeType":"281","messageId":"282","endLine":3,"endColumn":15},{"ruleId":"279","severity":1,"message":"333","line":5,"column":8,"nodeType":"281","messageId":"282","endLine":5,"endColumn":12},{"ruleId":"279","severity":1,"message":"334","line":6,"column":8,"nodeType":"281","messageId":"282","endLine":6,"endColumn":12},{"ruleId":"279","severity":1,"message":"335","line":8,"column":3,"nodeType":"281","messageId":"282","endLine":8,"endColumn":10},{"ruleId":"279","severity":1,"message":"336","line":12,"column":3,"nodeType":"281","messageId":"282","endLine":12,"endColumn":17},{"ruleId":"279","severity":1,"message":"337","line":15,"column":3,"nodeType":"281","messageId":"282","endLine":15,"endColumn":10},{"ruleId":"279","severity":1,"message":"305","line":24,"column":10,"nodeType":"281","messageId":"282","endLine":24,"endColumn":16},{"ruleId":"263","severity":1,"message":"307","line":70,"column":22,"nodeType":"265","messageId":"308","endLine":70,"endColumn":24},{"ruleId":"263","severity":1,"message":"264","line":77,"column":11,"nodeType":"331","messageId":"332","endLine":77,"endColumn":18},{"ruleId":"263","severity":1,"message":"264","line":124,"column":37,"nodeType":"265","messageId":"266","endLine":124,"endColumn":39},{"ruleId":"263","severity":1,"message":"264","line":178,"column":45,"nodeType":"265","messageId":"266","endLine":178,"endColumn":47},{"ruleId":"263","severity":1,"message":"264","line":189,"column":22,"nodeType":"265","messageId":"266","endLine":189,"endColumn":24},{"ruleId":"263","severity":1,"message":"307","line":207,"column":25,"nodeType":"265","messageId":"308","endLine":207,"endColumn":27},{"ruleId":"263","severity":1,"message":"264","line":212,"column":9,"nodeType":"331","messageId":"332","endLine":212,"endColumn":16},{"ruleId":"263","severity":1,"message":"264","line":213,"column":47,"nodeType":"265","messageId":"266","endLine":213,"endColumn":49},{"ruleId":"263","severity":1,"message":"307","line":248,"column":48,"nodeType":"265","messageId":"308","endLine":248,"endColumn":50},{"ruleId":"263","severity":1,"message":"264","line":310,"column":24,"nodeType":"265","messageId":"266","endLine":310,"endColumn":26},{"ruleId":"263","severity":1,"message":"264","line":313,"column":27,"nodeType":"265","messageId":"266","endLine":313,"endColumn":29},{"ruleId":"338","severity":1,"message":"339","line":315,"column":31,"nodeType":"340","messageId":"341","endLine":315,"endColumn":47},{"ruleId":"279","severity":1,"message":"342","line":340,"column":15,"nodeType":"281","messageId":"282","endLine":340,"endColumn":18},{"ruleId":"279","severity":1,"message":"342","line":361,"column":15,"nodeType":"281","messageId":"282","endLine":361,"endColumn":18},{"ruleId":"263","severity":1,"message":"264","line":389,"column":31,"nodeType":"265","messageId":"266","endLine":389,"endColumn":33},{"ruleId":"263","severity":1,"message":"264","line":436,"column":24,"nodeType":"265","messageId":"266","endLine":436,"endColumn":26},{"ruleId":"263","severity":1,"message":"264","line":440,"column":27,"nodeType":"265","messageId":"266","endLine":440,"endColumn":29},{"ruleId":"338","severity":1,"message":"339","line":442,"column":31,"nodeType":"340","messageId":"341","endLine":442,"endColumn":47},{"ruleId":"279","severity":1,"message":"342","line":467,"column":15,"nodeType":"281","messageId":"282","endLine":467,"endColumn":18},{"ruleId":"279","severity":1,"message":"342","line":488,"column":15,"nodeType":"281","messageId":"282","endLine":488,"endColumn":18},{"ruleId":"263","severity":1,"message":"264","line":515,"column":35,"nodeType":"265","messageId":"266","endLine":515,"endColumn":37},{"ruleId":"279","severity":1,"message":"343","line":555,"column":33,"nodeType":"281","messageId":"282","endLine":555,"endColumn":38},{"ruleId":"263","severity":1,"message":"264","line":559,"column":22,"nodeType":"265","messageId":"266","endLine":559,"endColumn":24},{"ruleId":"263","severity":1,"message":"264","line":562,"column":34,"nodeType":"265","messageId":"266","endLine":562,"endColumn":36},"no-native-reassign",["344"],"no-negated-in-lhs",["345"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["346"],"React Hook useEffect has missing dependencies: 'chat' and 'user._id'. Either include them or remove the dependency array.",["347"],"React Hook useEffect has a missing dependency: 'user._id'. Either include it or remove the dependency array.",["348"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'getNotifications' is defined but never used.","Identifier","unusedVar",["344"],["345"],"'roleSkills' is assigned a value but never used.","'read' is defined but never used.","React Hook useEffect has missing dependencies: 'chat.length' and 'project_id'. Either include them or remove the dependency array.",["349"],"React Hook useEffect has a missing dependency: 'project_id'. Either include it or remove the dependency array.",["350"],"React Hook useLayoutEffect has a missing dependency: 'stayScrolled'. Either include it or remove the dependency array.",["351"],"'JoinProject' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'getNotified' is defined but never used.","'clearNotifications' is defined but never used.","'setSegregatedNotifications' is defined but never used.","'_' is defined but never used.","'getProject' is defined but never used.","'Modal' is defined but never used.","'Button' is defined but never used.","'PostVideo' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'notifications' is assigned a value but never used.","'Accordion' is defined but never used.","'Card' is defined but never used.","'ToastContainer' is defined but never used.","'toast' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'getTasks' is defined but never used.","'lastNodeId' is assigned a value but never used.","'lastConnectionId' is assigned a value but never used.","'url' is assigned a value but never used.","'thumbsContainer' is assigned a value but never used.","'thumb' is assigned a value but never used.","'thumbInner' is assigned a value but never used.","'img' is assigned a value but never used.","'tags' is assigned a value but never used.","'userId' is assigned a value but never used.","'ListGroup' is defined but never used.","'ListGroupItem' is defined but never used.","'overdue' is assigned a value but never used.","'following' is assigned a value but never used.","ReturnStatement","expectedReturnValue","'Pert' is defined but never used.","'Task' is defined but never used.","'addEdge' is defined but never used.","'removeElements' is defined but never used.","'addTask' is defined but never used.","no-self-assign","'task.description' is assigned to itself.","MemberExpression","selfAssignment","'ele' is assigned a value but never used.","'tasks' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},{"desc":"354","fix":"356"},{"desc":"357","fix":"358"},{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},"Update the dependencies array to be: [dispatch]",{"range":"363","text":"364"},"Update the dependencies array to be: [chat, user._id]",{"range":"365","text":"366"},{"range":"367","text":"366"},"Update the dependencies array to be: [chat.length, project_id]",{"range":"368","text":"369"},"Update the dependencies array to be: [chat, project_id]",{"range":"370","text":"371"},"Update the dependencies array to be: [chat, stayScrolled]",{"range":"372","text":"373"},[2100,2102],"[dispatch]",[3310,3312],"[chat, user._id]",[4108,4114],[1365,1367],"[chat.length, project_id]",[1946,1952],"[chat, project_id]",[6018,6024],"[chat, stayScrolled]"]