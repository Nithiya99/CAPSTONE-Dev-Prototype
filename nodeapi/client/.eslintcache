[{"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\apiUser.js":"1","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Recommendation.js":"2","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\ProjectDashboard.js":"3","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Tagify\\SkillsInput.js":"4","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\TextPost.js":"5","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\DeletePost.js":"6","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\layout\\LayoutComponent.js":"7","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\taskComponents\\EditModel.js":"8","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Personal.js":"9","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\Post.js":"10","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\SearchBar.js":"11","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Home.js":"12","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\VideoPost.js":"13","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\TextPostView.js":"14","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\YoutubePost.js":"15","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\showPost.js":"16","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\reportWebVitals.js":"17","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Notifications.js":"18","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Users.js":"19","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\ModalButton.js":"20","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\RatingComponent.js":"21","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\DragDropImages.js":"22","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Profile.js":"23","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\user.js":"24","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Following.js":"25","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Followers.js":"26","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\NavBar.js":"27","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\UserRecommendation.js":"28","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\User_Role.js":"29","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\taskComponents\\TrelloTask.js":"30","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\newProjectForm\\CreateProject.js":"31","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\RoleReq.js":"32","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\Requests.js":"33","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Menu.js":"34","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\RecommendedRolePeople.js":"35","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\cpm.js":"36","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Social.js":"37","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\layout\\Task.js":"38","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\DragDropVideo.js":"39"},{"size":8836,"mtime":1622307696881,"results":"40","hashOfConfig":"41"},{"size":7409,"mtime":1622157550466,"results":"42","hashOfConfig":"41"},{"size":25562,"mtime":1622054352460,"results":"43","hashOfConfig":"41"},{"size":499,"mtime":1618198716000,"results":"44","hashOfConfig":"41"},{"size":4031,"mtime":1621613775477,"results":"45","hashOfConfig":"41"},{"size":1276,"mtime":1621951154959,"results":"46","hashOfConfig":"41"},{"size":23477,"mtime":1622028590440,"results":"47","hashOfConfig":"41"},{"size":4003,"mtime":1618827213209,"results":"48","hashOfConfig":"41"},{"size":2382,"mtime":1621611019775,"results":"49","hashOfConfig":"41"},{"size":15278,"mtime":1622319793866,"results":"50","hashOfConfig":"41"},{"size":4095,"mtime":1622310536148,"results":"51","hashOfConfig":"41"},{"size":11670,"mtime":1622310569183,"results":"52","hashOfConfig":"41"},{"size":13915,"mtime":1622319786286,"results":"53","hashOfConfig":"41"},{"size":13460,"mtime":1622319773036,"results":"54","hashOfConfig":"41"},{"size":14618,"mtime":1622319808658,"results":"55","hashOfConfig":"41"},{"size":14885,"mtime":1622316709907,"results":"56","hashOfConfig":"41"},{"size":362,"mtime":1618198716000,"results":"57","hashOfConfig":"41"},{"size":23929,"mtime":1622054472577,"results":"58","hashOfConfig":"41"},{"size":9944,"mtime":1622366882319,"results":"59","hashOfConfig":"41"},{"size":992,"mtime":1621611019674,"results":"60","hashOfConfig":"41"},{"size":1643,"mtime":1618321235394,"results":"61","hashOfConfig":"41"},{"size":6944,"mtime":1621908530835,"results":"62","hashOfConfig":"41"},{"size":22044,"mtime":1622320829283,"results":"63","hashOfConfig":"41"},{"size":1348,"mtime":1622320691444,"results":"64","hashOfConfig":"41"},{"size":3208,"mtime":1622365940780,"results":"65","hashOfConfig":"41"},{"size":3514,"mtime":1622367636240,"results":"66","hashOfConfig":"41"},{"size":346,"mtime":1618198716000,"results":"67","hashOfConfig":"41"},{"size":5168,"mtime":1622044968752,"results":"68","hashOfConfig":"41"},{"size":4388,"mtime":1622047193026,"results":"69","hashOfConfig":"41"},{"size":12116,"mtime":1622028508231,"results":"70","hashOfConfig":"41"},{"size":7623,"mtime":1622361596125,"results":"71","hashOfConfig":"41"},{"size":872,"mtime":1622361978462,"results":"72","hashOfConfig":"41"},{"size":3344,"mtime":1622362145951,"results":"73","hashOfConfig":"41"},{"size":15665,"mtime":1622127885991,"results":"74","hashOfConfig":"41"},{"size":853,"mtime":1622046786021,"results":"75","hashOfConfig":"41"},{"size":2159,"mtime":1619281971708,"results":"76","hashOfConfig":"41"},{"size":4033,"mtime":1621611019914,"results":"77","hashOfConfig":"41"},{"size":684,"mtime":1618198716000,"results":"78","hashOfConfig":"41"},{"size":4346,"mtime":1621831134361,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"83"},"13vq143",{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"83"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"83"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"83"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"83"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\apiUser.js",["172","173","174","175","176","177"],"import axios from \"axios\";\r\nexport const read = (userId, token) => {\r\n  return fetch(\"http://localhost:8081/user/\" + `${userId}`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const update = (userId, token, user) => {\r\n  return fetch(\"http://localhost:8081/user/\" + `${userId}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(user),\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const remove = (userId, token) => {\r\n  return fetch(\"http://localhost:8081/user/\" + `${userId}`, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const list = () => {\r\n  return fetch(\"http://localhost:8081/users\", {\r\n    method: \"GET\",\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const getCurrentUser = () => {\r\n  return JSON.parse(localStorage.getItem(\"jwt\")).user;\r\n};\r\n\r\nexport const getUserById = (id) => {\r\n  return fetch(`http://localhost:8081/userInfo/${id}`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const getWords = () => {\r\n  return fetch(\"http://localhost:8081/words\", {\r\n    method: \"GET\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const setRating = (userId, rating) => {\r\n  let obj = {\r\n    rating,\r\n  };\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  return fetch(`http://localhost:8081/user/rating/${userId}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(obj),\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const followUser = (e, userId) => {\r\n  e.preventDefault();\r\n  let currentUserId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  return fetch(`http://localhost:8081/follow/${currentUserId}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + token,\r\n    },\r\n    body: JSON.stringify({\r\n      followId: userId,\r\n    }),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      return data;\r\n    });\r\n};\r\n\r\nexport const unfollowUser = (e, userId) => {\r\n  e.preventDefault();\r\n  console.log(userId);\r\n  let currentUserId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  return fetch(`http://localhost:8081/unfollow/${currentUserId}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + token,\r\n    },\r\n    body: JSON.stringify({\r\n      followId: userId,\r\n    }),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      return data;\r\n    });\r\n};\r\n\r\nexport const getfollowers = (userId) => {\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  return fetch(\"http://localhost:8081/followers/\" + `${userId}`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const blockFollower = (e, userId) => {\r\n  e.preventDefault();\r\n  console.log(userId);\r\n  let currentUserId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  return fetch(`http://localhost:8081/blockfollower/`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + token,\r\n    },\r\n    body: JSON.stringify({\r\n      currentUser: currentUserId,\r\n      follower: userId,\r\n    }),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      return data;\r\n    });\r\n};\r\n\r\nexport const getfollowing = (userId) => {\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  return fetch(\"http://localhost:8081/following/\" + `${userId}`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const getfriends = (userId) => {\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  return fetch(\"http://localhost:8081/friends/\" + `${userId}`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const updatePersonalChat = (chat) => {\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let Obj = {\r\n    chat: chat,\r\n  };\r\n  return fetch(\"http://localhost:8081/updatechat\", {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(Obj),\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const clearChat = (current_user_id, client_user_id) => {\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  return fetch(\"http://localhost:8081/clearchat/\", {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify({\r\n      current_user_id: current_user_id,\r\n      client_user_id: client_user_id,\r\n    }),\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const blockUser = (current_user_id, client_user_id) => {\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  return fetch(\"http://localhost:8081/blockuser/\", {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify({\r\n      current_user_id: current_user_id,\r\n      client_user_id: client_user_id,\r\n    }),\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const unblockUser = (current_user_id, client_user_id) => {\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  return fetch(\"http://localhost:8081/unblockuser/\", {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify({\r\n      current_user_id: current_user_id,\r\n      client_user_id: client_user_id,\r\n    }),\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const processResumes = async (file) => {\r\n  // console.log(\"files:\", files);\r\n  // files.map(async (file) => {\r\n  const data = new FormData();\r\n  data.append(\"myFile\", file);\r\n  let settings = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  let response = await axios.put(\r\n    `http://localhost:3000/processResumes`,\r\n    data,\r\n    settings\r\n  );\r\n  let result = response.data.pdfData;\r\n  if (result !== undefined) return result;\r\n  // });\r\n};\r\n\r\nexport const getProfilePic = (userId) => {\r\n  return fetch(`http://localhost:3000/user/profilePic/${userId}`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n    },\r\n  })\r\n    .then((data) => data.json())\r\n    .then((url) => {\r\n      return url;\r\n    });\r\n};\r\n",["178","179"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Recommendation.js",["180","181"],"import React, { Component } from \"react\";\r\nimport { Tab, Nav } from \"react-bootstrap\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport LiveClock from \"react-live-clock\";\r\nimport dayjs from \"dayjs\";\r\nimport { Badge } from \"react-bootstrap\";\r\nimport StorageRoundedIcon from \"@material-ui/icons/StorageRounded\";\r\nimport AssignmentIndRoundedIcon from \"@material-ui/icons/AssignmentIndRounded\";\r\nimport PeopleOutlineIcon from \"@material-ui/icons/PeopleOutline\";\r\nimport LibraryBooksIcon from \"@material-ui/icons/LibraryBooks\";\r\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\r\nimport { DropzoneArea } from \"material-ui-dropzone\";\r\nimport { PdfDropZone } from \"./PdfDropZone\";\r\nclass Recommendation extends Component {\r\n  state = {\r\n    key: \"Database\",\r\n  };\r\n  componentDidMount() {}\r\n  render() {\r\n    return (\r\n      //   <Tabs\r\n      //     id=\"controlled-tab-example\"\r\n      //     activeKey={this.state.key}\r\n      //     onSelect={(k) => this.setState({ key: k })}\r\n      //   >\r\n      //     <Tab eventKey=\"Database\" title=\"Database\">\r\n      //       <h1>Database</h1>\r\n      //     </Tab>\r\n      //     <Tab eventKey=\"Resume\" title=\"Resume\">\r\n      //       <h1>Resume</h1>\r\n      //     </Tab>\r\n      //   </Tabs>\r\n\r\n      <>\r\n        <div\r\n          className=\"subheader py-2 py-lg-6  subheader-transparent \"\r\n          id=\"kt_subheader\"\r\n        >\r\n          <ToastContainer />\r\n          <div className=\" container  d-flex align-items-center justify-content-between flex-wrap flex-sm-nowrap\">\r\n            <div className=\"d-flex align-items-center flex-wrap mr-2\">\r\n              <h5 className=\"text-dark font-weight-bold mt-2 mb-2 mr-5\">\r\n                Recommendation\r\n              </h5>\r\n              <div className=\"subheader-separator subheader-separator-ver mt-2 mb-2 mr-4 bg-gray-200\"></div>\r\n            </div>\r\n            <div class=\"d-flex align-items-center flex-wrap\">\r\n              <Badge variant=\"primary\">\r\n                <div className=\"d-flex align-items-center flex-wrap mr-2\">\r\n                  <h6>{dayjs().format(\"DD MMMM, dddd\")}</h6>\r\n                  <div className=\"subheader-separator subheader-separator-ver mt-2 mb-2 mr-4 ml-4 bg-gray-200\"></div>\r\n                  <h6>\r\n                    <LiveClock format=\"hh:mm a\" ticking />\r\n                  </h6>\r\n                </div>\r\n              </Badge>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"container\">\r\n          <div className=\"card\">\r\n            <Tab.Container id=\"Database\" defaultActiveKey=\"Database\">\r\n              <div className=\"card-header\">\r\n                <div className=\"card-title\">\r\n                  <Nav variant=\"pills\">\r\n                    <Nav.Item>\r\n                      <Nav.Link eventKey=\"Database\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"mr-3\">\r\n                            <StorageRoundedIcon />\r\n                          </div>\r\n                          <div>Database</div>\r\n                        </div>\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                      <Nav.Link eventKey=\"Resume\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"mr-3\">\r\n                            <AssignmentIndRoundedIcon />\r\n                          </div>\r\n                          <div>Resume</div>\r\n                        </div>\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                  </Nav>\r\n                </div>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <Tab.Content>\r\n                  <Tab.Pane eventKey=\"Database\">\r\n                    <div>\r\n                      <Tab.Container\r\n                        id=\"DatabaseRecommender\"\r\n                        defaultActiveKey=\"ProjectRecommender\"\r\n                      >\r\n                        <div>\r\n                          <div className=\"card-title\">\r\n                            <Nav variant=\"pills\">\r\n                              <Nav.Item>\r\n                                <Nav.Link eventKey=\"ProjectRecommender\">\r\n                                  <div className=\"d-flex align-items-center\">\r\n                                    <div className=\"mr-3\">\r\n                                      <LibraryBooksIcon />\r\n                                    </div>\r\n                                    <div>Project Recommender</div>\r\n                                  </div>\r\n                                </Nav.Link>\r\n                              </Nav.Item>\r\n                              <Nav.Item>\r\n                                <Nav.Link eventKey=\"UserRecommender\">\r\n                                  <div className=\"d-flex align-items-center\">\r\n                                    <div className=\"mr-3\">\r\n                                      <PeopleOutlineIcon />\r\n                                    </div>\r\n                                    <div>User Recommender</div>\r\n                                  </div>\r\n                                </Nav.Link>\r\n                              </Nav.Item>\r\n                              <Nav.Item>\r\n                                <Nav.Link eventKey=\"ProjectChecker\">\r\n                                  <div className=\"d-flex align-items-center\">\r\n                                    <div className=\"mr-3\">\r\n                                      <FileCopyIcon />\r\n                                    </div>\r\n                                    <div>Project Checker</div>\r\n                                  </div>\r\n                                </Nav.Link>\r\n                              </Nav.Item>\r\n                            </Nav>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                          <Tab.Content>\r\n                            <Tab.Pane eventKey=\"ProjectRecommender\">\r\n                              <div className=\"row row-cols-1 \">\r\n                                Project Recommender\r\n                              </div>\r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"UserRecommender\">\r\n                              <div className=\"row row-cols-1 \">\r\n                                User Recommender\r\n                              </div>\r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"ProjectChecker\">\r\n                              <div className=\"row row-cols-1 \">\r\n                                Project Checker\r\n                              </div>\r\n                            </Tab.Pane>\r\n                          </Tab.Content>\r\n                        </div>\r\n                      </Tab.Container>\r\n                    </div>\r\n                  </Tab.Pane>\r\n                  <Tab.Pane eventKey=\"Resume\">\r\n                    <div className=\"text-center\">\r\n                      <div>Drop in the resumes here</div>\r\n                      <PdfDropZone />\r\n                    </div>\r\n                  </Tab.Pane>\r\n                </Tab.Content>\r\n              </div>\r\n            </Tab.Container>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Recommendation;\r\n","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\ProjectDashboard.js",["182","183","184","185"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Tagify\\SkillsInput.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\TextPost.js",["186","187","188"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\DeletePost.js",["189","190","191","192"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\layout\\LayoutComponent.js",["193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\taskComponents\\EditModel.js",["225"],"import { Modal, Button } from \"react-bootstrap\";\nimport React, { Component } from \"react\";\nimport { updateTask } from \"./../apiProject\";\nimport AssignPerson from \"./../../utils/signupbutton/Tagify/AssignPerson\";\nimport { getUserById } from \"./../../user/apiUser\";\nclass EditModel extends Component {\n  state = {\n    title: \"\",\n    description: \"\",\n    laneId: \"\",\n    pessimisticTime: 0,\n    optimisticTime: 0,\n    mostLikelyTime: 0,\n    task_responsible: [],\n    task_responsible_string: \"\",\n    assigned: [],\n  };\n  componentDidMount() {\n    this.setState({\n      title: this.props.task.taskName,\n      description: this.props.task.taskDescription,\n      pessimisticTime: this.props.task.pessimisticTime,\n      optimisticTime: this.props.task.optimisticTime,\n      mostLikelyTime: this.props.task.mostLikelyTime,\n      id: this.props.task._id,\n      laneId: this.props.task.status,\n      assigned: this.props.task.assignedTo,\n    });\n    const assignedToMembs = this.props.task.assignedTo;\n    let string = \"\";\n    assignedToMembs.map((memb) => {\n      getUserById(memb).then((user) => {\n        let { task_responsible } = this.state;\n        task_responsible.push(user.user.name);\n        string += user.user.name + \",\";\n        this.setState({\n          task_responsible: task_responsible,\n          task_responsible_string: string,\n        });\n      });\n    });\n  }\n  assignTo = (members) => {\n    this.setState({ task_responsible: members });\n  };\n  assignIds = (ids) => {\n    this.setState({ assigned: ids });\n  };\n  render() {\n    let task = this.props.task;\n    if (task === {}) return;\n    let show = this.props.show;\n    console.log(this.props.task);\n\n    // if (tasks === undefined) return;\n    // tasks.map((task) => {\n    //   if (this.props.id.toString() === task._id) console.log(task);\n    // });\n    // console.log(this.props.id);\n    return (\n      <Modal show={show} onHide={() => this.props.hideMe()}>\n        <Modal.Header closeButton>\n          <Modal.Title>Edit Task</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <label>Name:</label>\n          <input\n            type={\"text\"}\n            defaultValue={task.taskName}\n            onChange={(e) => this.setState({ title: e.target.value })}\n          ></input>\n          <br></br>\n          <label>Description:</label>\n          <input\n            type={\"text\"}\n            defaultValue={task.taskDescription}\n            onChange={(e) => this.setState({ description: e.target.value })}\n          ></input>\n          <br></br>\n          <label>Optimistic Time:</label>\n          <input\n            type={\"number\"}\n            defaultValue={task.optimisticTime}\n            onChange={(e) => this.setState({ optimisticTime: e.target.value })}\n          ></input>\n          <br></br>\n          <label>Most Likely Time:</label>\n          <input\n            type={\"number\"}\n            defaultValue={task.mostLikelyTime}\n            onChange={(e) => this.setState({ mostLikelyTime: e.target.value })}\n          ></input>\n          <br></br>\n\n          <label>Pessimistic Time:</label>\n          <input\n            type={\"number\"}\n            defaultValue={task.pessimisticTime}\n            onChange={(e) => this.setState({ pessimisticTime: e.target.value })}\n          ></input>\n          <br></br>\n          <AssignPerson\n            projectId={this.props.projectId}\n            assignTo={this.assignTo}\n            assignIds={this.assignIds}\n            label={\"Assigned to\"}\n            value={this.state.task_responsible_string}\n          />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            onClick={() =>\n              updateTask(this.state, this.props.projectId)\n                .then((data) => console.log(data))\n                .then(() => window.location.reload())\n            }\n          >\n            Submit\n          </Button>\n          <Button onClick={() => this.props.hideMe()}>Close</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nexport default EditModel;\n",["226","227"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Personal.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\Post.js",["228","229","230","231","232","233","234","235","236"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\SearchBar.js",["237","238","239","240","241","242","243","244"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Home.js",["245","246","247","248","249","250","251","252","253","254","255","256","257","258","259"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\VideoPost.js",["260","261","262","263","264","265","266","267","268"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\TextPostView.js",["269","270","271","272","273","274","275"],"import React, { Component } from \"react\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport Heart from \"react-animated-heart\";\r\nimport { getCurrentUser, getProfilePic } from \"./../user/apiUser\";\r\nimport {\r\n  likepost,\r\n  dislikepost,\r\n  addcomment,\r\n  getpost,\r\n  reportpost,\r\n  deleteComment,\r\n} from \"./apiPosts\";\r\nimport { collect } from \"collect.js\";\r\nimport CommentIcon from \"@material-ui/icons/Comment\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport ReportTwoToneIcon from \"@material-ui/icons/ReportTwoTone\";\r\nimport SendRoundedIcon from \"@material-ui/icons/SendRounded\";\r\nimport VisibilityTwoToneIcon from \"@material-ui/icons/VisibilityTwoTone\";\r\n\r\nimport moment from \"moment\";\r\nimport {\r\n  Accordion,\r\n  Button,\r\n  Card,\r\n  Modal,\r\n  ModalBody,\r\n  Popover,\r\n  OverlayTrigger,\r\n} from \"react-bootstrap\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Sentiment from \"sentiment\";\r\nimport DeletePost from \"./DeletePost\";\r\nimport { changePosts } from \"../store/posts\";\r\nimport { connect } from \"react-redux\";\r\nimport DefaultProfile from \"../images/avatar.png\";\r\nimport DeleteTwoToneIcon from \"@material-ui/icons/DeleteTwoTone\";\r\nconst sentiment = new Sentiment();\r\nclass TextPostView extends Component {\r\n  state = {\r\n    isClick: false,\r\n    comment: \"\",\r\n    id: getCurrentUser()._id,\r\n    sentimentScore: null,\r\n    show: false,\r\n    disabled: false,\r\n    profilePictures: {},\r\n  };\r\n  checkIfUserIdExistsInObject(checkObject, userId) {\r\n    Object.keys(checkObject).map((key) => {\r\n      if (key.toString() === userId.toString()) {\r\n        return true;\r\n      }\r\n    });\r\n    return false;\r\n  }\r\n  async componentDidMount() {\r\n    let users = this.props.liked_by;\r\n    if (users !== undefined && users !== null && users !== [])\r\n      if (users.indexOf(getCurrentUser()._id) > -1)\r\n        this.setState({ isClick: true });\r\n    const { comments } = this.props;\r\n    let pictures = {};\r\n    let picture = {};\r\n    picture = await this.setProfilePicture(getCurrentUser()._id);\r\n    // console.log(picture);\r\n    Object.assign(pictures, picture);\r\n    // console.log(pictures);\r\n    this.setState({ profilePictures: pictures });\r\n    comments.map(async (comment) => {\r\n      // const { profilePictures } = this.state;\r\n      // if (this.checkIfUserIdExistsInObject(profilePictures, comment.userId)) {\r\n      //   this.setProfilePicture(comment.userId);\r\n      // }\r\n      const { profilePictures } = this.state;\r\n      if (!this.checkIfUserIdExistsInObject(profilePictures, comment.userId)) {\r\n        let picture = await this.setProfilePicture(comment.userId);\r\n        Object.assign(pictures, picture);\r\n        // console.log(pictures);\r\n        this.setState({ profilePictures: pictures });\r\n      }\r\n    });\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.comments.length !== prevProps.comments.length) {\r\n      this.props.changePosts(this.props._id);\r\n    }\r\n  }\r\n  setProfilePicture = (userId) => {\r\n    // let picture = {};\r\n    return getProfilePic(userId).then((data) => {\r\n      return { [userId]: data.profilePic };\r\n    });\r\n  };\r\n\r\n  postliked = () => {\r\n    this.setState({ isClick: !this.state.isClick });\r\n    if (this.state.isClick)\r\n      dislikepost(this.props._id)\r\n        .then((data) => console.log(data))\r\n        .then(() => this.props.changePosts(this.props._id));\r\n    else {\r\n      likepost(this.props._id)\r\n        .then((data) => console.log(data))\r\n        .then(() => this.props.changePosts(this.props._id));\r\n    }\r\n  };\r\n  handleSubmitClicked = () => {\r\n    reportpost(this.props._id);\r\n    this.setState({\r\n      show: false,\r\n      isDisabled: true,\r\n    });\r\n  };\r\n  handleClose() {\r\n    this.setState({ show: false });\r\n  }\r\n\r\n  handleShow() {\r\n    this.setState({ show: true });\r\n  }\r\n\r\n  onTextChange = (e) => {\r\n    this.setState({ comment: e.target.value });\r\n    this.findSentiment(e.target.value);\r\n  };\r\n\r\n  submitcomment = () => {\r\n    addcomment(this.props._id, this.state.comment)\r\n      .then((data) => {\r\n        console.log(data);\r\n      })\r\n      .then(() => this.props.changePosts(this.props._id));\r\n  };\r\n\r\n  findSentiment(comment) {\r\n    const result = sentiment.analyze(comment);\r\n    this.setState({\r\n      sentimentScore: result.score,\r\n    });\r\n  }\r\n  deletecomment(e, commentId) {\r\n    e.preventDefault();\r\n    deleteComment(commentId, this.props._id)\r\n      .then((data) => console.log(data))\r\n      .then(() => {\r\n        this.props.changePosts(this.props._id);\r\n        // toast.success(\"deleted comment successfully\");\r\n      });\r\n  }\r\n  rendercomments = (comments) => {\r\n    let reverseComments = [...comments].reverse();\r\n    const { profilePictures } = this.state;\r\n    return reverseComments.map(\r\n      ({ PostedOn, comment, userName, userId, _id }, index) => (\r\n        <div className=\"d-flex py-5\">\r\n          <div className=\"symbol symbol-40 symbol-light-warning mr-5\">\r\n            <span className=\"symbol-label\">\r\n              <img\r\n                src={\r\n                  profilePictures[userId] !== undefined\r\n                    ? profilePictures[userId]\r\n                    : DefaultProfile\r\n                }\r\n                className=\"h-75 align-self-end\"\r\n              />\r\n            </span>\r\n          </div>\r\n          <div className=\"d-flex flex-column flex-row-fluid\">\r\n            <div className=\"d-flex align-items-center flex-wrap\">\r\n              <Link\r\n                to=\"#\"\r\n                className=\"text-dark-75 text-hover-primary mb-1 font-size-lg font-weight-bolder pr-6\"\r\n              >\r\n                {userName}\r\n              </Link>\r\n              <span className=\"text-muted font-weight-normal flex-grow-1 font-size-sm\">\r\n                {moment(PostedOn).format(\"DD-MM-YYYY h:mm a\")}\r\n              </span>\r\n              <div className=\"ml-auto\">\r\n                {this.state.id === userId && (\r\n                  <button\r\n                    className=\"btn btn-clear\"\r\n                    onClick={(e) => this.deletecomment(e, _id)}\r\n                  >\r\n                    <DeleteTwoToneIcon />\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <span className=\"text-dark-75 font-size-sm font-weight-normal pt-1\">\r\n              {comment}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      )\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      footerText,\r\n      text,\r\n      liked_by,\r\n      _id,\r\n      tags,\r\n      comments,\r\n      delete_button,\r\n      created,\r\n      postedBy,\r\n      reportCounter,\r\n    } = this.props;\r\n    const { profilePictures } = this.state;\r\n    let counts = collect(liked_by).count();\r\n    return (\r\n      <>\r\n        <ToastContainer />\r\n        <div className=\"card card-custom gutter-b\">\r\n          <div className=\"card-body\">\r\n            <div className=\"d-flex align-items-center pb-4\">\r\n              <div className=\"symbol symbol-40 symbol-light-warning mr-5\">\r\n                <span className=\"symbol-label\">\r\n                  <img\r\n                    src={\r\n                      profilePictures[this.props.postedBy._id] !== undefined\r\n                        ? profilePictures[this.props.postedBy._id]\r\n                        : DefaultProfile\r\n                    }\r\n                    className=\"h-75 align-self-end\"\r\n                  />\r\n                </span>\r\n              </div>\r\n              <div className=\"d-flex flex-column flex-grow-1\">\r\n                <Link\r\n                  to=\"#\"\r\n                  className=\"text-dark-75 text-hover-primary mb-1 font-size-lg font-weight-bolder\"\r\n                >\r\n                  {footerText}\r\n                </Link>\r\n                <span className=\"text-muted font-weight-bold\">\r\n                  {moment(created).format(\"DD-MM-YYYY h:mm a\")}\r\n                </span>\r\n              </div>\r\n              <div className=\"ml-auto\">\r\n                <OverlayTrigger\r\n                  trigger=\"click\"\r\n                  placement=\"right\"\r\n                  overlay={\r\n                    <Popover id=\"popover-basic\">\r\n                      <Popover.Content>\r\n                        <div>\r\n                          {getCurrentUser()._id === postedBy._id ? (\r\n                            <></>\r\n                          ) : reportCounter.includes(getCurrentUser()._id) ? (\r\n                            <>\r\n                              <button className=\"btn btn-clean\" disabled={true}>\r\n                                <ReportTwoToneIcon /> Post Reported\r\n                              </button>\r\n                            </>\r\n                          ) : (\r\n                            <>\r\n                              <button\r\n                                className=\"btn btn-clean\"\r\n                                onClick={() => {\r\n                                  this.handleShow();\r\n                                  this.setState({ disabled: true });\r\n                                }}\r\n                                disabled={this.state.disabled}\r\n                              >\r\n                                <ReportTwoToneIcon /> Report\r\n                              </button>\r\n                              <Modal\r\n                                show={this.state.show}\r\n                                onHide={this.handleClose.bind(this)}\r\n                              >\r\n                                <Modal.Header>\r\n                                  <Modal.Title>\r\n                                    Are you Sure to report this post?\r\n                                  </Modal.Title>\r\n                                  <Button onClick={this.handleClose.bind(this)}>\r\n                                    x\r\n                                  </Button>\r\n                                </Modal.Header>\r\n                                <ModalBody>\r\n                                  <Button\r\n                                    disabled={this.state.isDisabled}\r\n                                    onClick={this.handleSubmitClicked}\r\n                                  >\r\n                                    Yes\r\n                                  </Button>\r\n                                </ModalBody>\r\n                              </Modal>\r\n                            </>\r\n                          )}\r\n                        </div>\r\n                        <Link\r\n                          className=\"btn btn-clean\"\r\n                          to={{\r\n                            pathname: `/post/${this.props._id}`,\r\n                          }}\r\n                        >\r\n                          <VisibilityTwoToneIcon /> View Full Post\r\n                        </Link>\r\n                        <div>\r\n                          <button\r\n                            className=\"btn btn-clean\"\r\n                            onClick={() => {\r\n                              getpost(_id).then((data) => {\r\n                                let link = `http://localhost:3000/post/${data.post._id}`;\r\n                                navigator.clipboard.writeText(link);\r\n                                toast.success(\"Link copied to clipboard\");\r\n                              });\r\n                            }}\r\n                          >\r\n                            <ShareIcon /> Share Post\r\n                          </button>\r\n                        </div>\r\n                        {delete_button === \"enabled\" ? (\r\n                          <DeletePost postId={_id} />\r\n                        ) : (\r\n                          <div></div>\r\n                        )}\r\n                      </Popover.Content>\r\n                    </Popover>\r\n                  }\r\n                >\r\n                  <button className=\"btn btn-custom\">\r\n                    <MoreVertIcon />\r\n                  </button>\r\n                </OverlayTrigger>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <p className=\"lead ml-10 mt-5 text-dark-75 font-size-lg font-weight-normal \">\r\n                {text}\r\n              </p>\r\n\r\n              <div className=\"d-flex align-items-center\">\r\n                <Heart isClick={this.state.isClick} onClick={this.postliked} />\r\n                {counts + \" likes\"}\r\n              </div>\r\n              <div className=\"d-flex align-items-center\">\r\n                <TextField\r\n                  name=\"comment\"\r\n                  onChange={(e) => this.onTextChange(e)}\r\n                  id=\"standard-basic\"\r\n                  label=\"Add a Comment\"\r\n                  fullWidth\r\n                />\r\n                <button\r\n                  onClick={this.submitcomment}\r\n                  className=\"btn btn-light-primary mr-5 ml-5 \"\r\n                  disabled={this.state.sentimentScore < -3 ? true : false}\r\n                >\r\n                  <SendRoundedIcon />\r\n                </button>\r\n              </div>\r\n              {comments.length > 0 ? (\r\n                this.rendercomments(comments)\r\n              ) : (\r\n                <p>No Comments</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  posts: state.posts.posts,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  changePosts: (params) => dispatch(changePosts(params)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TextPostView);\r\n",["276","277"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\YoutubePost.js",["278","279","280","281","282","283","284","285"],"import React, { Component } from \"react\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport Heart from \"react-animated-heart\";\r\nimport { getCurrentUser, getProfilePic } from \"./../user/apiUser\";\r\nimport DefaultProfile from \"../images/avatar.png\";\r\nimport {\r\n  likepost,\r\n  dislikepost,\r\n  addcomment,\r\n  getpost,\r\n  deleteComment,\r\n  reportpost,\r\n} from \"./apiPosts\";\r\nimport { collect } from \"collect.js\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport VisibilityTwoToneIcon from \"@material-ui/icons/VisibilityTwoTone\";\r\nimport ReportTwoToneIcon from \"@material-ui/icons/ReportTwoTone\";\r\nimport SendRoundedIcon from \"@material-ui/icons/SendRounded\";\r\nimport DeleteTwoToneIcon from \"@material-ui/icons/DeleteTwoTone\";\r\nimport moment from \"moment\";\r\nimport {\r\n  Accordion,\r\n  Button,\r\n  Card,\r\n  Modal,\r\n  ModalBody,\r\n  Popover,\r\n  OverlayTrigger,\r\n} from \"react-bootstrap\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Sentiment from \"sentiment\";\r\nimport YouTubeIcon from \"@material-ui/icons/YouTube\";\r\nimport * as youtubeMeta from \"youtube-metadata-from-url\";\r\nimport DeletePost from \"./DeletePost\";\r\nimport ReactPlayer from \"react-player/youtube\";\r\nimport { connect } from \"react-redux\";\r\nimport { changePosts } from \"../store/posts\";\r\nconst sentiment = new Sentiment();\r\nclass YoutubePost extends Component {\r\n  state = {\r\n    isClick: false,\r\n    comment: \"\",\r\n    id: getCurrentUser()._id,\r\n    sentimentScore: null,\r\n    disabled: false,\r\n    // metadata: {},\r\n    profilePictures: {},\r\n  };\r\n  checkIfUserIdExistsInObject(checkObject, userId) {\r\n    Object.keys(checkObject).map((key) => {\r\n      if (key.toString() === userId.toString()) {\r\n        return true;\r\n      }\r\n    });\r\n    return false;\r\n  }\r\n  async componentDidMount() {\r\n    let users = this.props.liked_by;\r\n    if (users !== undefined && users !== null && users !== [])\r\n      if (users.indexOf(getCurrentUser()._id) > -1)\r\n        this.setState({ isClick: true });\r\n    const { comments } = this.props;\r\n    let pictures = {};\r\n    let picture = {};\r\n    picture = await this.setProfilePicture(getCurrentUser()._id);\r\n    // console.log(picture);\r\n    Object.assign(pictures, picture);\r\n    // console.log(pictures);\r\n    this.setState({ profilePictures: pictures });\r\n    comments.map(async (comment) => {\r\n      // const { profilePictures } = this.state;\r\n      // if (this.checkIfUserIdExistsInObject(profilePictures, comment.userId)) {\r\n      //   this.setProfilePicture(comment.userId);\r\n      // }\r\n      const { profilePictures } = this.state;\r\n      if (!this.checkIfUserIdExistsInObject(profilePictures, comment.userId)) {\r\n        let picture = await this.setProfilePicture(comment.userId);\r\n        Object.assign(pictures, picture);\r\n        // console.log(pictures);\r\n        this.setState({ profilePictures: pictures });\r\n      }\r\n    });\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.comments.length !== prevProps.comments.length) {\r\n      this.props.changePosts(this.props._id);\r\n    }\r\n  }\r\n  setProfilePicture = (userId) => {\r\n    // let picture = {};\r\n    return getProfilePic(userId).then((data) => {\r\n      return { [userId]: data.profilePic };\r\n    });\r\n  };\r\n\r\n  postliked = () => {\r\n    this.setState({ isClick: !this.state.isClick });\r\n    if (this.state.isClick)\r\n      dislikepost(this.props._id)\r\n        .then((data) => console.log(data))\r\n        .then(() => this.props.changePosts(this.props._id));\r\n    else\r\n      likepost(this.props._id)\r\n        .then((data) => console.log(data))\r\n        .then(() => this.props.changePosts(this.props._id));\r\n  };\r\n\r\n  handleSubmitClicked = () => {\r\n    reportpost(this.props._id);\r\n    this.setState({\r\n      show: false,\r\n      isDisabled: true,\r\n    });\r\n  };\r\n  handleClose() {\r\n    this.setState({ show: false });\r\n  }\r\n\r\n  handleShow() {\r\n    this.setState({ show: true });\r\n  }\r\n  onTextChange = (e) => {\r\n    this.setState({ comment: e.target.value });\r\n    this.findSentiment(e.target.value);\r\n  };\r\n\r\n  submitcomment = () => {\r\n    addcomment(this.props._id, this.state.comment)\r\n      .then((data) => {\r\n        console.log(data);\r\n      })\r\n      .then(() => this.props.changePosts(this.props._id));\r\n  };\r\n\r\n  findSentiment(comment) {\r\n    const result = sentiment.analyze(comment);\r\n    this.setState({\r\n      sentimentScore: result.score,\r\n    });\r\n  }\r\n\r\n  deletecomment(e, commentId) {\r\n    e.preventDefault();\r\n    deleteComment(commentId, this.props._id)\r\n      .then((data) => console.log(data))\r\n      .then(() => {\r\n        this.props.changePosts(this.props._id);\r\n        // toast.success(\"deleted comment successfully\");\r\n      });\r\n  }\r\n\r\n  rendercomments = (comments) => {\r\n    let reverseComments = [...comments].reverse();\r\n    const { profilePictures } = this.state;\r\n    return reverseComments.map(\r\n      ({ PostedOn, comment, userName, _id, userId }, index) => (\r\n        <div className=\"d-flex py-5\">\r\n          <div className=\"symbol symbol-40 symbol-light-warning mr-5\">\r\n            <span className=\"symbol-label\">\r\n              <img\r\n                src={\r\n                  profilePictures[userId] !== undefined\r\n                    ? profilePictures[userId]\r\n                    : DefaultProfile\r\n                }\r\n                className=\"h-75 align-self-end\"\r\n              />\r\n            </span>\r\n          </div>\r\n          <div className=\"d-flex flex-column flex-row-fluid\">\r\n            <div className=\"d-flex align-items-center flex-wrap\">\r\n              <Link\r\n                to=\"#\"\r\n                className=\"text-dark-75 text-hover-primary mb-1 font-size-lg font-weight-bolder pr-6\"\r\n              >\r\n                {userName}\r\n              </Link>\r\n              <span className=\"text-muted font-weight-normal flex-grow-1 font-size-sm\">\r\n                {moment(PostedOn).format(\"DD-MM-YYYY h:mm a\")}\r\n              </span>\r\n              <div className=\"ml-auto\">\r\n                {this.state.id === userId && (\r\n                  <button\r\n                    className=\"btn btn-clear\"\r\n                    onClick={(e) => this.deletecomment(e, _id)}\r\n                  >\r\n                    <DeleteTwoToneIcon />\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <span className=\"text-dark-75 font-size-sm font-weight-normal pt-1\">\r\n              {comment}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      )\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      headerText,\r\n      footerText,\r\n      url,\r\n      liked_by,\r\n      _id,\r\n      tags,\r\n      comments,\r\n      metadataTitle,\r\n      metadataAuthor,\r\n      delete_button,\r\n      created,\r\n      postedBy,\r\n      reportCounter,\r\n    } = this.props;\r\n    // const { metadata } = this.state;\r\n    const { profilePictures } = this.state;\r\n    let counts = collect(liked_by).count();\r\n    // console.log(\"metadataTitle:\", metadataTitle);\r\n    return (\r\n      <>\r\n        <ToastContainer />\r\n        <div className=\"card card-custom gutter-b\">\r\n          <div className=\"card-body\">\r\n            <div className=\"d-flex align-items-center pb-4\">\r\n              <div className=\"symbol symbol-40 symbol-light-warning mr-5\">\r\n                <span className=\"symbol-label\">\r\n                  <img\r\n                    src={\r\n                      profilePictures[this.props.postedBy._id] !== undefined\r\n                        ? profilePictures[this.props.postedBy._id]\r\n                        : DefaultProfile\r\n                    }\r\n                    className=\"h-75 align-self-end\"\r\n                  />\r\n                </span>\r\n              </div>\r\n              <div className=\"d-flex flex-column flex-grow-1\">\r\n                <Link\r\n                  to=\"#\"\r\n                  className=\"text-dark-75 text-hover-primary mb-1 font-size-lg font-weight-bolder\"\r\n                >\r\n                  {footerText}\r\n                </Link>\r\n                <span className=\"text-muted font-weight-bold\">\r\n                  {moment(created).format(\"DD-MM-YYYY h:mm a\")}\r\n                </span>\r\n              </div>\r\n              <div className=\"ml-auto\">\r\n                <OverlayTrigger\r\n                  trigger=\"click\"\r\n                  placement=\"right\"\r\n                  overlay={\r\n                    <Popover id=\"popover-basic\">\r\n                      <Popover.Content>\r\n                        <div>\r\n                          {getCurrentUser()._id === postedBy._id ? (\r\n                            <></>\r\n                          ) : reportCounter.includes(getCurrentUser()._id) ? (\r\n                            <>\r\n                              <button className=\"btn btn-clean\" disabled={true}>\r\n                                <ReportTwoToneIcon /> Post Reported\r\n                              </button>\r\n                            </>\r\n                          ) : (\r\n                            <>\r\n                              <button\r\n                                className=\"btn btn-clean\"\r\n                                onClick={() => {\r\n                                  this.handleShow();\r\n                                  this.setState({ disabled: true });\r\n                                }}\r\n                                disabled={this.state.disabled}\r\n                              >\r\n                                <ReportTwoToneIcon /> Report\r\n                              </button>\r\n                              <Modal\r\n                                show={this.state.show}\r\n                                onHide={this.handleClose.bind(this)}\r\n                              >\r\n                                <Modal.Header>\r\n                                  <Modal.Title>\r\n                                    Are you Sure to report this post?\r\n                                  </Modal.Title>\r\n                                  <Button onClick={this.handleClose.bind(this)}>\r\n                                    x\r\n                                  </Button>\r\n                                </Modal.Header>\r\n                                <ModalBody>\r\n                                  <Button\r\n                                    disabled={this.state.isDisabled}\r\n                                    onClick={this.handleSubmitClicked}\r\n                                  >\r\n                                    Yes\r\n                                  </Button>\r\n                                </ModalBody>\r\n                              </Modal>\r\n                            </>\r\n                          )}\r\n                        </div>\r\n                        <Link\r\n                          className=\"btn btn-clean\"\r\n                          to={{\r\n                            pathname: `/post/${this.props._id}`,\r\n                          }}\r\n                        >\r\n                          <VisibilityTwoToneIcon /> View Full Post\r\n                        </Link>\r\n                        <div>\r\n                          <button\r\n                            className=\"btn btn-clean\"\r\n                            onClick={() => {\r\n                              getpost(_id).then((data) => {\r\n                                let link = `http://localhost:3000/post/${data.post._id}`;\r\n                                navigator.clipboard.writeText(link);\r\n                                toast.success(\"Link copied to clipboard\");\r\n                              });\r\n                            }}\r\n                          >\r\n                            <ShareIcon /> Share Post\r\n                          </button>\r\n                        </div>\r\n                        {delete_button === \"enabled\" ? (\r\n                          <DeletePost postId={_id} />\r\n                        ) : (\r\n                          <div></div>\r\n                        )}\r\n                      </Popover.Content>\r\n                    </Popover>\r\n                  }\r\n                >\r\n                  <button className=\"btn btn-custom\">\r\n                    <MoreVertIcon />\r\n                  </button>\r\n                </OverlayTrigger>\r\n              </div>\r\n            </div>\r\n            <p className=\"lead ml-10 mt-5 text-dark-75 font-size-lg font-weight-normal \">\r\n              {headerText}\r\n            </p>\r\n            <div className=\"mt-3\">\r\n              <p className=\"text-dark-75 font-size-lg font-weight-normal\">\r\n                <YouTubeIcon\r\n                  fontSize=\"large\"\r\n                  className=\"text-danger display-3 mr-5 ml-2\"\r\n                />\r\n                {/* <a href={text} target={\"_blank\"}>\r\n                {text.toString()} {console.log(metadata)}\r\n                </a> */}\r\n                <span>\r\n                  <strong>{metadataTitle}</strong> By {metadataAuthor}\r\n                </span>\r\n                <center>\r\n                  <ReactPlayer url={url} controls={true} width={window.width} />\r\n                </center>\r\n              </p>\r\n              <div className=\"d-flex align-items-center\">\r\n                <Heart isClick={this.state.isClick} onClick={this.postliked} />\r\n\r\n                <button type=\"button\" class=\"btn btn-light-danger\">\r\n                  <strong>\r\n                    <span class=\"badge badge-light\">{counts}</span> Likes\r\n                  </strong>\r\n                </button>\r\n              </div>\r\n              <div className=\"d-flex align-items-center\">\r\n                <TextField\r\n                  name=\"comment\"\r\n                  onChange={(e) => this.onTextChange(e)}\r\n                  id=\"standard-basic\"\r\n                  label=\"Add a Comment\"\r\n                  fullWidth\r\n                />\r\n                <button\r\n                  onClick={this.submitcomment}\r\n                  className=\"btn btn-light-primary mr-5 ml-5 \"\r\n                  disabled={this.state.sentimentScore < -3 ? true : false}\r\n                >\r\n                  <SendRoundedIcon />\r\n                </button>\r\n              </div>\r\n              {comments.length > 0 ? (\r\n                this.rendercomments(comments)\r\n              ) : (\r\n                <p>No Comments</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  posts: state.posts.posts,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  changePosts: (params) => dispatch(changePosts(params)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(YoutubePost);\r\n","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\showPost.js",["286","287","288","289","290","291","292","293","294"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\reportWebVitals.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Notifications.js",["295","296","297","298","299"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getProject } from \"../project/apiProject\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { getNotifications } from \"../apiNotifications\";\r\nimport ReqIcon from \"../images/request.png\";\r\nimport NewAddIcon from \"../images/working.png\";\r\nimport AcceptIcon from \"../images/accepted.png\";\r\nimport DeclineIcon from \"../images/remove.png\";\r\nimport LiveClock from \"react-live-clock\";\r\nimport dayjs from \"dayjs\";\r\nimport { Badge } from \"react-bootstrap\";\r\nimport * as _ from \"lodash\";\r\nimport {\r\n  getNotified,\r\n  clearNotifications,\r\n  setSegregatedNotifications,\r\n  notificationAdded,\r\n  setNotifications,\r\n} from \"../store/notifications\";\r\nimport FeedbackForm from \"./../project/FeedbackForm\";\r\nimport { getCurrentUser } from \"../user/apiUser\";\r\nimport { acceptRequest, declineRequest } from \"./../project/apiProject\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { removeAndUpdateNotifications } from \"./../store/notifications\";\r\nimport { removeNotificationId } from \"./../apiNotifications\";\r\nconst BASE_URL = process.env.REACT_APP_API_URL;\r\nclass Notifications extends Component {\r\n  state = {\r\n    selected: \"home\",\r\n  };\r\n  componentDidMount() {\r\n    this.props.clearNotifications();\r\n    getNotifications()\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((val) => {\r\n        let notifications = val.notifications;\r\n        console.log(\"Notifications:\", notifications);\r\n        notifications.map((notif) => {\r\n          this.props.getNotified({\r\n            type: notif.notifType,\r\n            id: notif._id,\r\n            message: notif.message,\r\n            read: notif.read,\r\n            projectId: notif.projectId ? notif.projectId : \"none\",\r\n          });\r\n        });\r\n\r\n        let notificationGroupedObject = _.groupBy(notifications, \"notifType\");\r\n        console.log(\"Group Object:\", notificationGroupedObject);\r\n        this.setState({ notificationGroupedObject });\r\n        this.props.setSegregatedNotifications({\r\n          segregatedNotifications: notificationGroupedObject,\r\n        });\r\n        // console.log(notifications);\r\n      });\r\n    // const { segregatedNotifications } = this.props;\r\n    // console.log(segregatedNotifications);\r\n  }\r\n  getTo(val) {\r\n    return getProject(val.projectId).then((data) => {\r\n      let obj = {\r\n        pathname: \"/myprojects/dashboard/\" + val.projectId,\r\n        state: { project: data.project },\r\n      };\r\n      // console.log(obj);\r\n      return obj;\r\n    });\r\n  }\r\n  render() {\r\n    let { notifications, segregatedNotifications } = this.props;\r\n    // if (this.props.notifications.length > 0)\r\n    // console.log(this.props.notifications);\r\n    // console.log(segregatedNotifications);\r\n    // if (notifications.length === 0) {\r\n    //   return <>No Notifsss</>;\r\n    // }\r\n    let { selected } = this.state;\r\n    console.log(segregatedNotifications);\r\n\r\n    return (\r\n      <>\r\n        <ToastContainer />\r\n        <div\r\n          className=\"subheader py-2 py-lg-6  subheader-transparent \"\r\n          id=\"kt_subheader\"\r\n        >\r\n          <div className=\" container  d-flex align-items-center justify-content-between flex-wrap flex-sm-nowrap\">\r\n            <div className=\"d-flex align-items-center flex-wrap mr-2\">\r\n              <h5 className=\"text-dark font-weight-bold mt-2 mb-2 mr-5\">\r\n                Notifications\r\n              </h5>\r\n              <div className=\"subheader-separator subheader-separator-ver mt-2 mb-2 mr-4 bg-gray-200\"></div>\r\n            </div>\r\n            <div class=\"d-flex align-items-center flex-wrap\">\r\n              <Badge variant=\"primary\">\r\n                <div className=\"d-flex align-items-center flex-wrap mr-2\">\r\n                  <h6>{dayjs().format(\"DD MMMM, dddd\")}</h6>\r\n                  <div className=\"subheader-separator subheader-separator-ver mt-2 mb-2 mr-4 ml-4 bg-gray-200\"></div>\r\n                  <h6>\r\n                    <LiveClock format=\"hh:mm a\" ticking />\r\n                  </h6>\r\n                </div>\r\n              </Badge>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {Object.keys(segregatedNotifications).map((type) => (\r\n          <div className=\"container mt-5\">\r\n            {segregatedNotifications[type].map((val) => {\r\n              // console.log(newObj);\r\n              if (val.notifType === \"RequestForRole\") {\r\n                return (\r\n                  <>\r\n                    <div\r\n                      className=\"alert alert-custom alert-notice alert-light-dark\"\r\n                      role=\"alert\"\r\n                    >\r\n                      <div className=\"alert-icon\">\r\n                        <img\r\n                          src={ReqIcon}\r\n                          alt=\"Logo\"\r\n                          style={{ height: \"40px\" }}\r\n                        />\r\n                      </div>\r\n                      <div className=\"alert-text\">\r\n                        <Link\r\n                          className=\"text-dark-75 text-hover-primary mb-1 font-size-lg font-weight-bolder\"\r\n                          to={{\r\n                            pathname: \"/myprojects\",\r\n                          }}\r\n                          // {\r\n                          //   pathname: `/myprojects/dashboard/${project._id}`,\r\n                          //   state: { project: project },\r\n                          // }\r\n                        >\r\n                          {val.message}\r\n                        </Link>\r\n                      </div>\r\n                    </div>\r\n                    {/* <Link\r\n                      to={{\r\n                        pathname: \"/myprojects\",\r\n                      }}\r\n                      // {\r\n                      //   pathname: `/myprojects/dashboard/${project._id}`,\r\n                      //   state: { project: project },\r\n                      // }\r\n                    >\r\n                      <div\r\n                        className=\"card-text ml-3 mt-1 mb-2 p-1\"\r\n                        style={{ width: \"50rem\" }}\r\n                      >\r\n                        {val.message}\r\n                      </div>\r\n                    </Link> */}\r\n                  </>\r\n                );\r\n              }\r\n              if (val.notifType === \"RoleDeclined\") {\r\n                return (\r\n                  <>\r\n                    <div\r\n                      className=\"alert alert-custom alert-notice alert-light-danger\"\r\n                      role=\"alert\"\r\n                    >\r\n                      <div className=\"alert-icon\">\r\n                        <img\r\n                          src={DeclineIcon}\r\n                          alt=\"Icon\"\r\n                          style={{ height: \"40px\" }}\r\n                        />\r\n                      </div>\r\n                      <div className=\"alert-text\">\r\n                        <Link\r\n                          className=\"text-dark-75 text-hover-primary mb-1 font-size-lg font-weight-bolder\"\r\n                          to={{\r\n                            pathname: \"/joinproject\",\r\n                          }}\r\n                          // {\r\n                          //   pathname: `/myprojects/dashboard/${project._id}`,\r\n                          //   state: { project: project },\r\n                          // }\r\n                        >\r\n                          {val.message}\r\n                        </Link>\r\n                      </div>\r\n                    </div>\r\n                    {/* <Link\r\n                      to={{\r\n                        pathname: \"/joinproject\",\r\n                      }}\r\n                      // {\r\n                      //   pathname: `/myprojects/dashboard/${project._id}`,\r\n                      //   state: { project: project },\r\n                      // }\r\n                    > \r\n                      <div\r\n                        className=\"card-text ml-3 mt-1 mb-2 p-1\"\r\n                        style={{ width: \"50rem\" }}\r\n                      >\r\n                        {val.message}\r\n                      </div>\r\n                    </Link>*/}\r\n                  </>\r\n                );\r\n              }\r\n              if (val.notifType === \"RoleAccepted\") {\r\n                return (\r\n                  <>\r\n                    <div\r\n                      className=\"alert alert-custom alert-notice alert-light-success\"\r\n                      role=\"alert\"\r\n                    >\r\n                      <div className=\"alert-icon\">\r\n                        <img\r\n                          src={AcceptIcon}\r\n                          alt=\"Icon\"\r\n                          style={{ height: \"40px\" }}\r\n                        />\r\n                      </div>\r\n                      <div className=\"alert-text\">\r\n                        <Link\r\n                          className=\"text-dark-75 text-hover-primary mb-1 font-size-lg font-weight-bolder\"\r\n                          onClick={async () => {\r\n                            let obj = {};\r\n                            obj = await this.getTo(val);\r\n                            // console.log(obj);\r\n                            this.props.history.push(obj);\r\n                          }}\r\n                          // {\r\n                          //   pathname: `/myprojects/dashboard/${project._id}`,\r\n                          //   state: { project: project },\r\n                          // }\r\n                        >\r\n                          {val.message}\r\n                        </Link>\r\n                      </div>\r\n                    </div>\r\n                    {/* <Link\r\n                      onClick={async () => {\r\n                        let obj = {};\r\n                        obj = await this.getTo(val);\r\n                        // console.log(obj);\r\n                        this.props.history.push(obj);\r\n                      }}\r\n                      // {\r\n                      //   pathname: `/myprojects/dashboard/${project._id}`,\r\n                      //   state: { project: project },\r\n                      // }\r\n                    >\r\n                      <div\r\n                        className=\"card-text ml-3 mt-1 mb-2 p-1\"\r\n                        style={{ width: \"50rem\" }}\r\n                      >\r\n                        {val.message}\r\n                      </div>\r\n                    </Link> */}\r\n                  </>\r\n                );\r\n              }\r\n              if (val.notifType === \"NewMember\") {\r\n                return (\r\n                  <>\r\n                    <div\r\n                      className=\"alert alert-custom alert-notice alert-light-warning\"\r\n                      role=\"alert\"\r\n                    >\r\n                      <div className=\"alert-icon\">\r\n                        <img\r\n                          src={NewAddIcon}\r\n                          alt=\"Logo\"\r\n                          style={{ height: \"40px\" }}\r\n                        />\r\n                      </div>\r\n                      <div className=\"alert-text\">\r\n                        <Link\r\n                          className=\"text-dark-75 text-hover-primary mb-1 font-size-lg font-weight-bolder\"\r\n                          onClick={async () => {\r\n                            let obj = {};\r\n                            obj = await this.getTo(val);\r\n                            // console.log(obj);\r\n                            this.props.history.push(obj);\r\n                          }}\r\n                          // {\r\n                          //   pathname: `/myprojects/dashboard/${project._id}`,\r\n                          //   state: { project: project },\r\n                          // }\r\n                        >\r\n                          {val.message}\r\n                        </Link>\r\n                      </div>\r\n                    </div>\r\n                    {/* <Link\r\n                      onClick={async () => {\r\n                        let obj = {};\r\n                        obj = await this.getTo(val);\r\n                        // console.log(obj);\r\n                        this.props.history.push(obj);\r\n                      }}\r\n                      // {\r\n                      //   pathname: `/myprojects/dashboard/${project._id}`,\r\n                      //   state: { project: project },\r\n                      // }\r\n                    >\r\n                      <div\r\n                        className=\"card-text ml-3 mt-1 mb-2 p-1\"\r\n                        style={{ width: \"50rem\" }}\r\n                      >\r\n                        {val.message}\r\n                      </div>\r\n                    </Link> */}\r\n                  </>\r\n                );\r\n              }\r\n              if (val.notifType === \"FeedbackForm\") {\r\n                // console.log(\"FeedbackForm:\", val);\r\n                return (\r\n                  <>\r\n                    <FeedbackForm\r\n                      type={val.notifType}\r\n                      id={val._id}\r\n                      message={val.message}\r\n                      projectId={val.projectId}\r\n                    />\r\n                  </>\r\n                );\r\n              }\r\n              if (val.notifType === \"InviteToProject\") {\r\n                // console.log(\"FeedbackForm:\", val);\r\n                return (\r\n                  <>\r\n                    <>\r\n                      {\" \"}\r\n                      <div\r\n                        className=\"alert alert-custom alert-notice alert-light-warning\"\r\n                        role=\"alert\"\r\n                      >\r\n                        <div className=\"alert-icon\">\r\n                          <img\r\n                            src={NewAddIcon}\r\n                            alt=\"Logo\"\r\n                            style={{ height: \"40px\" }}\r\n                          />\r\n                        </div>\r\n                        <div className=\"alert-text\">\r\n                          <Link\r\n                            className=\"text-dark-75 text-hover-primary mb-1 font-size-lg font-weight-bolder\"\r\n                            to={`/joinproject`}\r\n                            // {\r\n                            //   pathname: `/myprojects/dashboard/${project._id}`,\r\n                            //   state: { project: project },\r\n                            // }\r\n                          >\r\n                            {val.message}\r\n                          </Link>\r\n                        </div>\r\n                      </div>\r\n                    </>\r\n                  </>\r\n                );\r\n              }\r\n              if (\r\n                val.notifType === \"StartedFollowing\" ||\r\n                val.notifType === \"FollowedYou\"\r\n              ) {\r\n                // console.log(\"StartedFollowing:\", val);\r\n                // console.log(\"Current user id: \", getCurrentUser()._id);\r\n                return (\r\n                  <>\r\n                    {\" \"}\r\n                    <div\r\n                      className=\"alert alert-custom alert-notice alert-light-warning\"\r\n                      role=\"alert\"\r\n                    >\r\n                      <div className=\"alert-icon\">\r\n                        <img\r\n                          src={NewAddIcon}\r\n                          alt=\"Logo\"\r\n                          style={{ height: \"40px\" }}\r\n                        />\r\n                      </div>\r\n                      <div className=\"alert-text\">\r\n                        <Link\r\n                          className=\"text-dark-75 text-hover-primary mb-1 font-size-lg font-weight-bolder\"\r\n                          to={`/user/${val.userObjId}`}\r\n                          // {\r\n                          //   pathname: `/myprojects/dashboard/${project._id}`,\r\n                          //   state: { project: project },\r\n                          // }\r\n                        >\r\n                          {val.message}\r\n                        </Link>\r\n                      </div>\r\n                    </div>\r\n                  </>\r\n                );\r\n              }\r\n              if (val.notifType === \"InviteToRole\") {\r\n                // console.log(\"StartedFollowing:\", val);\r\n                // console.log(\"Current user id: \", getCurrentUser()._id);\r\n                console.log(val);\r\n                return (\r\n                  <>\r\n                    <>\r\n                      {\" \"}\r\n                      <div\r\n                        className=\"alert alert-custom alert-notice alert-light-warning\"\r\n                        role=\"alert\"\r\n                      >\r\n                        <div className=\"alert-icon\">\r\n                          <img\r\n                            src={NewAddIcon}\r\n                            alt=\"Logo\"\r\n                            style={{ height: \"40px\" }}\r\n                          />\r\n                        </div>\r\n                        <div className=\"alert-text\">\r\n                          <Link\r\n                            className=\"text-dark-75 text-hover-primary mb-1 font-size-lg font-weight-bolder\"\r\n                            to={`/joinproject`}\r\n                            // {\r\n                            //   pathname: `/myprojects/dashboard/${project._id}`,\r\n                            //   state: { project: project },\r\n                            // }\r\n                          >\r\n                            {val.message}\r\n                          </Link>\r\n                          <Button\r\n                            onClick={() => {\r\n                              // console.log(\r\n                              //   val.sentBy,\r\n                              //   val.projectId,\r\n                              //   val.sentTo,\r\n                              //   val.roleId\r\n                              // );\r\n                              acceptRequest(\r\n                                val.sentBy,\r\n                                val.projectId,\r\n                                val.sentTo,\r\n                                val.roleId\r\n                              )\r\n                                .then((res) => {\r\n                                  console.log(res);\r\n                                  this.props.notificationAdded({\r\n                                    userId: val.sentBy,\r\n                                    message: `New Role (${\r\n                                      res.role.roleName\r\n                                    }) Accepted by ${\r\n                                      getCurrentUser().name\r\n                                    }, Congrats on the new Member!`,\r\n                                    type: \"RoleAcceptedInNotif\",\r\n                                    projectId: val.projectId,\r\n                                  });\r\n                                  this.props.notificationAdded({\r\n                                    userId: getCurrentUser()._id,\r\n                                    message: `New Role (${res.role.roleName})! time to show off my skills B)`,\r\n                                    type: \"RoleAcceptedInNotif\",\r\n                                    projectId: val.projectId,\r\n                                  });\r\n                                })\r\n                                .then(() => {\r\n                                  removeNotificationId(\r\n                                    getCurrentUser()._id,\r\n                                    val._id\r\n                                  ).then((data) => {\r\n                                    if (data.user !== undefined) {\r\n                                      console.log(\"removed notif\");\r\n                                      window.location.reload();\r\n                                    }\r\n                                  });\r\n                                });\r\n                            }}\r\n                          >\r\n                            Accept\r\n                          </Button>\r\n                          <Button\r\n                            onClick={() => {\r\n                              //  declineRequest(\r\n                              //     getCurrentUser()._id,\r\n                              //     projectId,\r\n                              //     user._id,\r\n                              //     roleId\r\n                              //   ).then((res) => {\r\n                              //     console.log(res);\r\n                              //     this.props.notificationAdded({\r\n                              //       userId: user._id,\r\n                              //       message: `Role Declined by ${getCurrentUser().name} :(`,\r\n                              //       type: \"RoleDeclined\",\r\n                              //       projectId: projectId,\r\n                              //     });\r\n                              //   });\r\n                              // }}\r\n                              declineRequest(\r\n                                val.sentBy,\r\n                                val.projectId,\r\n                                val.sentTo,\r\n                                val.roleId\r\n                              )\r\n                                .then((res) => {\r\n                                  console.log(res);\r\n                                  this.props.notificationAdded({\r\n                                    userId: val.sentBy,\r\n                                    message: `Role (${\r\n                                      res.role.roleName\r\n                                    }) declined by ${getCurrentUser().name}`,\r\n                                    type: \"RoleDeclinedInNotif\",\r\n                                    projectId: val.projectId,\r\n                                  });\r\n                                  toast.warning(\r\n                                    `Rejected role (${res.role.roleName}) successfully!`\r\n                                  );\r\n                                  // this.props.removeAndUpdateNotifications({\r\n                                  //   userId: getCurrentUser()._id,\r\n                                  //   notifId: val._id,\r\n                                  // });\r\n                                })\r\n                                .then(() => {\r\n                                  removeNotificationId(\r\n                                    getCurrentUser()._id,\r\n                                    val._id\r\n                                  ).then((data) => {\r\n                                    if (data.user !== undefined) {\r\n                                      console.log(\"removed notif\");\r\n                                      window.location.reload();\r\n                                    }\r\n                                  });\r\n                                });\r\n                            }}\r\n                          >\r\n                            Decline\r\n                          </Button>\r\n                        </div>\r\n                      </div>\r\n                    </>\r\n                  </>\r\n                );\r\n              }\r\n\r\n              return (\r\n                <div\r\n                  className=\"card-text ml-3 mt-1 mb-2 p-1\"\r\n                  style={{ width: \"50rem\" }}\r\n                >\r\n                  {val.message}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        ))}\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  notifications: state.notifications.notifications,\r\n  segregatedNotifications: state.notifications.segregatedNotifications,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getNotified: (params) => dispatch(getNotified(params)),\r\n  clearNotifications: () => dispatch(clearNotifications()),\r\n  setSegregatedNotifications: (params) =>\r\n    dispatch(setSegregatedNotifications(params)),\r\n  notificationAdded: (params) => dispatch(notificationAdded(params)),\r\n  setNotifications: (params) => dispatch(setNotifications(params)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Notifications);\r\n","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Users.js",["300","301","302"],"import React, { Component } from \"react\";\r\nimport {\r\n  list,\r\n  getCurrentUser,\r\n  followUser,\r\n  unfollowUser,\r\n  getUserById,\r\n  unblockUser,\r\n} from \"./apiUser\";\r\nimport DefaultProfile from \"../images/avatar.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateFollowing } from \"../store/user\";\r\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\r\nimport PersonAddDisabledIcon from \"@material-ui/icons/PersonAddDisabled\";\r\nimport LiveClock from \"react-live-clock\";\r\nimport dayjs from \"dayjs\";\r\nimport { Badge } from \"react-bootstrap\";\r\nimport SearchTwoToneIcon from \"@material-ui/icons/SearchTwoTone\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport CheckCircleOutlineIcon from \"@material-ui/icons/CheckCircleOutline\";\r\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\r\nimport SearchUserBar from \"./SearchUserBar\";\r\nimport { notificationAdded } from \"../store/notifications\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nconst onUnBlockUser = (e, user) => {\r\n  let current_user_id = getCurrentUser()._id;\r\n  let client_user_id = user._id;\r\n  console.log(user);\r\n  unblockUser(current_user_id, client_user_id)\r\n    .then((data) => {\r\n      console.log(data);\r\n    })\r\n    .then(() => window.location.reload());\r\n  e.preventDefault();\r\n};\r\n\r\nclass Users extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      users: [],\r\n      blocked_users: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    // console.log(getCurrentUser());\r\n    list().then((data) => {\r\n      if (data.error) {\r\n        console.log(data.error);\r\n      } else {\r\n        this.setState({ users: data });\r\n        let othersProfilePics = {};\r\n        data.map((user) => {\r\n          getUserById(user._id).then((data) => {\r\n            const profilePic =\r\n              data.user.profilePictures.length !== 0\r\n                ? data.user.profilePictures[\r\n                    data.user.profilePictures.length - 1\r\n                  ]\r\n                : DefaultProfile;\r\n            othersProfilePics[user._id] = profilePic;\r\n            this.setState({ othersProfilePics });\r\n            // this.props.setProfilePic({ profilePic });\r\n          });\r\n        });\r\n      }\r\n    });\r\n    getUserById(getCurrentUser()._id).then((data) => {\r\n      this.props.updateFollowing({\r\n        following: data.user.following,\r\n      });\r\n      this.setState({\r\n        blocked_users: data.user.blocked_users,\r\n      });\r\n    });\r\n  }\r\n  componentDidUpdate(prevState, prevProps) {\r\n    console.log(prevState);\r\n    console.log(prevProps);\r\n  }\r\n\r\n  renderUsers = (users, othersProfilePics) => (\r\n    <div className=\"row row-cols-1 row-cols-md-4\">\r\n      {users.map((user, i) => (\r\n        <div className=\"col mb-4\" key={i}>\r\n          <div className=\"card card-custom card-stretch\">\r\n            <div className=\"card-body pt-4\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <img\r\n                  src={othersProfilePics[user._id]}\r\n                  alt={user.name}\r\n                  className=\"symbol symbol-60 symbol-xxl-100 mr-3 align-self-start align-self-xxl-center\"\r\n                  style={{ width: \"55px\" }}\r\n                />\r\n                <div>\r\n                  <h5 className=\"font-weight-bolder text-dark-75 text-hover-primary\">\r\n                    {user.name}\r\n                  </h5>\r\n                  <div className=\"text-muted pb-3\">@{user.username}</div>\r\n                  <Link\r\n                    to={`/user/${user._id}`}\r\n                    className=\"btn btn-raised btn-small btn-primary\"\r\n                  >\r\n                    View Profile\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n              <div className=\"pt-3\">\r\n                <div className=\"d-flex align-items-center justify-content-between mb-2\">\r\n                  <Link\r\n                    to={`/mychats/${isAuthenticated().user._id}`}\r\n                    className=\"btn btn-outline-primary\"\r\n                  >\r\n                    Message\r\n                  </Link>\r\n                  {this.props.following.includes(user._id) ? (\r\n                    <button\r\n                      className=\"btn btn-raised btn-primary ml-3\"\r\n                      onClick={(e) => {\r\n                        unfollowUser(e, user._id).then(\r\n                          (data) =>\r\n                            this.props.updateFollowing({\r\n                              following: data.user.following,\r\n                            })\r\n                          // console.log(data)\r\n                        );\r\n                      }}\r\n                    >\r\n                      UnFollow\r\n                      <PersonAddDisabledIcon />\r\n                    </button>\r\n                  ) : (\r\n                    <button\r\n                      className=\"btn btn-raised btn-primary ml-3\"\r\n                      onClick={(e) =>\r\n                        followUser(e, user._id).then(\r\n                          (data) => {\r\n                            this.props.updateFollowing({\r\n                              following: data.user.following,\r\n                            });\r\n                            this.props.notificationAdded({\r\n                              userId: user._id,\r\n                              message: `${\r\n                                getCurrentUser().name\r\n                              } has followed you.`,\r\n                              type: \"FollowedYou\",\r\n                              userObjId: getCurrentUser()._id,\r\n                            });\r\n                            this.props.notificationAdded({\r\n                              userId: getCurrentUser()._id,\r\n                              message: `Followed ${user.name}!`,\r\n                              type: \"StartedFollowing\",\r\n                              userObjId: user._id,\r\n                            });\r\n                          }\r\n                          // console.log(data.user.following)\r\n                        )\r\n                      }\r\n                    >\r\n                      Follow\r\n                      <PersonAddIcon />\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n\r\n  renderBlockedUsers = (users, othersProfilePics) => (\r\n    <div className=\"row row-cols-1 row-cols-md-4\">\r\n      {users.map((user, i) => (\r\n        <div className=\"col mb-4\" key={i}>\r\n          <div className=\"card card-custom card-stretch\">\r\n            <div className=\"card-body pt-4\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <img\r\n                  src={othersProfilePics[user._id]}\r\n                  alt={user.name}\r\n                  className=\"symbol symbol-60 symbol-xxl-100 mr-3 align-self-start align-self-xxl-center\"\r\n                  style={{ width: \"55px\" }}\r\n                />\r\n                <div>\r\n                  <h5 className=\"font-weight-bolder text-dark-75 text-hover-primary\">\r\n                    {user.name}\r\n                  </h5>\r\n                  <div className=\"text-muted pb-3\">@{user.username}</div>\r\n                  <button\r\n                    className=\"btn btn-primary\"\r\n                    onClick={async (e) => {\r\n                      onUnBlockUser(e, user);\r\n                    }}\r\n                  >\r\n                    UnBlock\r\n                    <CheckCircleOutlineIcon />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n\r\n  render() {\r\n    let users = this.state.users;\r\n    users = users.filter((x) => x._id !== getCurrentUser()._id);\r\n    let final_users = users.filter(\r\n      (x) => !this.state.blocked_users.includes(x._id)\r\n    );\r\n    const { othersProfilePics } = this.state;\r\n    if (othersProfilePics === undefined) return null;\r\n    let final_blocked = users.filter((x) =>\r\n      this.state.blocked_users.includes(x._id)\r\n    );\r\n    console.log(final_blocked);\r\n    return (\r\n      <>\r\n        <ToastContainer />\r\n        <div\r\n          className=\"subheader py-2 py-lg-6  subheader-transparent \"\r\n          id=\"kt_subheader\"\r\n        >\r\n          <div className=\" container  d-flex align-items-center justify-content-between flex-wrap flex-sm-nowrap\">\r\n            <div className=\"d-flex align-items-center flex-wrap mr-2\">\r\n              <h5 className=\"text-dark font-weight-bold mt-2 mb-2 mr-5\">\r\n                Users\r\n              </h5>\r\n              <span>\r\n                <SearchUserBar />\r\n              </span>\r\n            </div>\r\n            <div class=\"d-flex align-items-center flex-wrap\">\r\n              <Badge variant=\"primary\">\r\n                <div className=\"d-flex align-items-center flex-wrap mr-2\">\r\n                  <h6>{dayjs().format(\"DD MMMM, dddd\")}</h6>\r\n                  <div className=\"subheader-separator subheader-separator-ver mt-2 mb-2 mr-4 ml-4 bg-gray-200\"></div>\r\n                  <h6>\r\n                    <LiveClock format=\"hh:mm a\" ticking />\r\n                  </h6>\r\n                </div>\r\n              </Badge>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"container\">\r\n          <h2 className=\"mt-5 mb-5\">Users</h2>\r\n          {this.renderUsers(final_users, othersProfilePics)}\r\n\r\n          <h2 className=\"mt-5 mb-5\">Blocked Users</h2>\r\n          {this.renderBlockedUsers(final_blocked, othersProfilePics)}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  following: state.user.following,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  updateFollowing: (params) => dispatch(updateFollowing(params)),\r\n  notificationAdded: (params) => dispatch(notificationAdded(params)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Users);\r\n","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\ModalButton.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\RatingComponent.js",["303","304"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\DragDropImages.js",["305"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { DropzoneArea } from \"material-ui-dropzone\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { createPost } from \"./apiPosts\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport SkillsInput from \"./../utils/signupbutton/Tagify/SkillsInput\";\r\nimport { listmyprojects } from \"./../project/apiProject\";\r\nimport Sentiment from \"sentiment\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getPosts } from \"./../store/posts\";\r\nimport axios from \"axios\";\r\n\r\nconst sentiment = new Sentiment();\r\nfunction DragDropImages(props) {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [files, setFiles] = useState([]);\r\n  const [title, set_title] = useState(String);\r\n  const [tags, setTags] = useState([]);\r\n  const [project, setProject] = useState(\"Personal\");\r\n  const [projects, setProjects] = useState([]);\r\n  let [sentimentScore, setsentimentScore] = useState([]);\r\n  // const { getRootProps, getInputProps } = useDropzone({\r\n  //   accept: \"image/*\",\r\n  //   onDrop: (acceptedFiles) => {\r\n  //     acceptedFiles.map((file) => {\r\n  //       const reader = new FileReader();\r\n  //       reader.onabort = () => console.log(\"file reading was aborted\");\r\n  //       reader.onerror = () => console.log(\"file reading has failed\");\r\n  //       reader.onload = () => {\r\n  //         const binaryStr = reader.result;\r\n  //         const data = new Uint8Array(binaryStr);\r\n  //         // let result = webp.buffer2webpbuffer(reader.result, \"jpg\", \"-q 80\");\r\n  //         // console.log(result);\r\n  //         // result.then(function (result) {\r\n  //         //   // you access the value from the promise here\r\n  //         //   console.log(result);\r\n  //         // });\r\n\r\n  //         // console.log(reader.readAsArrayBuffer(file));\r\n  //         // compress_images(\r\n  //         //   file.path,\r\n  //         //   file.path + \"compressed\",\r\n  //         //   { compress_force: false, statistic: true, autoupdate: true },\r\n  //         //   false,\r\n  //         //   { jpg: { engine: \"webp\", command: false } },\r\n  //         //   { png: { engine: \"webp\", command: false } },\r\n  //         //   { svg: { engine: \"svgo\", command: false } },\r\n  //         //   { gif: { engine: \"gifwebp\", command: false } },\r\n  //         //   function (err, completed) {\r\n  //         //     if (completed === true) console.log(\"done\");\r\n  //         // }\r\n  //         // );\r\n  //         // const buffer = binaryStr;\r\n  //         // var binary = \"\";\r\n  //         // var bytes = new Uint8Array(buffer);\r\n  //         // var len = bytes.byteLength;\r\n  //         // for (var i = 0; i < len; i++) {\r\n  //         //   binary += String.fromCharCode(bytes[i]);\r\n  //         // }\r\n  //         // const base64 = btoa(binary);\r\n  //         // console.log(base64);\r\n  //       };\r\n  //     });\r\n\r\n  //     setFiles(\r\n  //       acceptedFiles.map((file) =>\r\n  //         Object.assign(file, {\r\n  //           preview: URL.createObjectURL(file),\r\n  //         })\r\n  //       )\r\n  //     );\r\n  //   },\r\n  // });\r\n\r\n  // const thumbs = files.map((file) => (\r\n  //   <div style={thumb} key={file.name}>\r\n  //     <div style={thumbInner}>\r\n  //       <img src={file.preview} style={img} />\r\n  //     </div>\r\n  //   </div>\r\n  // ));\r\n  useEffect(() => {\r\n    listmyprojects().then((data) => setProjects(data.userProjects));\r\n  }, []);\r\n  useEffect(\r\n    () => () => {\r\n      // Make sure to revoke the data uris to avoid memory leaks\r\n      files.forEach((file) => URL.revokeObjectURL(file.preview));\r\n    },\r\n    [files]\r\n  );\r\n  const postDetails = (images) => {\r\n    if (title === \"\") toast.warning(\"Please enter the Title\");\r\n    else {\r\n      let final_url = [];\r\n      images.map(async (image, i) => {\r\n        const data = new FormData();\r\n        data.append(\"title\", title);\r\n        data.append(\"tags\", tags);\r\n        data.append(\"myImage\", image);\r\n        let settings = {\r\n          headers: {\r\n            \"content-type\": \"multipart/form-data\",\r\n          },\r\n        };\r\n        let response = await axios.post(\r\n          `http://localhost:3000/convertToWebp`,\r\n          data,\r\n          settings\r\n        );\r\n        try {\r\n          let result = await response.data.result;\r\n          final_url.push(result.url);\r\n          if (final_url.length === images.length)\r\n            createPost(final_url, title, tags, project).then((data) => {\r\n              console.log(data);\r\n              if (data.error) {\r\n                toast.warning(data.error);\r\n              } else {\r\n                toast.success(\"Created post Successfully\");\r\n                dispatch(getPosts());\r\n                history.push(\"/home\");\r\n              }\r\n            });\r\n        } catch (e) {\r\n          console.log(e);\r\n          toast.warning(\"Please Try again\");\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const onTextChange = (e) => {\r\n    set_title(e.target.value);\r\n    findSentiment(e.target.value);\r\n  };\r\n\r\n  const findSentiment = (title) => {\r\n    const result = sentiment.analyze(title);\r\n    sentimentScore = setsentimentScore(result.score);\r\n  };\r\n\r\n  const handleTags = (newSkills) => {\r\n    let new_tags = [...newSkills];\r\n    setTags(new_tags);\r\n  };\r\n  const onChangeProject = (event) => {\r\n    setProject(event.target.value);\r\n  };\r\n  return (\r\n    <>\r\n      <ToastContainer />\r\n      {/* <TextField\r\n        name=\"Title\"\r\n        onChange={(e) => onTextChange(e)}\r\n        variant=\"outlined\"\r\n        label=\"Title\"\r\n        fullWidth\r\n      /> */}\r\n      <Form.Control\r\n        type=\"text\"\r\n        placeholder=\"Title\"\r\n        name=\"Title\"\r\n        onChange={(e) => onTextChange(e)}\r\n        as=\"textarea\"\r\n        rows={3}\r\n      />\r\n      <label>Project</label>\r\n      <select class=\"custom-select\" onChange={(e) => onChangeProject(e)}>\r\n        <option selected>Personal</option>\r\n        {/* <option value=\"1\">One</option>\r\n        <option value=\"2\">Two</option>\r\n        <option value=\"3\">Three</option> */}\r\n        {projects.map((project) => (\r\n          <option value={project._id}>{project.title}</option>\r\n        ))}\r\n      </select>\r\n      <SkillsInput label={<big>Tags</big>} setSkills={handleTags} />\r\n      <DropzoneArea\r\n        acceptedFiles={[\"image/*\"]}\r\n        dropzoneText={\"Drag and drop an image here or click\"}\r\n        onChange={(files) => {\r\n          console.log(\"Files:\", files);\r\n          setFiles(files);\r\n        }}\r\n        maxFileSize={10485760}\r\n      />\r\n      <div className=\"text-center mt-2\">\r\n        {sentimentScore >= -3 && (\r\n          <Button\r\n            onClick={() => {\r\n              postDetails(files, title, tags, project);\r\n              // console.log(project);\r\n            }}\r\n          >\r\n            Post\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default DragDropImages;\r\n","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Profile.js",["306","307","308","309","310","311","312"],"import React, { Component } from \"react\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport {\r\n  read,\r\n  getCurrentUser,\r\n  followUser,\r\n  unfollowUser,\r\n  getUserById,\r\n} from \"./apiUser\";\r\nimport DefaultProfile from \"../images/avatar.png\";\r\nimport DeleteUser from \"./DeleteUser\";\r\nimport {\r\n  Row,\r\n  Tab,\r\n  Col,\r\n  Nav,\r\n  Card,\r\n  ListGroup,\r\n  ListGroupItem,\r\n} from \"react-bootstrap\";\r\nimport PersonTwoToneIcon from \"@material-ui/icons/PersonTwoTone\";\r\nimport ChatTwoToneIcon from \"@material-ui/icons/ChatTwoTone\";\r\nimport AccountTreeTwoToneIcon from \"@material-ui/icons/AccountTreeTwoTone\";\r\nimport PhotoTwoToneIcon from \"@material-ui/icons/PhotoTwoTone\";\r\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\r\nimport PersonAddDisabledIcon from \"@material-ui/icons/PersonAddDisabled\";\r\nimport DonutChart from \"react-donut-chart\";\r\nimport { listmyprojects } from \"./../project/apiProject\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateFollowers, updateFollowing } from \"../store/user\";\r\nimport Post from \"./../posts/Post\";\r\nimport VideoPost from \"./../posts/VideoPost\";\r\nimport TextPostView from \"./../posts/TextPostView\";\r\nimport YoutubePost from \"./../posts/YoutubePost\";\r\nimport { getPostsOfUser } from \"../posts/apiPosts\";\r\nimport { notificationAdded } from \"../store/notifications\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { sortedLastIndex } from \"lodash\";\r\nimport Following from \"./Following\";\r\nimport Followers from \"./Followers\";\r\nclass Profile extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      user: \"\",\r\n      redirectToSignin: false,\r\n      posts: [],\r\n      delete_button: \"\",\r\n    };\r\n  }\r\n\r\n  init = (userId) => {\r\n    const token = isAuthenticated().token;\r\n    read(userId, token).then((data) => {\r\n      if (data.error) {\r\n        this.setState({ redirectToSignin: true });\r\n      } else {\r\n        this.setState({ user: data });\r\n      }\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const userId = this.props.match.params.userId;\r\n    this.init(userId);\r\n    listmyprojects().then((projects) => {\r\n      this.setState({ projects: projects.userProjects });\r\n    });\r\n    // const { following } = this.props;\r\n    // console.log(1);\r\n    getUserById(getCurrentUser()._id).then((data) => {\r\n      this.props.updateFollowing({\r\n        following: data.user.following,\r\n      });\r\n      this.props.updateFollowers({\r\n        followers: data.user.followers,\r\n      });\r\n    });\r\n    getPostsOfUser(userId)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        this.setState({ posts: data });\r\n      });\r\n\r\n    if (getCurrentUser()._id.toString() === userId.toString())\r\n      this.setState({ delete_button: \"enabled\" });\r\n  }\r\n  // this.setState({ projects });\r\n\r\n  componentWillReceiveProps(props) {\r\n    const userId = props.match.params.userId;\r\n    this.init(userId);\r\n  }\r\n  render() {\r\n    const { redirectToSignin, user } = this.state;\r\n    if (user.skills === undefined) return null;\r\n    if (redirectToSignin) return <Redirect to=\"/signin\" />;\r\n    let projects = this.state.projects;\r\n    let ongoing = 0;\r\n    let completed = 0;\r\n    let overdue = 0;\r\n    const { following } = this.props;\r\n    // console.log(following);\r\n    if (projects !== undefined) {\r\n      projects.map((project) => {\r\n        if (project.status === \"Completed\") completed++;\r\n        if (project.status === \"In Progress\") ongoing++;\r\n      });\r\n    }\r\n    const { posts } = this.state;\r\n    if (posts === undefined) return null;\r\n    // const { following } = this.props;\r\n    return (\r\n      <div className=\"container mt-5\">\r\n        <ToastContainer />\r\n        <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"personalInfo\">\r\n          <Row>\r\n            <Col sm={3}>\r\n              <div className=\"card card-custom card-stretch\">\r\n                <div className=\"card-body pt-4\">\r\n                  <div className=\"d-flex align-items-center\">\r\n                    <img\r\n                      src={\r\n                        user.profilePictures.length !== 0\r\n                          ? user.profilePictures[\r\n                              user.profilePictures.length - 1\r\n                            ]\r\n                          : DefaultProfile\r\n                      }\r\n                      alt={user.name}\r\n                      className=\"symbol symbol-60 symbol-xxl-100 mr-3 align-self-start align-self-xxl-center\"\r\n                      style={{ width: \"55px\" }}\r\n                    />\r\n                    <div>\r\n                      <h5 className=\"font-weight-bolder text-dark-75 text-hover-primary\">\r\n                        {user.name}\r\n                      </h5>\r\n                      <div className=\"text-muted\">@{user.username}</div>\r\n                      {isAuthenticated().user &&\r\n                      isAuthenticated().user._id === user._id ? (\r\n                        <div className=\"mt-2\">\r\n                          <Link\r\n                            className=\"btn btn-sm btn-primary mr-2 py-2 px-3 px-xxl-5 my-1\"\r\n                            to={`/user/edit/${user._id}`}\r\n                          >\r\n                            Edit Profile\r\n                          </Link>\r\n                          <DeleteUser userId={user._id} />\r\n                        </div>\r\n                      ) : (\r\n                        <div className=\"mt-2\">\r\n                          {user._id !== getCurrentUser()._id ? (\r\n                            user.followers.indexOf(getCurrentUser()._id) >\r\n                            -1 ? (\r\n                              <button\r\n                                className=\"btn btn-raised btn-primary\"\r\n                                onClick={(e) =>\r\n                                  unfollowUser(e, user._id).then((data) => {\r\n                                    this.props.updateFollowing({\r\n                                      following: data.user.following,\r\n                                    });\r\n                                    this.props.updateFollowers({\r\n                                      followers: data.user.followers,\r\n                                    });\r\n                                  })\r\n                                }\r\n                              >\r\n                                UnFollow <PersonAddDisabledIcon />\r\n                              </button>\r\n                            ) : (\r\n                              <button\r\n                                className=\"btn btn-raised btn-primary\"\r\n                                onClick={(e) =>\r\n                                  followUser(e, user._id).then((data) => {\r\n                                    this.props.updateFollowing({\r\n                                      following: data.user.following,\r\n                                    });\r\n                                    this.props.updateFollowers({\r\n                                      followers: data.user.followers,\r\n                                    });\r\n                                    this.props.notificationAdded({\r\n                                      userId: user._id,\r\n                                      message: `${\r\n                                        getCurrentUser().name\r\n                                      } has followed you.`,\r\n                                      type: \"FollowedYou\",\r\n                                      userObjId: getCurrentUser()._id,\r\n                                    });\r\n                                    this.props.notificationAdded({\r\n                                      userId: getCurrentUser()._id,\r\n                                      message: `Followed ${user.name}!`,\r\n                                      type: \"StartedFollowing\",\r\n                                      userObjId: user._id,\r\n                                    });\r\n                                  })\r\n                                }\r\n                              >\r\n                                Follow <PersonAddIcon />\r\n                              </button>\r\n                            )\r\n                          ) : (\r\n                            <div></div>\r\n                          )}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\" pt-3\">\r\n                    <div className=\"d-flex align-items-center justify-content-between mb-2\">\r\n                      <span className=\"font-weight-bold mr-2\">Email: </span>\r\n                      <span className=\"text-muted email-wrap text-hover-primary\">\r\n                        {user.email}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"d-flex align-items-center justify-content-between mb-2\">\r\n                      <span className=\"font-weight-bold mr-2\">Location: </span>\r\n                      <span className=\"text-muted text-hover-primary\">\r\n                        {user.location}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"d-flex align-items-center justify-content-between mb-2\">\r\n                      <span className=\"font-weight-bold mr-2\">Joined: </span>\r\n                      <span className=\"text-muted text-hover-primary\">\r\n                        {` ${new Date(user.created).toDateString()}`}\r\n                      </span>\r\n                    </div>\r\n                    {user._id === getCurrentUser()._id && (\r\n                      <div className=\"d-flex align-items-center justify-content-between mb-2\">\r\n                        <button className=\"btn btn-clean\">\r\n                          <Following />\r\n                        </button>\r\n                        <button className=\"btn btn-clean\">\r\n                          <Followers followers_users={user.followers} />\r\n                        </button>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <Nav variant=\"pills\" className=\"flex-column mt-3\">\r\n                    <Nav.Item>\r\n                      <Nav.Link eventKey=\"personalInfo\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"mr-3\">\r\n                            <PersonTwoToneIcon />\r\n                          </div>\r\n                          <div>Personal Information</div>\r\n                        </div>\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                      <Nav.Link eventKey=\"socialInfo\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"mr-3\">\r\n                            <ChatTwoToneIcon />\r\n                          </div>\r\n                          <div>Social Information</div>\r\n                        </div>\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                      <Nav.Link eventKey=\"projInfo\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"mr-3\">\r\n                            <AccountTreeTwoToneIcon />\r\n                          </div>\r\n                          <div>Project Stats</div>\r\n                        </div>\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                      <Nav.Link eventKey=\"posts\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"mr-3\">\r\n                            <PhotoTwoToneIcon />\r\n                          </div>\r\n                          <div>Posts</div>\r\n                        </div>\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                  </Nav>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n            <Col sm={9}>\r\n              <Tab.Content>\r\n                <Tab.Pane eventKey=\"personalInfo\">\r\n                  <div className=\"card card-stretch\">\r\n                    <div className=\"card-header\">\r\n                      <div className=\"card-title align-items-start flex-column\">\r\n                        <h4 className=\"card-label font-weight-bolder text-dark\">\r\n                          Personal Information\r\n                        </h4>\r\n                        <span className=\"text-muted font-weight-bold font-size-sm mt-1\">\r\n                          Update your personal information.\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <table className=\"table table-borderless\">\r\n                        <tbody>\r\n                          <tr>\r\n                            <th>Name</th>\r\n                            <td>{user.name}</td>\r\n                          </tr>\r\n                          <tr>\r\n                            <th>Email</th>\r\n                            <td>{user.email}</td>\r\n                          </tr>\r\n                          <tr>\r\n                            <th>Bio</th>\r\n                            <td>{user.bio}</td>\r\n                          </tr>\r\n                          <tr>\r\n                            <th>Skills</th>\r\n                            <td>{user.skills.join(\" \")}</td>\r\n                          </tr>\r\n                          <tr>\r\n                            <th>Date of Birth</th>\r\n                            <td>{` ${new Date(user.dob).toDateString()}`}</td>\r\n                          </tr>\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                </Tab.Pane>\r\n                <Tab.Pane eventKey=\"socialInfo\">\r\n                  <div className=\"card card-stretch\">\r\n                    <div className=\"card-header\">\r\n                      <div className=\"card-title align-items-start flex-column\">\r\n                        <h4 className=\"card-label font-weight-bolder text-dark\">\r\n                          Social Information\r\n                        </h4>\r\n                        <span className=\"text-muted font-weight-bold font-size-sm mt-1\">\r\n                          Update your personal information.\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <table className=\"table table-borderless\">\r\n                        <tbody>\r\n                          <tr>\r\n                            <th>Website</th>\r\n                            <td>\r\n                              {user.social.website\r\n                                ? user.social.website\r\n                                : \"Not available\"}\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <th>Instagram</th>\r\n                            <td>\r\n                              {user.social.instagram\r\n                                ? user.social.instagram\r\n                                : \"Not available\"}\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <th>Facebook</th>\r\n                            <td>\r\n                              {user.social.facebook\r\n                                ? user.social.facebook\r\n                                : \"Not available\"}\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <th>Linkedin</th>\r\n                            <td>\r\n                              {user.social.linkedin\r\n                                ? user.social.linkedin\r\n                                : \"Not available\"}\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <th>Twitter</th>\r\n                            <td>\r\n                              {user.social.twitter\r\n                                ? user.social.twitter\r\n                                : \"Not available\"}\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <th>Youtube</th>\r\n                            <td>\r\n                              {user.social.youtube\r\n                                ? user.social.youtube\r\n                                : \"Not available\"}\r\n                            </td>\r\n                          </tr>\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                </Tab.Pane>\r\n                <Tab.Pane eventKey=\"projInfo\">\r\n                  <div className=\"card card-stretch\">\r\n                    <div className=\"card-header\">\r\n                      <div className=\"card-title align-items-start flex-column\">\r\n                        <h4 className=\"card-label font-weight-bolder text-dark\">\r\n                          Project Stats\r\n                        </h4>\r\n                        <span className=\"text-muted font-weight-bold font-size-sm mt-1\">\r\n                          Statistics of your projects\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <table className=\"table table-borderless\">\r\n                        <DonutChart\r\n                          data={[\r\n                            {\r\n                              label: \"Ongoing Projects\",\r\n                              value: ongoing,\r\n                            },\r\n                            {\r\n                              label: \"Overdue Projects\",\r\n                              value: 1,\r\n                            },\r\n                            {\r\n                              label: \"Completed Projects\",\r\n                              value: completed,\r\n                            },\r\n                          ]}\r\n                          innerRadius=\"0.6\"\r\n                        />\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                </Tab.Pane>\r\n                <Tab.Pane eventKey=\"posts\">\r\n                  <div className=\"userPosts\">\r\n                    {posts.map(\r\n                      (post) =>\r\n                        (post.postType === \"video\" && (\r\n                          <VideoPost\r\n                            headerText={post.title}\r\n                            footerText={\"by \" + post.postedBy.name}\r\n                            cardText={post.video}\r\n                            videoUrl={post.video}\r\n                            liked_by={post.liked_by}\r\n                            _id={post._id}\r\n                            comments={post.comments}\r\n                            tags={post.tags}\r\n                            delete_button={this.state.delete_button}\r\n                            reportCounter={post.reportCounter}\r\n                            postedBy={post.postedBy}\r\n                          />\r\n                        )) ||\r\n                        (post.postType === \"image\" && (\r\n                          <Post\r\n                            headerText={post.title}\r\n                            footerText={\"by \" + post.postedBy.name}\r\n                            cardText={post.photo}\r\n                            imageUrl={post.photo}\r\n                            liked_by={post.liked_by}\r\n                            _id={post._id}\r\n                            comments={post.comments}\r\n                            tags={post.tags}\r\n                            delete_button={this.state.delete_button}\r\n                            reportCounter={post.reportCounter}\r\n                            postedBy={post.postedBy}\r\n                          />\r\n                        )) ||\r\n                        (post.postType === \"text\" && (\r\n                          <TextPostView\r\n                            text={post.title}\r\n                            footerText={\"by \" + post.postedBy.name}\r\n                            comments={post.comments}\r\n                            liked_by={post.liked_by}\r\n                            _id={post._id}\r\n                            delete_button={this.state.delete_button}\r\n                            reportCounter={post.reportCounter}\r\n                            postedBy={post.postedBy}\r\n                          />\r\n                        )) ||\r\n                        (post.postType === \"youtubeVideo\" && (\r\n                          <YoutubePost\r\n                            headerText={post.title}\r\n                            comments={post.comments}\r\n                            liked_by={post.liked_by}\r\n                            _id={post._id}\r\n                            footerText={\"by \" + post.postedBy.name}\r\n                            url={post.video}\r\n                            metadataTitle={post.metadataTitle}\r\n                            metadataAuthor={post.metadataAuthor}\r\n                            delete_button={this.state.delete_button}\r\n                            reportCounter={post.reportCounter}\r\n                            postedBy={post.postedBy}\r\n                          />\r\n                        ))\r\n                    )}\r\n                  </div>\r\n                </Tab.Pane>\r\n              </Tab.Content>\r\n            </Col>\r\n          </Row>\r\n        </Tab.Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  following: state.user.following,\r\n  followers: state.user.followers,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  updateFollowing: (params) => dispatch(updateFollowing(params)),\r\n  updateFollowers: (params) => dispatch(updateFollowers(params)),\r\n  notificationAdded: (params) => dispatch(notificationAdded(params)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\r\n","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\user.js",["313","314","315"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Following.js",["316","317","318"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Followers.js",["319","320","321"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\NavBar.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\UserRecommendation.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\User_Role.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\taskComponents\\TrelloTask.js",["322"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\newProjectForm\\CreateProject.js",["323","324"],"import React, { Component } from \"react\";\r\nimport RoleList from \"./RoleCreate\";\r\nimport { newProject } from \"./../apiProject\";\r\nimport SkillsInput from \"./../../utils/signupbutton/Tagify/SkillsInput\";\r\nimport LiveClock from \"react-live-clock\";\r\nimport dayjs from \"dayjs\";\r\nimport { Badge } from \"react-bootstrap\";\r\n\r\nclass CreateProject extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      title: \"\",\r\n      description: \"\",\r\n      skills: [\"\"],\r\n      error: \"\",\r\n      roleDetails: [\r\n        {\r\n          index: Math.random(),\r\n          roleName: \"\",\r\n          roleSkills: [\"\"],\r\n        },\r\n      ],\r\n      open: false,\r\n    };\r\n  }\r\n\r\n  handleChange = (proj) => (event) => {\r\n    this.setState({ error: \"\" });\r\n    this.setState({ [proj]: event.target.value });\r\n  };\r\n  handleSkills = (newSkills) => {\r\n    this.setState({ skills: newSkills });\r\n  };\r\n  handleRoleChange = (name) => (e) => {\r\n    let id = parseInt(e.target.attributes.idx.value);\r\n    const roleDetails = this.state.roleDetails;\r\n    roleDetails[id][name] = e.target.value;\r\n    this.setState({ roleDetails });\r\n  };\r\n\r\n  addNewRow = (e) => {\r\n    this.setState((prevState) => ({\r\n      roleDetails: [\r\n        ...prevState.roleDetails,\r\n        {\r\n          index: Math.random(),\r\n          roleName: \"\",\r\n          roleSkills: \"\",\r\n        },\r\n      ],\r\n    }));\r\n  };\r\n\r\n  deteteRow = (index) => {\r\n    this.setState({\r\n      roleDetails: this.state.roleDetails.filter(\r\n        (s, sindex) => index !== sindex\r\n      ),\r\n    });\r\n  };\r\n\r\n  clickOnDelete(record) {\r\n    this.setState({\r\n      roleDetails: this.state.roleDetails.filter((r) => r !== record),\r\n    });\r\n  }\r\n\r\n  clickSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.setState({ loading: true });\r\n    let { title, description, skills, roleDetails } = this.state;\r\n    roleDetails.map((role, i) => {\r\n      if (role.roleName === \"\")\r\n        this.setState({ error: \"Empty role title at \" + (i + 1) });\r\n      if (role.roleSkills.length === 0) {\r\n        this.setState({ error: \"Empty skills for role Number \" + (i + 1) });\r\n      }\r\n    });\r\n    let project = {\r\n      title,\r\n      description,\r\n      skills,\r\n      roleDetails,\r\n    };\r\n\r\n    // newProject(project);\r\n    try {\r\n      // console.log(this.state.error);\r\n      if (this.state.error !== \"\" && this.state.error !== undefined) {\r\n        newProject(project).then((data) => {\r\n          if (data === undefined) return;\r\n          if (data.error) {\r\n            if (data.similar) {\r\n              this.setState({ similar: data.similar });\r\n              console.log(this.state.similar);\r\n            }\r\n            this.setState({ error: data.error });\r\n          } else\r\n            this.setState({\r\n              title: \"\",\r\n              description: \"\",\r\n              skills: [\"\"],\r\n              roleDetails: [\r\n                {\r\n                  index: Math.random(),\r\n                  roleName: \"\",\r\n                  roleSkills: [],\r\n                },\r\n              ],\r\n              error: \"\",\r\n              open: true,\r\n            });\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    // console.log(project);\r\n  };\r\n\r\n  render() {\r\n    let { error, title, description, skills, roleDetails, open } = this.state;\r\n    return (\r\n      <>\r\n        <div\r\n          className=\"subheader py-2 py-lg-6  subheader-transparent \"\r\n          id=\"kt_subheader\"\r\n        >\r\n          <div className=\" container  d-flex align-items-center justify-content-between flex-wrap flex-sm-nowrap\">\r\n            <div className=\"d-flex align-items-center flex-wrap mr-2\">\r\n              <h5 className=\"text-dark font-weight-bold mt-2 mb-2 mr-5\">\r\n                Create Project\r\n              </h5>\r\n              <div className=\"subheader-separator subheader-separator-ver mt-2 mb-2 mr-4 bg-gray-200\"></div>\r\n            </div>\r\n            <div class=\"d-flex align-items-center flex-wrap\">\r\n              <Badge variant=\"primary\">\r\n                <div className=\"d-flex align-items-center flex-wrap mr-2\">\r\n                  <h6>{dayjs().format(\"DD MMMM, dddd\")}</h6>\r\n                  <div className=\"subheader-separator subheader-separator-ver mt-2 mb-2 mr-4 ml-4 bg-gray-200\"></div>\r\n                  <h6>\r\n                    <LiveClock format=\"hh:mm a\" ticking />\r\n                  </h6>\r\n                </div>\r\n              </Badge>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"container\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              <div className=\"card-title\">\r\n                <h2>Let's Start a New Project</h2>\r\n                <p className=\"text-muted\">\r\n                  Fill in the form with all the necessary details to register\r\n                  the project.\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <div\r\n                className=\"alert alert-danger\"\r\n                style={{ display: error ? \"\" : \"none\" }}\r\n              >\r\n                {error}\r\n              </div>\r\n\r\n              <div\r\n                className=\"alert alert-success\"\r\n                style={{ display: open ? \"\" : \"none\" }}\r\n              >\r\n                Project Successfully Registered. Check \"My Projects\".\r\n              </div>\r\n              <form className=\"mt-5\">\r\n                <div className=\"form-group\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-10 offset-1\">\r\n                      <label>\r\n                        <big>Title of your Project</big>\r\n                      </label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        value={title}\r\n                        onChange={this.handleChange(\"title\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row mt-3\">\r\n                    <div className=\"col-sm-10 offset-1\">\r\n                      <label>\r\n                        <big>Description of the Project</big>\r\n                      </label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        value={description}\r\n                        onChange={this.handleChange(\"description\")}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row mt-3\">\r\n                    <div className=\"col-sm-10 offset-1\">\r\n                      <SkillsInput\r\n                        label={<big>Skills</big>}\r\n                        setSkills={this.handleSkills}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  {/*<RoleView />*/}\r\n                  <RoleList\r\n                    add={this.addNewRow}\r\n                    delete={this.clickOnDelete.bind(this)}\r\n                    roleDetails={roleDetails}\r\n                    onChange={this.handleRoleChange}\r\n                  />\r\n                  <div className=\"row\">\r\n                    <button\r\n                      onClick={this.clickSubmit}\r\n                      className=\"btn btn-raised btn-primary mx-auto mt-3 mb-2 col-sm-3\"\r\n                    >\r\n                      Create Project!\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateProject;\r\n","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\RoleReq.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\Requests.js",["325"],"import React, { Component } from \"react\";\nimport { getUserById } from \"../user/apiUser\";\nimport { Button } from \"react-bootstrap\";\nimport { acceptRequest, declineRequest } from \"./apiProject\";\nimport { getCurrentUser } from \"./../user/apiUser\";\nimport { connect } from \"react-redux\";\nimport { notificationAdded } from \"../store/notifications\";\nclass Requests extends Component {\n  state = {};\n  componentDidMount() {\n    const { reqId } = this.props;\n    getUserById(reqId).then((res) => {\n      this.setState({ user: res.user });\n    });\n  }\n  render() {\n    const { user } = this.state;\n    const { projectId, roleId } = this.props;\n    if (user === undefined) return null;\n    const url = \"http://localhost:3000/user/\" + user._id.toString();\n    return (\n      <>\n        <div className=\"row\">\n          <div className=\"ml-2 mt-2\">\n            {user.name}\n            <small className=\"text-mute\">(@{user.username})</small>\n          </div>\n          {/* <div className=\"ml-2\">\n            <Button\n              onClick={() => {\n                console.log(url);\n              }}\n            >\n              View Profile\n            </Button>\n          </div> */}\n          <div className=\"ml-1\">\n            <Button\n              onClick={() => {\n                acceptRequest(getCurrentUser()._id, projectId, user._id, roleId)\n                  .then((res) => {\n                    console.log(res);\n                    this.props.notificationAdded({\n                      userId: user._id,\n                      message: `New Role Accepted by ${\n                        getCurrentUser().name\n                      }, Time to show off my skills B)`,\n                      type: \"RoleAccepted\",\n                      projectId: projectId,\n                    });\n                    this.props.notificationAdded({\n                      userId: getCurrentUser()._id,\n                      message: `@${user.username} added to project! Welcome the new Member`,\n                      type: \"NewMember\",\n                      projectId: projectId,\n                    });\n                  })\n                  .then(() => window.location.reload());\n              }}\n            >\n              Accept\n            </Button>\n          </div>\n          <div className=\"ml-1\">\n            <Button\n              onClick={() => {\n                declineRequest(\n                  getCurrentUser()._id,\n                  projectId,\n                  user._id,\n                  roleId\n                )\n                  .then((res) => {\n                    console.log(res);\n                    this.props.notificationAdded({\n                      userId: user._id,\n                      message: `Role Declined by ${getCurrentUser().name} :(`,\n                      type: \"RoleDeclined\",\n                      projectId: projectId,\n                    });\n                  })\n                  .then(() => window.location.reload());\n              }}\n            >\n              Decline\n            </Button>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  notifications: state.notifications.notifications,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  notificationAdded: (params) => dispatch(notificationAdded(params)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Requests);\n","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Menu.js",["326","327","328","329","330","331","332","333","334","335","336","337","338"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\RecommendedRolePeople.js",["339"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\cpm.js",["340","341","342"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Social.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\layout\\Task.js",["343"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\DragDropVideo.js",["344","345"],{"ruleId":"346","severity":1,"message":"347","line":3,"column":46,"nodeType":"348","messageId":"349","endLine":3,"endColumn":47},{"ruleId":"346","severity":1,"message":"347","line":18,"column":46,"nodeType":"348","messageId":"349","endLine":18,"endColumn":47},{"ruleId":"346","severity":1,"message":"347","line":34,"column":46,"nodeType":"348","messageId":"349","endLine":34,"endColumn":47},{"ruleId":"346","severity":1,"message":"347","line":155,"column":51,"nodeType":"348","messageId":"349","endLine":155,"endColumn":52},{"ruleId":"346","severity":1,"message":"347","line":194,"column":51,"nodeType":"348","messageId":"349","endLine":194,"endColumn":52},{"ruleId":"346","severity":1,"message":"347","line":210,"column":49,"nodeType":"348","messageId":"349","endLine":210,"endColumn":50},{"ruleId":"350","replacedBy":"351"},{"ruleId":"352","replacedBy":"353"},{"ruleId":"354","severity":1,"message":"355","line":3,"column":26,"nodeType":"356","messageId":"357","endLine":3,"endColumn":31},{"ruleId":"354","severity":1,"message":"358","line":13,"column":10,"nodeType":"356","messageId":"357","endLine":13,"endColumn":22},{"ruleId":"354","severity":1,"message":"359","line":2,"column":10,"nodeType":"356","messageId":"357","endLine":2,"endColumn":19},{"ruleId":"354","severity":1,"message":"360","line":2,"column":21,"nodeType":"356","messageId":"357","endLine":2,"endColumn":25},{"ruleId":"354","severity":1,"message":"361","line":2,"column":27,"nodeType":"356","messageId":"357","endLine":2,"endColumn":33},{"ruleId":"362","severity":1,"message":"363","line":498,"column":42,"nodeType":"364","messageId":"365","endLine":498,"endColumn":44},{"ruleId":"354","severity":1,"message":"366","line":4,"column":10,"nodeType":"356","messageId":"357","endLine":4,"endColumn":14},{"ruleId":"354","severity":1,"message":"367","line":7,"column":26,"nodeType":"356","messageId":"357","endLine":7,"endColumn":43},{"ruleId":"368","severity":1,"message":"369","line":33,"column":6,"nodeType":"370","endLine":33,"endColumn":18,"suggestions":"371"},{"ruleId":"354","severity":1,"message":"361","line":3,"column":10,"nodeType":"356","messageId":"357","endLine":3,"endColumn":16},{"ruleId":"354","severity":1,"message":"372","line":3,"column":18,"nodeType":"356","messageId":"357","endLine":3,"endColumn":32},{"ruleId":"354","severity":1,"message":"373","line":3,"column":34,"nodeType":"356","messageId":"357","endLine":3,"endColumn":41},{"ruleId":"354","severity":1,"message":"374","line":12,"column":21,"nodeType":"356","messageId":"357","endLine":12,"endColumn":25},{"ruleId":"354","severity":1,"message":"375","line":3,"column":10,"nodeType":"356","messageId":"357","endLine":3,"endColumn":15},{"ruleId":"354","severity":1,"message":"376","line":5,"column":8,"nodeType":"356","messageId":"357","endLine":5,"endColumn":12},{"ruleId":"354","severity":1,"message":"377","line":6,"column":8,"nodeType":"356","messageId":"357","endLine":6,"endColumn":12},{"ruleId":"354","severity":1,"message":"378","line":8,"column":3,"nodeType":"356","messageId":"357","endLine":8,"endColumn":10},{"ruleId":"354","severity":1,"message":"379","line":12,"column":3,"nodeType":"356","messageId":"357","endLine":12,"endColumn":17},{"ruleId":"354","severity":1,"message":"380","line":15,"column":3,"nodeType":"356","messageId":"357","endLine":15,"endColumn":10},{"ruleId":"354","severity":1,"message":"361","line":25,"column":10,"nodeType":"356","messageId":"357","endLine":25,"endColumn":16},{"ruleId":"362","severity":1,"message":"363","line":72,"column":22,"nodeType":"364","messageId":"365","endLine":72,"endColumn":24},{"ruleId":"362","severity":1,"message":"381","line":79,"column":11,"nodeType":"382","messageId":"383","endLine":79,"endColumn":18},{"ruleId":"362","severity":1,"message":"381","line":126,"column":37,"nodeType":"364","messageId":"384","endLine":126,"endColumn":39},{"ruleId":"362","severity":1,"message":"381","line":180,"column":45,"nodeType":"364","messageId":"384","endLine":180,"endColumn":47},{"ruleId":"362","severity":1,"message":"381","line":191,"column":22,"nodeType":"364","messageId":"384","endLine":191,"endColumn":24},{"ruleId":"362","severity":1,"message":"363","line":209,"column":25,"nodeType":"364","messageId":"365","endLine":209,"endColumn":27},{"ruleId":"362","severity":1,"message":"381","line":214,"column":9,"nodeType":"382","messageId":"383","endLine":214,"endColumn":16},{"ruleId":"362","severity":1,"message":"381","line":215,"column":47,"nodeType":"364","messageId":"384","endLine":215,"endColumn":49},{"ruleId":"362","severity":1,"message":"363","line":250,"column":48,"nodeType":"364","messageId":"365","endLine":250,"endColumn":50},{"ruleId":"354","severity":1,"message":"385","line":282,"column":15,"nodeType":"356","messageId":"357","endLine":282,"endColumn":24},{"ruleId":"362","severity":1,"message":"381","line":365,"column":24,"nodeType":"364","messageId":"384","endLine":365,"endColumn":26},{"ruleId":"362","severity":1,"message":"381","line":368,"column":27,"nodeType":"364","messageId":"384","endLine":368,"endColumn":29},{"ruleId":"386","severity":1,"message":"387","line":370,"column":31,"nodeType":"388","messageId":"389","endLine":370,"endColumn":47},{"ruleId":"354","severity":1,"message":"390","line":395,"column":15,"nodeType":"356","messageId":"357","endLine":395,"endColumn":18},{"ruleId":"354","severity":1,"message":"390","line":416,"column":15,"nodeType":"356","messageId":"357","endLine":416,"endColumn":18},{"ruleId":"362","severity":1,"message":"381","line":444,"column":31,"nodeType":"364","messageId":"384","endLine":444,"endColumn":33},{"ruleId":"362","severity":1,"message":"381","line":491,"column":24,"nodeType":"364","messageId":"384","endLine":491,"endColumn":26},{"ruleId":"362","severity":1,"message":"381","line":495,"column":27,"nodeType":"364","messageId":"384","endLine":495,"endColumn":29},{"ruleId":"386","severity":1,"message":"387","line":497,"column":31,"nodeType":"388","messageId":"389","endLine":497,"endColumn":47},{"ruleId":"354","severity":1,"message":"390","line":522,"column":15,"nodeType":"356","messageId":"357","endLine":522,"endColumn":18},{"ruleId":"354","severity":1,"message":"390","line":543,"column":15,"nodeType":"356","messageId":"357","endLine":543,"endColumn":18},{"ruleId":"362","severity":1,"message":"381","line":570,"column":35,"nodeType":"364","messageId":"384","endLine":570,"endColumn":37},{"ruleId":"354","severity":1,"message":"391","line":610,"column":33,"nodeType":"356","messageId":"357","endLine":610,"endColumn":38},{"ruleId":"362","severity":1,"message":"381","line":614,"column":22,"nodeType":"364","messageId":"384","endLine":614,"endColumn":24},{"ruleId":"362","severity":1,"message":"381","line":617,"column":34,"nodeType":"364","messageId":"384","endLine":617,"endColumn":36},{"ruleId":"362","severity":1,"message":"381","line":31,"column":32,"nodeType":"364","messageId":"384","endLine":31,"endColumn":34},{"ruleId":"350","replacedBy":"392"},{"ruleId":"352","replacedBy":"393"},{"ruleId":"354","severity":1,"message":"394","line":16,"column":8,"nodeType":"356","messageId":"357","endLine":16,"endColumn":19},{"ruleId":"354","severity":1,"message":"359","line":24,"column":3,"nodeType":"356","messageId":"357","endLine":24,"endColumn":12},{"ruleId":"354","severity":1,"message":"395","line":40,"column":8,"nodeType":"356","messageId":"357","endLine":40,"endColumn":16},{"ruleId":"354","severity":1,"message":"396","line":41,"column":8,"nodeType":"356","messageId":"357","endLine":41,"endColumn":16},{"ruleId":"362","severity":1,"message":"363","line":57,"column":40,"nodeType":"364","messageId":"365","endLine":57,"endColumn":42},{"ruleId":"354","severity":1,"message":"397","line":97,"column":9,"nodeType":"356","messageId":"357","endLine":97,"endColumn":16},{"ruleId":"398","severity":1,"message":"399","line":183,"column":15,"nodeType":"400","endLine":190,"endColumn":17},{"ruleId":"354","severity":1,"message":"401","line":229,"column":7,"nodeType":"356","messageId":"357","endLine":229,"endColumn":11},{"ruleId":"398","severity":1,"message":"399","line":249,"column":19,"nodeType":"400","endLine":256,"endColumn":21},{"ruleId":"354","severity":1,"message":"402","line":2,"column":8,"nodeType":"356","messageId":"357","endLine":2,"endColumn":25},{"ruleId":"354","severity":1,"message":"366","line":6,"column":20,"nodeType":"356","messageId":"357","endLine":6,"endColumn":24},{"ruleId":"354","severity":1,"message":"403","line":8,"column":10,"nodeType":"356","messageId":"357","endLine":8,"endColumn":15},{"ruleId":"354","severity":1,"message":"404","line":8,"column":17,"nodeType":"356","messageId":"357","endLine":8,"endColumn":25},{"ruleId":"354","severity":1,"message":"405","line":9,"column":10,"nodeType":"356","messageId":"357","endLine":9,"endColumn":15},{"ruleId":"354","severity":1,"message":"406","line":10,"column":10,"nodeType":"356","messageId":"357","endLine":10,"endColumn":18},{"ruleId":"362","severity":1,"message":"381","line":19,"column":25,"nodeType":"364","messageId":"384","endLine":19,"endColumn":27},{"ruleId":"362","severity":1,"message":"381","line":40,"column":32,"nodeType":"364","messageId":"384","endLine":40,"endColumn":34},{"ruleId":"354","severity":1,"message":"407","line":3,"column":10,"nodeType":"356","messageId":"357","endLine":3,"endColumn":26},{"ruleId":"354","severity":1,"message":"408","line":8,"column":3,"nodeType":"356","messageId":"357","endLine":8,"endColumn":14},{"ruleId":"354","severity":1,"message":"409","line":9,"column":3,"nodeType":"356","messageId":"357","endLine":9,"endColumn":21},{"ruleId":"354","severity":1,"message":"410","line":10,"column":3,"nodeType":"356","messageId":"357","endLine":10,"endColumn":29},{"ruleId":"354","severity":1,"message":"411","line":12,"column":13,"nodeType":"356","messageId":"357","endLine":12,"endColumn":14},{"ruleId":"354","severity":1,"message":"412","line":15,"column":10,"nodeType":"356","messageId":"357","endLine":15,"endColumn":20},{"ruleId":"354","severity":1,"message":"375","line":17,"column":10,"nodeType":"356","messageId":"357","endLine":17,"endColumn":15},{"ruleId":"354","severity":1,"message":"361","line":17,"column":17,"nodeType":"356","messageId":"357","endLine":17,"endColumn":23},{"ruleId":"354","severity":1,"message":"413","line":20,"column":10,"nodeType":"356","messageId":"357","endLine":20,"endColumn":21},{"ruleId":"354","severity":1,"message":"402","line":25,"column":8,"nodeType":"356","messageId":"357","endLine":25,"endColumn":25},{"ruleId":"362","severity":1,"message":"363","line":62,"column":46,"nodeType":"364","messageId":"365","endLine":62,"endColumn":48},{"ruleId":"354","severity":1,"message":"414","line":99,"column":13,"nodeType":"356","messageId":"357","endLine":99,"endColumn":26},{"ruleId":"354","severity":1,"message":"415","line":100,"column":50,"nodeType":"356","messageId":"357","endLine":100,"endColumn":60},{"ruleId":"398","severity":1,"message":"399","line":166,"column":27,"nodeType":"400","endLine":169,"endColumn":29},{"ruleId":"362","severity":1,"message":"363","line":213,"column":35,"nodeType":"364","messageId":"365","endLine":213,"endColumn":37},{"ruleId":"354","severity":1,"message":"394","line":16,"column":8,"nodeType":"356","messageId":"357","endLine":16,"endColumn":19},{"ruleId":"354","severity":1,"message":"359","line":24,"column":3,"nodeType":"356","messageId":"357","endLine":24,"endColumn":12},{"ruleId":"354","severity":1,"message":"360","line":26,"column":3,"nodeType":"356","messageId":"357","endLine":26,"endColumn":7},{"ruleId":"354","severity":1,"message":"396","line":39,"column":8,"nodeType":"356","messageId":"357","endLine":39,"endColumn":16},{"ruleId":"362","severity":1,"message":"363","line":52,"column":40,"nodeType":"364","messageId":"365","endLine":52,"endColumn":42},{"ruleId":"354","severity":1,"message":"397","line":92,"column":9,"nodeType":"356","messageId":"357","endLine":92,"endColumn":16},{"ruleId":"398","severity":1,"message":"399","line":161,"column":15,"nodeType":"400","endLine":168,"endColumn":17},{"ruleId":"354","severity":1,"message":"401","line":209,"column":7,"nodeType":"356","messageId":"357","endLine":209,"endColumn":11},{"ruleId":"398","severity":1,"message":"399","line":226,"column":19,"nodeType":"400","endLine":233,"endColumn":21},{"ruleId":"354","severity":1,"message":"394","line":15,"column":8,"nodeType":"356","messageId":"357","endLine":15,"endColumn":19},{"ruleId":"354","severity":1,"message":"359","line":23,"column":3,"nodeType":"356","messageId":"357","endLine":23,"endColumn":12},{"ruleId":"354","severity":1,"message":"360","line":25,"column":3,"nodeType":"356","messageId":"357","endLine":25,"endColumn":7},{"ruleId":"362","severity":1,"message":"363","line":51,"column":40,"nodeType":"364","messageId":"365","endLine":51,"endColumn":42},{"ruleId":"398","severity":1,"message":"399","line":160,"column":15,"nodeType":"400","endLine":167,"endColumn":17},{"ruleId":"354","severity":1,"message":"401","line":207,"column":7,"nodeType":"356","messageId":"357","endLine":207,"endColumn":11},{"ruleId":"398","severity":1,"message":"399","line":224,"column":19,"nodeType":"400","endLine":231,"endColumn":21},{"ruleId":"350","replacedBy":"416"},{"ruleId":"352","replacedBy":"417"},{"ruleId":"354","severity":1,"message":"359","line":23,"column":3,"nodeType":"356","messageId":"357","endLine":23,"endColumn":12},{"ruleId":"354","severity":1,"message":"360","line":25,"column":3,"nodeType":"356","messageId":"357","endLine":25,"endColumn":7},{"ruleId":"354","severity":1,"message":"396","line":31,"column":8,"nodeType":"356","messageId":"357","endLine":31,"endColumn":16},{"ruleId":"354","severity":1,"message":"418","line":36,"column":13,"nodeType":"356","messageId":"357","endLine":36,"endColumn":24},{"ruleId":"362","severity":1,"message":"363","line":53,"column":40,"nodeType":"364","messageId":"365","endLine":53,"endColumn":42},{"ruleId":"398","severity":1,"message":"399","line":163,"column":15,"nodeType":"400","endLine":170,"endColumn":17},{"ruleId":"354","severity":1,"message":"401","line":211,"column":7,"nodeType":"356","messageId":"357","endLine":211,"endColumn":11},{"ruleId":"398","severity":1,"message":"399","line":232,"column":19,"nodeType":"400","endLine":239,"endColumn":21},{"ruleId":"354","severity":1,"message":"394","line":17,"column":8,"nodeType":"356","messageId":"357","endLine":17,"endColumn":19},{"ruleId":"354","severity":1,"message":"359","line":19,"column":10,"nodeType":"356","messageId":"357","endLine":19,"endColumn":19},{"ruleId":"354","severity":1,"message":"396","line":28,"column":8,"nodeType":"356","messageId":"357","endLine":28,"endColumn":16},{"ruleId":"362","severity":1,"message":"363","line":49,"column":40,"nodeType":"364","messageId":"365","endLine":49,"endColumn":42},{"ruleId":"354","severity":1,"message":"419","line":67,"column":13,"nodeType":"356","messageId":"357","endLine":67,"endColumn":17},{"ruleId":"398","severity":1,"message":"399","line":188,"column":15,"nodeType":"400","endLine":195,"endColumn":17},{"ruleId":"354","severity":1,"message":"420","line":238,"column":9,"nodeType":"356","messageId":"357","endLine":238,"endColumn":11},{"ruleId":"362","severity":1,"message":"381","line":243,"column":36,"nodeType":"364","messageId":"384","endLine":243,"endColumn":38},{"ruleId":"398","severity":1,"message":"399","line":254,"column":19,"nodeType":"400","endLine":261,"endColumn":21},{"ruleId":"354","severity":1,"message":"421","line":26,"column":10,"nodeType":"356","messageId":"357","endLine":26,"endColumn":38},{"ruleId":"354","severity":1,"message":"422","line":28,"column":7,"nodeType":"356","messageId":"357","endLine":28,"endColumn":15},{"ruleId":"362","severity":1,"message":"381","line":42,"column":35,"nodeType":"364","messageId":"384","endLine":42,"endColumn":37},{"ruleId":"354","severity":1,"message":"414","line":74,"column":11,"nodeType":"356","messageId":"357","endLine":74,"endColumn":24},{"ruleId":"354","severity":1,"message":"423","line":81,"column":11,"nodeType":"356","messageId":"357","endLine":81,"endColumn":19},{"ruleId":"354","severity":1,"message":"402","line":19,"column":8,"nodeType":"356","messageId":"357","endLine":19,"endColumn":25},{"ruleId":"354","severity":1,"message":"424","line":22,"column":10,"nodeType":"356","messageId":"357","endLine":22,"endColumn":33},{"ruleId":"362","severity":1,"message":"381","line":54,"column":25,"nodeType":"364","messageId":"384","endLine":54,"endColumn":27},{"ruleId":"354","severity":1,"message":"361","line":2,"column":10,"nodeType":"356","messageId":"357","endLine":2,"endColumn":16},{"ruleId":"362","severity":1,"message":"381","line":15,"column":23,"nodeType":"364","messageId":"384","endLine":15,"endColumn":25},{"ruleId":"354","severity":1,"message":"425","line":7,"column":10,"nodeType":"356","messageId":"357","endLine":7,"endColumn":19},{"ruleId":"354","severity":1,"message":"360","line":18,"column":3,"nodeType":"356","messageId":"357","endLine":18,"endColumn":7},{"ruleId":"354","severity":1,"message":"426","line":19,"column":3,"nodeType":"356","messageId":"357","endLine":19,"endColumn":12},{"ruleId":"354","severity":1,"message":"427","line":20,"column":3,"nodeType":"356","messageId":"357","endLine":20,"endColumn":16},{"ruleId":"354","severity":1,"message":"428","line":39,"column":10,"nodeType":"356","messageId":"357","endLine":39,"endColumn":25},{"ruleId":"354","severity":1,"message":"429","line":102,"column":9,"nodeType":"356","messageId":"357","endLine":102,"endColumn":16},{"ruleId":"354","severity":1,"message":"430","line":103,"column":13,"nodeType":"356","messageId":"357","endLine":103,"endColumn":22},{"ruleId":"362","severity":1,"message":"381","line":106,"column":30,"nodeType":"364","messageId":"384","endLine":106,"endColumn":32},{"ruleId":"354","severity":1,"message":"431","line":22,"column":11,"nodeType":"356","messageId":"357","endLine":22,"endColumn":14},{"ruleId":"362","severity":1,"message":"381","line":24,"column":36,"nodeType":"364","messageId":"384","endLine":24,"endColumn":38},{"ruleId":"362","severity":1,"message":"381","line":26,"column":32,"nodeType":"364","messageId":"384","endLine":26,"endColumn":34},{"ruleId":"354","severity":1,"message":"432","line":13,"column":10,"nodeType":"356","messageId":"357","endLine":13,"endColumn":24},{"ruleId":"362","severity":1,"message":"381","line":19,"column":26,"nodeType":"364","messageId":"384","endLine":19,"endColumn":28},{"ruleId":"368","severity":1,"message":"433","line":27,"column":6,"nodeType":"370","endLine":27,"endColumn":8,"suggestions":"434"},{"ruleId":"354","severity":1,"message":"435","line":5,"column":8,"nodeType":"356","messageId":"357","endLine":5,"endColumn":29},{"ruleId":"362","severity":1,"message":"381","line":20,"column":26,"nodeType":"364","messageId":"384","endLine":20,"endColumn":28},{"ruleId":"368","severity":1,"message":"436","line":28,"column":6,"nodeType":"370","endLine":28,"endColumn":8,"suggestions":"437"},{"ruleId":"354","severity":1,"message":"438","line":11,"column":8,"nodeType":"356","messageId":"357","endLine":11,"endColumn":14},{"ruleId":"362","severity":1,"message":"381","line":73,"column":31,"nodeType":"364","messageId":"384","endLine":73,"endColumn":33},{"ruleId":"354","severity":1,"message":"439","line":123,"column":38,"nodeType":"356","messageId":"357","endLine":123,"endColumn":44},{"ruleId":"354","severity":1,"message":"440","line":20,"column":11,"nodeType":"356","messageId":"357","endLine":20,"endColumn":14},{"ruleId":"354","severity":1,"message":"409","line":4,"column":10,"nodeType":"356","messageId":"357","endLine":4,"endColumn":28},{"ruleId":"354","severity":1,"message":"441","line":6,"column":10,"nodeType":"356","messageId":"357","endLine":6,"endColumn":13},{"ruleId":"354","severity":1,"message":"442","line":12,"column":10,"nodeType":"356","messageId":"357","endLine":12,"endColumn":24},{"ruleId":"354","severity":1,"message":"443","line":13,"column":8,"nodeType":"356","messageId":"357","endLine":13,"endColumn":14},{"ruleId":"354","severity":1,"message":"444","line":22,"column":9,"nodeType":"356","messageId":"357","endLine":22,"endColumn":17},{"ruleId":"445","severity":1,"message":"446","line":71,"column":27,"nodeType":"400","endLine":71,"endColumn":74},{"ruleId":"445","severity":1,"message":"446","line":85,"column":27,"nodeType":"400","endLine":85,"endColumn":74},{"ruleId":"445","severity":1,"message":"446","line":99,"column":27,"nodeType":"400","endLine":99,"endColumn":75},{"ruleId":"445","severity":1,"message":"446","line":113,"column":27,"nodeType":"400","endLine":113,"endColumn":75},{"ruleId":"445","severity":1,"message":"446","line":127,"column":27,"nodeType":"400","endLine":127,"endColumn":75},{"ruleId":"445","severity":1,"message":"446","line":161,"column":27,"nodeType":"400","endLine":161,"endColumn":75},{"ruleId":"445","severity":1,"message":"446","line":181,"column":27,"nodeType":"400","endLine":181,"endColumn":75},{"ruleId":"445","severity":1,"message":"446","line":201,"column":27,"nodeType":"400","endLine":201,"endColumn":75},{"ruleId":"447","severity":1,"message":"448","line":15,"column":11,"nodeType":"400","endLine":15,"endColumn":78},{"ruleId":"354","severity":1,"message":"449","line":2,"column":10,"nodeType":"356","messageId":"357","endLine":2,"endColumn":18},{"ruleId":"354","severity":1,"message":"450","line":4,"column":5,"nodeType":"356","messageId":"357","endLine":4,"endColumn":15},{"ruleId":"354","severity":1,"message":"451","line":5,"column":5,"nodeType":"356","messageId":"357","endLine":5,"endColumn":21},{"ruleId":"362","severity":1,"message":"363","line":8,"column":42,"nodeType":"364","messageId":"365","endLine":8,"endColumn":44},{"ruleId":"354","severity":1,"message":"375","line":2,"column":18,"nodeType":"356","messageId":"357","endLine":2,"endColumn":23},{"ruleId":"354","severity":1,"message":"452","line":2,"column":25,"nodeType":"356","messageId":"357","endLine":2,"endColumn":34},"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-native-reassign",["453"],"no-negated-in-lhs",["454"],"no-unused-vars","'toast' is defined but never used.","Identifier","unusedVar","'DropzoneArea' is defined but never used.","'Accordion' is defined but never used.","'Card' is defined but never used.","'Button' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Link' is defined but never used.","'createYoutubePost' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'validateYouTubeUrl'. Either include it or remove the dependency array.","ArrayExpression",["455"],"'OverlayTrigger' is defined but never used.","'Tooltip' is defined but never used.","'type' is assigned a value but never used.","'Modal' is defined but never used.","'Pert' is defined but never used.","'Task' is defined but never used.","'addEdge' is defined but never used.","'removeElements' is defined but never used.","'addTask' is defined but never used.","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","expectedInside","'finaldiff' is assigned a value but never used.","no-self-assign","'task.description' is assigned to itself.","MemberExpression","selfAssignment","'ele' is assigned a value but never used.","'tasks' is assigned a value but never used.",["453"],["454"],"'CommentIcon' is defined but never used.","'EditPost' is defined but never used.","'Dropdown' is defined but never used.","'picture' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'tags' is assigned a value but never used.","'SearchTwoToneIcon' is defined but never used.","'query' is assigned a value but never used.","'setQuery' is assigned a value but never used.","'users' is assigned a value but never used.","'projects' is assigned a value but never used.","'getNotifications' is defined but never used.","'getNotified' is defined but never used.","'clearNotifications' is defined but never used.","'setSegregatedNotifications' is defined but never used.","'_' is defined but never used.","'getProject' is defined but never used.","'getAllPosts' is defined but never used.","'notifications' is assigned a value but never used.","'youtubeUrl' is assigned a value but never used.",["453"],["454"],"'youtubeMeta' is defined but never used.","'post' is assigned a value but never used.","'id' is assigned a value but never used.","'removeAndUpdateNotifications' is defined but never used.","'BASE_URL' is assigned a value but never used.","'selected' is assigned a value but never used.","'ReactSearchAutocomplete' is defined but never used.","'TextField' is defined but never used.","'ListGroup' is defined but never used.","'ListGroupItem' is defined but never used.","'sortedLastIndex' is defined but never used.","'overdue' is assigned a value but never used.","'following' is assigned a value but never used.","'obj' is assigned a value but never used.","'followingUsers' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'following'. Either include them or remove the dependency array.",["456"],"'PersonAddDisabledIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'followers'. Either include them or remove the dependency array.",["457"],"'moment' is defined but never used.","'skills' is assigned a value but never used.","'url' is assigned a value but never used.","'Nav' is defined but never used.","'getCurrentUser' is defined but never used.","'socket' is defined but never used.","'dispatch' is assigned a value but never used.","jsx-a11y/role-supports-aria-props","The attribute aria-haspopup is not supported by the role listitem. This role is implicit on the element li.","react/jsx-pascal-case","Imported JSX component User_Role must be in PascalCase or SCREAMING_SNAKE_CASE","'getTasks' is defined but never used.","'lastNodeId' is assigned a value but never used.","'lastConnectionId' is assigned a value but never used.","'ModalBody' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"458","fix":"459"},{"desc":"460","fix":"461"},{"desc":"462","fix":"463"},"Update the dependencies array to be: [props.text, validateYouTubeUrl]",{"range":"464","text":"465"},"Update the dependencies array to be: [dispatch, following]",{"range":"466","text":"467"},"Update the dependencies array to be: [dispatch, followers]",{"range":"468","text":"469"},[1199,1211],"[props.text, validateYouTubeUrl]",[1093,1095],"[dispatch, following]",[1113,1115],"[dispatch, followers]"]