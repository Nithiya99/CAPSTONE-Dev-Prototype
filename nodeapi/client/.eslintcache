[{"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\taskComponents\\TrelloTask.js":"1","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\index.js":"2","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\JoinProject.js":"3","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\posts.js":"4","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\YoutubePost.js":"5","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\Socket.js":"6","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\LeaveProject.js":"7","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Tagify\\Assigner.js":"8","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\YoutubeURLPost.js":"9","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Social.js":"10","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Notifications.js":"11","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\MyProjects.js":"12","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\layout\\LayoutComponent.js":"13","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\ProjectDashboard.js":"14","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Home.js":"15","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\TextPostView.js":"16","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\Post.js":"17","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\VideoPost.js":"18","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\showPost.js":"19","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\NavBar.js":"20","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Menu.js":"21","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\UserRecommendation.js":"22","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\DeleteProject.js":"23","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Form.js":"24","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\SearchProjectBar.js":"25","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\DragDropVideo.js":"26","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\notifications.js":"27","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\apiNotifications.js":"28"},{"size":11520,"mtime":1624178711415,"results":"29","hashOfConfig":"30"},{"size":427,"mtime":1618198716000,"results":"31","hashOfConfig":"30"},{"size":11268,"mtime":1621772740242,"results":"32","hashOfConfig":"30"},{"size":1996,"mtime":1621614272760,"results":"33","hashOfConfig":"30"},{"size":11828,"mtime":1621946742505,"results":"34","hashOfConfig":"30"},{"size":242,"mtime":1618272929988,"results":"35","hashOfConfig":"30"},{"size":2668,"mtime":1621913510177,"results":"36","hashOfConfig":"30"},{"size":1452,"mtime":1618198716000,"results":"37","hashOfConfig":"30"},{"size":4385,"mtime":1621613737789,"results":"38","hashOfConfig":"30"},{"size":4033,"mtime":1621611019914,"results":"39","hashOfConfig":"30"},{"size":13085,"mtime":1621912968800,"results":"40","hashOfConfig":"30"},{"size":36171,"mtime":1621913329500,"results":"41","hashOfConfig":"30"},{"size":23474,"mtime":1624178533962,"results":"42","hashOfConfig":"30"},{"size":24865,"mtime":1621931851542,"results":"43","hashOfConfig":"30"},{"size":11249,"mtime":1621947533400,"results":"44","hashOfConfig":"30"},{"size":9649,"mtime":1621933222667,"results":"45","hashOfConfig":"30"},{"size":11735,"mtime":1621949614807,"results":"46","hashOfConfig":"30"},{"size":10810,"mtime":1621946737113,"results":"47","hashOfConfig":"30"},{"size":10712,"mtime":1621946730722,"results":"48","hashOfConfig":"30"},{"size":346,"mtime":1618198716000,"results":"49","hashOfConfig":"30"},{"size":14978,"mtime":1621841865666,"results":"50","hashOfConfig":"30"},{"size":3576,"mtime":1619598848257,"results":"51","hashOfConfig":"30"},{"size":1412,"mtime":1618198716000,"results":"52","hashOfConfig":"30"},{"size":4451,"mtime":1618198716000,"results":"53","hashOfConfig":"30"},{"size":4178,"mtime":1621773052142,"results":"54","hashOfConfig":"30"},{"size":4346,"mtime":1621831134361,"results":"55","hashOfConfig":"30"},{"size":2266,"mtime":1621949774795,"results":"56","hashOfConfig":"30"},{"size":1034,"mtime":1621949363836,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13vq143",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\taskComponents\\TrelloTask.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\index.js",[],["116","117"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\JoinProject.js",["118","119"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\posts.js",["120"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\YoutubePost.js",["121","122","123","124","125","126","127","128"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\Socket.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\LeaveProject.js",["129"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Tagify\\Assigner.js",["130","131","132"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\YoutubeURLPost.js",["133","134","135"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Social.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Notifications.js",["136","137","138","139","140"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\MyProjects.js",["141","142","143","144","145","146"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\layout\\LayoutComponent.js",["147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178"],"import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport Pert from \"./Pert\";\r\nimport Task from \"./Task\";\r\nimport ReactFlow, {\r\n  addEdge,\r\n  Background,\r\n  Controls,\r\n  MiniMap,\r\n  removeElements,\r\n} from \"react-flow-renderer\";\r\nimport {\r\n  addTask,\r\n  getTasks,\r\n  putConnections,\r\n  deleteConnections,\r\n  getConnections,\r\n  putPredecessors,\r\n  putPosition,\r\n  putExpectedTime,\r\n} from \"../apiProject\";\r\nimport jsPERT from \"js-pert\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport {\r\n  nodeAdded,\r\n  connectionAdded,\r\n  replaceNodes,\r\n  replaceConnections,\r\n  replaceElements,\r\n  setPert,\r\n  setExpectedTime,\r\n  setSlacks,\r\n  setCriticalPath,\r\n} from \"../../store/cpm\";\r\nimport { updateTasks } from \"../../store/tasks\";\r\nimport { getCurrentUser } from \"./../../user/apiUser\";\r\nimport moment from \"moment\";\r\nconst styles = (theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 3, 3),\r\n  },\r\n});\r\nclass LayoutComponent extends Component {\r\n  state = {\r\n    elements: [],\r\n    tasks: [],\r\n    nodes: [],\r\n    pert: {},\r\n    task: {},\r\n    show: false,\r\n    checked: false,\r\n    bleh: 1,\r\n  };\r\n\r\n  onElementsRemove = (elementsToRemove) => {\r\n    if (this.props.project.leader.toString() === getCurrentUser()._id) {\r\n      let cons = this.props.connections;\r\n      const filteredConnections = cons.filter(\r\n        (con) => con.id !== elementsToRemove[0].id\r\n      );\r\n      this.props.replaceConnections({ connections: filteredConnections });\r\n      cons.map((con) => {\r\n        if (con.id === elementsToRemove[0].id) {\r\n          // console.log(con.id, elementsToRemove[0].id);\r\n          deleteConnections(this.props.project._id, con._id).then((data) => {\r\n            console.log(\"connection deleted\");\r\n            // this.pertCalc();\r\n          });\r\n          return;\r\n        }\r\n      });\r\n    }\r\n  };\r\n  onLoad = (reactFlowInstance) => {\r\n    reactFlowInstance.fitView();\r\n  };\r\n  onNodeDragStop = (e, node) => {\r\n    // console.log(node.position, node.data._id);\r\n    putPosition(this.props.project._id, node.data._id, node.position).then(\r\n      () => {\r\n        console.log(node.position + \" is saved\");\r\n      }\r\n    );\r\n  };\r\n  edgeInElements(elements, edge) {\r\n    let inside = false;\r\n    elements.map((elem) => {\r\n      if (elem.id.toString() === edge.id.toString()) {\r\n        inside = true;\r\n      }\r\n      return \"done\";\r\n    });\r\n    return inside;\r\n  }\r\n  onConnect = (params) => {\r\n    if (this.props.project.leader.toString() === getCurrentUser()._id) {\r\n      let source = params.source;\r\n      let target = params.target;\r\n      if (source !== undefined && target !== undefined) {\r\n        let edge = {\r\n          id:\r\n            \"reactflow__edge-\" +\r\n            source.toString() +\r\n            \"null-\" +\r\n            target.toString() +\r\n            \"null\",\r\n          source: source.toString(),\r\n          sourceHandle: null,\r\n          target: target.toString(),\r\n          targetHandle: null,\r\n        };\r\n        // console.log(this.state.elements);\r\n        let sourceId = \"\";\r\n        let targetId = \"\";\r\n        // console.log(this.props.nodes);\r\n        this.props.nodes.map((elem) => {\r\n          if (elem.id === source) {\r\n            sourceId = elem.key;\r\n          }\r\n          if (elem.id === target) {\r\n            targetId = elem.key;\r\n          }\r\n        });\r\n        putPredecessors(this.props.project._id, targetId, sourceId).then(() => {\r\n          console.log(sourceId + \" has new Predecessor \" + targetId);\r\n        });\r\n        // let ele = [...this.state.elements];\r\n        // if (!this.edgeInElements(ele, edge)) {\r\n        //   ele.push(edge);\r\n        putConnections(this.props.project._id, sourceId, targetId).then(() => {\r\n          console.log(\"connection \" + sourceId + \"to \" + targetId + \"added\");\r\n        });\r\n        // }\r\n        this.props.connectionAdded({ connection: edge });\r\n        // this.setState({ elements: ele });\r\n        // console.log(this.state.elements);\r\n        this.pertCalc();\r\n      }\r\n    }\r\n  };\r\n  getIdOfObjectId = (elemId) => {\r\n    let id = {};\r\n    const { nodes } = this.props;\r\n    id = nodes.map((elem) => {\r\n      if (elem.data !== undefined)\r\n        if (elem.data._id.toString() === elemId) {\r\n          id = elem.id;\r\n        }\r\n      return id;\r\n    });\r\n    return id[id.length - 1];\r\n  };\r\n  // handleClose = () => {\r\n  //   this.setState({ show: false });\r\n  // };\r\n  pertCalc = () => {\r\n    // this.setState({ show: true });\r\n    // console.log(\"inside pertCalc:\", tasksObject);\r\n    let nodes = this.props.nodes.map((elem) => ({\r\n      ...elem,\r\n    }));\r\n    // let connections = this.props.connections.map((elem) => ({\r\n    //   ...elem,\r\n    // }));\r\n    // console.log(connections);\r\n    // let { connections } = this.props;\r\n    // console.log(\"props:\", this.props.connections);\r\n    // console.log(\"connections:\");\r\n    let ids = [];\r\n    this.props.connections.map((connection) => {\r\n      // console.log(connection.source, connection.target);\r\n      if (!ids.includes(connection.source)) {\r\n        ids.push(connection.source.toString());\r\n      }\r\n      if (!ids.includes(connection.target)) {\r\n        ids.push(connection.target.toString());\r\n      }\r\n    });\r\n    // console.log(\"nodes:\");\r\n    let newNodes = [];\r\n    nodes.map((node) => {\r\n      if (ids.includes(node.id)) newNodes.push(node);\r\n    });\r\n\r\n    let tasksObject = ids.includes(\"1\")\r\n      ? {\r\n          1: {\r\n            id: \"1\",\r\n            mostLikelyTime: 0,\r\n            optimisticTime: 0,\r\n            pessimisticTime: 0,\r\n            predecessors: [],\r\n          },\r\n        }\r\n      : {};\r\n    // console.log(\"TasksObject before node addition:\", tasksObject);\r\n    // console.log(ids);\r\n    // console.log(\"nodes sent for pertcalc:\", newNodes);\r\n    newNodes.map((elem) => {\r\n      if (\r\n        elem.data.predecessors.length === 0 ||\r\n        elem.data.predecessors === undefined\r\n      )\r\n        return;\r\n      elem.data.predecessors.map((pre, index) => {\r\n        let id = this.getIdOfObjectId(pre.toString());\r\n        // console.log(id);\r\n        let predecessors = [...elem.data.predecessors];\r\n        predecessors[index] = id.toString();\r\n        elem.data = { ...elem.data, predecessors };\r\n      });\r\n    });\r\n    // console.log(nodes);\r\n    tasksObject = newNodes.map((elem) => {\r\n      // console.log(\"tasksObject node:\", elem);\r\n      tasksObject[elem.id.toString()] = {\r\n        id: elem.id.toString(),\r\n        optimisticTime: elem.data.optimistic,\r\n        mostLikelyTime: elem.data.time,\r\n        pessimisticTime: elem.data.pessimistic,\r\n        predecessors: elem.data.predecessors,\r\n      };\r\n      return tasksObject;\r\n    });\r\n    let tasksObjectFinal = tasksObject[tasksObject.length - 1];\r\n    console.log(\"TasksObject:\");\r\n    console.log(tasksObjectFinal);\r\n    console.log(\"Pert:\");\r\n    let pert = {};\r\n    // console.log(\"gonna set pert\");\r\n    try {\r\n      // if (tasksObject[1] !== undefined) {\r\n      // console.log(tasksObject[1]);\r\n      pert = jsPERT(tasksObjectFinal);\r\n      this.props.setPert({ pert });\r\n      console.log(this.props.pert);\r\n      // this.props.setSlacks({ slackObject: this.props.pert.slack });\r\n      // console.log(\"slacks:\");\r\n      let slackObject = {};\r\n      slackObject = newNodes.map((elem, index) => {\r\n        // console.log(elem.id, pert.slack[elem.id]);\r\n        if (index !== 0 && index !== 1) {\r\n          // console.log(\"Slack elem:\", elem);                           // Website design layout\r\n          console.log(\"index:\", index);\r\n          console.log(\"task:\", elem.data.label);\r\n          let created = elem.data.created;\r\n\r\n          // let earliestFinish = new Date(\r\n          //   pert.earliestFinishTimes[index] + created\r\n          // ); // 23/5 + 3\r\n          let createdDate = new Date(created);\r\n          let earliestFinish = moment(createdDate, \"DD-MM-YYYY\").add(\r\n            pert.earliestFinishTimes[index + 1],\r\n            \"days\"\r\n          );\r\n          earliestFinish = earliestFinish._d;\r\n          // let slack = new Date(pert.slack[elem.id]);\r\n          const diffTime = Math.abs(earliestFinish - createdDate);\r\n          const duration = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n          // console.log(duration);\r\n          let today = new Date();\r\n          let todayDate = new Date(today.toUTCString()); // 25/5\r\n          let earliestStart = moment(createdDate, \"DD-MM-YYYY\").add(\r\n            +pert.earliestStartTimes[index + 1],\r\n            \"days\"\r\n          );\r\n          earliestStart = earliestStart._d;\r\n          // console.log(todayDate, startTime._d);\r\n          const diffTime2 = Math.abs(todayDate - earliestStart);\r\n          let daysDone = Math.ceil(diffTime2 / (1000 * 60 * 60 * 24));\r\n          // console.log(daysDone);\r\n          let finaldiff = Math.abs(duration - daysDone);\r\n          let days = Math.round(\r\n            (earliestFinish - todayDate) / (1000 * 60 * 60 * 24)\r\n          );\r\n          console.log(earliestStart, todayDate, earliestFinish);\r\n          console.log(\r\n            \"no. of days done:\",\r\n            Math.round(todayDate - earliestStart) / (1000 * 60 * 60 * 24)\r\n          );\r\n          console.log(\r\n            \"no. of days left:\",\r\n            Math.round((earliestFinish - todayDate) / (1000 * 60 * 60 * 24))\r\n          );\r\n          days = pert.slack[elem.id] !== 0 ? days + pert.slack[elem.id] : days;\r\n          // 23/5 25/5 26/5\r\n          // console.log(\"slack:\", pert.slack[elem.id]);\r\n          // console.log(\"day1:\", duration);\r\n          // console.log(\"day2:\", daysDone);\r\n          // console.log(\"days left:\", days);\r\n          // console.log(\"Overdue\", days >= 0 ? false : true);\r\n          // console.log(elem.data.label + \" \" + days + \" \" + pert.slack[elem.id]);\r\n          slackObject[elem.data.label] = {\r\n            slack: pert.slack[elem.id],\r\n            days: days,\r\n            daysPassed: Math.round(\r\n              (todayDate - earliestStart) / (1000 * 60 * 60 * 24)\r\n            ),\r\n            earliestStartDate: earliestStart,\r\n            todayDate: todayDate,\r\n            earliestFinishDate: earliestFinish,\r\n            overdue: days >= 0 ? false : true,\r\n          };\r\n          return slackObject;\r\n        }\r\n      });\r\n      console.log(\"slacks Object:\", slackObject[slackObject.length - 1]);\r\n      let obj = slackObject[slackObject.length - 1];\r\n      this.props.setSlacks({ slackObject: obj });\r\n      let newNodesObject = {};\r\n      newNodesObject = newNodes.map((node) => {\r\n        newNodesObject[node.id] = node.data;\r\n        return newNodesObject;\r\n      });\r\n      newNodesObject = newNodesObject[newNodesObject.length - 1];\r\n      // console.log(\"newNodesObject:\", newNodesObject);\r\n      let criticalPathData = {};\r\n      criticalPathData = pert.criticalPath.map((id) => {\r\n        criticalPathData[id] = newNodesObject[id];\r\n        return criticalPathData;\r\n      });\r\n      criticalPathData = criticalPathData[criticalPathData.length - 1];\r\n      console.log(\"criticalPathDataObject:\", criticalPathData);\r\n      this.props.setCriticalPath({ criticalPath: criticalPathData });\r\n      \r\n      this.props.setExpectedTime({\r\n        expectedTime: Math.floor(this.props.pert.latestFinishTimes.__end),\r\n      });\r\n      putExpectedTime(\r\n        this.props.project._id,\r\n        Math.floor(this.props.pert.latestFinishTimes.__end)\r\n      );\r\n      // }\r\n    } catch (err) {\r\n      // console.log(err);\r\n      this.props.setPert({ pert: {} });\r\n      // console.log(this.props.pert);\r\n      this.props.setExpectedTime({\r\n        expectedTime: 0,\r\n      });\r\n      putExpectedTime(this.props.project._id, 0);\r\n    }\r\n    // this.setState({ pert });\r\n  };\r\n  onElementClick = (event, element) => {\r\n    console.log(element);\r\n  };\r\n  componentDidMount() {\r\n    let newNodes = [];\r\n\r\n    getTasks(this.props.project._id).then((data) => {\r\n      // console.log(data.tasks);\r\n      const tasks = data.tasks;\r\n      let newTasks = [];\r\n      tasks.map((task) => {\r\n        newTasks.push({ ...task });\r\n      });\r\n      newTasks.map((task) => {\r\n        task[\"label\"] = task.taskName;\r\n        task[\"description\"] = task.description;\r\n        task[\"time\"] = task.mostLikelyTime;\r\n        task[\"optimistic\"] = task.optimisticTime;\r\n        task[\"pessimistic\"] = task.pessimisticTime;\r\n        if (\r\n          task.taskName !== \"Completed!!\" &&\r\n          task.taskName !== \"Lets Start Working\"\r\n        ) {\r\n          let newNode = {\r\n            key: task._id,\r\n            id: (newNodes.length + 1).toString(),\r\n            data: task,\r\n            sourcePosition: \"right\",\r\n            targetPosition: \"left\",\r\n            position:\r\n              task.position !== undefined\r\n                ? task.position\r\n                : {\r\n                    x: (Math.random() * window.innerWidth) / 2,\r\n                    y: (Math.random() * window.innerHeight) / 2,\r\n                  },\r\n          };\r\n          newNodes.push(newNode);\r\n        }\r\n        if (task.taskName === \"Lets Start Working\") {\r\n          let ele = [...this.state.elements];\r\n          let newNode = {\r\n            key: task._id,\r\n            id: \"1\",\r\n            type: \"input\",\r\n            data: {\r\n              label: \"Lets Start Working\",\r\n              description: \"Start working on tasks to complete project on time\",\r\n              pessimistic: 0,\r\n              time: 0,\r\n              optimistic: 0,\r\n              predecessors: [],\r\n              _id: task._id,\r\n            },\r\n            sourcePosition: \"right\",\r\n            position:\r\n              task.position !== undefined ? task.position : { x: 0, y: 0 },\r\n          };\r\n          newNodes.push(newNode);\r\n        }\r\n        if (task.taskName === \"Completed!!\") {\r\n          let ele = [...this.state.elements];\r\n          let newNode = {\r\n            key: task._id,\r\n            id: \"2\",\r\n            type: \"output\",\r\n            data: {\r\n              label: \"Completed!!\",\r\n              description: \"Yaaayy you gus have completed the project\",\r\n              pessimistic: 0,\r\n              time: 0,\r\n              optimistic: 0,\r\n              predecessors: task.predecessors,\r\n              _id: task._id,\r\n            },\r\n            targetPosition: \"left\",\r\n            position:\r\n              task.position !== undefined ? task.position : { x: 500, y: 0 },\r\n          };\r\n          newNodes.push(newNode);\r\n        }\r\n      });\r\n      this.props.replaceNodes({ nodes: newNodes });\r\n      // console.log(\"Mount nodes:\", this.props.nodes);\r\n    });\r\n    getConnections(this.props.project._id)\r\n      .then((data) => {\r\n        let connections = [];\r\n        data.connections.map((link) => {\r\n          newNodes.map((elem) => {\r\n            if (elem.key !== undefined) {\r\n              if (link.from.toString() === elem.key.toString()) {\r\n                this.setState({ source: elem });\r\n              }\r\n              if (link.to.toString() === elem.key.toString()) {\r\n                this.setState({ target: elem });\r\n              }\r\n            }\r\n          });\r\n          let source = this.state.source;\r\n          let target = this.state.target;\r\n          if (source !== undefined && target !== undefined) {\r\n            let edge = {\r\n              id:\r\n                \"reactflow__edge-\" +\r\n                source.id.toString() +\r\n                \"null-\" +\r\n                target.id.toString() +\r\n                \"null\",\r\n              source: source.id.toString(),\r\n              sourceHandle: null,\r\n              target: target.id.toString(),\r\n              targetHandle: null,\r\n              _id: link._id,\r\n            };\r\n            connections.push(edge);\r\n          }\r\n          return \"done\";\r\n        });\r\n        // console.log(connections);\r\n        this.props.replaceConnections({ connections: connections });\r\n      })\r\n      .then(() => {\r\n        this.pertCalc();\r\n      });\r\n  }\r\n  componentDidUpdate(prevState, prevProps) {\r\n    if (this.props.connections.length !== prevState.connections.length) {\r\n      this.pertCalc();\r\n      // console.log(prevState.connections.length, this.props.connections.length);\r\n      // console.log(\"Pert from comp update:\", this.props.pert);\r\n      // console.log(\"Pert calculation nodes:\", this.props.nodes);\r\n    }\r\n    if (prevState.tasks.length !== this.props.tasks.length) {\r\n      const { tasks } = this.props;\r\n      let newTasks = [];\r\n      tasks.map((task) => {\r\n        newTasks.push({ ...task });\r\n      });\r\n      let newNodes = [];\r\n      newTasks.map((task) => {\r\n        task[\"label\"] = task.taskName;\r\n        task[\"description\"] = task.description;\r\n        task[\"time\"] = task.mostLikelyTime;\r\n        task[\"optimistic\"] = task.optimisticTime;\r\n        task[\"pessimistic\"] = task.pessimisticTime;\r\n        if (\r\n          task.taskName !== \"Completed!!\" &&\r\n          task.taskName !== \"Lets Start Working\"\r\n        ) {\r\n          let newNode = {\r\n            key: task._id,\r\n            id: (newNodes.length + 1).toString(),\r\n            data: task,\r\n            sourcePosition: \"right\",\r\n            targetPosition: \"left\",\r\n            position:\r\n              task.position !== undefined\r\n                ? task.position\r\n                : {\r\n                    x: (Math.random() * window.innerWidth) / 2,\r\n                    y: (Math.random() * window.innerHeight) / 2,\r\n                  },\r\n          };\r\n          newNodes.push(newNode);\r\n        }\r\n        if (task.taskName === \"Lets Start Working\") {\r\n          let ele = [...this.state.elements];\r\n          let newNode = {\r\n            key: task._id,\r\n            id: \"1\",\r\n            type: \"input\",\r\n            data: {\r\n              label: \"Lets Start Working\",\r\n              description: \"Start working on tasks to complete project on time\",\r\n              pessimistic: 0,\r\n              time: 0,\r\n              optimistic: 0,\r\n              predecessors: [],\r\n              _id: task._id,\r\n            },\r\n            sourcePosition: \"right\",\r\n            position:\r\n              task.position !== undefined ? task.position : { x: 0, y: 0 },\r\n          };\r\n          newNodes.push(newNode);\r\n        }\r\n        if (task.taskName === \"Completed!!\") {\r\n          let ele = [...this.state.elements];\r\n          let newNode = {\r\n            key: task._id,\r\n            id: \"2\",\r\n            type: \"output\",\r\n            data: {\r\n              label: \"Completed!!\",\r\n              description: \"Yaaayy you gus have completed the project\",\r\n              pessimistic: 0,\r\n              time: 0,\r\n              optimistic: 0,\r\n              predecessors: task.predecessors,\r\n              _id: task._id,\r\n            },\r\n            targetPosition: \"left\",\r\n            position:\r\n              task.position !== undefined ? task.position : { x: 500, y: 0 },\r\n          };\r\n          newNodes.push(newNode);\r\n        }\r\n      });\r\n      this.props.replaceNodes({ nodes: newNodes });\r\n      if (this.props.connections.length === 0) {\r\n        getConnections(this.props.project._id)\r\n          .then((data) => {\r\n            let connections = [];\r\n            data.connections.map((link) => {\r\n              newNodes.map((elem) => {\r\n                if (elem.key !== undefined) {\r\n                  if (link.from.toString() === elem.key.toString()) {\r\n                    this.setState({ source: elem });\r\n                  }\r\n                  if (link.to.toString() === elem.key.toString()) {\r\n                    this.setState({ target: elem });\r\n                  }\r\n                }\r\n              });\r\n              let source = this.state.source;\r\n              let target = this.state.target;\r\n              let edge = {\r\n                id:\r\n                  \"reactflow__edge-\" +\r\n                  source.id.toString() +\r\n                  \"null-\" +\r\n                  target.id.toString() +\r\n                  \"null\",\r\n                source: source.id.toString(),\r\n                sourceHandle: null,\r\n                target: target.id.toString(),\r\n                targetHandle: null,\r\n                _id: link._id,\r\n              };\r\n              connections.push(edge);\r\n\r\n              return \"done\";\r\n            });\r\n            // console.log(connections);\r\n            this.props.replaceConnections({ connections: connections });\r\n          })\r\n          .then(() => {\r\n            this.pertCalc();\r\n          });\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    if (this.props.tasks.length === 0) return <div>No tasks</div>;\r\n    const { nodes, connections, tasks } = this.props;\r\n    const { status } = this.props.project;\r\n    let connectCheck = status === \"Completed\" ? false : true;\r\n    const elements = [];\r\n    nodes.map((node) => {\r\n      elements.push({ ...node });\r\n    });\r\n    connections.map((connection) => {\r\n      elements.push({ ...connection });\r\n    });\r\n    // console.log(\"nodes:\", nodes);\r\n    return (\r\n      <div>\r\n        <div className=\"container-fluid\">\r\n          <ReactFlow\r\n            elements={elements}\r\n            onLoad={this.onLoad}\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"65vh\",\r\n              backgroundColor: \"#1A192B\",\r\n            }}\r\n            onNodeDragStop={this.onNodeDragStop}\r\n            onConnect={this.onConnect}\r\n            onElementClick={this.onElementClick}\r\n            onElementsRemove={this.onElementsRemove}\r\n            connectionLineStyle={{ stroke: \"#ddd\", strokeWidth: 2 }}\r\n            connectionLineType=\"bezier\"\r\n            snapToGrid={true}\r\n            snapGrid={[16, 16]}\r\n            nodesConnectable={connectCheck}\r\n            nodesDraggable={connectCheck}\r\n            defaultZoom={1}\r\n          >\r\n            <Background color=\"#888\" gap={16} />\r\n            <MiniMap\r\n              nodeColor={(n) => {\r\n                if (n.type === \"input\") return \"#DC143C\";\r\n                if (n.type === \"output\") return \"#90ee90\";\r\n                return \"cyan\";\r\n              }}\r\n            />\r\n            <Controls />\r\n          </ReactFlow>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  nodes: state.cpm.nodes,\r\n  connections: state.cpm.connections,\r\n  state: state,\r\n  notifications: state.notifications.notifications,\r\n  tasks: state.tasks.tasks,\r\n  elements: state.cpm.elements,\r\n  pert: state.cpm.pert,\r\n  slacks: state.cpm.slacks,\r\n  criticalPath: state.cpm.criticalPath,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  nodeAdded: (params) => dispatch(nodeAdded(params)),\r\n  connectionAdded: (params) => dispatch(connectionAdded(params)),\r\n  updateTasks: (params) => dispatch(updateTasks(params)),\r\n  replaceNodes: (params) => dispatch(replaceNodes(params)),\r\n  replaceConnections: (params) => dispatch(replaceConnections(params)),\r\n  replaceElements: (params) => dispatch(replaceElements(params)),\r\n  setPert: (params) => dispatch(setPert(params)),\r\n  setExpectedTime: (params) => dispatch(setExpectedTime(params)),\r\n  setSlacks: (params) => dispatch(setSlacks(params)),\r\n  setCriticalPath: (params) => dispatch(setCriticalPath(params)),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(styles)(LayoutComponent));\r\n","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\ProjectDashboard.js",["179","180","181","182","183"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Home.js",["184","185","186","187","188","189","190","191","192","193","194","195","196","197","198"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\TextPostView.js",["199","200","201","202","203","204"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\Post.js",["205","206","207","208","209","210","211","212"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\VideoPost.js",["213","214","215","216","217","218","219","220"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\showPost.js",["221","222","223","224","225","226"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\NavBar.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Menu.js",["227","228","229","230","231","232","233","234","235","236","237","238"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\UserRecommendation.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\DeleteProject.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Form.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\SearchProjectBar.js",["239","240","241","242","243","244","245"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\DragDropVideo.js",["246","247"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\notifications.js",["248"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\apiNotifications.js",[],{"ruleId":"249","replacedBy":"250"},{"ruleId":"251","replacedBy":"252"},{"ruleId":"253","severity":1,"message":"254","line":10,"column":8,"nodeType":"255","messageId":"256","endLine":10,"endColumn":25},{"ruleId":"257","severity":1,"message":"258","line":30,"column":35,"nodeType":"259","messageId":"260","endLine":30,"endColumn":37},{"ruleId":"253","severity":1,"message":"261","line":2,"column":10,"nodeType":"255","messageId":"256","endLine":2,"endColumn":24},{"ruleId":"253","severity":1,"message":"262","line":23,"column":3,"nodeType":"255","messageId":"256","endLine":23,"endColumn":12},{"ruleId":"253","severity":1,"message":"263","line":25,"column":3,"nodeType":"255","messageId":"256","endLine":25,"endColumn":7},{"ruleId":"253","severity":1,"message":"264","line":31,"column":8,"nodeType":"255","messageId":"256","endLine":31,"endColumn":16},{"ruleId":"253","severity":1,"message":"265","line":36,"column":13,"nodeType":"255","messageId":"256","endLine":36,"endColumn":24},{"ruleId":"266","severity":1,"message":"267","line":131,"column":15,"nodeType":"268","endLine":131,"endColumn":75},{"ruleId":"253","severity":1,"message":"269","line":167,"column":7,"nodeType":"255","messageId":"256","endLine":167,"endColumn":17},{"ruleId":"253","severity":1,"message":"270","line":172,"column":7,"nodeType":"255","messageId":"256","endLine":172,"endColumn":11},{"ruleId":"266","severity":1,"message":"267","line":190,"column":19,"nodeType":"268","endLine":190,"endColumn":79},{"ruleId":"257","severity":1,"message":"258","line":38,"column":22,"nodeType":"259","messageId":"260","endLine":38,"endColumn":24},{"ruleId":"253","severity":1,"message":"271","line":1,"column":17,"nodeType":"255","messageId":"256","endLine":1,"endColumn":26},{"ruleId":"257","severity":1,"message":"258","line":27,"column":37,"nodeType":"259","messageId":"260","endLine":27,"endColumn":39},{"ruleId":"257","severity":1,"message":"258","line":29,"column":25,"nodeType":"259","messageId":"260","endLine":29,"endColumn":27},{"ruleId":"253","severity":1,"message":"272","line":4,"column":10,"nodeType":"255","messageId":"256","endLine":4,"endColumn":14},{"ruleId":"253","severity":1,"message":"273","line":7,"column":10,"nodeType":"255","messageId":"256","endLine":7,"endColumn":24},{"ruleId":"274","severity":1,"message":"275","line":33,"column":6,"nodeType":"276","endLine":33,"endColumn":18,"suggestions":"277"},{"ruleId":"253","severity":1,"message":"278","line":5,"column":10,"nodeType":"255","messageId":"256","endLine":5,"endColumn":16},{"ruleId":"253","severity":1,"message":"279","line":20,"column":7,"nodeType":"255","messageId":"256","endLine":20,"endColumn":15},{"ruleId":"257","severity":1,"message":"258","line":34,"column":35,"nodeType":"259","messageId":"260","endLine":34,"endColumn":37},{"ruleId":"253","severity":1,"message":"280","line":66,"column":11,"nodeType":"255","messageId":"256","endLine":66,"endColumn":24},{"ruleId":"253","severity":1,"message":"281","line":73,"column":11,"nodeType":"255","messageId":"256","endLine":73,"endColumn":19},{"ruleId":"253","severity":1,"message":"262","line":6,"column":3,"nodeType":"255","messageId":"256","endLine":6,"endColumn":12},{"ruleId":"253","severity":1,"message":"278","line":7,"column":3,"nodeType":"255","messageId":"256","endLine":7,"endColumn":9},{"ruleId":"253","severity":1,"message":"263","line":8,"column":3,"nodeType":"255","messageId":"256","endLine":8,"endColumn":7},{"ruleId":"253","severity":1,"message":"282","line":23,"column":10,"nodeType":"255","messageId":"256","endLine":23,"endColumn":24},{"ruleId":"253","severity":1,"message":"283","line":23,"column":26,"nodeType":"255","messageId":"256","endLine":23,"endColumn":31},{"ruleId":"257","severity":1,"message":"258","line":48,"column":46,"nodeType":"259","messageId":"260","endLine":48,"endColumn":48},{"ruleId":"253","severity":1,"message":"284","line":3,"column":10,"nodeType":"255","messageId":"256","endLine":3,"endColumn":15},{"ruleId":"253","severity":1,"message":"285","line":5,"column":8,"nodeType":"255","messageId":"256","endLine":5,"endColumn":12},{"ruleId":"253","severity":1,"message":"286","line":6,"column":8,"nodeType":"255","messageId":"256","endLine":6,"endColumn":12},{"ruleId":"253","severity":1,"message":"287","line":8,"column":3,"nodeType":"255","messageId":"256","endLine":8,"endColumn":10},{"ruleId":"253","severity":1,"message":"288","line":12,"column":3,"nodeType":"255","messageId":"256","endLine":12,"endColumn":17},{"ruleId":"253","severity":1,"message":"289","line":15,"column":3,"nodeType":"255","messageId":"256","endLine":15,"endColumn":10},{"ruleId":"253","severity":1,"message":"278","line":25,"column":10,"nodeType":"255","messageId":"256","endLine":25,"endColumn":16},{"ruleId":"257","severity":1,"message":"290","line":72,"column":22,"nodeType":"259","messageId":"291","endLine":72,"endColumn":24},{"ruleId":"257","severity":1,"message":"258","line":79,"column":11,"nodeType":"292","messageId":"293","endLine":79,"endColumn":18},{"ruleId":"257","severity":1,"message":"258","line":126,"column":37,"nodeType":"259","messageId":"260","endLine":126,"endColumn":39},{"ruleId":"257","severity":1,"message":"258","line":180,"column":45,"nodeType":"259","messageId":"260","endLine":180,"endColumn":47},{"ruleId":"257","severity":1,"message":"258","line":191,"column":22,"nodeType":"259","messageId":"260","endLine":191,"endColumn":24},{"ruleId":"257","severity":1,"message":"290","line":209,"column":25,"nodeType":"259","messageId":"291","endLine":209,"endColumn":27},{"ruleId":"257","severity":1,"message":"258","line":214,"column":9,"nodeType":"292","messageId":"293","endLine":214,"endColumn":16},{"ruleId":"257","severity":1,"message":"258","line":215,"column":47,"nodeType":"259","messageId":"260","endLine":215,"endColumn":49},{"ruleId":"257","severity":1,"message":"290","line":250,"column":48,"nodeType":"259","messageId":"291","endLine":250,"endColumn":50},{"ruleId":"253","severity":1,"message":"294","line":282,"column":15,"nodeType":"255","messageId":"256","endLine":282,"endColumn":24},{"ruleId":"257","severity":1,"message":"258","line":365,"column":24,"nodeType":"259","messageId":"260","endLine":365,"endColumn":26},{"ruleId":"257","severity":1,"message":"258","line":368,"column":27,"nodeType":"259","messageId":"260","endLine":368,"endColumn":29},{"ruleId":"295","severity":1,"message":"296","line":370,"column":31,"nodeType":"297","messageId":"298","endLine":370,"endColumn":47},{"ruleId":"253","severity":1,"message":"299","line":395,"column":15,"nodeType":"255","messageId":"256","endLine":395,"endColumn":18},{"ruleId":"253","severity":1,"message":"299","line":416,"column":15,"nodeType":"255","messageId":"256","endLine":416,"endColumn":18},{"ruleId":"257","severity":1,"message":"258","line":444,"column":31,"nodeType":"259","messageId":"260","endLine":444,"endColumn":33},{"ruleId":"257","severity":1,"message":"258","line":491,"column":24,"nodeType":"259","messageId":"260","endLine":491,"endColumn":26},{"ruleId":"257","severity":1,"message":"258","line":495,"column":27,"nodeType":"259","messageId":"260","endLine":495,"endColumn":29},{"ruleId":"295","severity":1,"message":"296","line":497,"column":31,"nodeType":"297","messageId":"298","endLine":497,"endColumn":47},{"ruleId":"253","severity":1,"message":"299","line":522,"column":15,"nodeType":"255","messageId":"256","endLine":522,"endColumn":18},{"ruleId":"253","severity":1,"message":"299","line":543,"column":15,"nodeType":"255","messageId":"256","endLine":543,"endColumn":18},{"ruleId":"257","severity":1,"message":"258","line":570,"column":35,"nodeType":"259","messageId":"260","endLine":570,"endColumn":37},{"ruleId":"253","severity":1,"message":"300","line":610,"column":33,"nodeType":"255","messageId":"256","endLine":610,"endColumn":38},{"ruleId":"257","severity":1,"message":"258","line":614,"column":22,"nodeType":"259","messageId":"260","endLine":614,"endColumn":24},{"ruleId":"257","severity":1,"message":"258","line":617,"column":34,"nodeType":"259","messageId":"260","endLine":617,"endColumn":36},{"ruleId":"253","severity":1,"message":"262","line":2,"column":10,"nodeType":"255","messageId":"256","endLine":2,"endColumn":19},{"ruleId":"253","severity":1,"message":"263","line":2,"column":21,"nodeType":"255","messageId":"256","endLine":2,"endColumn":25},{"ruleId":"253","severity":1,"message":"278","line":2,"column":27,"nodeType":"255","messageId":"256","endLine":2,"endColumn":33},{"ruleId":"253","severity":1,"message":"301","line":23,"column":20,"nodeType":"255","messageId":"256","endLine":23,"endColumn":35},{"ruleId":"257","severity":1,"message":"290","line":484,"column":42,"nodeType":"259","messageId":"291","endLine":484,"endColumn":44},{"ruleId":"253","severity":1,"message":"302","line":3,"column":10,"nodeType":"255","messageId":"256","endLine":3,"endColumn":26},{"ruleId":"253","severity":1,"message":"303","line":8,"column":3,"nodeType":"255","messageId":"256","endLine":8,"endColumn":14},{"ruleId":"253","severity":1,"message":"304","line":9,"column":3,"nodeType":"255","messageId":"256","endLine":9,"endColumn":21},{"ruleId":"253","severity":1,"message":"305","line":10,"column":3,"nodeType":"255","messageId":"256","endLine":10,"endColumn":29},{"ruleId":"253","severity":1,"message":"306","line":12,"column":13,"nodeType":"255","messageId":"256","endLine":12,"endColumn":14},{"ruleId":"253","severity":1,"message":"307","line":15,"column":10,"nodeType":"255","messageId":"256","endLine":15,"endColumn":20},{"ruleId":"253","severity":1,"message":"284","line":17,"column":10,"nodeType":"255","messageId":"256","endLine":17,"endColumn":15},{"ruleId":"253","severity":1,"message":"278","line":17,"column":17,"nodeType":"255","messageId":"256","endLine":17,"endColumn":23},{"ruleId":"253","severity":1,"message":"308","line":20,"column":10,"nodeType":"255","messageId":"256","endLine":20,"endColumn":21},{"ruleId":"253","severity":1,"message":"254","line":25,"column":8,"nodeType":"255","messageId":"256","endLine":25,"endColumn":25},{"ruleId":"257","severity":1,"message":"290","line":62,"column":46,"nodeType":"259","messageId":"291","endLine":62,"endColumn":48},{"ruleId":"253","severity":1,"message":"280","line":99,"column":13,"nodeType":"255","messageId":"256","endLine":99,"endColumn":26},{"ruleId":"253","severity":1,"message":"309","line":100,"column":50,"nodeType":"255","messageId":"256","endLine":100,"endColumn":60},{"ruleId":"266","severity":1,"message":"267","line":165,"column":27,"nodeType":"268","endLine":168,"endColumn":29},{"ruleId":"257","severity":1,"message":"290","line":212,"column":35,"nodeType":"259","messageId":"291","endLine":212,"endColumn":37},{"ruleId":"253","severity":1,"message":"310","line":14,"column":8,"nodeType":"255","messageId":"256","endLine":14,"endColumn":19},{"ruleId":"253","severity":1,"message":"262","line":21,"column":3,"nodeType":"255","messageId":"256","endLine":21,"endColumn":12},{"ruleId":"253","severity":1,"message":"263","line":23,"column":3,"nodeType":"255","messageId":"256","endLine":23,"endColumn":7},{"ruleId":"266","severity":1,"message":"267","line":105,"column":13,"nodeType":"268","endLine":105,"endColumn":73},{"ruleId":"253","severity":1,"message":"270","line":134,"column":7,"nodeType":"255","messageId":"256","endLine":134,"endColumn":11},{"ruleId":"266","severity":1,"message":"267","line":148,"column":19,"nodeType":"268","endLine":148,"endColumn":79},{"ruleId":"253","severity":1,"message":"310","line":16,"column":8,"nodeType":"255","messageId":"256","endLine":16,"endColumn":19},{"ruleId":"253","severity":1,"message":"262","line":24,"column":3,"nodeType":"255","messageId":"256","endLine":24,"endColumn":12},{"ruleId":"253","severity":1,"message":"311","line":40,"column":8,"nodeType":"255","messageId":"256","endLine":40,"endColumn":16},{"ruleId":"253","severity":1,"message":"264","line":41,"column":8,"nodeType":"255","messageId":"256","endLine":41,"endColumn":16},{"ruleId":"266","severity":1,"message":"267","line":132,"column":15,"nodeType":"268","endLine":132,"endColumn":75},{"ruleId":"253","severity":1,"message":"269","line":166,"column":7,"nodeType":"255","messageId":"256","endLine":166,"endColumn":17},{"ruleId":"253","severity":1,"message":"270","line":171,"column":7,"nodeType":"255","messageId":"256","endLine":171,"endColumn":11},{"ruleId":"266","severity":1,"message":"267","line":185,"column":19,"nodeType":"268","endLine":185,"endColumn":79},{"ruleId":"253","severity":1,"message":"310","line":16,"column":8,"nodeType":"255","messageId":"256","endLine":16,"endColumn":19},{"ruleId":"253","severity":1,"message":"262","line":24,"column":3,"nodeType":"255","messageId":"256","endLine":24,"endColumn":12},{"ruleId":"253","severity":1,"message":"263","line":26,"column":3,"nodeType":"255","messageId":"256","endLine":26,"endColumn":7},{"ruleId":"253","severity":1,"message":"264","line":39,"column":8,"nodeType":"255","messageId":"256","endLine":39,"endColumn":16},{"ruleId":"266","severity":1,"message":"267","line":119,"column":15,"nodeType":"268","endLine":119,"endColumn":75},{"ruleId":"253","severity":1,"message":"269","line":155,"column":7,"nodeType":"255","messageId":"256","endLine":155,"endColumn":17},{"ruleId":"253","severity":1,"message":"270","line":160,"column":7,"nodeType":"255","messageId":"256","endLine":160,"endColumn":11},{"ruleId":"266","severity":1,"message":"267","line":174,"column":19,"nodeType":"268","endLine":174,"endColumn":79},{"ruleId":"253","severity":1,"message":"310","line":17,"column":8,"nodeType":"255","messageId":"256","endLine":17,"endColumn":19},{"ruleId":"253","severity":1,"message":"262","line":19,"column":10,"nodeType":"255","messageId":"256","endLine":19,"endColumn":19},{"ruleId":"253","severity":1,"message":"264","line":28,"column":8,"nodeType":"255","messageId":"256","endLine":28,"endColumn":16},{"ruleId":"266","severity":1,"message":"267","line":122,"column":15,"nodeType":"268","endLine":122,"endColumn":75},{"ruleId":"257","severity":1,"message":"258","line":163,"column":36,"nodeType":"259","messageId":"260","endLine":163,"endColumn":38},{"ruleId":"266","severity":1,"message":"267","line":174,"column":19,"nodeType":"268","endLine":174,"endColumn":79},{"ruleId":"253","severity":1,"message":"304","line":4,"column":10,"nodeType":"255","messageId":"256","endLine":4,"endColumn":28},{"ruleId":"253","severity":1,"message":"312","line":6,"column":10,"nodeType":"255","messageId":"256","endLine":6,"endColumn":13},{"ruleId":"253","severity":1,"message":"313","line":12,"column":10,"nodeType":"255","messageId":"256","endLine":12,"endColumn":24},{"ruleId":"253","severity":1,"message":"314","line":13,"column":8,"nodeType":"255","messageId":"256","endLine":13,"endColumn":14},{"ruleId":"253","severity":1,"message":"315","line":22,"column":9,"nodeType":"255","messageId":"256","endLine":22,"endColumn":17},{"ruleId":"316","severity":1,"message":"317","line":71,"column":27,"nodeType":"268","endLine":71,"endColumn":74},{"ruleId":"316","severity":1,"message":"317","line":85,"column":27,"nodeType":"268","endLine":85,"endColumn":74},{"ruleId":"316","severity":1,"message":"317","line":99,"column":27,"nodeType":"268","endLine":99,"endColumn":75},{"ruleId":"316","severity":1,"message":"317","line":113,"column":27,"nodeType":"268","endLine":113,"endColumn":75},{"ruleId":"316","severity":1,"message":"317","line":127,"column":27,"nodeType":"268","endLine":127,"endColumn":75},{"ruleId":"316","severity":1,"message":"317","line":161,"column":27,"nodeType":"268","endLine":161,"endColumn":75},{"ruleId":"316","severity":1,"message":"317","line":181,"column":27,"nodeType":"268","endLine":181,"endColumn":75},{"ruleId":"253","severity":1,"message":"254","line":2,"column":8,"nodeType":"255","messageId":"256","endLine":2,"endColumn":25},{"ruleId":"253","severity":1,"message":"318","line":3,"column":10,"nodeType":"255","messageId":"256","endLine":3,"endColumn":14},{"ruleId":"253","severity":1,"message":"272","line":6,"column":20,"nodeType":"255","messageId":"256","endLine":6,"endColumn":24},{"ruleId":"253","severity":1,"message":"319","line":8,"column":10,"nodeType":"255","messageId":"256","endLine":8,"endColumn":15},{"ruleId":"253","severity":1,"message":"320","line":8,"column":17,"nodeType":"255","messageId":"256","endLine":8,"endColumn":25},{"ruleId":"253","severity":1,"message":"321","line":10,"column":10,"nodeType":"255","messageId":"256","endLine":10,"endColumn":18},{"ruleId":"257","severity":1,"message":"258","line":40,"column":28,"nodeType":"259","messageId":"260","endLine":40,"endColumn":30},{"ruleId":"253","severity":1,"message":"284","line":2,"column":18,"nodeType":"255","messageId":"256","endLine":2,"endColumn":23},{"ruleId":"253","severity":1,"message":"322","line":2,"column":25,"nodeType":"255","messageId":"256","endLine":2,"endColumn":34},{"ruleId":"253","severity":1,"message":"302","line":2,"column":27,"nodeType":"255","messageId":"256","endLine":2,"endColumn":43},"no-native-reassign",["323"],"no-negated-in-lhs",["324"],"no-unused-vars","'SearchTwoToneIcon' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'getLikesOfPost' is defined but never used.","'Accordion' is defined but never used.","'Card' is defined but never used.","'Dropdown' is defined but never used.","'youtubeMeta' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'headerText' is assigned a value but never used.","'tags' is assigned a value but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'createTextPost' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'validateYouTubeUrl'. Either include it or remove the dependency array.","ArrayExpression",["325"],"'Button' is defined but never used.","'BASE_URL' is assigned a value but never used.","'notifications' is assigned a value but never used.","'selected' is assigned a value but never used.","'ToastContainer' is defined but never used.","'toast' is defined but never used.","'Modal' is defined but never used.","'Pert' is defined but never used.","'Task' is defined but never used.","'addEdge' is defined but never used.","'removeElements' is defined but never used.","'addTask' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","ReturnStatement","expectedReturnValue","'finaldiff' is assigned a value but never used.","no-self-assign","'task.description' is assigned to itself.","MemberExpression","selfAssignment","'ele' is assigned a value but never used.","'tasks' is assigned a value but never used.","'setCriticalPath' is defined but never used.","'getNotifications' is defined but never used.","'getNotified' is defined but never used.","'clearNotifications' is defined but never used.","'setSegregatedNotifications' is defined but never used.","'_' is defined but never used.","'getProject' is defined but never used.","'getAllPosts' is defined but never used.","'youtubeUrl' is assigned a value but never used.","'CommentIcon' is defined but never used.","'EditPost' is defined but never used.","'Nav' is defined but never used.","'getCurrentUser' is defined but never used.","'socket' is defined but never used.","'dispatch' is assigned a value but never used.","jsx-a11y/role-supports-aria-props","The attribute aria-haspopup is not supported by the role listitem. This role is implicit on the element li.","'list' is defined but never used.","'query' is assigned a value but never used.","'setQuery' is assigned a value but never used.","'projects' is assigned a value but never used.","'ModalBody' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"326","fix":"327"},"Update the dependencies array to be: [props.text, validateYouTubeUrl]",{"range":"328","text":"329"},[1205,1217],"[props.text, validateYouTubeUrl]"]