[{"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\MainRouter.js":"1","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Home.js":"2","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\reducer.js":"3","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\ModalButton.js":"4","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\taskComponents\\AddTask.js":"5","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Form.js":"6","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Tagify\\AssignPerson.js":"7","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\SearchProjectBar.js":"8","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\DeleteUser.js":"9","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\TextPost.js":"10","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\DragDropImages.js":"11","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\apiPosts.js":"12","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\Post.js":"13","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\TextPostView.js":"14","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\VideoPost.js":"15","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\YoutubePost.js":"16","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\YoutubeURLPost.js":"17"},{"size":3011,"mtime":1622610498473,"results":"18","hashOfConfig":"19"},{"size":11670,"mtime":1622610498478,"results":"20","hashOfConfig":"19"},{"size":406,"mtime":1622610498609,"results":"21","hashOfConfig":"19"},{"size":992,"mtime":1622610498690,"results":"22","hashOfConfig":"19"},{"size":6078,"mtime":1622610498596,"results":"23","hashOfConfig":"19"},{"size":4647,"mtime":1622610498688,"results":"24","hashOfConfig":"19"},{"size":915,"mtime":1622610498693,"results":"25","hashOfConfig":"19"},{"size":4178,"mtime":1622610498474,"results":"26","hashOfConfig":"19"},{"size":1207,"mtime":1622610498665,"results":"27","hashOfConfig":"19"},{"size":4031,"mtime":1622610498550,"results":"28","hashOfConfig":"19"},{"size":7059,"mtime":1622691250090,"results":"29","hashOfConfig":"19"},{"size":13397,"mtime":1622698215505,"results":"30","hashOfConfig":"19"},{"size":15234,"mtime":1622698321537,"results":"31","hashOfConfig":"19"},{"size":13416,"mtime":1622698349951,"results":"32","hashOfConfig":"19"},{"size":13871,"mtime":1622698363899,"results":"33","hashOfConfig":"19"},{"size":14574,"mtime":1622698409277,"results":"34","hashOfConfig":"19"},{"size":4427,"mtime":1622698611821,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"6p3aao",{"filePath":"38","messages":"39","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\MainRouter.js",["71","72","73","74","75","76","77"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Home.js",["78","79","80","81","82","83","84","85","86","87","88","89","90","91","92"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\reducer.js",[],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\ModalButton.js",[],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\taskComponents\\AddTask.js",["93"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Form.js",[],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Tagify\\AssignPerson.js",["94"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\SearchProjectBar.js",["95","96","97","98","99","100","101"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\DeleteUser.js",[],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\TextPost.js",["102","103","104"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\DragDropImages.js",["105"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\apiPosts.js",["106","107","108"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\Post.js",["109","110","111","112","113","114","115","116","117"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\TextPostView.js",["118","119","120","121","122","123","124"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\VideoPost.js",["125","126","127","128","129","130","131","132","133"],"E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\YoutubePost.js",["134","135","136","137","138","139","140","141"],"import React, { Component } from \"react\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport { toast } from \"react-toastify\";\r\nimport Heart from \"react-animated-heart\";\r\nimport { getCurrentUser, getProfilePic } from \"./../user/apiUser\";\r\nimport DefaultProfile from \"../images/avatar.png\";\r\nimport {\r\n  likepost,\r\n  dislikepost,\r\n  addcomment,\r\n  getpost,\r\n  deleteComment,\r\n  reportpost,\r\n} from \"./apiPosts\";\r\nimport { collect } from \"collect.js\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport VisibilityTwoToneIcon from \"@material-ui/icons/VisibilityTwoTone\";\r\nimport ReportTwoToneIcon from \"@material-ui/icons/ReportTwoTone\";\r\nimport SendRoundedIcon from \"@material-ui/icons/SendRounded\";\r\nimport DeleteTwoToneIcon from \"@material-ui/icons/DeleteTwoTone\";\r\nimport moment from \"moment\";\r\nimport {\r\n  Accordion,\r\n  Button,\r\n  Card,\r\n  Modal,\r\n  ModalBody,\r\n  Popover,\r\n  OverlayTrigger,\r\n} from \"react-bootstrap\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Sentiment from \"sentiment\";\r\nimport YouTubeIcon from \"@material-ui/icons/YouTube\";\r\nimport * as youtubeMeta from \"youtube-metadata-from-url\";\r\nimport DeletePost from \"./DeletePost\";\r\nimport ReactPlayer from \"react-player/youtube\";\r\nimport { connect } from \"react-redux\";\r\nimport { changePosts } from \"../store/posts\";\r\nconst sentiment = new Sentiment();\r\nclass YoutubePost extends Component {\r\n  state = {\r\n    isClick: false,\r\n    comment: \"\",\r\n    id: getCurrentUser()._id,\r\n    sentimentScore: null,\r\n    disabled: false,\r\n    // metadata: {},\r\n    profilePictures: {},\r\n  };\r\n  checkIfUserIdExistsInObject(checkObject, userId) {\r\n    Object.keys(checkObject).map((key) => {\r\n      if (key.toString() === userId.toString()) {\r\n        return true;\r\n      }\r\n    });\r\n    return false;\r\n  }\r\n  async componentDidMount() {\r\n    let users = this.props.liked_by;\r\n    if (users !== undefined && users !== null && users !== [])\r\n      if (users.indexOf(getCurrentUser()._id) > -1)\r\n        this.setState({ isClick: true });\r\n    const { comments } = this.props;\r\n    let pictures = {};\r\n    let picture = {};\r\n    picture = await this.setProfilePicture(getCurrentUser()._id);\r\n    // console.log(picture);\r\n    Object.assign(pictures, picture);\r\n    // console.log(pictures);\r\n    this.setState({ profilePictures: pictures });\r\n    comments.map(async (comment) => {\r\n      // const { profilePictures } = this.state;\r\n      // if (this.checkIfUserIdExistsInObject(profilePictures, comment.userId)) {\r\n      //   this.setProfilePicture(comment.userId);\r\n      // }\r\n      const { profilePictures } = this.state;\r\n      if (!this.checkIfUserIdExistsInObject(profilePictures, comment.userId)) {\r\n        let picture = await this.setProfilePicture(comment.userId);\r\n        Object.assign(pictures, picture);\r\n        // console.log(pictures);\r\n        this.setState({ profilePictures: pictures });\r\n      }\r\n    });\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.comments.length !== prevProps.comments.length) {\r\n      this.props.changePosts(this.props._id);\r\n    }\r\n  }\r\n  setProfilePicture = (userId) => {\r\n    // let picture = {};\r\n    return getProfilePic(userId).then((data) => {\r\n      return { [userId]: data.profilePic };\r\n    });\r\n  };\r\n\r\n  postliked = () => {\r\n    this.setState({ isClick: !this.state.isClick });\r\n    if (this.state.isClick)\r\n      dislikepost(this.props._id)\r\n        .then((data) => console.log(data))\r\n        .then(() => this.props.changePosts(this.props._id));\r\n    else\r\n      likepost(this.props._id)\r\n        .then((data) => console.log(data))\r\n        .then(() => this.props.changePosts(this.props._id));\r\n  };\r\n\r\n  handleSubmitClicked = () => {\r\n    reportpost(this.props._id);\r\n    this.setState({\r\n      show: false,\r\n      isDisabled: true,\r\n    });\r\n  };\r\n  handleClose() {\r\n    this.setState({ show: false });\r\n  }\r\n\r\n  handleShow() {\r\n    this.setState({ show: true });\r\n  }\r\n  onTextChange = (e) => {\r\n    this.setState({ comment: e.target.value });\r\n    this.findSentiment(e.target.value);\r\n  };\r\n\r\n  submitcomment = () => {\r\n    addcomment(this.props._id, this.state.comment)\r\n      .then((data) => {\r\n        console.log(data);\r\n      })\r\n      .then(() => this.props.changePosts(this.props._id));\r\n  };\r\n\r\n  findSentiment(comment) {\r\n    const result = sentiment.analyze(comment);\r\n    this.setState({\r\n      sentimentScore: result.score,\r\n    });\r\n  }\r\n\r\n  deletecomment(e, commentId) {\r\n    e.preventDefault();\r\n    deleteComment(commentId, this.props._id)\r\n      .then((data) => console.log(data))\r\n      .then(() => {\r\n        this.props.changePosts(this.props._id);\r\n        // toast.success(\"deleted comment successfully\");\r\n      });\r\n  }\r\n\r\n  rendercomments = (comments) => {\r\n    let reverseComments = [...comments].reverse();\r\n    const { profilePictures } = this.state;\r\n    return reverseComments.map(\r\n      ({ PostedOn, comment, userName, _id, userId }, index) => (\r\n        <div className=\"d-flex py-5\">\r\n          <div className=\"symbol symbol-40 symbol-light-warning mr-5\">\r\n            <span className=\"symbol-label\">\r\n              <img\r\n                src={\r\n                  profilePictures[userId] !== undefined\r\n                    ? profilePictures[userId]\r\n                    : DefaultProfile\r\n                }\r\n                className=\"h-75 align-self-end\"\r\n              />\r\n            </span>\r\n          </div>\r\n          <div className=\"d-flex flex-column flex-row-fluid\">\r\n            <div className=\"d-flex align-items-center flex-wrap\">\r\n              <Link\r\n                to=\"#\"\r\n                className=\"text-dark-75 text-hover-primary mb-1 font-size-lg font-weight-bolder pr-6\"\r\n              >\r\n                {userName}\r\n              </Link>\r\n              <span className=\"text-muted font-weight-normal flex-grow-1 font-size-sm\">\r\n                {moment(PostedOn).format(\"DD-MM-YYYY h:mm a\")}\r\n              </span>\r\n              <div className=\"ml-auto\">\r\n                {this.state.id === userId && (\r\n                  <button\r\n                    className=\"btn btn-clear\"\r\n                    onClick={(e) => this.deletecomment(e, _id)}\r\n                  >\r\n                    <DeleteTwoToneIcon />\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <span className=\"text-dark-75 font-size-sm font-weight-normal pt-1\">\r\n              {comment}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      )\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      headerText,\r\n      footerText,\r\n      url,\r\n      liked_by,\r\n      _id,\r\n      tags,\r\n      comments,\r\n      metadataTitle,\r\n      metadataAuthor,\r\n      delete_button,\r\n      created,\r\n      postedBy,\r\n      reportCounter,\r\n    } = this.props;\r\n    // const { metadata } = this.state;\r\n    const { profilePictures } = this.state;\r\n    let counts = collect(liked_by).count();\r\n    // console.log(\"metadataTitle:\", metadataTitle);\r\n    return (\r\n      <>\r\n        <div className=\"card card-custom gutter-b\">\r\n          <div className=\"card-body\">\r\n            <div className=\"d-flex align-items-center pb-4\">\r\n              <div className=\"symbol symbol-40 symbol-light-warning mr-5\">\r\n                <span className=\"symbol-label\">\r\n                  <img\r\n                    src={\r\n                      profilePictures[this.props.postedBy._id] !== undefined\r\n                        ? profilePictures[this.props.postedBy._id]\r\n                        : DefaultProfile\r\n                    }\r\n                    className=\"h-75 align-self-end\"\r\n                  />\r\n                </span>\r\n              </div>\r\n              <div className=\"d-flex flex-column flex-grow-1\">\r\n                <Link\r\n                  to=\"#\"\r\n                  className=\"text-dark-75 text-hover-primary mb-1 font-size-lg font-weight-bolder\"\r\n                >\r\n                  {footerText}\r\n                </Link>\r\n                <span className=\"text-muted font-weight-bold\">\r\n                  {moment(created).format(\"DD-MM-YYYY h:mm a\")}\r\n                </span>\r\n              </div>\r\n              <div className=\"ml-auto\">\r\n                <OverlayTrigger\r\n                  trigger=\"click\"\r\n                  placement=\"right\"\r\n                  overlay={\r\n                    <Popover id=\"popover-basic\">\r\n                      <Popover.Content>\r\n                        <div>\r\n                          {getCurrentUser()._id === postedBy._id ? (\r\n                            <></>\r\n                          ) : reportCounter.includes(getCurrentUser()._id) ? (\r\n                            <>\r\n                              <button className=\"btn btn-clean\" disabled={true}>\r\n                                <ReportTwoToneIcon /> Post Reported\r\n                              </button>\r\n                            </>\r\n                          ) : (\r\n                            <>\r\n                              <button\r\n                                className=\"btn btn-clean\"\r\n                                onClick={() => {\r\n                                  this.handleShow();\r\n                                  this.setState({ disabled: true });\r\n                                }}\r\n                                disabled={this.state.disabled}\r\n                              >\r\n                                <ReportTwoToneIcon /> Report\r\n                              </button>\r\n                              <Modal\r\n                                show={this.state.show}\r\n                                onHide={this.handleClose.bind(this)}\r\n                              >\r\n                                <Modal.Header>\r\n                                  <Modal.Title>\r\n                                    Are you Sure to report this post?\r\n                                  </Modal.Title>\r\n                                  <Button onClick={this.handleClose.bind(this)}>\r\n                                    x\r\n                                  </Button>\r\n                                </Modal.Header>\r\n                                <ModalBody>\r\n                                  <Button\r\n                                    disabled={this.state.isDisabled}\r\n                                    onClick={this.handleSubmitClicked}\r\n                                  >\r\n                                    Yes\r\n                                  </Button>\r\n                                </ModalBody>\r\n                              </Modal>\r\n                            </>\r\n                          )}\r\n                        </div>\r\n                        <Link\r\n                          className=\"btn btn-clean\"\r\n                          to={{\r\n                            pathname: `/post/${this.props._id}`,\r\n                          }}\r\n                        >\r\n                          <VisibilityTwoToneIcon /> View Full Post\r\n                        </Link>\r\n                        <div>\r\n                          <button\r\n                            className=\"btn btn-clean\"\r\n                            onClick={() => {\r\n                              getpost(_id).then((data) => {\r\n                                let link = `http://localhost:3000/post/${data.post._id}`;\r\n                                navigator.clipboard.writeText(link);\r\n                                toast.success(\"Link copied to clipboard\");\r\n                              });\r\n                            }}\r\n                          >\r\n                            <ShareIcon /> Share Post\r\n                          </button>\r\n                        </div>\r\n                        {delete_button === \"enabled\" ? (\r\n                          <DeletePost postId={_id} />\r\n                        ) : (\r\n                          <div></div>\r\n                        )}\r\n                      </Popover.Content>\r\n                    </Popover>\r\n                  }\r\n                >\r\n                  <button className=\"btn btn-custom\">\r\n                    <MoreVertIcon />\r\n                  </button>\r\n                </OverlayTrigger>\r\n              </div>\r\n            </div>\r\n            <p className=\"lead ml-10 mt-5 text-dark-75 font-size-lg font-weight-normal \">\r\n              {headerText}\r\n            </p>\r\n            <div className=\"mt-3\">\r\n              <p className=\"text-dark-75 font-size-lg font-weight-normal\">\r\n                <YouTubeIcon\r\n                  fontSize=\"large\"\r\n                  className=\"text-danger display-3 mr-5 ml-2\"\r\n                />\r\n                {/* <a href={text} target={\"_blank\"}>\r\n                {text.toString()} {console.log(metadata)}\r\n                </a> */}\r\n                <span>\r\n                  <strong>{metadataTitle}</strong> By {metadataAuthor}\r\n                </span>\r\n                <center>\r\n                  <ReactPlayer url={url} controls={true} width={window.width} />\r\n                </center>\r\n              </p>\r\n              <div className=\"d-flex align-items-center\">\r\n                <Heart isClick={this.state.isClick} onClick={this.postliked} />\r\n\r\n                <button type=\"button\" class=\"btn btn-light-danger\">\r\n                  <strong>\r\n                    <span class=\"badge badge-light\">{counts}</span> Likes\r\n                  </strong>\r\n                </button>\r\n              </div>\r\n              <div className=\"d-flex align-items-center\">\r\n                <TextField\r\n                  name=\"comment\"\r\n                  onChange={(e) => this.onTextChange(e)}\r\n                  id=\"standard-basic\"\r\n                  label=\"Add a Comment\"\r\n                  fullWidth\r\n                />\r\n                <button\r\n                  onClick={this.submitcomment}\r\n                  className=\"btn btn-light-primary mr-5 ml-5 \"\r\n                  disabled={this.state.sentimentScore < -3 ? true : false}\r\n                >\r\n                  <SendRoundedIcon />\r\n                </button>\r\n              </div>\r\n              {comments.length > 0 ? (\r\n                this.rendercomments(comments)\r\n              ) : (\r\n                <p>No Comments</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  posts: state.posts.posts,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  changePosts: (params) => dispatch(changePosts(params)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(YoutubePost);\r\n","E:\\capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\YoutubeURLPost.js",["142","143","144"],{"ruleId":"145","severity":1,"message":"146","line":1,"column":17,"nodeType":"147","messageId":"148","endLine":1,"endColumn":26},{"ruleId":"145","severity":1,"message":"149","line":2,"column":25,"nodeType":"147","messageId":"148","endLine":2,"endColumn":29},{"ruleId":"145","severity":1,"message":"150","line":11,"column":8,"nodeType":"147","messageId":"148","endLine":11,"endColumn":14},{"ruleId":"145","severity":1,"message":"151","line":21,"column":8,"nodeType":"147","messageId":"148","endLine":21,"endColumn":17},{"ruleId":"145","severity":1,"message":"152","line":22,"column":8,"nodeType":"147","messageId":"148","endLine":22,"endColumn":13},{"ruleId":"145","severity":1,"message":"153","line":23,"column":10,"nodeType":"147","messageId":"148","endLine":23,"endColumn":15},{"ruleId":"145","severity":1,"message":"154","line":29,"column":9,"nodeType":"147","messageId":"148","endLine":29,"endColumn":17},{"ruleId":"145","severity":1,"message":"155","line":3,"column":10,"nodeType":"147","messageId":"148","endLine":3,"endColumn":26},{"ruleId":"145","severity":1,"message":"156","line":8,"column":3,"nodeType":"147","messageId":"148","endLine":8,"endColumn":14},{"ruleId":"145","severity":1,"message":"157","line":9,"column":3,"nodeType":"147","messageId":"148","endLine":9,"endColumn":21},{"ruleId":"145","severity":1,"message":"158","line":10,"column":3,"nodeType":"147","messageId":"148","endLine":10,"endColumn":29},{"ruleId":"145","severity":1,"message":"159","line":12,"column":13,"nodeType":"147","messageId":"148","endLine":12,"endColumn":14},{"ruleId":"145","severity":1,"message":"160","line":15,"column":10,"nodeType":"147","messageId":"148","endLine":15,"endColumn":20},{"ruleId":"145","severity":1,"message":"161","line":17,"column":10,"nodeType":"147","messageId":"148","endLine":17,"endColumn":15},{"ruleId":"145","severity":1,"message":"162","line":17,"column":17,"nodeType":"147","messageId":"148","endLine":17,"endColumn":23},{"ruleId":"145","severity":1,"message":"163","line":20,"column":10,"nodeType":"147","messageId":"148","endLine":20,"endColumn":21},{"ruleId":"145","severity":1,"message":"164","line":25,"column":8,"nodeType":"147","messageId":"148","endLine":25,"endColumn":25},{"ruleId":"165","severity":1,"message":"166","line":62,"column":46,"nodeType":"167","messageId":"168","endLine":62,"endColumn":48},{"ruleId":"145","severity":1,"message":"169","line":99,"column":13,"nodeType":"147","messageId":"148","endLine":99,"endColumn":26},{"ruleId":"145","severity":1,"message":"170","line":100,"column":50,"nodeType":"147","messageId":"148","endLine":100,"endColumn":60},{"ruleId":"171","severity":1,"message":"172","line":166,"column":27,"nodeType":"173","endLine":169,"endColumn":29},{"ruleId":"165","severity":1,"message":"166","line":213,"column":35,"nodeType":"167","messageId":"168","endLine":213,"endColumn":37},{"ruleId":"145","severity":1,"message":"174","line":3,"column":19,"nodeType":"147","messageId":"148","endLine":3,"endColumn":27},{"ruleId":"165","severity":1,"message":"175","line":11,"column":32,"nodeType":"167","messageId":"176","endLine":11,"endColumn":34},{"ruleId":"145","severity":1,"message":"164","line":2,"column":8,"nodeType":"147","messageId":"148","endLine":2,"endColumn":25},{"ruleId":"145","severity":1,"message":"177","line":3,"column":10,"nodeType":"147","messageId":"148","endLine":3,"endColumn":14},{"ruleId":"145","severity":1,"message":"149","line":6,"column":20,"nodeType":"147","messageId":"148","endLine":6,"endColumn":24},{"ruleId":"145","severity":1,"message":"178","line":8,"column":10,"nodeType":"147","messageId":"148","endLine":8,"endColumn":15},{"ruleId":"145","severity":1,"message":"179","line":8,"column":17,"nodeType":"147","messageId":"148","endLine":8,"endColumn":25},{"ruleId":"145","severity":1,"message":"180","line":10,"column":10,"nodeType":"147","messageId":"148","endLine":10,"endColumn":18},{"ruleId":"165","severity":1,"message":"175","line":40,"column":28,"nodeType":"167","messageId":"176","endLine":40,"endColumn":30},{"ruleId":"145","severity":1,"message":"149","line":4,"column":10,"nodeType":"147","messageId":"148","endLine":4,"endColumn":14},{"ruleId":"145","severity":1,"message":"181","line":7,"column":26,"nodeType":"147","messageId":"148","endLine":7,"endColumn":43},{"ruleId":"182","severity":1,"message":"183","line":33,"column":6,"nodeType":"184","endLine":33,"endColumn":18,"suggestions":"185"},{"ruleId":"145","severity":1,"message":"186","line":7,"column":10,"nodeType":"147","messageId":"148","endLine":7,"endColumn":19},{"ruleId":"145","severity":1,"message":"187","line":3,"column":7,"nodeType":"147","messageId":"148","endLine":3,"endColumn":13},{"ruleId":"188","severity":1,"message":"189","line":353,"column":53,"nodeType":"190","messageId":"191","endLine":353,"endColumn":54},{"ruleId":"165","severity":1,"message":"175","line":373,"column":30,"nodeType":"167","messageId":"176","endLine":373,"endColumn":32},{"ruleId":"145","severity":1,"message":"192","line":16,"column":8,"nodeType":"147","messageId":"148","endLine":16,"endColumn":19},{"ruleId":"145","severity":1,"message":"193","line":24,"column":3,"nodeType":"147","messageId":"148","endLine":24,"endColumn":12},{"ruleId":"145","severity":1,"message":"194","line":40,"column":8,"nodeType":"147","messageId":"148","endLine":40,"endColumn":16},{"ruleId":"145","severity":1,"message":"195","line":41,"column":8,"nodeType":"147","messageId":"148","endLine":41,"endColumn":16},{"ruleId":"165","severity":1,"message":"166","line":57,"column":40,"nodeType":"167","messageId":"168","endLine":57,"endColumn":42},{"ruleId":"145","severity":1,"message":"196","line":97,"column":9,"nodeType":"147","messageId":"148","endLine":97,"endColumn":16},{"ruleId":"171","severity":1,"message":"172","line":183,"column":15,"nodeType":"173","endLine":190,"endColumn":17},{"ruleId":"145","severity":1,"message":"197","line":229,"column":7,"nodeType":"147","messageId":"148","endLine":229,"endColumn":11},{"ruleId":"171","severity":1,"message":"172","line":248,"column":19,"nodeType":"173","endLine":255,"endColumn":21},{"ruleId":"145","severity":1,"message":"192","line":15,"column":8,"nodeType":"147","messageId":"148","endLine":15,"endColumn":19},{"ruleId":"145","severity":1,"message":"193","line":23,"column":3,"nodeType":"147","messageId":"148","endLine":23,"endColumn":12},{"ruleId":"145","severity":1,"message":"198","line":25,"column":3,"nodeType":"147","messageId":"148","endLine":25,"endColumn":7},{"ruleId":"165","severity":1,"message":"166","line":51,"column":40,"nodeType":"167","messageId":"168","endLine":51,"endColumn":42},{"ruleId":"171","severity":1,"message":"172","line":160,"column":15,"nodeType":"173","endLine":167,"endColumn":17},{"ruleId":"145","severity":1,"message":"197","line":207,"column":7,"nodeType":"147","messageId":"148","endLine":207,"endColumn":11},{"ruleId":"171","severity":1,"message":"172","line":223,"column":19,"nodeType":"173","endLine":230,"endColumn":21},{"ruleId":"145","severity":1,"message":"192","line":16,"column":8,"nodeType":"147","messageId":"148","endLine":16,"endColumn":19},{"ruleId":"145","severity":1,"message":"193","line":24,"column":3,"nodeType":"147","messageId":"148","endLine":24,"endColumn":12},{"ruleId":"145","severity":1,"message":"198","line":26,"column":3,"nodeType":"147","messageId":"148","endLine":26,"endColumn":7},{"ruleId":"145","severity":1,"message":"195","line":39,"column":8,"nodeType":"147","messageId":"148","endLine":39,"endColumn":16},{"ruleId":"165","severity":1,"message":"166","line":52,"column":40,"nodeType":"167","messageId":"168","endLine":52,"endColumn":42},{"ruleId":"145","severity":1,"message":"196","line":92,"column":9,"nodeType":"147","messageId":"148","endLine":92,"endColumn":16},{"ruleId":"171","severity":1,"message":"172","line":161,"column":15,"nodeType":"173","endLine":168,"endColumn":17},{"ruleId":"145","severity":1,"message":"197","line":209,"column":7,"nodeType":"147","messageId":"148","endLine":209,"endColumn":11},{"ruleId":"171","severity":1,"message":"172","line":225,"column":19,"nodeType":"173","endLine":232,"endColumn":21},{"ruleId":"145","severity":1,"message":"193","line":23,"column":3,"nodeType":"147","messageId":"148","endLine":23,"endColumn":12},{"ruleId":"145","severity":1,"message":"198","line":25,"column":3,"nodeType":"147","messageId":"148","endLine":25,"endColumn":7},{"ruleId":"145","severity":1,"message":"195","line":31,"column":8,"nodeType":"147","messageId":"148","endLine":31,"endColumn":16},{"ruleId":"145","severity":1,"message":"199","line":36,"column":13,"nodeType":"147","messageId":"148","endLine":36,"endColumn":24},{"ruleId":"165","severity":1,"message":"166","line":53,"column":40,"nodeType":"167","messageId":"168","endLine":53,"endColumn":42},{"ruleId":"171","severity":1,"message":"172","line":163,"column":15,"nodeType":"173","endLine":170,"endColumn":17},{"ruleId":"145","severity":1,"message":"197","line":211,"column":7,"nodeType":"147","messageId":"148","endLine":211,"endColumn":11},{"ruleId":"171","severity":1,"message":"172","line":231,"column":19,"nodeType":"173","endLine":238,"endColumn":21},{"ruleId":"145","severity":1,"message":"149","line":4,"column":10,"nodeType":"147","messageId":"148","endLine":4,"endColumn":14},{"ruleId":"145","severity":1,"message":"200","line":7,"column":10,"nodeType":"147","messageId":"148","endLine":7,"endColumn":24},{"ruleId":"182","severity":1,"message":"183","line":33,"column":6,"nodeType":"184","endLine":33,"endColumn":18,"suggestions":"201"},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'NavBar' is defined but never used.","'LiveClock' is defined but never used.","'dayjs' is defined but never used.","'Badge' is defined but never used.","'dispatch' is assigned a value but never used.","'getNotifications' is defined but never used.","'getNotified' is defined but never used.","'clearNotifications' is defined but never used.","'setSegregatedNotifications' is defined but never used.","'_' is defined but never used.","'getProject' is defined but never used.","'Modal' is defined but never used.","'Button' is defined but never used.","'getAllPosts' is defined but never used.","'SearchTwoToneIcon' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'notifications' is assigned a value but never used.","'youtubeUrl' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'getTasks' is defined but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","'list' is defined but never used.","'query' is assigned a value but never used.","'setQuery' is assigned a value but never used.","'projects' is assigned a value but never used.","'createYoutubePost' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'validateYouTubeUrl'. Either include it or remove the dependency array.","ArrayExpression",["202"],"'TextField' is defined but never used.","'userId' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'CommentIcon' is defined but never used.","'Accordion' is defined but never used.","'EditPost' is defined but never used.","'Dropdown' is defined but never used.","'picture' is assigned a value but never used.","'tags' is assigned a value but never used.","'Card' is defined but never used.","'youtubeMeta' is defined but never used.","'createTextPost' is defined but never used.",["203"],{"desc":"204","fix":"205"},{"desc":"204","fix":"206"},"Update the dependencies array to be: [props.text, validateYouTubeUrl]",{"range":"207","text":"208"},{"range":"209","text":"208"},[1199,1211],"[props.text, validateYouTubeUrl]",[1221,1233]]