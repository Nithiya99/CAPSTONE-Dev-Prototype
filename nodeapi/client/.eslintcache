[{"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\showPost.js":"1","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Social.js":"2","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\TextPostView.js":"3","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\VideoPost.js":"4","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\TextPost.js":"5","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\YoutubeURLPost.js":"6","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Home.js":"7","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\posts.js":"8","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\YoutubePost.js":"9","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\Post.js":"10","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Signin.js":"11","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\UserRecommendation.js":"12","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Tagify\\SkillsInput.js":"13","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Tagify\\AssignPerson.js":"14","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\DragDropVideo.js":"15","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\MyProjects.js":"16","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\DragDropImages.js":"17","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Profile.js":"18","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\AssignedTo.js":"19","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\layout\\LayoutComponent.js":"20","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\JoinProject.js":"21","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\apiProject.js":"22"},{"size":7164,"mtime":1621611018581,"results":"23","hashOfConfig":"24"},{"size":4033,"mtime":1621611019914,"results":"25","hashOfConfig":"24"},{"size":6287,"mtime":1621614686034,"results":"26","hashOfConfig":"24"},{"size":6203,"mtime":1621614779435,"results":"27","hashOfConfig":"24"},{"size":4031,"mtime":1621613775477,"results":"28","hashOfConfig":"24"},{"size":4385,"mtime":1621613737789,"results":"29","hashOfConfig":"24"},{"size":11120,"mtime":1621614447489,"results":"30","hashOfConfig":"24"},{"size":1996,"mtime":1621614272760,"results":"31","hashOfConfig":"24"},{"size":6552,"mtime":1621614772692,"results":"32","hashOfConfig":"24"},{"size":6798,"mtime":1621614784876,"results":"33","hashOfConfig":"24"},{"size":6689,"mtime":1621256899363,"results":"34","hashOfConfig":"24"},{"size":3576,"mtime":1619598848257,"results":"35","hashOfConfig":"24"},{"size":499,"mtime":1618198716000,"results":"36","hashOfConfig":"24"},{"size":881,"mtime":1618827582403,"results":"37","hashOfConfig":"24"},{"size":4328,"mtime":1621675249196,"results":"38","hashOfConfig":"24"},{"size":36251,"mtime":1621693997637,"results":"39","hashOfConfig":"24"},{"size":5890,"mtime":1621675269464,"results":"40","hashOfConfig":"24"},{"size":18982,"mtime":1621611019136,"results":"41","hashOfConfig":"24"},{"size":598,"mtime":1618198716000,"results":"42","hashOfConfig":"24"},{"size":21249,"mtime":1621687772490,"results":"43","hashOfConfig":"24"},{"size":12077,"mtime":1621690558574,"results":"44","hashOfConfig":"24"},{"size":15879,"mtime":1621688065517,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"13vq143",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"53"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"53"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"53"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\showPost.js",["96"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Social.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\TextPostView.js",["97","98","99","100","101","102","103"],"import React, { Component } from \"react\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport Heart from \"react-animated-heart\";\r\nimport { getCurrentUser } from \"./../user/apiUser\";\r\nimport { likepost, dislikepost, addcomment, getpost } from \"./apiPosts\";\r\nimport { collect } from \"collect.js\";\r\nimport CommentIcon from \"@material-ui/icons/Comment\";\r\nimport moment from \"moment\";\r\nimport { Accordion, Button, Card } from \"react-bootstrap\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Sentiment from \"sentiment\";\r\nimport DeletePost from \"./DeletePost\";\r\nimport { changePosts } from \"../store/posts\";\r\nimport { connect } from \"react-redux\";\r\nimport DefaultProfile from \"../images/avatar.png\";\r\nconst sentiment = new Sentiment();\r\n\r\nclass TextPostView extends Component {\r\n  state = {\r\n    isClick: false,\r\n    comment: \"\",\r\n    id: getCurrentUser()._id,\r\n    sentimentScore: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    let users = this.props.liked_by;\r\n    if (users !== undefined && users !== null && users !== [])\r\n      if (users.indexOf(getCurrentUser()._id) > -1)\r\n        this.setState({ isClick: true });\r\n  }\r\n\r\n  postliked = () => {\r\n    this.setState({ isClick: !this.state.isClick });\r\n    if (this.state.isClick)\r\n      dislikepost(this.props._id)\r\n        .then((data) => console.log(data))\r\n        .then(() => this.props.changePosts(this.props._id));\r\n    else {\r\n      likepost(this.props._id)\r\n        .then((data) => console.log(data))\r\n        .then(() => this.props.changePosts(this.props._id));\r\n    }\r\n  };\r\n\r\n  onTextChange = (e) => {\r\n    this.setState({ comment: e.target.value });\r\n    this.findSentiment(e.target.value);\r\n  };\r\n\r\n  submitcomment = () => {\r\n    addcomment(this.props._id, this.state.comment).then(async () => {\r\n      await this.props.changePosts(this.props._id);\r\n    });\r\n  };\r\n\r\n  findSentiment(comment) {\r\n    const result = sentiment.analyze(comment);\r\n    this.setState({\r\n      sentimentScore: result.score,\r\n    });\r\n  }\r\n\r\n  rendercomments = (comments) => {\r\n    let reverseComments = [...comments].reverse();\r\n    return reverseComments.map(({ PostedOn, comment, userName }, index) => (\r\n      <div className=\"d-flex py-5\">\r\n        <div className=\"symbol symbol-40 symbol-light-warning mr-5\">\r\n          <span className=\"symbol-label\">\r\n            <img src={DefaultProfile} className=\"h-75 align-self-end\" />\r\n          </span>\r\n        </div>\r\n        <div className=\"d-flex flex-column flex-row-fluid\">\r\n          <div className=\"d-flex align-items-center flex-wrap\">\r\n            <Link\r\n              to=\"#\"\r\n              className=\"text-dark-75 text-hover-primary mb-1 font-size-lg font-weight-bolder pr-6\"\r\n            >\r\n              {userName}\r\n            </Link>\r\n            <span className=\"text-muted font-weight-normal flex-grow-1 font-size-sm\">\r\n              {moment(PostedOn).format(\"DD-MM-YYYY h:mm a\")}\r\n            </span>\r\n          </div>\r\n          <span className=\"text-dark-75 font-size-sm font-weight-normal pt-1\">\r\n            {comment}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  render() {\r\n    const { footerText, text, liked_by, _id, tags, comments, delete_button } =\r\n      this.props;\r\n    let counts = collect(liked_by).count();\r\n    return (\r\n      <>\r\n        <ToastContainer />\r\n        <div className=\"card card-custom gutter-b\">\r\n          <div className=\"card-body\">\r\n            <div className=\"d-flex align-items-center pb-4\">\r\n              <div className=\"symbol symbol-40 symbol-light-warning mr-5\">\r\n                <span className=\"symbol-label\">\r\n                  <img src={DefaultProfile} className=\"h-75 align-self-end\" />\r\n                </span>\r\n              </div>\r\n              <div className=\"d-flex flex-column flex-grow-1\">\r\n                <Link\r\n                  to=\"#\"\r\n                  className=\"text-dark-75 text-hover-primary mb-1 font-size-lg font-weight-bolder\"\r\n                >\r\n                  {footerText}\r\n                </Link>\r\n                <span className=\"text-muted font-weight-bold\">\r\n                  [Load Date and time posted here]\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <p className=\"text-dark-75 font-size-lg font-weight-normal\">\r\n                {text}\r\n              </p>\r\n              <div className=\"d-flex align-items-center\">\r\n                <button\r\n                  onClick={() => {\r\n                    getpost(_id).then((data) => {\r\n                      let link = `http://localhost:3000/post/${data.post._id}`;\r\n                      navigator.clipboard.writeText(link);\r\n                      toast.success(\"Link copied to clipboard\");\r\n                    });\r\n                  }}\r\n                >\r\n                  <ShareIcon />\r\n                </button>\r\n                <Heart isClick={this.state.isClick} onClick={this.postliked} />\r\n                {counts + \" likes\"}\r\n                {delete_button === \"enabled\" ? (\r\n                  <DeletePost postId={_id} />\r\n                ) : (\r\n                  <div></div>\r\n                )}\r\n              </div>\r\n              <TextField\r\n                name=\"comment\"\r\n                onChange={(e) => this.onTextChange(e)}\r\n                variant=\"outlined\"\r\n                label=\"Add a Comment\"\r\n                fullWidth\r\n              />\r\n              {this.state.sentimentScore >= -3 && (\r\n                <button\r\n                  onClick={this.submitcomment}\r\n                  className=\"btn btn-raised btn-primary mx-auto mt-3 mb-2 col-sm-3\"\r\n                >\r\n                  Submit\r\n                </button>\r\n              )}\r\n              {comments.length > 0 ? (\r\n                this.rendercomments(comments)\r\n              ) : (\r\n                <p>No Comments</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  posts: state.posts.posts,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  changePosts: (params) => dispatch(changePosts(params)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TextPostView);\r\n",["104","105"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\VideoPost.js",["106"],"import React, { Component } from \"react\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport Heart from \"react-animated-heart\";\r\nimport { getCurrentUser } from \"./../user/apiUser\";\r\nimport { likepost, dislikepost, addcomment, getpost } from \"./apiPosts\";\r\nimport { collect } from \"collect.js\";\r\nimport CommentIcon from \"@material-ui/icons/Comment\";\r\nimport moment from \"moment\";\r\nimport { Accordion, Button, Card } from \"react-bootstrap\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ReactPlayer from \"react-player\";\r\nimport Sentiment from \"sentiment\";\r\nimport DeletePost from \"./DeletePost\";\r\nimport { connect } from \"react-redux\";\r\nimport { changePosts } from \"../store/posts\";\r\n\r\nconst sentiment = new Sentiment();\r\nclass VideoPost extends Component {\r\n  state = {\r\n    isClick: false,\r\n    comment: \"\",\r\n    id: getCurrentUser()._id,\r\n    sentimentScore: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    let users = this.props.liked_by;\r\n    if (users !== undefined && users !== null && users !== [])\r\n      if (users.indexOf(getCurrentUser()._id) > -1)\r\n        this.setState({ isClick: true });\r\n  }\r\n\r\n  postliked = () => {\r\n    this.setState({ isClick: !this.state.isClick });\r\n    if (this.state.isClick)\r\n      dislikepost(this.props._id)\r\n        .then((data) => console.log(data))\r\n        .then(() => this.props.changePosts(this.props._id));\r\n    else\r\n      likepost(this.props._id)\r\n        .then((data) => console.log(data))\r\n        .then(() => this.props.changePosts(this.props._id));\r\n  };\r\n\r\n  onTextChange = (e) => {\r\n    this.setState({ comment: e.target.value });\r\n    this.findSentiment(e.target.value);\r\n  };\r\n\r\n  submitcomment = () => {\r\n    addcomment(this.props._id, this.state.comment).then(async (data) => {\r\n      // console.log(data);\r\n      await this.props.changePosts(this.props._id);\r\n    });\r\n  };\r\n\r\n  findSentiment(comment) {\r\n    const result = sentiment.analyze(comment);\r\n    this.setState({\r\n      sentimentScore: result.score,\r\n    });\r\n  }\r\n\r\n  rendercomments = (comments) => {\r\n    let reverseComments = [...comments].reverse();\r\n    return reverseComments.map(({ PostedOn, comment, userName }, index) => (\r\n      <div>\r\n        <div>\r\n          <span className=\"font-weight-bold font-size-lg \">{userName}</span>\r\n        </div>\r\n        <div className=\"text-muted font-size-sm\">\r\n          {comment + \" \" + moment(PostedOn).format(\"DD-MM-YYYY h:mm a\")}\r\n        </div>\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      headerText,\r\n      footerText,\r\n      videoUrl,\r\n      liked_by,\r\n      _id,\r\n      tags,\r\n      comments,\r\n      delete_button,\r\n    } = this.props;\r\n    let counts = collect(liked_by).count();\r\n    return (\r\n      <>\r\n        <ToastContainer />\r\n        <Card className=\"m-5\">\r\n          <Card.Header>\r\n            <Link\r\n              to={{\r\n                pathname: `/post/${this.props._id}`,\r\n              }}\r\n            >\r\n              {headerText}\r\n            </Link>\r\n            {/* <div>\r\n              {tags.map((tag) => (\r\n                <>{tag}</>\r\n              ))}\r\n            </div> */}\r\n            {delete_button === \"enabled\" ? (\r\n              <DeletePost postId={_id} />\r\n            ) : (\r\n              <div></div>\r\n            )}\r\n          </Card.Header>\r\n          <Card.Body className=\"col d-flex justify-content-center\">\r\n            {/* <Col> */}\r\n            <ReactPlayer\r\n              url={videoUrl}\r\n              controls={true}\r\n              volume={1}\r\n              muted={false}\r\n            />\r\n            {/* <Card.Img\r\n              style={{\r\n                width: \"45vw\",\r\n                height: \"30vw\",\r\n                \"object-fit\": \"cover\",\r\n              }}\r\n              variant=\"top\"\r\n              src={imageUrl}\r\n            /> */}\r\n            {/* </Col>\r\n                        <Col> */}\r\n            {/* </Col> */}\r\n          </Card.Body>\r\n          <Card.Body>\r\n            <button\r\n              onClick={() => {\r\n                getpost(_id).then((data) => {\r\n                  let link = `http://localhost:3000/post/${data.post._id}`;\r\n                  navigator.clipboard.writeText(link);\r\n                  toast.success(\"Link copied to clipboard\");\r\n                });\r\n              }}\r\n            >\r\n              <ShareIcon />\r\n            </button>\r\n            <Heart isClick={this.state.isClick} onClick={this.postliked} />\r\n            {counts + \" likes\"}\r\n            <Accordion>\r\n              <Card>\r\n                <Card.Header>\r\n                  <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n                    Comment <CommentIcon />\r\n                  </Accordion.Toggle>\r\n                </Card.Header>\r\n                <Accordion.Collapse eventKey=\"1\">\r\n                  <Card.Body>\r\n                    <TextField\r\n                      name=\"comment\"\r\n                      onChange={(e) => this.onTextChange(e)}\r\n                      variant=\"outlined\"\r\n                      label=\"Add a Comment\"\r\n                      fullWidth\r\n                    />\r\n                    {this.state.sentimentScore >= -3 && (\r\n                      <button\r\n                        onClick={this.submitcomment}\r\n                        className=\"btn btn-raised btn-primary mx-auto mt-3 mb-2 col-sm-3\"\r\n                      >\r\n                        Submit\r\n                      </button>\r\n                    )}\r\n                    {comments.length > 0 ? (\r\n                      this.rendercomments(comments)\r\n                    ) : (\r\n                      <p>No Comments</p>\r\n                    )}\r\n                  </Card.Body>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n            </Accordion>\r\n          </Card.Body>\r\n          <Card.Footer>{footerText}</Card.Footer>\r\n        </Card>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  posts: state.posts.posts,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  changePosts: (params) => dispatch(changePosts(params)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VideoPost);\r\n","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\TextPost.js",["107","108","109"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\YoutubeURLPost.js",["110","111","112"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\core\\Home.js",["113","114","115","116","117","118","119","120","121","122","123","124","125","126"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\store\\posts.js",["127"],"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { getLikesOfPost, getpost } from \"./../posts/apiPosts\";\r\n\r\nexport const getPosts = createAsyncThunk(\"posts/getPosts\", async () => {\r\n  return fetch(`http://localhost:3000/posts`)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      console.log(data);\r\n      return data.posts.reverse();\r\n    });\r\n});\r\nconst replace = async (posts, postId, newPost) => {\r\n  let arr = [...posts];\r\n  let setofarr = await arr.map((post, index) => {\r\n    if (post._id === postId) {\r\n      arr[index] = newPost;\r\n      // console.log(\"final arr:\", arr);\r\n    }\r\n    return arr;\r\n  });\r\n  return setofarr[setofarr.length - 1];\r\n  // console.log(\"final arr:\", arr);\r\n};\r\nconst replacePosts = (postId, spreadPosts) => {\r\n  return getpost(postId).then(async (data) => {\r\n    // spreadPosts.forEach((post) => (post._id === postId ? data.post : post));\r\n    // console.log(\"final posts:\", spreadPosts);\r\n    let finalarr = await replace(spreadPosts, postId, data.post);\r\n    // console.log(\"final posts:\", finalarr);\r\n    return finalarr;\r\n  });\r\n};\r\nexport const changePosts = createAsyncThunk(\r\n  \"posts/changePosts\",\r\n  async (postId, { getState }) => {\r\n    const { posts } = getState();\r\n    let oldposts = posts.posts;\r\n    let spreadPosts = [...oldposts];\r\n    let finalArr = await replacePosts(postId, spreadPosts);\r\n    console.log(finalArr);\r\n    return finalArr;\r\n  }\r\n);\r\nconst slice = createSlice({\r\n  name: \"posts\",\r\n  initialState: {\r\n    posts: [],\r\n  },\r\n  reducers: {\r\n    updatePosts: (state, action) => {\r\n      const posts = action.payload.posts;\r\n      void (state.posts = posts);\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [getPosts.fulfilled]: (state, action) => {\r\n      void (state.posts = action.payload);\r\n    },\r\n    [changePosts.fulfilled]: (state, action) => {\r\n      void (state.posts = action.payload);\r\n    },\r\n  },\r\n});\r\nexport const { updatePosts } = slice.actions;\r\nexport default slice.reducer;\r\n","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\YoutubePost.js",["128","129"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\Post.js",["130"],"import React, { Component } from \"react\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport Heart from \"react-animated-heart\";\r\nimport { getCurrentUser } from \"./../user/apiUser\";\r\nimport { likepost, dislikepost, addcomment, getpost } from \"./apiPosts\";\r\nimport { collect } from \"collect.js\";\r\nimport CommentIcon from \"@material-ui/icons/Comment\";\r\nimport moment from \"moment\";\r\nimport { Accordion, Button, Card } from \"react-bootstrap\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DeletePost from \"./DeletePost\";\r\nimport Sentiment from \"sentiment\";\r\nimport { Carousel } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { changePosts } from \"../store/posts\";\r\n\r\nconst sentiment = new Sentiment();\r\n\r\nclass Post extends Component {\r\n  state = {\r\n    isClick: false,\r\n    comment: \"\",\r\n    id: getCurrentUser()._id,\r\n    sentimentScore: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    let users = this.props.liked_by;\r\n    if (users !== undefined && users !== null && users !== [])\r\n      if (users.indexOf(getCurrentUser()._id) > -1)\r\n        this.setState({ isClick: true });\r\n  }\r\n  postliked = () => {\r\n    this.setState({ isClick: !this.state.isClick });\r\n    if (this.state.isClick)\r\n      dislikepost(this.props._id)\r\n        .then((data) => console.log(data))\r\n        .then(() => this.props.changePosts(this.props._id));\r\n    else\r\n      likepost(this.props._id)\r\n        .then((data) => console.log(data))\r\n        .then(() => this.props.changePosts(this.props._id));\r\n  };\r\n\r\n  onTextChange = (e) => {\r\n    this.setState({ comment: e.target.value });\r\n    this.findSentiment(e.target.value);\r\n  };\r\n\r\n  submitcomment = () => {\r\n    addcomment(this.props._id, this.state.comment).then(async (data) => {\r\n      await this.props.changePosts(this.props._id);\r\n    });\r\n  };\r\n\r\n  findSentiment(comment) {\r\n    const result = sentiment.analyze(comment);\r\n    this.setState({\r\n      sentimentScore: result.score,\r\n    });\r\n  }\r\n\r\n  rendercomments = (comments) => {\r\n    let reverseComments = [...comments].reverse();\r\n    return reverseComments.map(({ PostedOn, comment, userName }, index) => (\r\n      <div>\r\n        <div>\r\n          <span className=\"font-weight-bold font-size-lg \">{userName}</span>\r\n        </div>\r\n        <div className=\"text-muted font-size-sm\">\r\n          {comment + \" \" + moment(PostedOn).format(\"DD-MM-YYYY h:mm a\")}\r\n        </div>\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      headerText,\r\n      footerText,\r\n      imageUrl,\r\n      liked_by,\r\n      _id,\r\n      tags,\r\n      comments,\r\n      delete_button,\r\n    } = this.props;\r\n    let counts = collect(liked_by).count();\r\n    return (\r\n      <>\r\n        <ToastContainer />\r\n        <Card className=\"m-5\">\r\n          <Card.Header>\r\n            <Link\r\n              to={{\r\n                pathname: `/post/${this.props._id}`,\r\n              }}\r\n            >\r\n              {headerText}\r\n            </Link>\r\n            {/* <div>\r\n              {tags.map((tag) => (\r\n                <>{tag}</>\r\n              ))}\r\n            </div> */}\r\n            {delete_button === \"enabled\" ? (\r\n              <DeletePost postId={_id} />\r\n            ) : (\r\n              <div></div>\r\n            )}\r\n          </Card.Header>\r\n          <Card.Body className=\"col d-flex justify-content-center\">\r\n            {/* <Col> */}\r\n            {imageUrl !== \"undefined\" && imageUrl.length > 1 ? (\r\n              <Carousel interval={null}>\r\n                {imageUrl.map((url, i) => {\r\n                  return (\r\n                    <Carousel.Item>\r\n                      <img\r\n                        className=\"d-block w-100\"\r\n                        style={{\r\n                          width: \"45vw\",\r\n                          height: \"30vw\",\r\n                          \"object-fit\": \"cover\",\r\n                        }}\r\n                        src={url}\r\n                        alt={url}\r\n                      />\r\n                    </Carousel.Item>\r\n                  );\r\n                })}\r\n              </Carousel>\r\n            ) : (\r\n              <Card.Img\r\n                style={{\r\n                  width: \"45vw\",\r\n                  height: \"30vw\",\r\n                  \"object-fit\": \"cover\",\r\n                }}\r\n                variant=\"top\"\r\n                src={imageUrl[0]}\r\n              />\r\n            )}\r\n            {/* </Col>\r\n                        <Col> */}\r\n            {/* </Col> */}\r\n          </Card.Body>\r\n          <Card.Body>\r\n            <button\r\n              onClick={() => {\r\n                getpost(_id).then((data) => {\r\n                  let link = `http://localhost:3000/post/${data.post._id}`;\r\n                  navigator.clipboard.writeText(link);\r\n                  toast.success(\"Link copied to clipboard\");\r\n                });\r\n              }}\r\n            >\r\n              <ShareIcon />\r\n            </button>\r\n            <Heart isClick={this.state.isClick} onClick={this.postliked} />\r\n            {counts + \" likes\"}\r\n            <Accordion>\r\n              <Card>\r\n                <Card.Header>\r\n                  <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n                    Comment <CommentIcon />\r\n                  </Accordion.Toggle>\r\n                </Card.Header>\r\n                <Accordion.Collapse eventKey=\"1\">\r\n                  <Card.Body>\r\n                    <TextField\r\n                      name=\"comment\"\r\n                      onChange={(e) => this.onTextChange(e)}\r\n                      variant=\"outlined\"\r\n                      label=\"Add a Comment\"\r\n                      fullWidth\r\n                    />\r\n                    {this.state.sentimentScore >= -3 && (\r\n                      <button\r\n                        onClick={this.submitcomment}\r\n                        className=\"btn btn-raised btn-primary mx-auto mt-3 mb-2 col-sm-3\"\r\n                      >\r\n                        Submit\r\n                      </button>\r\n                    )}\r\n                    {comments.length > 0 ? (\r\n                      this.rendercomments(comments)\r\n                    ) : (\r\n                      <p>No Comments</p>\r\n                    )}\r\n                  </Card.Body>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n            </Accordion>\r\n          </Card.Body>\r\n          <Card.Footer>{footerText}</Card.Footer>\r\n        </Card>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  posts: state.posts.posts,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  changePosts: (params) => dispatch(changePosts(params)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Post);\r\n","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Signin.js",["131"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\UserRecommendation.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Tagify\\SkillsInput.js",[],["132","133"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\utils\\signupbutton\\Tagify\\AssignPerson.js",["134"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\DragDropVideo.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\MyProjects.js",["135","136","137","138","139","140"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\posts\\DragDropImages.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\user\\Profile.js",["141","142","143","144","145","146"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\AssignedTo.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\layout\\LayoutComponent.js",["147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\JoinProject.js",["178"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\nodeapi\\client\\src\\project\\apiProject.js",["179","180"],{"ruleId":"181","severity":1,"message":"182","line":88,"column":36,"nodeType":"183","messageId":"184","endLine":88,"endColumn":38},{"ruleId":"185","severity":1,"message":"186","line":8,"column":8,"nodeType":"187","messageId":"188","endLine":8,"endColumn":19},{"ruleId":"185","severity":1,"message":"189","line":10,"column":10,"nodeType":"187","messageId":"188","endLine":10,"endColumn":19},{"ruleId":"185","severity":1,"message":"190","line":10,"column":21,"nodeType":"187","messageId":"188","endLine":10,"endColumn":27},{"ruleId":"185","severity":1,"message":"191","line":10,"column":29,"nodeType":"187","messageId":"188","endLine":10,"endColumn":33},{"ruleId":"192","severity":1,"message":"193","line":72,"column":13,"nodeType":"194","endLine":72,"endColumn":73},{"ruleId":"185","severity":1,"message":"195","line":96,"column":46,"nodeType":"187","messageId":"188","endLine":96,"endColumn":50},{"ruleId":"192","severity":1,"message":"193","line":107,"column":19,"nodeType":"194","endLine":107,"endColumn":79},{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","replacedBy":"199"},{"ruleId":"185","severity":1,"message":"195","line":87,"column":7,"nodeType":"187","messageId":"188","endLine":87,"endColumn":11},{"ruleId":"185","severity":1,"message":"200","line":4,"column":10,"nodeType":"187","messageId":"188","endLine":4,"endColumn":14},{"ruleId":"185","severity":1,"message":"201","line":7,"column":26,"nodeType":"187","messageId":"188","endLine":7,"endColumn":43},{"ruleId":"202","severity":1,"message":"203","line":33,"column":6,"nodeType":"204","endLine":33,"endColumn":18,"suggestions":"205"},{"ruleId":"185","severity":1,"message":"200","line":4,"column":10,"nodeType":"187","messageId":"188","endLine":4,"endColumn":14},{"ruleId":"185","severity":1,"message":"206","line":7,"column":10,"nodeType":"187","messageId":"188","endLine":7,"endColumn":24},{"ruleId":"202","severity":1,"message":"203","line":33,"column":6,"nodeType":"204","endLine":33,"endColumn":18,"suggestions":"207"},{"ruleId":"185","severity":1,"message":"208","line":3,"column":10,"nodeType":"187","messageId":"188","endLine":3,"endColumn":26},{"ruleId":"185","severity":1,"message":"209","line":8,"column":3,"nodeType":"187","messageId":"188","endLine":8,"endColumn":14},{"ruleId":"185","severity":1,"message":"210","line":9,"column":3,"nodeType":"187","messageId":"188","endLine":9,"endColumn":21},{"ruleId":"185","severity":1,"message":"211","line":10,"column":3,"nodeType":"187","messageId":"188","endLine":10,"endColumn":29},{"ruleId":"185","severity":1,"message":"212","line":12,"column":13,"nodeType":"187","messageId":"188","endLine":12,"endColumn":14},{"ruleId":"185","severity":1,"message":"213","line":15,"column":10,"nodeType":"187","messageId":"188","endLine":15,"endColumn":20},{"ruleId":"185","severity":1,"message":"214","line":17,"column":10,"nodeType":"187","messageId":"188","endLine":17,"endColumn":15},{"ruleId":"185","severity":1,"message":"190","line":17,"column":17,"nodeType":"187","messageId":"188","endLine":17,"endColumn":23},{"ruleId":"185","severity":1,"message":"215","line":20,"column":10,"nodeType":"187","messageId":"188","endLine":20,"endColumn":21},{"ruleId":"181","severity":1,"message":"216","line":55,"column":46,"nodeType":"183","messageId":"217","endLine":55,"endColumn":48},{"ruleId":"185","severity":1,"message":"218","line":92,"column":13,"nodeType":"187","messageId":"188","endLine":92,"endColumn":26},{"ruleId":"185","severity":1,"message":"219","line":93,"column":50,"nodeType":"187","messageId":"188","endLine":93,"endColumn":60},{"ruleId":"192","severity":1,"message":"193","line":175,"column":25,"nodeType":"194","endLine":178,"endColumn":27},{"ruleId":"181","severity":1,"message":"216","line":221,"column":33,"nodeType":"183","messageId":"217","endLine":221,"endColumn":35},{"ruleId":"185","severity":1,"message":"220","line":2,"column":10,"nodeType":"187","messageId":"188","endLine":2,"endColumn":24},{"ruleId":"185","severity":1,"message":"221","line":15,"column":13,"nodeType":"187","messageId":"188","endLine":15,"endColumn":24},{"ruleId":"185","severity":1,"message":"195","line":100,"column":7,"nodeType":"187","messageId":"188","endLine":100,"endColumn":11},{"ruleId":"185","severity":1,"message":"195","line":87,"column":7,"nodeType":"187","messageId":"188","endLine":87,"endColumn":11},{"ruleId":"192","severity":1,"message":"193","line":102,"column":13,"nodeType":"194","endLine":102,"endColumn":35},{"ruleId":"196","replacedBy":"222"},{"ruleId":"198","replacedBy":"223"},{"ruleId":"181","severity":1,"message":"182","line":11,"column":32,"nodeType":"183","messageId":"184","endLine":11,"endColumn":34},{"ruleId":"185","severity":1,"message":"189","line":6,"column":3,"nodeType":"187","messageId":"188","endLine":6,"endColumn":12},{"ruleId":"185","severity":1,"message":"190","line":7,"column":3,"nodeType":"187","messageId":"188","endLine":7,"endColumn":9},{"ruleId":"185","severity":1,"message":"191","line":8,"column":3,"nodeType":"187","messageId":"188","endLine":8,"endColumn":7},{"ruleId":"185","severity":1,"message":"224","line":23,"column":10,"nodeType":"187","messageId":"188","endLine":23,"endColumn":24},{"ruleId":"185","severity":1,"message":"225","line":23,"column":26,"nodeType":"187","messageId":"188","endLine":23,"endColumn":31},{"ruleId":"181","severity":1,"message":"182","line":47,"column":46,"nodeType":"183","messageId":"184","endLine":47,"endColumn":48},{"ruleId":"185","severity":1,"message":"191","line":18,"column":3,"nodeType":"187","messageId":"188","endLine":18,"endColumn":7},{"ruleId":"185","severity":1,"message":"226","line":19,"column":3,"nodeType":"187","messageId":"188","endLine":19,"endColumn":12},{"ruleId":"185","severity":1,"message":"227","line":20,"column":3,"nodeType":"187","messageId":"188","endLine":20,"endColumn":16},{"ruleId":"185","severity":1,"message":"228","line":94,"column":9,"nodeType":"187","messageId":"188","endLine":94,"endColumn":16},{"ruleId":"185","severity":1,"message":"229","line":95,"column":13,"nodeType":"187","messageId":"188","endLine":95,"endColumn":22},{"ruleId":"181","severity":1,"message":"182","line":98,"column":30,"nodeType":"183","messageId":"184","endLine":98,"endColumn":32},{"ruleId":"185","severity":1,"message":"214","line":3,"column":10,"nodeType":"187","messageId":"188","endLine":3,"endColumn":15},{"ruleId":"185","severity":1,"message":"230","line":5,"column":8,"nodeType":"187","messageId":"188","endLine":5,"endColumn":12},{"ruleId":"185","severity":1,"message":"231","line":6,"column":8,"nodeType":"187","messageId":"188","endLine":6,"endColumn":12},{"ruleId":"185","severity":1,"message":"232","line":8,"column":3,"nodeType":"187","messageId":"188","endLine":8,"endColumn":10},{"ruleId":"185","severity":1,"message":"233","line":12,"column":3,"nodeType":"187","messageId":"188","endLine":12,"endColumn":17},{"ruleId":"185","severity":1,"message":"234","line":15,"column":3,"nodeType":"187","messageId":"188","endLine":15,"endColumn":10},{"ruleId":"185","severity":1,"message":"190","line":25,"column":10,"nodeType":"187","messageId":"188","endLine":25,"endColumn":16},{"ruleId":"181","severity":1,"message":"216","line":71,"column":22,"nodeType":"183","messageId":"217","endLine":71,"endColumn":24},{"ruleId":"181","severity":1,"message":"182","line":78,"column":11,"nodeType":"235","messageId":"236","endLine":78,"endColumn":18},{"ruleId":"181","severity":1,"message":"182","line":125,"column":37,"nodeType":"183","messageId":"184","endLine":125,"endColumn":39},{"ruleId":"181","severity":1,"message":"182","line":179,"column":45,"nodeType":"183","messageId":"184","endLine":179,"endColumn":47},{"ruleId":"181","severity":1,"message":"182","line":190,"column":22,"nodeType":"183","messageId":"184","endLine":190,"endColumn":24},{"ruleId":"181","severity":1,"message":"216","line":208,"column":25,"nodeType":"183","messageId":"217","endLine":208,"endColumn":27},{"ruleId":"181","severity":1,"message":"182","line":213,"column":9,"nodeType":"235","messageId":"236","endLine":213,"endColumn":16},{"ruleId":"181","severity":1,"message":"182","line":214,"column":47,"nodeType":"183","messageId":"184","endLine":214,"endColumn":49},{"ruleId":"181","severity":1,"message":"216","line":249,"column":48,"nodeType":"183","messageId":"217","endLine":249,"endColumn":50},{"ruleId":"181","severity":1,"message":"182","line":316,"column":24,"nodeType":"183","messageId":"184","endLine":316,"endColumn":26},{"ruleId":"181","severity":1,"message":"182","line":319,"column":27,"nodeType":"183","messageId":"184","endLine":319,"endColumn":29},{"ruleId":"237","severity":1,"message":"238","line":321,"column":31,"nodeType":"239","messageId":"240","endLine":321,"endColumn":47},{"ruleId":"185","severity":1,"message":"241","line":346,"column":15,"nodeType":"187","messageId":"188","endLine":346,"endColumn":18},{"ruleId":"185","severity":1,"message":"241","line":367,"column":15,"nodeType":"187","messageId":"188","endLine":367,"endColumn":18},{"ruleId":"181","severity":1,"message":"182","line":395,"column":31,"nodeType":"183","messageId":"184","endLine":395,"endColumn":33},{"ruleId":"181","severity":1,"message":"182","line":442,"column":24,"nodeType":"183","messageId":"184","endLine":442,"endColumn":26},{"ruleId":"181","severity":1,"message":"182","line":446,"column":27,"nodeType":"183","messageId":"184","endLine":446,"endColumn":29},{"ruleId":"237","severity":1,"message":"238","line":448,"column":31,"nodeType":"239","messageId":"240","endLine":448,"endColumn":47},{"ruleId":"185","severity":1,"message":"241","line":473,"column":15,"nodeType":"187","messageId":"188","endLine":473,"endColumn":18},{"ruleId":"185","severity":1,"message":"241","line":494,"column":15,"nodeType":"187","messageId":"188","endLine":494,"endColumn":18},{"ruleId":"181","severity":1,"message":"182","line":521,"column":35,"nodeType":"183","messageId":"184","endLine":521,"endColumn":37},{"ruleId":"185","severity":1,"message":"242","line":561,"column":33,"nodeType":"187","messageId":"188","endLine":561,"endColumn":38},{"ruleId":"181","severity":1,"message":"182","line":565,"column":22,"nodeType":"183","messageId":"184","endLine":565,"endColumn":24},{"ruleId":"181","severity":1,"message":"182","line":568,"column":34,"nodeType":"183","messageId":"184","endLine":568,"endColumn":36},{"ruleId":"181","severity":1,"message":"182","line":29,"column":35,"nodeType":"183","messageId":"184","endLine":29,"endColumn":37},{"ruleId":"243","severity":1,"message":"244","line":203,"column":56,"nodeType":"245","messageId":"246","endLine":203,"endColumn":57},{"ruleId":"243","severity":1,"message":"244","line":218,"column":56,"nodeType":"245","messageId":"246","endLine":218,"endColumn":57},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'CommentIcon' is defined but never used.","Identifier","unusedVar","'Accordion' is defined but never used.","'Button' is defined but never used.","'Card' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'tags' is assigned a value but never used.","no-native-reassign",["247"],"no-negated-in-lhs",["248"],"'Link' is defined but never used.","'createYoutubePost' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'validateYouTubeUrl'. Either include it or remove the dependency array.","ArrayExpression",["249"],"'createTextPost' is defined but never used.",["250"],"'getNotifications' is defined but never used.","'getNotified' is defined but never used.","'clearNotifications' is defined but never used.","'setSegregatedNotifications' is defined but never used.","'_' is defined but never used.","'getProject' is defined but never used.","'Modal' is defined but never used.","'getAllPosts' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'notifications' is assigned a value but never used.","'youtubeUrl' is assigned a value but never used.","'getLikesOfPost' is defined but never used.","'youtubeMeta' is defined but never used.",["247"],["248"],"'ToastContainer' is defined but never used.","'toast' is defined but never used.","'ListGroup' is defined but never used.","'ListGroupItem' is defined but never used.","'overdue' is assigned a value but never used.","'following' is assigned a value but never used.","'Pert' is defined but never used.","'Task' is defined but never used.","'addEdge' is defined but never used.","'removeElements' is defined but never used.","'addTask' is defined but never used.","ReturnStatement","expectedReturnValue","no-self-assign","'task.description' is assigned to itself.","MemberExpression","selfAssignment","'ele' is assigned a value but never used.","'tasks' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-global-assign","no-unsafe-negation",{"desc":"251","fix":"252"},{"desc":"251","fix":"253"},"Update the dependencies array to be: [props.text, validateYouTubeUrl]",{"range":"254","text":"255"},{"range":"256","text":"255"},[1199,1211],"[props.text, validateYouTubeUrl]",[1205,1217]]