[{"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\core\\Menu.js":"1","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\utils\\signupbutton\\ModalButton.js":"2","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\store\\notifications.js":"3","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\store\\dashboard.js":"4","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\project\\layout\\LayoutComponent.js":"5","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\project\\JoinProject.js":"6","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\project\\apiProject.js":"7","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\core\\Home.js":"8","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\store\\reducer.js":"9","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\user\\DeleteUser.js":"10","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\project\\AssignedTo.js":"11","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\utils\\signupbutton\\Tagify\\AssignPerson.js":"12","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\project\\layout\\Pert.js":"13","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\App.js":"14","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\user\\Signin.js":"15","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\utils\\signupbutton\\User.js":"16","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\utils\\Socket.js":"17","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\project\\MyProjects.js":"18","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\project\\SubmitProject.js":"19","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\project\\RatingComponent.js":"20","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\project\\taskComponents\\TrelloTask.js":"21","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\project\\taskComponents\\MyTask.js":"22","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\user\\apiUser.js":"23","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\project\\newProjectForm\\CreateProject.js":"24","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\project\\UserRecommendation.js":"25","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\utils\\signupbutton\\Tagify\\Assigner.js":"26","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\project\\Emoji.js":"27"},{"size":3308,"mtime":1618302336441,"results":"28","hashOfConfig":"29"},{"size":783,"mtime":1618198716000,"results":"30","hashOfConfig":"29"},{"size":1061,"mtime":1618198716000,"results":"31","hashOfConfig":"29"},{"size":561,"mtime":1618198716000,"results":"32","hashOfConfig":"29"},{"size":14884,"mtime":1618198716000,"results":"33","hashOfConfig":"29"},{"size":4111,"mtime":1618198716000,"results":"34","hashOfConfig":"29"},{"size":13275,"mtime":1618198716000,"results":"35","hashOfConfig":"29"},{"size":1505,"mtime":1618198716000,"results":"36","hashOfConfig":"29"},{"size":270,"mtime":1618198716000,"results":"37","hashOfConfig":"29"},{"size":1156,"mtime":1618198716000,"results":"38","hashOfConfig":"29"},{"size":598,"mtime":1618198716000,"results":"39","hashOfConfig":"29"},{"size":846,"mtime":1618198716000,"results":"40","hashOfConfig":"29"},{"size":4968,"mtime":1618198716000,"results":"41","hashOfConfig":"29"},{"size":647,"mtime":1618272945740,"results":"42","hashOfConfig":"29"},{"size":5354,"mtime":1618302088873,"results":"43","hashOfConfig":"29"},{"size":2871,"mtime":1618198716000,"results":"44","hashOfConfig":"29"},{"size":242,"mtime":1618272929988,"results":"45","hashOfConfig":"29"},{"size":11055,"mtime":1618285589056,"results":"46","hashOfConfig":"29"},{"size":4278,"mtime":1618323970892,"results":"47","hashOfConfig":"29"},{"size":1643,"mtime":1618321235394,"results":"48","hashOfConfig":"29"},{"size":6098,"mtime":1618281279266,"results":"49","hashOfConfig":"29"},{"size":4120,"mtime":1618281300721,"results":"50","hashOfConfig":"29"},{"size":2592,"mtime":1618285931861,"results":"51","hashOfConfig":"29"},{"size":5026,"mtime":1618198716000,"results":"52","hashOfConfig":"29"},{"size":3032,"mtime":1618198716000,"results":"53","hashOfConfig":"29"},{"size":1452,"mtime":1618198716000,"results":"54","hashOfConfig":"29"},{"size":2120,"mtime":1618319544804,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hf05uk",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"70"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\core\\Menu.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\utils\\signupbutton\\ModalButton.js",[],["114","115"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\store\\notifications.js",["116"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\store\\dashboard.js",["117"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\project\\layout\\LayoutComponent.js",["118","119","120","121","122","123","124","125"],"import React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Modal } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport Pert from \"./Pert\";\nimport Task from \"./Task\";\nimport ReactFlow, {\n  addEdge,\n  Background,\n  Controls,\n  MiniMap,\n} from \"react-flow-renderer\";\nimport {\n  addTask,\n  getTasks,\n  putConnections,\n  getConnections,\n  putPredecessors,\n  putPosition,\n} from \"../apiProject\";\nimport jsPERT from \"js-pert\";\nimport { Button } from \"@material-ui/core\";\nimport { nodeAdded, connectionAdded } from \"../../store/cpm\";\nconst styles = (theme) => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 3, 3),\n  },\n});\nclass LayoutComponent extends Component {\n  state = {\n    elements: [],\n    tasks: [],\n    nodes: [],\n    pert: {},\n    task: {},\n    show: false,\n    checked: false,\n  };\n\n  // getSource((link)=>{\n  //     this.state.elements.map((elem) => {\n  //       console.log(link.from, elem.key);\n  //     });\n  //   })\n  componentDidMount() {\n    //get DB tasks\n\n    getTasks(this.props.project._id)\n      .then((data) => {\n        if (data.err !== undefined) {\n          if (data.err === \"No tasks found\") {\n            this.setState({ tasks: [] });\n          }\n        } else {\n          if (data.tasks.length > 0 && data.tasks !== undefined)\n            this.setState({ tasks: data.tasks });\n        }\n      })\n      .then(() => {\n        if (!this.state.tasks || this.state.tasks[0] === \"\") return null;\n        this.state.tasks.map((task) => {\n          // label: \"Bleh\",\n          // description: \"Bleh max\",\n          // time: 2,\n          // pessimistic: 3,\n          // optimistic: 1,\n          // predecessors: [\"1\", \"2\"],\n          task[\"label\"] = task.taskName;\n          task[\"description\"] = task.description;\n          task[\"time\"] = task.mostLikelyTime;\n          task[\"optimistic\"] = task.optimisticTime;\n          task[\"pessimistic\"] = task.pessimisticTime;\n          // console.log(task);\n          if (\n            task.taskName !== \"Completed!!\" &&\n            task.taskName !== \"Lets Start Working\"\n          ) {\n            let ele = [...this.state.elements];\n            // console.log(ele);\n            let newNode = {\n              key: task._id,\n              id: (ele.length + 1).toString(),\n              data: task,\n              sourcePosition: \"right\",\n              targetPosition: \"left\",\n              position:\n                task.position !== undefined\n                  ? task.position\n                  : {\n                      x: (Math.random() * window.innerWidth) / 2,\n                      y: (Math.random() * window.innerHeight) / 2,\n                    },\n            };\n            ele.push(newNode);\n            this.setState({ elements: ele });\n            let newNodes = [...this.state.nodes];\n            newNodes.push(newNode);\n            this.setState({ nodes: newNodes });\n            this.props.nodeAdded({ node: newNode });\n            // console.log(this.state.elements);\n          } else {\n            if (task.taskName === \"Lets Start Working\") {\n              let ele = [...this.state.elements];\n              let newNode = {\n                key: task._id,\n                id: \"1\",\n                type: \"input\",\n                data: {\n                  label: \"Lets Start Working\",\n                  description:\n                    \"Start working on tasks to complete project on time\",\n                  pessimistic: 0,\n                  time: 0,\n                  optimistic: 0,\n                  predecessors: [],\n                  _id: task._id,\n                },\n                sourcePosition: \"right\",\n                position:\n                  task.position !== undefined ? task.position : { x: 0, y: 0 },\n              };\n              ele.push(newNode);\n              this.setState({ elements: ele });\n              this.props.nodeAdded({ node: newNode });\n            }\n            if (task.taskName === \"Completed!!\") {\n              let ele = [...this.state.elements];\n              let newNode = {\n                key: task._id,\n                id: \"2\",\n                type: \"output\",\n                data: {\n                  label: \"Completed!!\",\n                  description: \"Yaaayy you gus have completed the project\",\n                  pessimistic: 0,\n                  time: 0,\n                  optimistic: 0,\n                  predecessors: task.predecessors,\n                  _id: task._id,\n                },\n                targetPosition: \"left\",\n                position:\n                  task.position !== undefined\n                    ? task.position\n                    : { x: 500, y: 0 },\n              };\n              ele.push(newNode);\n              this.setState({ elements: ele });\n              let newNodes = [...this.state.nodes];\n              newNodes.push(newNode);\n              this.setState({ nodes: newNodes });\n              this.props.nodeAdded({ node: newNode });\n            }\n          }\n        });\n      })\n      .then(() => {\n        getConnections(this.props.project._id).then((data) => {\n          // this.state.elements.map((elem) => console.log(elem));\n          // console.log(this.state.elements);\n\n          data.connections.map((link) => {\n            // console.log(link);\n            this.state.elements.map((elem) => {\n              if (elem.key !== undefined) {\n                if (link.from.toString() === elem.key.toString()) {\n                  // console.log(\"from:\", elem);\n                  this.setState({ source: elem });\n                }\n                if (link.to.toString() === elem.key.toString()) {\n                  // console.log(\"to:\", elem);\n                  this.setState({ target: elem });\n                }\n              }\n              // console.log(getSource(link));\n              // console.log(elem);\n              // this.getSource(link);\n            });\n            let source = this.state.source;\n            let target = this.state.target;\n            // console.log(source);\n            // console.log(target);\n            // console.log(source, target);\n            // if (source.id !== undefined && target.id !== undefined) {\n            let edge = {\n              id:\n                \"reactflow__edge-\" +\n                source.id.toString() +\n                \"null-\" +\n                target.id.toString() +\n                \"null\",\n              source: source.id.toString(),\n              sourceHandle: null,\n              target: target.id.toString(),\n              targetHandle: null,\n            };\n            let ele = [...this.state.elements];\n            if (!this.edgeInElements(ele, edge)) {\n              this.props.connectionAdded({ connection: edge });\n              ele.push(edge);\n              // this.state.elements = ele;\n              this.setState({ elements: ele });\n              // console.log(this.state.elements);\n            }\n\n            return \"done\";\n            // }\n          });\n        });\n\n        // Pert display\n        // this.pertCalc();\n      });\n\n    //get DB connections\n  }\n  onLoad = (reactFlowInstance) => {\n    reactFlowInstance.fitView();\n  };\n  onNodeDragStop = (e, node) => {\n    console.log(node.position, node.data._id);\n    putPosition(this.props.project._id, node.data._id, node.position).then(\n      () => {\n        console.log(node.position + \" is saved\");\n      }\n    );\n  };\n  edgeInElements(elements, edge) {\n    let inside = false;\n    elements.map((elem) => {\n      if (elem.id.toString() === edge.id.toString()) {\n        inside = true;\n      }\n      return \"done\";\n    });\n    return inside;\n  }\n  onConnect = (params) => {\n    // postEdges(params);\n    // props.connectNodes(parseInt(params.source), parseInt(params.target));\n    // console.log(params.source, params.target);\n    // props.updateEdges();\n    // let predecessorArr = [];\n    // await getPredecessors(parseInt(params.target), params.source.toString())\n    //   .then((val) => (predecessorArr = val))\n    //   .catch((err) => console.log(err));\n    let source = params.source;\n    let target = params.target;\n    if (source !== undefined && target !== undefined) {\n      let edge = {\n        id:\n          \"reactflow__edge-\" +\n          source.toString() +\n          \"null-\" +\n          target.toString() +\n          \"null\",\n        source: source.toString(),\n        sourceHandle: null,\n        target: target.toString(),\n        targetHandle: null,\n      };\n      console.log(this.state.elements);\n      let sourceId = \"\";\n      let targetId = \"\";\n      this.state.elements.map((elem) => {\n        if (elem.id === source) {\n          sourceId = elem.key;\n        }\n        if (elem.id === target) {\n          targetId = elem.key;\n        }\n      });\n      putPredecessors(this.props.project._id, targetId, sourceId).then(() => {\n        console.log(sourceId + \" has new Predecessor \" + targetId);\n      });\n      let ele = [...this.state.elements];\n      if (!this.edgeInElements(ele, edge)) {\n        ele.push(edge);\n        putConnections(this.props.project._id, sourceId, targetId).then(() => {\n          console.log(\"connection \" + sourceId + \"to \" + targetId + \"added\");\n        });\n        // this.state.elements = ele;\n      }\n      this.props.connectionAdded(edge);\n      this.setState({ elements: ele });\n      console.log(this.state.elements);\n    }\n  };\n  getIdOfObjectId = (elemId) => {\n    let id = {};\n    // console.log(Number.isInteger(elemId));\n    this.state.elements.map((elem) => {\n      if (elem.data !== undefined)\n        if (elem.data._id.toString() === elemId) {\n          // console.log(\"element number:\" + elem.id);\n          id = elem.id;\n        }\n      return id;\n    });\n    return id;\n  };\n  handleClose = () => {\n    this.setState({ show: false });\n  };\n  pertCalc = () => {\n    this.setState({ show: true });\n    let tasksObject = {\n      1: {\n        id: \"1\",\n        mostLikelyTime: 0,\n        optimisticTime: 0,\n        pessimisticTime: 0,\n        predecessors: [],\n      },\n    };\n    let nodes = this.state.nodes;\n    // console.log();\n    tasksObject = nodes.map((elem) => {\n      // console.log(elem.data);\n      // if (elem.data.predecessors.length === 0 || elem.data.predecessors === undefined) return;\n      if (!this.state.checked) {\n        elem.data.predecessors.map((predecessor, index) => {\n          // console.log(predecessor);\n          // let id = this.getIdOfObjectId(predecessor.toString());\n          // console.log(id);\n          // console.log(elem.data);\n          let id = this.getIdOfObjectId(\n            elem.data.predecessors[index].toString()\n          );\n          // console.log(elem.data.predecessors[index] + \" id:\" + id);\n          // elem.data.predecessors[index] = id;\n          // this.setState({ checked: true });\n          console.log(elem.data.predecessors, id);\n          // console.log(elem.data.predecessors[index] + \" id:\" + id);\n        });\n      }\n      tasksObject[elem.id.toString()] = {\n        id: elem.id.toString(),\n        optimisticTime: elem.data.optimistic,\n        mostLikelyTime: elem.data.time,\n        pessimisticTime: elem.data.pessimistic,\n        predecessors: elem.data.predecessors,\n      };\n      // console.log(\"Element:\");\n      // console.log(elem);\n      // console.log(tasksObject);\n      // this.getIdOfObjectId(elem.data._id);\n      return tasksObject;\n    });\n    let task = tasksObject[tasksObject.length - 1];\n    this.setState({ task });\n    console.log(\"Pert:\");\n    let pert = jsPERT(tasksObject[tasksObject.length - 1]);\n    this.setState({ pert });\n    console.log(pert);\n    // axios.put(\"http://localhost:3002/api/pertcalc\", pert);\n    // return nodes;\n  };\n  onElementClick = (event, element) => {\n    // console.log(this.state.elements);\n    // setSelectedNode(element.data);\n    // console.log(element.data);\n  };\n\n  render() {\n    if (this.state.tasks === undefined) return null;\n    if (this.state.tasks.length === 0) return <div>No tasks</div>;\n    const { nodes, connections } = this.props;\n    const { status } = this.props.project;\n    let connect = status === \"Completed\" ? false : true;\n\n    let elements = [...nodes, ...connections];\n    // console.log(elements, this.state.elements);\n    return (\n      <div>\n        <div className=\"container-fluid\">\n          <ReactFlow\n            elements={this.state.elements}\n            onLoad={this.onLoad}\n            style={{\n              width: \"100%\",\n              height: \"95vh\",\n              backgroundColor: \"#1A192B\",\n            }}\n            onNodeDragStop={this.onNodeDragStop}\n            onConnect={this.onConnect}\n            onElementClick={this.onElementClick}\n            connectionLineStyle={{ stroke: \"#ddd\", strokeWidth: 2 }}\n            connectionLineType=\"bezier\"\n            snapToGrid={true}\n            snapGrid={[16, 16]}\n            nodesConnectable={connect}\n            nodesDraggable={connect}\n          >\n            <Background color=\"#888\" gap={16} />\n            <MiniMap\n              nodeColor={(n) => {\n                if (n.type === \"input\") return \"#DC143C\";\n                if (n.type === \"output\") return \"#90ee90\";\n                return \"cyan\";\n              }}\n            />\n            <Controls />\n          </ReactFlow>\n          <Button\n            onClick={() => {\n              this.pertCalc();\n            }}\n          >\n            Pert\n          </Button>\n          <Modal show={this.state.show} onHide={this.handleClose}>\n            <Modal.Header closeButton>\n              <Modal.Title>Details</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <h5>\n                <center>\n                  <strong>\n                    <u>PERT OBJECTS</u>\n                  </strong>\n                </center>\n              </h5>\n              <Task tasks={this.state.task} />\n              <h5>\n                <center>\n                  <strong>\n                    <u>PERT</u>\n                  </strong>\n                </center>\n              </h5>\n              <Pert pert={this.state.pert} />\n            </Modal.Body>\n            <Modal.Footer>\n              <Button onClick={this.handleClose}>Close</Button>\n            </Modal.Footer>\n          </Modal>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  nodes: state.cpm.nodes,\n  connections: state.cpm.connections,\n  state: state,\n  notifications: state.notifications.notifications,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  nodeAdded: (params) => dispatch(nodeAdded(params)),\n  connectionAdded: (params) => dispatch(connectionAdded(params)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(LayoutComponent));\n","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\project\\JoinProject.js",[],["126","127"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\project\\apiProject.js",["128","129"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\core\\Home.js",["130"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { notificationAdded, getNotified } from \"../store/notifications\";\nimport { getNotifications } from \"../apiNotifications\";\nimport { getCurrentUser } from \"../user/apiUser\";\nimport ProjectRecommendation from \"./ProjectRecommendation\";\nclass Home extends Component {\n  state = {};\n  componentDidMount() {\n    getNotifications()\n      .then((response) => {\n        return response.json();\n      })\n      .then((val) => {\n        let notifications = val.notifications;\n        notifications.map((notif) => {\n          this.props.getNotified({\n            id: notif._id,\n            message: notif.message,\n            read: notif.read,\n            type: notif.notifType,\n          });\n        });\n      });\n  }\n  render() {\n    if (getCurrentUser()._id === undefined) return;\n    if (this.props.notifications.length > 0)\n      console.log(this.props.notifications);\n\n    return (\n      <>\n        <div className=\"jumbotron\">\n          <h2>Home</h2>\n          <p className=\"lead\">News Feed (Posts) will be here</p>\n        </div>\n        <ProjectRecommendation />\n      </>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  notifications: state.notifications.notifications,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  addNotification: (params) => dispatch(notificationAdded(params)),\n  getNotified: (params) => dispatch(getNotified(params)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\store\\reducer.js",["131"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\user\\DeleteUser.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\project\\AssignedTo.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\utils\\signupbutton\\Tagify\\AssignPerson.js",["132"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\project\\layout\\Pert.js",["133","134","135","136","137","138"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\App.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\user\\Signin.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\utils\\signupbutton\\User.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\utils\\Socket.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\project\\MyProjects.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\project\\SubmitProject.js",["139","140","141","142"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\project\\RatingComponent.js",["143","144"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\project\\taskComponents\\TrelloTask.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\project\\taskComponents\\MyTask.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\user\\apiUser.js",["145","146","147"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\project\\newProjectForm\\CreateProject.js",["148"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\project\\UserRecommendation.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\utils\\signupbutton\\Tagify\\Assigner.js",["149","150","151"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\project\\Emoji.js",[],{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"157","line":2,"column":27,"nodeType":"158","messageId":"159","endLine":2,"endColumn":43},{"ruleId":"156","severity":1,"message":"160","line":3,"column":5,"nodeType":"158","messageId":"159","endLine":3,"endColumn":15},{"ruleId":"156","severity":1,"message":"161","line":8,"column":3,"nodeType":"158","messageId":"159","endLine":8,"endColumn":10},{"ruleId":"156","severity":1,"message":"162","line":14,"column":3,"nodeType":"158","messageId":"159","endLine":14,"endColumn":10},{"ruleId":"163","severity":1,"message":"164","line":69,"column":37,"nodeType":"165","messageId":"166","endLine":69,"endColumn":39},{"ruleId":"167","severity":1,"message":"168","line":77,"column":33,"nodeType":"169","messageId":"170","endLine":77,"endColumn":49},{"ruleId":"163","severity":1,"message":"164","line":172,"column":44,"nodeType":"165","messageId":"166","endLine":172,"endColumn":46},{"ruleId":"163","severity":1,"message":"164","line":273,"column":38,"nodeType":"165","messageId":"166","endLine":273,"endColumn":40},{"ruleId":"163","severity":1,"message":"164","line":330,"column":57,"nodeType":"165","messageId":"166","endLine":330,"endColumn":59},{"ruleId":"156","severity":1,"message":"171","line":380,"column":9,"nodeType":"158","messageId":"159","endLine":380,"endColumn":17},{"ruleId":"152","replacedBy":"172"},{"ruleId":"154","replacedBy":"173"},{"ruleId":"174","severity":1,"message":"175","line":203,"column":56,"nodeType":"176","messageId":"177","endLine":203,"endColumn":57},{"ruleId":"174","severity":1,"message":"175","line":218,"column":56,"nodeType":"176","messageId":"177","endLine":218,"endColumn":57},{"ruleId":"163","severity":1,"message":"164","line":16,"column":35,"nodeType":"165","messageId":"166","endLine":16,"endColumn":37},{"ruleId":"156","severity":1,"message":"178","line":3,"column":8,"nodeType":"158","messageId":"159","endLine":3,"endColumn":31},{"ruleId":"163","severity":1,"message":"164","line":11,"column":32,"nodeType":"165","messageId":"166","endLine":11,"endColumn":34},{"ruleId":"163","severity":1,"message":"179","line":77,"column":34,"nodeType":"165","messageId":"180","endLine":77,"endColumn":36},{"ruleId":"163","severity":1,"message":"179","line":93,"column":36,"nodeType":"165","messageId":"180","endLine":93,"endColumn":38},{"ruleId":"163","severity":1,"message":"164","line":122,"column":13,"nodeType":"181","messageId":"182","endLine":122,"endColumn":20},{"ruleId":"163","severity":1,"message":"179","line":125,"column":36,"nodeType":"165","messageId":"180","endLine":125,"endColumn":38},{"ruleId":"163","severity":1,"message":"179","line":139,"column":36,"nodeType":"165","messageId":"180","endLine":139,"endColumn":38},{"ruleId":"163","severity":1,"message":"179","line":153,"column":36,"nodeType":"165","messageId":"180","endLine":153,"endColumn":38},{"ruleId":"156","severity":1,"message":"183","line":7,"column":8,"nodeType":"158","messageId":"159","endLine":7,"endColumn":14},{"ruleId":"163","severity":1,"message":"164","line":18,"column":37,"nodeType":"165","messageId":"166","endLine":18,"endColumn":39},{"ruleId":"156","severity":1,"message":"184","line":37,"column":24,"nodeType":"158","messageId":"159","endLine":37,"endColumn":35},{"ruleId":"156","severity":1,"message":"185","line":115,"column":27,"nodeType":"158","messageId":"159","endLine":115,"endColumn":33},{"ruleId":"156","severity":1,"message":"186","line":2,"column":10,"nodeType":"158","messageId":"159","endLine":2,"endColumn":16},{"ruleId":"163","severity":1,"message":"164","line":15,"column":23,"nodeType":"165","messageId":"166","endLine":15,"endColumn":25},{"ruleId":"174","severity":1,"message":"175","line":2,"column":46,"nodeType":"176","messageId":"177","endLine":2,"endColumn":47},{"ruleId":"174","severity":1,"message":"175","line":17,"column":46,"nodeType":"176","messageId":"177","endLine":17,"endColumn":47},{"ruleId":"174","severity":1,"message":"175","line":33,"column":46,"nodeType":"176","messageId":"177","endLine":33,"endColumn":47},{"ruleId":"156","severity":1,"message":"187","line":109,"column":38,"nodeType":"158","messageId":"159","endLine":109,"endColumn":44},{"ruleId":"156","severity":1,"message":"188","line":1,"column":17,"nodeType":"158","messageId":"159","endLine":1,"endColumn":26},{"ruleId":"163","severity":1,"message":"164","line":27,"column":37,"nodeType":"165","messageId":"166","endLine":27,"endColumn":39},{"ruleId":"163","severity":1,"message":"164","line":29,"column":25,"nodeType":"165","messageId":"166","endLine":29,"endColumn":27},"no-native-reassign",["189"],"no-negated-in-lhs",["190"],"no-unused-vars","'getNotifications' is defined but never used.","Identifier","unusedVar","'lastTaskid' is assigned a value but never used.","'addEdge' is defined but never used.","'addTask' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-self-assign","'task.description' is assigned to itself.","MemberExpression","selfAssignment","'elements' is assigned a value but never used.",["189"],["190"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'projectDashBoardReducer' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","ReturnStatement","expectedReturnValue","'socket' is defined but never used.","'projectTeam' is assigned a value but never used.","'rating' is assigned a value but never used.","'Button' is defined but never used.","'skills' is assigned a value but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]