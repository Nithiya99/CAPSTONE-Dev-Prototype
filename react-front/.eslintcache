<<<<<<< HEAD
[{"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\project\\MyProjects.js":"1","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\project\\SubmitProject.js":"2","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\user\\apiUser.js":"3","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\core\\Menu.js":"4","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\utils\\signupbutton\\ModalButton.js":"5","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\store\\dashboard.js":"6","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\apiNotifications.js":"7","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\project\\layout\\LayoutComponent.js":"8","D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\project\\Rating\\RatingComponent.js":"9"},{"size":11340,"mtime":1618158907336,"results":"10","hashOfConfig":"11"},{"size":3919,"mtime":1618191294986,"results":"12","hashOfConfig":"11"},{"size":2596,"mtime":1618159495935,"results":"13","hashOfConfig":"11"},{"size":3446,"mtime":1618102637166,"results":"14","hashOfConfig":"11"},{"size":814,"mtime":1612780856991,"results":"15","hashOfConfig":"11"},{"size":585,"mtime":1617376383387,"results":"16","hashOfConfig":"11"},{"size":906,"mtime":1617469545439,"results":"17","hashOfConfig":"11"},{"size":15351,"mtime":1618063772402,"results":"18","hashOfConfig":"11"},{"size":2173,"mtime":1618203998371,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hf05uk",{"filePath":"22","messages":"23","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\project\\MyProjects.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\project\\SubmitProject.js",["38","39","40","41","42","43","44","45","46","47"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\user\\apiUser.js",["48","49","50"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\core\\Menu.js",["51"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\utils\\signupbutton\\ModalButton.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\store\\dashboard.js",["52"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\apiNotifications.js",[],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\project\\layout\\LayoutComponent.js",["53","54","55","56","57","58","59","60"],"D:\\College\\Capstone\\CAPSTONE-Dev-Prototype\\react-front\\src\\project\\Rating\\RatingComponent.js",["61","62","63","64","65"],{"ruleId":"66","severity":1,"message":"67","line":4,"column":10,"nodeType":"68","messageId":"69","endLine":4,"endColumn":16},{"ruleId":"66","severity":1,"message":"70","line":9,"column":23,"nodeType":"68","messageId":"69","endLine":9,"endColumn":32},{"ruleId":"66","severity":1,"message":"71","line":11,"column":8,"nodeType":"68","messageId":"69","endLine":11,"endColumn":18},{"ruleId":"66","severity":1,"message":"72","line":12,"column":8,"nodeType":"68","messageId":"69","endLine":12,"endColumn":11},{"ruleId":"66","severity":1,"message":"73","line":13,"column":8,"nodeType":"68","messageId":"69","endLine":13,"endColumn":20},{"ruleId":"66","severity":1,"message":"74","line":15,"column":7,"nodeType":"68","messageId":"69","endLine":15,"endColumn":19},{"ruleId":"66","severity":1,"message":"75","line":31,"column":11,"nodeType":"68","messageId":"69","endLine":31,"endColumn":16},{"ruleId":"66","severity":1,"message":"76","line":32,"column":13,"nodeType":"68","messageId":"69","endLine":32,"endColumn":22},{"ruleId":"77","severity":1,"message":"78","line":40,"column":32,"nodeType":"79","messageId":"80","endLine":40,"endColumn":34},{"ruleId":"77","severity":1,"message":"78","line":71,"column":37,"nodeType":"79","messageId":"80","endLine":71,"endColumn":39},{"ruleId":"81","severity":1,"message":"82","line":2,"column":46,"nodeType":"83","messageId":"84","endLine":2,"endColumn":47},{"ruleId":"81","severity":1,"message":"82","line":17,"column":46,"nodeType":"83","messageId":"84","endLine":17,"endColumn":47},{"ruleId":"81","severity":1,"message":"82","line":33,"column":46,"nodeType":"83","messageId":"84","endLine":33,"endColumn":47},{"ruleId":"66","severity":1,"message":"85","line":8,"column":10,"nodeType":"68","messageId":"69","endLine":8,"endColumn":12},{"ruleId":"66","severity":1,"message":"86","line":3,"column":5,"nodeType":"68","messageId":"69","endLine":3,"endColumn":15},{"ruleId":"66","severity":1,"message":"87","line":8,"column":3,"nodeType":"68","messageId":"69","endLine":8,"endColumn":10},{"ruleId":"66","severity":1,"message":"88","line":14,"column":3,"nodeType":"68","messageId":"69","endLine":14,"endColumn":10},{"ruleId":"77","severity":1,"message":"78","line":69,"column":37,"nodeType":"79","messageId":"80","endLine":69,"endColumn":39},{"ruleId":"89","severity":1,"message":"90","line":77,"column":33,"nodeType":"91","messageId":"92","endLine":77,"endColumn":49},{"ruleId":"77","severity":1,"message":"78","line":172,"column":44,"nodeType":"79","messageId":"80","endLine":172,"endColumn":46},{"ruleId":"77","severity":1,"message":"78","line":273,"column":38,"nodeType":"79","messageId":"80","endLine":273,"endColumn":40},{"ruleId":"77","severity":1,"message":"78","line":330,"column":57,"nodeType":"79","messageId":"80","endLine":330,"endColumn":59},{"ruleId":"66","severity":1,"message":"93","line":380,"column":9,"nodeType":"68","messageId":"69","endLine":380,"endColumn":17},{"ruleId":"66","severity":1,"message":"94","line":2,"column":18,"nodeType":"68","messageId":"69","endLine":2,"endColumn":23},{"ruleId":"66","severity":1,"message":"71","line":5,"column":8,"nodeType":"68","messageId":"69","endLine":5,"endColumn":18},{"ruleId":"77","severity":1,"message":"78","line":24,"column":23,"nodeType":"79","messageId":"80","endLine":24,"endColumn":25},{"ruleId":"66","severity":1,"message":"95","line":38,"column":11,"nodeType":"68","messageId":"69","endLine":38,"endColumn":17},{"ruleId":"77","severity":1,"message":"78","line":69,"column":43,"nodeType":"79","messageId":"80","endLine":69,"endColumn":45},"no-unused-vars","'finish' is defined but never used.","Identifier","unusedVar","'setRating' is defined but never used.","'Typography' is defined but never used.","'Box' is defined but never used.","'FavoriteIcon' is defined but never used.","'StyledRating' is assigned a value but never used.","'token' is assigned a value but never used.","'projectId' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'io' is defined but never used.","'lastTaskid' is assigned a value but never used.","'addEdge' is defined but never used.","'addTask' is defined but never used.","no-self-assign","'task.description' is assigned to itself.","MemberExpression","selfAssignment","'elements' is assigned a value but never used.","'Modal' is defined but never used.","'rating' is assigned a value but never used."]
=======
[{"E:\\capstone\\prototype\\CAPSTONE-Dev-Prototype\\react-front\\src\\project\\apiProject.js":"1","E:\\capstone\\prototype\\CAPSTONE-Dev-Prototype\\react-front\\src\\App.js":"2","E:\\capstone\\prototype\\CAPSTONE-Dev-Prototype\\react-front\\src\\project\\taskComponents\\TrelloTask.js":"3","E:\\capstone\\prototype\\CAPSTONE-Dev-Prototype\\react-front\\src\\project\\ProjectDashboard.js":"4","E:\\capstone\\prototype\\CAPSTONE-Dev-Prototype\\react-front\\src\\project\\MyProjects.js":"5"},{"size":13769,"mtime":1618074711289,"results":"6","hashOfConfig":"7"},{"size":891,"mtime":1618074749600,"results":"8","hashOfConfig":"7"},{"size":5838,"mtime":1618074561865,"results":"9","hashOfConfig":"7"},{"size":9948,"mtime":1618074902706,"results":"10","hashOfConfig":"7"},{"size":10969,"mtime":1618074681168,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"15vv1xc",{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\capstone\\prototype\\CAPSTONE-Dev-Prototype\\react-front\\src\\project\\apiProject.js",["23","24"],"E:\\capstone\\prototype\\CAPSTONE-Dev-Prototype\\react-front\\src\\App.js",["25"],"E:\\capstone\\prototype\\CAPSTONE-Dev-Prototype\\react-front\\src\\project\\taskComponents\\TrelloTask.js",[],"E:\\capstone\\prototype\\CAPSTONE-Dev-Prototype\\react-front\\src\\project\\ProjectDashboard.js",["26","27","28","29"],"import React, { Component } from \"react\";\r\nimport { Accordion, Card, Button, Row, Tab, Col, Nav } from \"react-bootstrap\";\r\nimport AddTask from \"./taskComponents/AddTask\";\r\nimport MyTasks from \"./taskComponents/MyTask\";\r\nimport LayoutComponent from \"./layout/LayoutComponent\";\r\nimport TrelloTask from \"./taskComponents/TrelloTask\";\r\nimport GroupTwoToneIcon from \"@material-ui/icons/GroupTwoTone\";\r\nimport AccountTreeTwoToneIcon from \"@material-ui/icons/AccountTreeTwoTone\";\r\nimport TuneTwoToneIcon from \"@material-ui/icons/TuneTwoTone\";\r\nimport PlaylistAddTwoToneIcon from \"@material-ui/icons/PlaylistAddTwoTone\";\r\nimport ListAltTwoToneIcon from \"@material-ui/icons/ListAltTwoTone\";\r\nimport { getCurrentUser } from \"../user/apiUser\";\r\n\r\nclass ProjectDashboard extends Component {\r\n  render() {\r\n    if (this.props.location.state.project === undefined) {\r\n      return null;\r\n    }\r\n    const { project } = this.props.location.state;\r\n    // console.log(project);\r\n    // console.log(this.props.location);\r\n    return (\r\n      <div>\r\n      {\r\n      // <div className=\"mt-5\">\r\n      //   <h1>{project.title}'s Dasboard</h1>\r\n      //   <Accordion defaultActiveKey=\"0\">\r\n      //     {project.status === \"Completed\" ? (\r\n      //       <> </>\r\n      //     ) : (\r\n      //       <>\r\n      //         {getCurrentUser()._id === project.leader ? (\r\n      //           <Card>\r\n      //             <Card.Header>\r\n      //               <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n      //                 Add Task\r\n      //               </Accordion.Toggle>\r\n      //             </Card.Header>\r\n      //             <Accordion.Collapse eventKey=\"0\">\r\n      //               <Card.Body>\r\n      //                 <AddTask projectId={project._id} />\r\n      //               </Card.Body>\r\n      //             </Accordion.Collapse>\r\n      //           </Card>\r\n      //         ) : (\r\n      //           <> </>\r\n      //         )}\r\n      //       </>\r\n      //     )}\r\n      //     <Card>\r\n      //       <Card.Header>\r\n      //         <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n      //           Show Tasks\r\n      //         </Accordion.Toggle>\r\n      //       </Card.Header>\r\n      //       <Accordion.Collapse eventKey=\"1\">\r\n      //         <Card.Body>\r\n      //           <MyTasks projectId={project._id} status={project.status} />\r\n      //         </Card.Body>\r\n      //       </Accordion.Collapse>\r\n      //     </Card>\r\n      //     <Card>\r\n      //       <Card.Header>\r\n      //         <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"2\">\r\n      //           Connect Tasks with Graphic layout\r\n      //         </Accordion.Toggle>\r\n      //       </Card.Header>\r\n      //       <Accordion.Collapse eventKey=\"2\">\r\n      //         <Card.Body>\r\n      //           <LayoutComponent project={project} />\r\n      //         </Card.Body>\r\n      //       </Accordion.Collapse>\r\n      //     </Card>\r\n      //     <Card>\r\n      //       <Card.Header>\r\n      //         <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"3\">\r\n      //           Trello\r\n      //         </Accordion.Toggle>\r\n      //       </Card.Header>\r\n      //       <Accordion.Collapse eventKey=\"3\">\r\n      //         <Card.Body>\r\n      //           <TrelloTask projectId={project._id} status={project.status} />\r\n      //         </Card.Body>\r\n      //       </Accordion.Collapse>\r\n      //     </Card>\r\n      //   </Accordion>\r\n      }\r\n        <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"projStats\">\r\n          <Row>\r\n            <Col sm={2}>\r\n              <div className=\"card card-custom card-stretch\">\r\n                <div className=\"card-body pt-4\">\r\n                  <h5 className=\"font-weight-bolder text-dark-75 text-hover-primary\">\r\n                    {project.title}\r\n                  </h5>\r\n                  <div className=\"text-muted\">{project.description}</div>\r\n                  <Nav variant=\"pills\" className=\"flex-column mt-3\">\r\n                    <Nav.Item>\r\n                      <Nav.Link eventKey=\"teamInfo\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"mr-3\">\r\n                            <GroupTwoToneIcon />\r\n                          </div>\r\n                          <div>Team Information</div>\r\n                        </div>\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                      <Nav.Link eventKey=\"projStats\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"mr-3\">\r\n                            <TuneTwoToneIcon />\r\n                          </div>\r\n                          <div>Project Stats</div>\r\n                        </div>\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                      <Nav.Link eventKey=\"addTask\">\r\n                      {project.status !== \"Completed\" && getCurrentUser()._id === project.leader ? (\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"mr-3\">\r\n                            <PlaylistAddTwoToneIcon />\r\n                          </div>\r\n                          <div>Add Task</div>\r\n                        </div>\r\n                        ) : (<div> </div>)\r\n                      }\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                      <Nav.Link eventKey=\"netDiagram\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"mr-3\">\r\n                            <AccountTreeTwoToneIcon />\r\n                          </div>\r\n                          <div>Network Diagram</div>\r\n                        </div>\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                      <Nav.Link eventKey=\"allTasks\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"mr-3\">\r\n                            <ListAltTwoToneIcon />\r\n                          </div>\r\n                          <div>All Tasks</div>\r\n                        </div>\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                  </Nav>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n            <Col sm={10}>\r\n              <Tab.Content>\r\n                <Tab.Pane eventKey=\"projStats\">\r\n                  <div className=\"card card-stretch\">\r\n                    <div className=\"card-header\">\r\n                      <div className=\"card-title align-items-start flex-column\">\r\n                        <h4 className=\"card-label font-weight-bolder text-dark\">\r\n                          Project Stats\r\n                        </h4>\r\n                        <span className=\"text-muted font-weight-bold font-size-sm mt-1\">\r\n                          Analysis of the tasks and time required displayed\r\n                          here.\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-body\">testing</div>\r\n                  </div>\r\n                </Tab.Pane>\r\n                <Tab.Pane eventKey=\"netDiagram\">\r\n                  <div className=\"card card-stretch\">\r\n                    <div className=\"card-header\">\r\n                      <div className=\"card-title align-items-start flex-column\">\r\n                        <h4 className=\"card-label font-weight-bolder text-dark\">\r\n                          Network Diagram\r\n                        </h4>\r\n                        <span className=\"text-muted font-weight-bold font-size-sm mt-1\">\r\n                          Task dpendency diagram.\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <LayoutComponent project={project} />\r\n                    </div>\r\n                  </div>\r\n                </Tab.Pane>\r\n                <Tab.Pane eventKey=\"allTasks\">\r\n                  <div className=\"card card-stretch\">\r\n                    <div className=\"card-header\">\r\n                      <div className=\"card-title align-items-start flex-column\">\r\n                        <h4 className=\"card-label font-weight-bolder text-dark\">\r\n                          Tasks Board\r\n                        </h4>\r\n                        <span className=\"text-muted font-weight-bold font-size-sm mt-1\">\r\n                          Complete allocated tasks.\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <TrelloTask projectId={project._id} status={project.status}/>\r\n                    </div>\r\n                  </div>\r\n                </Tab.Pane>\r\n                <Tab.Pane eventKey=\"addTask\">\r\n                  <div className=\"card card-stretch\">\r\n                    <div className=\"card-header\">\r\n                      <div className=\"card-title align-items-start flex-column\">\r\n                        <h4 className=\"card-label font-weight-bolder text-dark\">\r\n                          Create Task\r\n                        </h4>\r\n                        <span className=\"text-muted font-weight-bold font-size-sm mt-1\">\r\n                          Add Tasks and allocate to memebers.\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <AddTask projectId={project._id} />\r\n                    </div>\r\n                  </div>\r\n                </Tab.Pane>\r\n              </Tab.Content>\r\n            </Col>\r\n          </Row>\r\n        </Tab.Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProjectDashboard;\r\n","E:\\capstone\\prototype\\CAPSTONE-Dev-Prototype\\react-front\\src\\project\\MyProjects.js",[],{"ruleId":"30","severity":1,"message":"31","line":203,"column":56,"nodeType":"32","messageId":"33","endLine":203,"endColumn":57},{"ruleId":"30","severity":1,"message":"31","line":218,"column":56,"nodeType":"32","messageId":"33","endLine":218,"endColumn":57},{"ruleId":"34","severity":1,"message":"35","line":16,"column":7,"nodeType":"36","messageId":"37","endLine":16,"endColumn":15},{"ruleId":"34","severity":1,"message":"38","line":2,"column":10,"nodeType":"36","messageId":"37","endLine":2,"endColumn":19},{"ruleId":"34","severity":1,"message":"39","line":2,"column":21,"nodeType":"36","messageId":"37","endLine":2,"endColumn":25},{"ruleId":"34","severity":1,"message":"40","line":2,"column":27,"nodeType":"36","messageId":"37","endLine":2,"endColumn":33},{"ruleId":"34","severity":1,"message":"41","line":4,"column":8,"nodeType":"36","messageId":"37","endLine":4,"endColumn":15},"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-unused-vars","'socketio' is assigned a value but never used.","Identifier","unusedVar","'Accordion' is defined but never used.","'Card' is defined but never used.","'Button' is defined but never used.","'MyTasks' is defined but never used."]
>>>>>>> parent of 6091013 (Nithiya-emailOverflow FIx)
