[{"D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\reportWebVitals.js":"1","D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\store\\store.js":"2","D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\store\\reducer.js":"3","D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\user\\Users.js":"4","D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\user\\Profile.js":"5","D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\auth\\index.js":"6","D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\project\\ProjectDashboard.js":"7","D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\user\\DeleteUser.js":"8","D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\project\\newProjectForm\\RoleCreate.js":"9","D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\project\\SubmitProject.js":"10","D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\project\\UserRecommendation.js":"11","D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\project\\taskComponents\\TrelloTask.js":"12","D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\project\\taskComponents\\MyTask.js":"13","D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\project\\layout\\LayoutComponent.js":"14","D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\MainRouter.js":"15","D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\user\\EditProfile.js":"16","D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\project\\MyProjects.js":"17","D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\utils\\signupbutton\\Tagify\\SkillsInput.js":"18","D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\core\\ProjectRecommendation.js":"19","D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\project\\LeaveProject.js":"20","D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\project\\apiProject.js":"21","D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\utils\\signupbutton\\Social.js":"22","D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\project\\layout\\Pert.js":"23","D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\user\\Signin.js":"24","D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\project\\newProjectForm\\CreateProject.js":"25","D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\apiNotifications.js":"26","D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\project\\RoleEditView.js":"27","D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\project\\AssignedTo.js":"28","D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\utils\\signupbutton\\Tagify\\TagFinal.js":"29","D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\utils\\signupbutton\\User.js":"30","D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\utils\\signupbutton\\Tagify\\AssignPerson.js":"31","D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\utils\\signupbutton\\Tagify\\Assigner.js":"32","D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\core\\Home.js":"33","D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\project\\JoinProject.js":"34","D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\store\\dashboard.js":"35","D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\store\\notifications.js":"36","D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\utils\\signupbutton\\Form.js":"37","D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\utils\\signupbutton\\Personal.js":"38","D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\project\\layout\\Task.js":"39","D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\core\\Menu.js":"40","D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\project\\DeleteProject.js":"41","D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\project\\taskComponents\\EditModel.js":"42","D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\App.js":"43"},{"size":362,"mtime":1612449129000,"results":"44","hashOfConfig":"45"},{"size":297,"mtime":1617618544461,"results":"46","hashOfConfig":"45"},{"size":279,"mtime":1617712802484,"results":"47","hashOfConfig":"45"},{"size":2334,"mtime":1618309817286,"results":"48","hashOfConfig":"45"},{"size":12623,"mtime":1618298676876,"results":"49","hashOfConfig":"45"},{"size":1831,"mtime":1613642599338,"results":"50","hashOfConfig":"45"},{"size":10360,"mtime":1618310286124,"results":"51","hashOfConfig":"45"},{"size":1207,"mtime":1617712734423,"results":"52","hashOfConfig":"45"},{"size":1886,"mtime":1614326128856,"results":"53","hashOfConfig":"45"},{"size":1538,"mtime":1618043212007,"results":"54","hashOfConfig":"45"},{"size":3573,"mtime":1618306937970,"results":"55","hashOfConfig":"45"},{"size":5838,"mtime":1618138919330,"results":"56","hashOfConfig":"45"},{"size":4242,"mtime":1618041236647,"results":"57","hashOfConfig":"45"},{"size":15351,"mtime":1618041236629,"results":"58","hashOfConfig":"45"},{"size":1879,"mtime":1617712802821,"results":"59","hashOfConfig":"45"},{"size":7020,"mtime":1614159586854,"results":"60","hashOfConfig":"45"},{"size":12754,"mtime":1618308754852,"results":"61","hashOfConfig":"45"},{"size":522,"mtime":1613924655431,"results":"62","hashOfConfig":"45"},{"size":3563,"mtime":1618310738047,"results":"63","hashOfConfig":"45"},{"size":1940,"mtime":1617618544425,"results":"64","hashOfConfig":"45"},{"size":13769,"mtime":1618138919272,"results":"65","hashOfConfig":"45"},{"size":3330,"mtime":1612804290439,"results":"66","hashOfConfig":"45"},{"size":5141,"mtime":1617618544431,"results":"67","hashOfConfig":"45"},{"size":4961,"mtime":1617712802569,"results":"68","hashOfConfig":"45"},{"size":5214,"mtime":1617618539893,"results":"69","hashOfConfig":"45"},{"size":906,"mtime":1617712802318,"results":"70","hashOfConfig":"45"},{"size":3037,"mtime":1614326128832,"results":"71","hashOfConfig":"45"},{"size":623,"mtime":1613807884923,"results":"72","hashOfConfig":"45"},{"size":1297,"mtime":1614159586855,"results":"73","hashOfConfig":"45"},{"size":2963,"mtime":1613924655437,"results":"74","hashOfConfig":"45"},{"size":879,"mtime":1615372314893,"results":"75","hashOfConfig":"45"},{"size":1517,"mtime":1615372314912,"results":"76","hashOfConfig":"45"},{"size":1555,"mtime":1618041236568,"results":"77","hashOfConfig":"45"},{"size":4483,"mtime":1618310142437,"results":"78","hashOfConfig":"45"},{"size":585,"mtime":1617712802480,"results":"79","hashOfConfig":"45"},{"size":1103,"mtime":1617712802481,"results":"80","hashOfConfig":"45"},{"size":4647,"mtime":1613924655310,"results":"81","hashOfConfig":"45"},{"size":2184,"mtime":1613924655426,"results":"82","hashOfConfig":"45"},{"size":714,"mtime":1617618544450,"results":"83","hashOfConfig":"45"},{"size":3198,"mtime":1617713619355,"results":"84","hashOfConfig":"45"},{"size":1467,"mtime":1618041154875,"results":"85","hashOfConfig":"45"},{"size":3021,"mtime":1617712802459,"results":"86","hashOfConfig":"45"},{"size":891,"mtime":1618301975020,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"1d67kkj",{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"90"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"90"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"111"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"90"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"90"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"111"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"145"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"90"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"111"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"90"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"90"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"90"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\reportWebVitals.js",[],["191","192"],"D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\store\\store.js",["193","194"],"import { devToolsEnhancer } from \"redux-devtools-extension\";\r\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport reducer from \"./reducer\";\r\nexport default function () {\r\n  return configureStore({\r\n    reducer,\r\n    middleware: [...getDefaultMiddleware()],\r\n  });\r\n}\r\n","D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\store\\reducer.js",["195"],"import cpmReducer from \"./cpm\";\r\nimport notificationReducer from \"./notifications\";\r\nimport projectDashBoardReducer from \"./dashboard\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport default combineReducers({\r\n  cpm: cpmReducer,\r\n  notifications: notificationReducer,\r\n});\r\n","D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\user\\Users.js",[],"D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\user\\Profile.js",["196","197"],"D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\auth\\index.js",[],["198","199"],"D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\project\\ProjectDashboard.js",["200","201","202","203"],"D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\user\\DeleteUser.js",[],"D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\project\\newProjectForm\\RoleCreate.js",["204"],"import React from \"react\";\r\nimport SkillsInput from \"../../utils/signupbutton/Tagify/SkillsInput\";\r\n\r\nconst RoleList = (props) => {\r\n  // if (props.skillDetails === undefined) return null;\r\n  const { onChange } = props;\r\n  return props.roleDetails.map((val, idx) => {\r\n    let roleName = `roleName-${idx}`;\r\n    let roleSkills = `roleSkills-${idx}`;\r\n    return (\r\n      <div className=\"form-row mt-3\" key={val.index}>\r\n        <div className=\"form-group col-md-4 offset-1\">\r\n          <label>\r\n            <big>Role Title</big>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control required\"\r\n            // rolename=\"roleName\"\r\n            idx={idx}\r\n            id={roleName}\r\n            onChange={onChange(\"roleName\")}\r\n            value={props.roleDetails[idx].roleName}\r\n          />\r\n        </div>\r\n        {/*<div className=\"form-row\" key={val.index}>*/}\r\n        <div className=\"form-group col-md-5\">\r\n          <SkillsInput\r\n            label={<big>Role Skills</big>}\r\n            setSkills={(e) => {\r\n              props.roleDetails[idx].roleSkills = e;\r\n            }}\r\n            value={props.roleDetails[idx].roleSkills}\r\n          />\r\n        </div>\r\n        {/*</div>*/}\r\n        <div className=\"form-group col-md-2 mt-4\">\r\n          {idx === 0 ? (\r\n            <button\r\n              onClick={() => props.add()}\r\n              type=\"button\"\r\n              className=\"btn btn-primary text-center\"\r\n            >\r\n              <i className=\"fa fa-plus\" aria-hidden=\"true\" />\r\n            </button>\r\n          ) : (\r\n            <button\r\n              className=\"btn btn-danger\"\r\n              onClick={() => props.delete(val)}\r\n            >\r\n              <i className=\"fa fa-minus\" aria-hidden=\"true\" />\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n};\r\n\r\nexport default RoleList;\r\n",["205","206"],"D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\project\\SubmitProject.js",[],"D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\project\\UserRecommendation.js",[],"D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\project\\taskComponents\\TrelloTask.js",[],"D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\project\\taskComponents\\MyTask.js",[],"D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\project\\layout\\LayoutComponent.js",["207","208","209","210","211","212","213","214"],"import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport Pert from \"./Pert\";\r\nimport Task from \"./Task\";\r\nimport ReactFlow, {\r\n  addEdge,\r\n  Background,\r\n  Controls,\r\n  MiniMap,\r\n} from \"react-flow-renderer\";\r\nimport {\r\n  addTask,\r\n  getTasks,\r\n  putConnections,\r\n  getConnections,\r\n  putPredecessors,\r\n  putPosition,\r\n} from \"../apiProject\";\r\nimport jsPERT from \"js-pert\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { nodeAdded, connectionAdded } from \"../../store/cpm\";\r\nconst styles = (theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 3, 3),\r\n  },\r\n});\r\nclass LayoutComponent extends Component {\r\n  state = {\r\n    elements: [],\r\n    tasks: [],\r\n    nodes: [],\r\n    pert: {},\r\n    task: {},\r\n    show: false,\r\n    checked: false,\r\n  };\r\n\r\n  // getSource((link)=>{\r\n  //     this.state.elements.map((elem) => {\r\n  //       console.log(link.from, elem.key);\r\n  //     });\r\n  //   })\r\n  componentDidMount() {\r\n    //get DB tasks\r\n\r\n    getTasks(this.props.project._id)\r\n      .then((data) => {\r\n        if (data.err !== undefined) {\r\n          if (data.err === \"No tasks found\") {\r\n            this.setState({ tasks: [] });\r\n          }\r\n        } else {\r\n          if (data.tasks.length > 0 && data.tasks !== undefined)\r\n            this.setState({ tasks: data.tasks });\r\n        }\r\n      })\r\n      .then(() => {\r\n        if (!this.state.tasks || this.state.tasks[0] === \"\") return null;\r\n        this.state.tasks.map((task) => {\r\n          // label: \"Bleh\",\r\n          // description: \"Bleh max\",\r\n          // time: 2,\r\n          // pessimistic: 3,\r\n          // optimistic: 1,\r\n          // predecessors: [\"1\", \"2\"],\r\n          task[\"label\"] = task.taskName;\r\n          task[\"description\"] = task.description;\r\n          task[\"time\"] = task.mostLikelyTime;\r\n          task[\"optimistic\"] = task.optimisticTime;\r\n          task[\"pessimistic\"] = task.pessimisticTime;\r\n          // console.log(task);\r\n          if (\r\n            task.taskName !== \"Completed!!\" &&\r\n            task.taskName !== \"Lets Start Working\"\r\n          ) {\r\n            let ele = [...this.state.elements];\r\n            // console.log(ele);\r\n            let newNode = {\r\n              key: task._id,\r\n              id: (ele.length + 1).toString(),\r\n              data: task,\r\n              sourcePosition: \"right\",\r\n              targetPosition: \"left\",\r\n              position:\r\n                task.position !== undefined\r\n                  ? task.position\r\n                  : {\r\n                      x: (Math.random() * window.innerWidth) / 2,\r\n                      y: (Math.random() * window.innerHeight) / 2,\r\n                    },\r\n            };\r\n            ele.push(newNode);\r\n            this.setState({ elements: ele });\r\n            let newNodes = [...this.state.nodes];\r\n            newNodes.push(newNode);\r\n            this.setState({ nodes: newNodes });\r\n            this.props.nodeAdded({ node: newNode });\r\n            // console.log(this.state.elements);\r\n          } else {\r\n            if (task.taskName === \"Lets Start Working\") {\r\n              let ele = [...this.state.elements];\r\n              let newNode = {\r\n                key: task._id,\r\n                id: \"1\",\r\n                type: \"input\",\r\n                data: {\r\n                  label: \"Lets Start Working\",\r\n                  description:\r\n                    \"Start working on tasks to complete project on time\",\r\n                  pessimistic: 0,\r\n                  time: 0,\r\n                  optimistic: 0,\r\n                  predecessors: [],\r\n                  _id: task._id,\r\n                },\r\n                sourcePosition: \"right\",\r\n                position:\r\n                  task.position !== undefined ? task.position : { x: 0, y: 0 },\r\n              };\r\n              ele.push(newNode);\r\n              this.setState({ elements: ele });\r\n              this.props.nodeAdded({ node: newNode });\r\n            }\r\n            if (task.taskName === \"Completed!!\") {\r\n              let ele = [...this.state.elements];\r\n              let newNode = {\r\n                key: task._id,\r\n                id: \"2\",\r\n                type: \"output\",\r\n                data: {\r\n                  label: \"Completed!!\",\r\n                  description: \"Yaaayy you gus have completed the project\",\r\n                  pessimistic: 0,\r\n                  time: 0,\r\n                  optimistic: 0,\r\n                  predecessors: task.predecessors,\r\n                  _id: task._id,\r\n                },\r\n                targetPosition: \"left\",\r\n                position:\r\n                  task.position !== undefined\r\n                    ? task.position\r\n                    : { x: 500, y: 0 },\r\n              };\r\n              ele.push(newNode);\r\n              this.setState({ elements: ele });\r\n              let newNodes = [...this.state.nodes];\r\n              newNodes.push(newNode);\r\n              this.setState({ nodes: newNodes });\r\n              this.props.nodeAdded({ node: newNode });\r\n            }\r\n          }\r\n        });\r\n      })\r\n      .then(() => {\r\n        getConnections(this.props.project._id).then((data) => {\r\n          // this.state.elements.map((elem) => console.log(elem));\r\n          // console.log(this.state.elements);\r\n\r\n          data.connections.map((link) => {\r\n            // console.log(link);\r\n            this.state.elements.map((elem) => {\r\n              if (elem.key !== undefined) {\r\n                if (link.from.toString() === elem.key.toString()) {\r\n                  // console.log(\"from:\", elem);\r\n                  this.setState({ source: elem });\r\n                }\r\n                if (link.to.toString() === elem.key.toString()) {\r\n                  // console.log(\"to:\", elem);\r\n                  this.setState({ target: elem });\r\n                }\r\n              }\r\n              // console.log(getSource(link));\r\n              // console.log(elem);\r\n              // this.getSource(link);\r\n            });\r\n            let source = this.state.source;\r\n            let target = this.state.target;\r\n            // console.log(source);\r\n            // console.log(target);\r\n            // console.log(source, target);\r\n            // if (source.id !== undefined && target.id !== undefined) {\r\n            let edge = {\r\n              id:\r\n                \"reactflow__edge-\" +\r\n                source.id.toString() +\r\n                \"null-\" +\r\n                target.id.toString() +\r\n                \"null\",\r\n              source: source.id.toString(),\r\n              sourceHandle: null,\r\n              target: target.id.toString(),\r\n              targetHandle: null,\r\n            };\r\n            let ele = [...this.state.elements];\r\n            if (!this.edgeInElements(ele, edge)) {\r\n              this.props.connectionAdded({ connection: edge });\r\n              ele.push(edge);\r\n              // this.state.elements = ele;\r\n              this.setState({ elements: ele });\r\n              // console.log(this.state.elements);\r\n            }\r\n\r\n            return \"done\";\r\n            // }\r\n          });\r\n        });\r\n\r\n        // Pert display\r\n        // this.pertCalc();\r\n      });\r\n\r\n    //get DB connections\r\n  }\r\n  onLoad = (reactFlowInstance) => {\r\n    reactFlowInstance.fitView();\r\n  };\r\n  onNodeDragStop = (e, node) => {\r\n    console.log(node.position, node.data._id);\r\n    putPosition(this.props.project._id, node.data._id, node.position).then(\r\n      () => {\r\n        console.log(node.position + \" is saved\");\r\n      }\r\n    );\r\n  };\r\n  edgeInElements(elements, edge) {\r\n    let inside = false;\r\n    elements.map((elem) => {\r\n      if (elem.id.toString() === edge.id.toString()) {\r\n        inside = true;\r\n      }\r\n      return \"done\";\r\n    });\r\n    return inside;\r\n  }\r\n  onConnect = (params) => {\r\n    // postEdges(params);\r\n    // props.connectNodes(parseInt(params.source), parseInt(params.target));\r\n    // console.log(params.source, params.target);\r\n    // props.updateEdges();\r\n    // let predecessorArr = [];\r\n    // await getPredecessors(parseInt(params.target), params.source.toString())\r\n    //   .then((val) => (predecessorArr = val))\r\n    //   .catch((err) => console.log(err));\r\n    let source = params.source;\r\n    let target = params.target;\r\n    if (source !== undefined && target !== undefined) {\r\n      let edge = {\r\n        id:\r\n          \"reactflow__edge-\" +\r\n          source.toString() +\r\n          \"null-\" +\r\n          target.toString() +\r\n          \"null\",\r\n        source: source.toString(),\r\n        sourceHandle: null,\r\n        target: target.toString(),\r\n        targetHandle: null,\r\n      };\r\n      console.log(this.state.elements);\r\n      let sourceId = \"\";\r\n      let targetId = \"\";\r\n      this.state.elements.map((elem) => {\r\n        if (elem.id === source) {\r\n          sourceId = elem.key;\r\n        }\r\n        if (elem.id === target) {\r\n          targetId = elem.key;\r\n        }\r\n      });\r\n      putPredecessors(this.props.project._id, targetId, sourceId).then(() => {\r\n        console.log(sourceId + \" has new Predecessor \" + targetId);\r\n      });\r\n      let ele = [...this.state.elements];\r\n      if (!this.edgeInElements(ele, edge)) {\r\n        ele.push(edge);\r\n        putConnections(this.props.project._id, sourceId, targetId).then(() => {\r\n          console.log(\"connection \" + sourceId + \"to \" + targetId + \"added\");\r\n        });\r\n        // this.state.elements = ele;\r\n      }\r\n      this.props.connectionAdded(edge);\r\n      this.setState({ elements: ele });\r\n      console.log(this.state.elements);\r\n    }\r\n  };\r\n  getIdOfObjectId = (elemId) => {\r\n    let id = {};\r\n    // console.log(Number.isInteger(elemId));\r\n    this.state.elements.map((elem) => {\r\n      if (elem.data !== undefined)\r\n        if (elem.data._id.toString() === elemId) {\r\n          // console.log(\"element number:\" + elem.id);\r\n          id = elem.id;\r\n        }\r\n      return id;\r\n    });\r\n    return id;\r\n  };\r\n  handleClose = () => {\r\n    this.setState({ show: false });\r\n  };\r\n  pertCalc = () => {\r\n    this.setState({ show: true });\r\n    let tasksObject = {\r\n      1: {\r\n        id: \"1\",\r\n        mostLikelyTime: 0,\r\n        optimisticTime: 0,\r\n        pessimisticTime: 0,\r\n        predecessors: [],\r\n      },\r\n    };\r\n    let nodes = this.state.nodes;\r\n    // console.log();\r\n    tasksObject = nodes.map((elem) => {\r\n      // console.log(elem.data);\r\n      // if (elem.data.predecessors.length === 0 || elem.data.predecessors === undefined) return;\r\n      if (!this.state.checked) {\r\n        elem.data.predecessors.map((predecessor, index) => {\r\n          // console.log(predecessor);\r\n          // let id = this.getIdOfObjectId(predecessor.toString());\r\n          // console.log(id);\r\n          // console.log(elem.data);\r\n          let id = this.getIdOfObjectId(\r\n            elem.data.predecessors[index].toString()\r\n          );\r\n          // console.log(elem.data.predecessors[index] + \" id:\" + id);\r\n          // elem.data.predecessors[index] = id;\r\n          // this.setState({ checked: true });\r\n          console.log(elem.data.predecessors, id);\r\n          // console.log(elem.data.predecessors[index] + \" id:\" + id);\r\n        });\r\n      }\r\n      tasksObject[elem.id.toString()] = {\r\n        id: elem.id.toString(),\r\n        optimisticTime: elem.data.optimistic,\r\n        mostLikelyTime: elem.data.time,\r\n        pessimisticTime: elem.data.pessimistic,\r\n        predecessors: elem.data.predecessors,\r\n      };\r\n      // console.log(\"Element:\");\r\n      // console.log(elem);\r\n      // console.log(tasksObject);\r\n      // this.getIdOfObjectId(elem.data._id);\r\n      return tasksObject;\r\n    });\r\n    let task = tasksObject[tasksObject.length - 1];\r\n    this.setState({ task });\r\n    console.log(\"Pert:\");\r\n    let pert = jsPERT(tasksObject[tasksObject.length - 1]);\r\n    this.setState({ pert });\r\n    console.log(pert);\r\n    // axios.put(\"http://localhost:3002/api/pertcalc\", pert);\r\n    // return nodes;\r\n  };\r\n  onElementClick = (event, element) => {\r\n    // console.log(this.state.elements);\r\n    // setSelectedNode(element.data);\r\n    // console.log(element.data);\r\n  };\r\n\r\n  render() {\r\n    if (this.state.tasks === undefined) return null;\r\n    if (this.state.tasks.length === 0) return <div>No tasks</div>;\r\n    const { nodes, connections } = this.props;\r\n    const { status } = this.props.project;\r\n    let connect = status === \"Completed\" ? false : true;\r\n\r\n    let elements = [...nodes, ...connections];\r\n    // console.log(elements, this.state.elements);\r\n    return (\r\n      <div>\r\n        <div className=\"container-fluid\">\r\n          <ReactFlow\r\n            elements={this.state.elements}\r\n            onLoad={this.onLoad}\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"95vh\",\r\n              backgroundColor: \"#1A192B\",\r\n            }}\r\n            onNodeDragStop={this.onNodeDragStop}\r\n            onConnect={this.onConnect}\r\n            onElementClick={this.onElementClick}\r\n            connectionLineStyle={{ stroke: \"#ddd\", strokeWidth: 2 }}\r\n            connectionLineType=\"bezier\"\r\n            snapToGrid={true}\r\n            snapGrid={[16, 16]}\r\n            nodesConnectable={connect}\r\n            nodesDraggable={connect}\r\n          >\r\n            <Background color=\"#888\" gap={16} />\r\n            <MiniMap\r\n              nodeColor={(n) => {\r\n                if (n.type === \"input\") return \"#DC143C\";\r\n                if (n.type === \"output\") return \"#90ee90\";\r\n                return \"cyan\";\r\n              }}\r\n            />\r\n            <Controls />\r\n          </ReactFlow>\r\n          <Button\r\n            onClick={() => {\r\n              this.pertCalc();\r\n            }}\r\n          >\r\n            Pert\r\n          </Button>\r\n          <Modal show={this.state.show} onHide={this.handleClose}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Details</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <h5>\r\n                <center>\r\n                  <strong>\r\n                    <u>PERT OBJECTS</u>\r\n                  </strong>\r\n                </center>\r\n              </h5>\r\n              <Task tasks={this.state.task} />\r\n              <h5>\r\n                <center>\r\n                  <strong>\r\n                    <u>PERT</u>\r\n                  </strong>\r\n                </center>\r\n              </h5>\r\n              <Pert pert={this.state.pert} />\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button onClick={this.handleClose}>Close</Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  nodes: state.cpm.nodes,\r\n  connections: state.cpm.connections,\r\n  state: state,\r\n  notifications: state.notifications.notifications,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  nodeAdded: (params) => dispatch(nodeAdded(params)),\r\n  connectionAdded: (params) => dispatch(connectionAdded(params)),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(styles)(LayoutComponent));\r\n","D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\MainRouter.js",["215","216"],"import React, { useEffect } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Home from \"./core/Home\";\r\nimport Menu from \"./core/Menu\";\r\nimport Profile from \"./user/Profile\";\r\nimport Users from \"./user/Users\";\r\nimport EditProfile from \"./user/EditProfile\";\r\nimport \"./styles.css\";\r\n// import NavBar from \"./core/NavBar\";\r\nimport CreateProject from \"./project/newProjectForm/CreateProject\";\r\nimport JoinProject from \"./project/JoinProject\";\r\nimport MyProjects from \"./project/MyProjects\";\r\nimport ProjectDashboard from \"./project/ProjectDashboard\";\r\nimport EditProject from \"./project/EditProject\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst MainRouter = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <Menu />\r\n          </div>\r\n          <div className=\"col-md-11\">\r\n            <Switch>\r\n              <Route path=\"/home\" component={Home}></Route>\r\n              <Route path=\"/users\" component={Users}></Route>\r\n              <Route path=\"/createproject\" component={CreateProject}></Route>\r\n              <Route path=\"/joinproject\" component={JoinProject}></Route>\r\n              <Route exact path=\"/myprojects\" component={MyProjects}></Route>\r\n              <Route\r\n                path=\"/myprojects/dashboard/:projectId\"\r\n                component={ProjectDashboard}\r\n              ></Route>\r\n              <Route\r\n                path=\"/myprojects/edit/:projectId\"\r\n                component={EditProject}\r\n              ></Route>\r\n              <Route path=\"/user/edit/:userId\" component={EditProfile}></Route>\r\n              <Route path=\"/user/:userId\" component={Profile}></Route>\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainRouter;\r\n","D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\user\\EditProfile.js",["217"],"import React, { Component } from \"react\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { read, update } from \"./apiUser\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport SkillsInput from \"../utils/signupbutton/Tagify/SkillsInput\";\r\n\r\nclass EditProfile extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      id: \"\",\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      redirectToProfile: false,\r\n      error: \"\",\r\n    };\r\n  }\r\n\r\n  init = (userId) => {\r\n    const token = isAuthenticated().token;\r\n    read(userId, token).then((data) => {\r\n      if (data.error) {\r\n        this.setState({ redirectToProfile: true });\r\n      } else {\r\n        this.setState({\r\n          id: data._id,\r\n          name: data.name,\r\n          email: data.email,\r\n          username: data.username,\r\n          location: data.location,\r\n          bio: data.bio,\r\n          dob: data.dob,\r\n          skills: data.skills,\r\n          social: data.social,\r\n          error: \"\",\r\n        });\r\n        let str = \"\";\r\n        data.skills.map((skill) => {\r\n          str += skill;\r\n          str += \",\";\r\n        });\r\n        str = str.slice(0, -1);\r\n        this.setState({ skillstr: str });\r\n      }\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const userId = this.props.match.params.userId;\r\n    this.init(userId);\r\n  }\r\n  handleChange = (name) => (event) => {\r\n    this.setState({ [name]: event.target.value });\r\n  };\r\n  handleSkills = (newSkills) => {\r\n    this.setState({ skills: newSkills });\r\n  };\r\n  handleSocialChange = (name) => (event) => {\r\n    const social = Object.assign({}, this.state.social, {\r\n      [name]: event.target.value,\r\n    });\r\n    this.setState({ social });\r\n  };\r\n  clickSubmit = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      name,\r\n      username,\r\n      email,\r\n      password,\r\n      location,\r\n      bio,\r\n      social,\r\n      skills,\r\n    } = this.state;\r\n    const user = {\r\n      name,\r\n      username,\r\n      email,\r\n      location,\r\n      bio,\r\n      social,\r\n      skills,\r\n      password: password || undefined,\r\n    };\r\n    // console.log(user);\r\n    const userId = this.props.match.params.userId;\r\n    const token = isAuthenticated().token;\r\n    update(userId, token, user).then((data) => {\r\n      if (data.error) this.setState({ error: data.error });\r\n      else\r\n        this.setState({\r\n          redirectToProfile: true,\r\n        });\r\n    });\r\n    // console.log(user);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      name,\r\n      email,\r\n      password,\r\n      username,\r\n      location,\r\n      bio,\r\n      social,\r\n      redirectToProfile,\r\n      error,\r\n      skillstr,\r\n    } = this.state;\r\n\r\n    if (redirectToProfile) {\r\n      return <Redirect to={`/user/${id}`} />;\r\n    }\r\n    if (social === undefined) return null;\r\n    return (\r\n      <div className=\"container\">\r\n        <h2 className=\"mt-5 mb-5\">Edit Profile</h2>\r\n        <div\r\n          className=\"alert alert-danger\"\r\n          style={{ display: error ? \"\" : \"none\" }}\r\n        >\r\n          {error}\r\n        </div>\r\n\r\n        <form>\r\n          <div className=\"form-group\">\r\n            <label>Username</label>\r\n            <input\r\n              onChange={this.handleChange(\"username\")}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={username}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Name</label>\r\n            <input\r\n              onChange={this.handleChange(\"name\")}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={name}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Email</label>\r\n            <input\r\n              onChange={this.handleChange(\"email\")}\r\n              type=\"email\"\r\n              className=\"form-control\"\r\n              value={email}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Password</label>\r\n            <input\r\n              onChange={this.handleChange(\"password\")}\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              value={password}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Bio</label>\r\n            <input\r\n              onChange={this.handleChange(\"bio\")}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={bio}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Location</label>\r\n            <input\r\n              onChange={this.handleChange(\"location\")}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={location}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <SkillsInput\r\n              label={\"Skills\"}\r\n              setSkills={this.handleSkills}\r\n              value={skillstr}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Instagram</label>\r\n            <input\r\n              onChange={this.handleSocialChange(\"instagram\")}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={social.instagram}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Facebook</label>\r\n            <input\r\n              onChange={this.handleSocialChange(\"facebook\")}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={social.instagram}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Your Website</label>\r\n            <input\r\n              onChange={this.handleSocialChange(\"website\")}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={social.website}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Linkedin</label>\r\n            <input\r\n              onChange={this.handleSocialChange(\"linkedin\")}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={social.linkedin}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Youtube</label>\r\n            <input\r\n              onChange={this.handleSocialChange(\"youtube\")}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={social.youtube}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Twitter</label>\r\n            <input\r\n              onChange={this.handleSocialChange(\"twitter\")}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={social.twitter}\r\n            />\r\n          </div>\r\n          <button\r\n            onClick={this.clickSubmit}\r\n            className=\"btn btn-raised btn-primary\"\r\n          >\r\n            Update\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditProfile;\r\n","D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\project\\MyProjects.js",[],"D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\utils\\signupbutton\\Tagify\\SkillsInput.js",[],"D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\core\\ProjectRecommendation.js",["218","219"],"D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\project\\LeaveProject.js",[],"D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\project\\apiProject.js",["220","221"],"export const newProject = (project) => {\r\n  let userId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let obj = {\r\n    title: project.title,\r\n    description: project.description,\r\n    skills: project.skills,\r\n    roles: project.roleDetails,\r\n  };\r\n  let checkSettings = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n  return fetch(\r\n    `http://localhost:8081/project/check/?X=${obj.title}&X1=${obj.description}`,\r\n    checkSettings\r\n  )\r\n    .then((response) => {\r\n      // let val = response.json();\r\n      // console.log(val);\r\n      return response.json();\r\n    })\r\n    .then((val) => {\r\n      // console.log(val);\r\n      if (val.message === \"Can be added!\") {\r\n        let settings = {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n          body: JSON.stringify(obj),\r\n        };\r\n        // console.log(settings.body);\r\n        return fetch(`http://localhost:8081/project/new/${userId}`, settings)\r\n          .then((response) => {\r\n            // console.log(Promise.resolve(response));\r\n            return response.json();\r\n          })\r\n          .then((val) => {\r\n            console.log(val);\r\n            return val;\r\n          })\r\n          .catch((err) => console.log(err));\r\n      } else {\r\n        return { error: val.message, similar: val.data };\r\n      }\r\n    });\r\n  // console.log(response.json());\r\n  // return response.json();\r\n};\r\nexport const updateProject = (project, projectId) => {\r\n  let userId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let obj = {\r\n    title: project.title,\r\n    description: project.description,\r\n    skills: project.skills,\r\n    roles: project.roleDetails,\r\n    team: project.team,\r\n    tasks: project.tasks,\r\n  };\r\n  let settings = {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(obj),\r\n  };\r\n  // console.log(settings.body);\r\n  return fetch(\r\n    `http://localhost:8081/project/edit/${userId}/${projectId}`,\r\n    settings\r\n  )\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const leaveProject = (userId, projectId, token) => {\r\n  return fetch(`http://localhost:8081/project/leave/${userId}/${projectId}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n    .then((response) => {\r\n      console.log(\"Done\");\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const request = (user, project, role) => {\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let obj = {\r\n    roleId: role,\r\n  };\r\n  let requestObj = {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(obj),\r\n  };\r\n  return fetch(\r\n    `http://localhost:8081/project/request/${user}/${project}`,\r\n    requestObj\r\n  )\r\n    .then((response) => {\r\n      if (response.status === 400) {\r\n        alert(\"Already requested\");\r\n      }\r\n      if (response.status === 200) {\r\n        alert(\" Requested\");\r\n      }\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\nexport const acceptRequest = (userId, projectId, acceptUserId, roleId) => {\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let acceptObj = {\r\n    acceptUserId: acceptUserId,\r\n    roleId: roleId,\r\n  };\r\n  let settings = {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(acceptObj),\r\n  };\r\n  return fetch(\r\n    `http://localhost:8081/requests/accept/${userId}/${projectId}`,\r\n    settings\r\n  )\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\nexport const declineRequest = (userId, projectId, declineUserId, roleId) => {\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let declineObj = {\r\n    rejectUserId: declineUserId,\r\n    roleId: roleId,\r\n  };\r\n  let settings = {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(declineObj),\r\n  };\r\n  return fetch(\r\n    `http://localhost:8081/requests/decline/${userId}/${projectId}`,\r\n    settings\r\n  )\r\n    .then((response) => {\r\n      window.location.reload();\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\nexport const listmyprojects = () => {\r\n  let userId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let requestObj = {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n  return fetch(`http://localhost:8081/projects/user/${userId}`, requestObj)\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\nexport const listprojects = () => {\r\n  return fetch(\"http://localhost:8081/projects\", {\r\n    method: \"GET\",\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const abandon = (projectId, token) => {\r\n  return fetch(\"http://localhost:8081/project/delete/\" + `${projectId}`, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n    .then((response) => {\r\n      console.log(\"done\");\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\nexport const finish = (projectId, token) => {\r\n  return fetch(\"http://localhost:8081/project/finish/\" + `${projectId}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n    .then((response) => {\r\n      console.log(\"Project has been marked as completed\");\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const getTeam = (projectId) => {\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  return fetch(\"http://localhost:8081/project/team/\" + projectId.toString(), {\r\n    method: \"GET\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\nexport const addTask = (projectId, task) => {\r\n  let userId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  // task_title: \"\",\r\n  //     task_description: \"\",\r\n  //     task_responsible: \"\",\r\n  //     task_completed: false,\r\n  //     task_optimistic: \"\",\r\n  //     task_pessimistic: \"\",\r\n  //     task_mostLikely: \"\",\r\n  let Obj = {\r\n    taskName: task.task_title,\r\n    taskDescription: task.task_description,\r\n    assignedTo: task.task_responsible_ids,\r\n    status: task.task_completed,\r\n    optimisticTime: task.task_optimistic,\r\n    mostLikelyTime: task.task_mostLikely,\r\n    pessimisticTime: task.task_pessimistic,\r\n  };\r\n  let settings = {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(Obj),\r\n  };\r\n  console.log(settings.body);\r\n  return fetch(\r\n    `http://localhost:8081/project/tasks/${userId}/${projectId}`,\r\n    settings\r\n  )\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const listmytasks = () => {\r\n  let userId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let requestObj = {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n  return fetch(`http://localhost:8081/projects/user/${userId}/`, requestObj)\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const getTasks = (projectId) => {\r\n  let userId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  return fetch(\r\n    \"http://localhost:8081/project/tasks/\" +\r\n      userId.toString() +\r\n      \"/\" +\r\n      projectId.toString(),\r\n    {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    }\r\n  )\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const putPredecessors = (projectId, taskId, connectId) => {\r\n  let userId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let Obj = {\r\n    taskId: taskId,\r\n    connectId: connectId,\r\n  };\r\n  return fetch(\r\n    \"http://localhost:8081/project/tasks/predecessors/\" +\r\n      userId.toString() +\r\n      \"/\" +\r\n      projectId.toString(),\r\n    {\r\n      method: \"PUT\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(Obj),\r\n    }\r\n  )\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const putConnections = (projectId, source, target) => {\r\n  let userId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let Obj = {\r\n    from: source,\r\n    to: target,\r\n  };\r\n  return fetch(\r\n    \"http://localhost:8081/project/connections/\" +\r\n      userId.toString() +\r\n      \"/\" +\r\n      projectId.toString(),\r\n    {\r\n      method: \"PUT\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(Obj),\r\n    }\r\n  )\r\n    .then((response) => {\r\n      // console.log(response.json());\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\nexport const getConnections = (projectId) => {\r\n  let userId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n\r\n  return fetch(\r\n    \"http://localhost:8081/project/connections/\" +\r\n      userId.toString() +\r\n      \"/\" +\r\n      projectId.toString(),\r\n    {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    }\r\n  )\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const putPosition = (projectId, taskId, position) => {\r\n  let userId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let Obj = {\r\n    taskId: taskId,\r\n    position: position,\r\n  };\r\n  return fetch(\r\n    \"http://localhost:8081/project/position/\" +\r\n      userId.toString() +\r\n      \"/\" +\r\n      projectId.toString(),\r\n    {\r\n      method: \"PUT\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(Obj),\r\n    }\r\n  )\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\n//new functions\r\nexport const updateTask = (task, projectId) => {\r\n  let userId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  // console.log(task.id);\r\n  let Obj = {\r\n    id: task.id,\r\n    taskName: task.title,\r\n    taskDescription: task.description,\r\n    pessimisticTime: parseInt(task.pessimisticTime),\r\n    optimisticTime: parseInt(task.optimisticTime),\r\n    mostLikelyTime: parseInt(task.mostLikelyTime),\r\n    status: task.laneId,\r\n  };\r\n  // console.log(task);\r\n  return fetch(\r\n    \"http://localhost:8081/project/task/\" +\r\n      userId.toString() +\r\n      \"/\" +\r\n      projectId.toString(),\r\n    {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(Obj),\r\n    }\r\n  )\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const deleteTask = (taskId, projectId) => {\r\n  let userId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\r\n  let token = JSON.parse(localStorage.getItem(\"jwt\")).token;\r\n  let Obj = {\r\n    id: taskId,\r\n  };\r\n  // console.log(task);\r\n  return fetch(\r\n    \"http://localhost:8081/project/task/\" +\r\n      userId.toString() +\r\n      \"/\" +\r\n      projectId.toString(),\r\n    {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(Obj),\r\n    }\r\n  )\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n","D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\utils\\signupbutton\\Social.js",[],"D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\project\\layout\\Pert.js",["222","223","224","225","226","227"],"import React, { Component } from \"react\";\r\n\r\nexport class Pert extends Component {\r\n  renderPert = (pert) => {\r\n    let object = {};\r\n    let object1 = {};\r\n    let object2 = {};\r\n    let object3 = {};\r\n    let object4 = {};\r\n    let object5 = {};\r\n    const arr = [];\r\n    const arr1 = [];\r\n    const arr2 = [];\r\n    const arr3 = [];\r\n    const arr4 = [];\r\n    const arr5 = [];\r\n    // activitiesParams\r\n    if (Object.values(pert.activitiesParams) === undefined)\r\n      return (pert.activitiesParams = 0);\r\n    for (let i = 1; i <= Object.keys(pert.activitiesParams).length; i++) {\r\n      object[\"activitiesParams\"] = pert.activitiesParams[i];\r\n      arr.push(object);\r\n      object = {};\r\n    }\r\n    console.log(arr);\r\n    // console.log(pert.activitiesParams);\r\n\r\n    //earliestFinishTimes\r\n    if (Object.values(pert.earliestFinishTimes) === undefined)\r\n      return (pert.earliestFinishTimes = 0);\r\n    for (let i = 1; i <= Object.keys(pert.earliestFinishTimes).length; i++) {\r\n      object1[\"earliestFinishTimes\"] = pert.earliestFinishTimes[i];\r\n      arr1.push(object1);\r\n      object1 = {};\r\n    }\r\n    console.log(arr1);\r\n\r\n    //earliestStartTimes\r\n    if (Object.values(pert.earliestStartTimes) === undefined)\r\n      return (pert.earliestStartTimes = 0);\r\n    for (let i = 1; i <= Object.keys(pert.earliestStartTimes).length; i++) {\r\n      object2[\"earliestStartTimes\"] = pert.earliestStartTimes[i];\r\n      arr2.push(object2);\r\n      object2 = {};\r\n    }\r\n    console.log(arr2);\r\n    //latestStartTimes\r\n    if (Object.values(pert.latestStartTimes) === undefined)\r\n      return (pert.latestStartTimes = 0);\r\n    for (let i = 1; i <= Object.keys(pert.latestStartTimes).length; i++) {\r\n      object3[\"latestStartTimes\"] = pert.latestStartTimes[i];\r\n      arr3.push(object3);\r\n      object3 = {};\r\n    }\r\n    console.log(arr3);\r\n    //latestFinishTimes\r\n    if (Object.values(pert.latestFinishTimes) === undefined)\r\n      return (pert.latestFinishTimes = 0);\r\n    for (let i = 1; i <= Object.keys(pert.latestFinishTimes).length; i++) {\r\n      object4[\"latestFinishTimes\"] = pert.latestFinishTimes[i];\r\n      arr4.push(object4);\r\n      object4 = {};\r\n    }\r\n    console.log(arr4);\r\n\r\n    //Slack\r\n    if (Object.values(pert.slack) === undefined) return (pert.slack = 0);\r\n    for (let i = 1; i <= Object.keys(pert.slack).length; i++) {\r\n      object5[\"slack\"] = pert.slack[i];\r\n      arr5.push(object5);\r\n      object5 = {};\r\n    }\r\n    console.log(arr4);\r\n\r\n    return (\r\n      <>\r\n        {arr.map((object, index) => {\r\n          if (index !== 0 && index !== 1) {\r\n            return (\r\n              <>\r\n                <div>\r\n                  <div>\r\n                    ET: {object[\"activitiesParams\"].expectedTime} Variance:{\" \"}\r\n                    {object[\"activitiesParams\"].variance}\r\n                  </div>\r\n                </div>\r\n              </>\r\n            );\r\n          }\r\n        })}\r\n\r\n        {/* earliestFinishTimes */}\r\n        {arr1.map((object1, index) => {\r\n          if (\r\n            object1[\"earliestFinishTimes\"] !== undefined &&\r\n            object1[\"earliestFinishTimes\"] !== 0\r\n          ) {\r\n            return (\r\n              <>\r\n                <div>\r\n                  <div>\r\n                    EarliestFinishTimes: {object1[\"earliestFinishTimes\"]}\r\n                  </div>\r\n                </div>\r\n              </>\r\n            );\r\n          }\r\n        })}\r\n        {arr2.map((object2, index) => {\r\n          if (\r\n            object2[\"earliestStartTimes\"] !== undefined &&\r\n            object2[\"earliestStartTimes\"] !== 0\r\n          ) {\r\n            return (\r\n              <>\r\n                <div>\r\n                  <div>earliestStartTimes: {object2[\"earliestStartTimes\"]}</div>\r\n                </div>\r\n              </>\r\n            );\r\n          } else {\r\n            return;\r\n          }\r\n        })}\r\n        {arr3.map((object3, index) => {\r\n          if (\r\n            object3[\"latestStartTimes\"] !== undefined &&\r\n            object3[\"latestStartTimes\"] !== 0\r\n          ) {\r\n            return (\r\n              <>\r\n                <div>\r\n                  <div>latestStartTimes: {object3[\"latestStartTimes\"]}</div>\r\n                </div>\r\n              </>\r\n            );\r\n          }\r\n        })}\r\n        {arr4.map((object4, index) => {\r\n          if (\r\n            object4[\"latestFinishTimes\"] !== undefined &&\r\n            object4[\"latestFinishTimes\"] !== 0\r\n          ) {\r\n            return (\r\n              <>\r\n                <div>\r\n                  <div>latestFinishTimes: {object4[\"latestFinishTimes\"]}</div>\r\n                </div>\r\n              </>\r\n            );\r\n          }\r\n        })}\r\n        {arr5.map((object5, index) => {\r\n          if (object5[\"slack\"] !== undefined && object5[\"slack\"] !== 0) {\r\n            return (\r\n              <>\r\n                <div>\r\n                  <div>slack: {object5[\"slack\"]}</div>\r\n                </div>\r\n              </>\r\n            );\r\n          }\r\n        })}\r\n      </>\r\n    );\r\n  };\r\n  render() {\r\n    const pert = this.props.pert;\r\n    return <>{this.renderPert(pert)}</>;\r\n  }\r\n}\r\n\r\nexport default Pert;\r\n",["228","229"],"D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\user\\Signin.js",[],"D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\project\\newProjectForm\\CreateProject.js",["230"],"D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\apiNotifications.js",[],"D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\project\\RoleEditView.js",["231","232"],"import React from \"react\";\r\nimport SkillsInput from \"./../utils/signupbutton/Tagify/SkillsInput\";\r\nimport AssignedTo from \"./AssignedTo\";\r\nconst RoleEditView = (props) => {\r\n  // if (props.skillDetails === undefined) return null;\r\n  const { onChange } = props;\r\n  const renderTask = (props, val, idx) => {\r\n    return (\r\n      <div className=\"form-row mt-3\" key={val.index}>\r\n        <div className=\"form-group col-md-2 offset-1\">\r\n          <label>\r\n            <big>Role Title</big>\r\n          </label>\r\n          <div>{props.roleDetails[idx].roleName}</div>\r\n        </div>\r\n        <div className=\"form-group col-md-2 offset-1\">\r\n          <label>\r\n            <big>Role Skills</big>\r\n          </label>\r\n          <div>{props.roleDetails[idx].roleSkills.join(\", \")}</div>\r\n        </div>\r\n        <div className=\"form-group col-md-3 offset-1\">\r\n          <label>\r\n            <big>Assigned To</big>\r\n          </label>\r\n          <div>\r\n            {val.assignedTo ? (\r\n              <AssignedTo id={props.roleDetails[idx].assignedTo} />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  const renderInputTask = (props, val, idx) => {\r\n    return (\r\n      <div className=\"form-row mt-3\" key={val.index}>\r\n        <div className=\"form-group col-md-4 offset-1\">\r\n          <label>\r\n            <big>Role Title</big>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control required\"\r\n            // rolename=\"roleName\"\r\n            idx={idx}\r\n            onChange={onChange(\"roleName\")}\r\n            value={props.roleDetails[idx].roleName}\r\n          />\r\n        </div>\r\n        {/*<div className=\"form-row\" key={val.index}>*/}\r\n        <div className=\"form-group col-md-5\">\r\n          <SkillsInput\r\n            label={<big>Role Skills</big>}\r\n            setSkills={(e) => {\r\n              props.roleDetails[idx].roleSkills = e;\r\n            }}\r\n            value={props.roleDetails[idx].roleSkills}\r\n          />\r\n        </div>\r\n        {/*</div>*/}\r\n        <div className=\"form-group col-md-2 mt-4\">\r\n          {idx === 0 ? (\r\n            <button\r\n              onClick={() => props.add()}\r\n              type=\"button\"\r\n              className=\"btn btn-primary text-center\"\r\n            >\r\n              <i className=\"fa fa-plus\" aria-hidden=\"true\" />\r\n            </button>\r\n          ) : (\r\n            <button\r\n              className=\"btn btn-danger\"\r\n              onClick={() => props.delete(props.roleDetails[idx])}\r\n            >\r\n              <i className=\"fa fa-minus\" aria-hidden=\"true\" />\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  return props.roleDetails.map((val, idx) => {\r\n    let roleName = `roleName-${idx}`;\r\n    let roleSkills = `roleSkills-${idx}`;\r\n\r\n    return (\r\n      <>\r\n        {val.assignedTo\r\n          ? renderTask(props, val, idx)\r\n          : renderInputTask(props, val, idx)}\r\n      </>\r\n    );\r\n  });\r\n};\r\n\r\nexport default RoleEditView;\r\n","D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\project\\AssignedTo.js",[],"D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\utils\\signupbutton\\Tagify\\TagFinal.js",["233","234"],"import React, { useEffect } from \"react\";\r\nimport Tags from \"@yaireo/tagify/dist/react.tagify\";\r\nimport \"@yaireo/tagify/dist/tagify.css\";\r\n// Tagify settings object\r\nconst baseTagifySettings = {\r\n  blacklist: [],\r\n  enforceWhitelist: true,\r\n  dropdown: {\r\n    enabled: 0,\r\n  },\r\n  callbacks: {},\r\n};\r\n\r\nfunction TagFinal({ label, name, value, suggestions, setSkills }) {\r\n  const handleChange = (e) => {\r\n    // console.log(e.detail.tagify.value);\r\n    let arr = [];\r\n    e.detail.tagify.value.map((val) => {\r\n      arr.push(val.value);\r\n    });\r\n    setSkills(arr);\r\n  };\r\n  const settings = {\r\n    ...baseTagifySettings,\r\n    whitelist: suggestions,\r\n    callbacks: {\r\n      add: handleChange,\r\n      remove: handleChange,\r\n      blur: handleChange,\r\n      edit: handleChange,\r\n      invalid: handleChange,\r\n      click: handleChange,\r\n      focus: handleChange,\r\n      \"edit:updated\": handleChange,\r\n      \"edit:start\": handleChange,\r\n    },\r\n  };\r\n  //   console.log(\"words:\");\r\n  //   console.log(suggestions);\r\n  if (suggestions.length === 0) return null;\r\n  // console.log(initialValue);\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={\"field-\" + name}>{label}</label>\r\n      <Tags settings={settings} value={value} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TagFinal;\r\n","D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\utils\\signupbutton\\User.js",[],"D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\utils\\signupbutton\\Tagify\\AssignPerson.js",["235"],"import React, { Component } from \"react\";\r\nimport { getTeam } from \"../../../project/apiProject\";\r\nimport Assigner from \"./Assigner\";\r\nclass AssignPerson extends Component {\r\n  state = {};\r\n  componentDidMount = async () => {\r\n    let projectId = this.props.projectId;\r\n    let response = await getTeam(projectId);\r\n    this.setState({ team: response.team });\r\n    let arr = [];\r\n    response.team.map((member) => {\r\n      arr.push(member.name);\r\n    });\r\n    this.setState({ teamNames: arr });\r\n  };\r\n\r\n  render() {\r\n    if (!this.state.teamNames) return null;\r\n    return (\r\n      <>\r\n        <Assigner\r\n          suggestions={this.state.teamNames}\r\n          team={this.state.team}\r\n          assignTo={this.props.assignTo}\r\n          label={this.props.label}\r\n          assignIds={this.props.assignIds}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AssignPerson;\r\n","D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\utils\\signupbutton\\Tagify\\Assigner.js",["236","237","238"],"D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\core\\Home.js",["239"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { notificationAdded, getNotified } from \"../store/notifications\";\r\nimport { getNotifications } from \"../apiNotifications\";\r\nimport { getCurrentUser } from \"../user/apiUser\";\r\nimport ProjectRecommendation from \"./ProjectRecommendation\";\r\nclass Home extends Component {\r\n  state = {};\r\n  componentDidMount() {\r\n    getNotifications()\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((val) => {\r\n        let notifications = val.notifications;\r\n        notifications.map((notif) => {\r\n          this.props.getNotified({\r\n            id: notif._id,\r\n            message: notif.message,\r\n            read: notif.read,\r\n            type: notif.notifType,\r\n          });\r\n        });\r\n      });\r\n  }\r\n  render() {\r\n    if (getCurrentUser()._id === undefined) return;\r\n    if (this.props.notifications.length > 0)\r\n      console.log(this.props.notifications);\r\n\r\n    return (\r\n      <>\r\n        <div className=\"jumbotron\">\r\n          <h2>Home</h2>\r\n          <p className=\"lead\">News Feed (Posts) will be here</p>\r\n        </div>\r\n        <ProjectRecommendation />\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  notifications: state.notifications.notifications,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addNotification: (params) => dispatch(notificationAdded(params)),\r\n  getNotified: (params) => dispatch(getNotified(params)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\project\\JoinProject.js",[],"D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\store\\dashboard.js",["240"],"D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\store\\notifications.js",["241"],"import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { addNotification, getNotifications } from \"./../apiNotifications\";\r\n\r\nconst slice = createSlice({\r\n  name: \"notifications\",\r\n  initialState: {\r\n    notifications: [],\r\n  },\r\n  reducers: {\r\n    notificationAdded: (state, action) => {\r\n      addNotification(\r\n        action.payload.userId,\r\n        action.payload.message,\r\n        action.payload.type\r\n      )\r\n        .then((response) => {\r\n          return response.json();\r\n        })\r\n        .then((user) => {\r\n          let notifications = user.user.notifications;\r\n          console.log(notifications);\r\n        });\r\n    },\r\n    getNotified: (state, action) => {\r\n      state.notifications.push({\r\n        id: action.payload.id,\r\n        message: action.payload.message,\r\n        read: action.payload.read,\r\n        type: action.payload.type,\r\n      });\r\n    },\r\n    clearNotifications: (state, action) => {\r\n      state.notifications = [];\r\n    },\r\n  },\r\n});\r\nexport const {\r\n  notificationAdded,\r\n  getNotified,\r\n  clearNotifications,\r\n} = slice.actions;\r\nexport default slice.reducer;\r\n","D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\utils\\signupbutton\\Form.js",[],"D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\utils\\signupbutton\\Personal.js",[],"D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\project\\layout\\Task.js",["242"],"D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\core\\Menu.js",[],"D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\project\\DeleteProject.js",[],"D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\project\\taskComponents\\EditModel.js",[],"D:\\College\\Capstone\\Github\\Development Phase\\CAPSTONE-Dev\\react-front\\src\\App.js",["243"],{"ruleId":"244","replacedBy":"245"},{"ruleId":"246","replacedBy":"247"},{"ruleId":"248","severity":1,"message":"249","line":1,"column":10,"nodeType":"250","messageId":"251","endLine":1,"endColumn":26},{"ruleId":"252","severity":1,"message":"253","line":4,"column":1,"nodeType":"254","endLine":9,"endColumn":2},{"ruleId":"248","severity":1,"message":"255","line":3,"column":8,"nodeType":"250","messageId":"251","endLine":3,"endColumn":31},{"ruleId":"248","severity":1,"message":"256","line":54,"column":9,"nodeType":"250","messageId":"251","endLine":54,"endColumn":16},{"ruleId":"257","severity":1,"message":"258","line":56,"column":30,"nodeType":"259","messageId":"260","endLine":56,"endColumn":32},{"ruleId":"244","replacedBy":"261"},{"ruleId":"246","replacedBy":"262"},{"ruleId":"248","severity":1,"message":"263","line":2,"column":10,"nodeType":"250","messageId":"251","endLine":2,"endColumn":19},{"ruleId":"248","severity":1,"message":"264","line":2,"column":21,"nodeType":"250","messageId":"251","endLine":2,"endColumn":25},{"ruleId":"248","severity":1,"message":"265","line":2,"column":27,"nodeType":"250","messageId":"251","endLine":2,"endColumn":33},{"ruleId":"248","severity":1,"message":"266","line":4,"column":8,"nodeType":"250","messageId":"251","endLine":4,"endColumn":15},{"ruleId":"248","severity":1,"message":"267","line":9,"column":9,"nodeType":"250","messageId":"251","endLine":9,"endColumn":19},{"ruleId":"244","replacedBy":"268"},{"ruleId":"246","replacedBy":"269"},{"ruleId":"248","severity":1,"message":"270","line":8,"column":3,"nodeType":"250","messageId":"251","endLine":8,"endColumn":10},{"ruleId":"248","severity":1,"message":"271","line":14,"column":3,"nodeType":"250","messageId":"251","endLine":14,"endColumn":10},{"ruleId":"257","severity":1,"message":"258","line":69,"column":37,"nodeType":"259","messageId":"260","endLine":69,"endColumn":39},{"ruleId":"272","severity":1,"message":"273","line":77,"column":33,"nodeType":"274","messageId":"275","endLine":77,"endColumn":49},{"ruleId":"257","severity":1,"message":"258","line":172,"column":44,"nodeType":"259","messageId":"260","endLine":172,"endColumn":46},{"ruleId":"257","severity":1,"message":"258","line":273,"column":38,"nodeType":"259","messageId":"260","endLine":273,"endColumn":40},{"ruleId":"257","severity":1,"message":"258","line":330,"column":57,"nodeType":"259","messageId":"260","endLine":330,"endColumn":59},{"ruleId":"248","severity":1,"message":"276","line":380,"column":9,"nodeType":"250","messageId":"251","endLine":380,"endColumn":17},{"ruleId":"248","severity":1,"message":"277","line":1,"column":17,"nodeType":"250","messageId":"251","endLine":1,"endColumn":26},{"ruleId":"248","severity":1,"message":"278","line":18,"column":9,"nodeType":"250","messageId":"251","endLine":18,"endColumn":17},{"ruleId":"257","severity":1,"message":"258","line":39,"column":33,"nodeType":"259","messageId":"260","endLine":39,"endColumn":35},{"ruleId":"248","severity":1,"message":"279","line":5,"column":8,"nodeType":"250","messageId":"251","endLine":5,"endColumn":19},{"ruleId":"280","severity":1,"message":"281","line":93,"column":65,"nodeType":"282","messageId":"283","endLine":93,"endColumn":67},{"ruleId":"284","severity":1,"message":"285","line":203,"column":56,"nodeType":"282","messageId":"286","endLine":203,"endColumn":57},{"ruleId":"284","severity":1,"message":"285","line":218,"column":56,"nodeType":"282","messageId":"286","endLine":218,"endColumn":57},{"ruleId":"257","severity":1,"message":"287","line":77,"column":34,"nodeType":"259","messageId":"288","endLine":77,"endColumn":36},{"ruleId":"257","severity":1,"message":"287","line":93,"column":36,"nodeType":"259","messageId":"288","endLine":93,"endColumn":38},{"ruleId":"257","severity":1,"message":"258","line":122,"column":13,"nodeType":"289","messageId":"290","endLine":122,"endColumn":20},{"ruleId":"257","severity":1,"message":"287","line":125,"column":36,"nodeType":"259","messageId":"288","endLine":125,"endColumn":38},{"ruleId":"257","severity":1,"message":"287","line":139,"column":36,"nodeType":"259","messageId":"288","endLine":139,"endColumn":38},{"ruleId":"257","severity":1,"message":"287","line":153,"column":36,"nodeType":"259","messageId":"288","endLine":153,"endColumn":38},{"ruleId":"244","replacedBy":"291"},{"ruleId":"246","replacedBy":"292"},{"ruleId":"248","severity":1,"message":"293","line":109,"column":38,"nodeType":"250","messageId":"251","endLine":109,"endColumn":44},{"ruleId":"248","severity":1,"message":"294","line":86,"column":9,"nodeType":"250","messageId":"251","endLine":86,"endColumn":17},{"ruleId":"248","severity":1,"message":"267","line":87,"column":9,"nodeType":"250","messageId":"251","endLine":87,"endColumn":19},{"ruleId":"248","severity":1,"message":"277","line":1,"column":17,"nodeType":"250","messageId":"251","endLine":1,"endColumn":26},{"ruleId":"257","severity":1,"message":"258","line":18,"column":37,"nodeType":"259","messageId":"260","endLine":18,"endColumn":39},{"ruleId":"257","severity":1,"message":"258","line":11,"column":32,"nodeType":"259","messageId":"260","endLine":11,"endColumn":34},{"ruleId":"248","severity":1,"message":"277","line":1,"column":17,"nodeType":"250","messageId":"251","endLine":1,"endColumn":26},{"ruleId":"257","severity":1,"message":"258","line":27,"column":37,"nodeType":"259","messageId":"260","endLine":27,"endColumn":39},{"ruleId":"257","severity":1,"message":"258","line":29,"column":25,"nodeType":"259","messageId":"260","endLine":29,"endColumn":27},{"ruleId":"257","severity":1,"message":"258","line":16,"column":35,"nodeType":"259","messageId":"260","endLine":16,"endColumn":37},{"ruleId":"248","severity":1,"message":"295","line":3,"column":5,"nodeType":"250","messageId":"251","endLine":3,"endColumn":15},{"ruleId":"248","severity":1,"message":"296","line":2,"column":27,"nodeType":"250","messageId":"251","endLine":2,"endColumn":43},{"ruleId":"257","severity":1,"message":"287","line":8,"column":42,"nodeType":"259","messageId":"288","endLine":8,"endColumn":44},{"ruleId":"248","severity":1,"message":"297","line":16,"column":7,"nodeType":"250","messageId":"251","endLine":16,"endColumn":15},"no-native-reassign",["298"],"no-negated-in-lhs",["299"],"no-unused-vars","'devToolsEnhancer' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'projectDashBoardReducer' is defined but never used.","'overdue' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["298"],["299"],"'Accordion' is defined but never used.","'Card' is defined but never used.","'Button' is defined but never used.","'MyTasks' is defined but never used.","'roleSkills' is assigned a value but never used.",["298"],["299"],"'addEdge' is defined but never used.","'addTask' is defined but never used.","no-self-assign","'task.description' is assigned to itself.","MemberExpression","selfAssignment","'elements' is assigned a value but never used.","'useEffect' is defined but never used.","'dispatch' is assigned a value but never used.","'JoinProject' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","ReturnStatement","expectedReturnValue",["298"],["299"],"'skills' is assigned a value but never used.","'roleName' is assigned a value but never used.","'lastTaskid' is assigned a value but never used.","'getNotifications' is defined but never used.","'socketio' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]